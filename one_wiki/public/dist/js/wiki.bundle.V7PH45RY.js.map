{
  "version": 3,
  "sources": ["../../../../../apps/wiki/node_modules/htmldiff-js/dist/htmldiff.min.js", "../../../../../apps/wiki/node_modules/highlight.js/lib/core.js", "../../../../../apps/wiki/node_modules/format/format.js", "../../../../../apps/one_wiki/one_wiki/public/js/wiki.js", "../../../../../apps/one_wiki/one_wiki/public/js/render_wiki.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/arduino.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/bash.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/c.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/cpp.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/csharp.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/css.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/diff.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/go.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/graphql.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/ini.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/java.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/javascript.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/json.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/kotlin.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/less.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/lua.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/makefile.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/markdown.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/objectivec.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/perl.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/php.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/php-template.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/plaintext.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/python.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/python-repl.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/r.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/ruby.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/rust.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/scss.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/shell.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/sql.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/swift.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/typescript.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/vbnet.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/wasm.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/xml.js", "../../../../../apps/wiki/node_modules/highlight.js/es/languages/yaml.js", "../../../../../apps/wiki/node_modules/highlight.js/es/core.js", "../../../../../apps/wiki/node_modules/fault/index.js", "../../../../../apps/wiki/node_modules/lowlight/lib/core.js", "../../../../../apps/wiki/node_modules/lowlight/lib/common.js", "../../../../../apps/wiki/node_modules/orderedmap/dist/index.js", "../../../../../apps/wiki/node_modules/prosemirror-model/dist/index.js", "../../../../../apps/wiki/node_modules/prosemirror-transform/dist/index.js", "../../../../../apps/wiki/node_modules/prosemirror-state/dist/index.js", "../../../../../apps/wiki/node_modules/prosemirror-view/dist/index.js", "../../../../../apps/wiki/node_modules/w3c-keyname/index.es.js", "../../../../../apps/wiki/node_modules/prosemirror-keymap/dist/index.js", "../../../../../apps/wiki/node_modules/prosemirror-commands/dist/index.js", "../../../../../apps/wiki/node_modules/prosemirror-schema-list/dist/index.js", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/createChainableState.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/CommandManager.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/EventEmitter.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/getExtensionField.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/splitExtensions.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/getAttributesFromExtensions.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/getNodeType.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/utilities/mergeAttributes.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/getRenderedAttributes.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/utilities/isFunction.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/utilities/callOrReturn.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/utilities/isEmptyObject.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/utilities/fromString.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/injectExtensionAttributesToParseRule.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/getSchemaByResolvedExtensions.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/getSchemaTypeByName.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/isExtensionRulesEnabled.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/getTextContentFromNodes.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/utilities/isRegExp.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/InputRule.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/utilities/isNumber.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/PasteRule.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/utilities/findDuplicates.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/ExtensionManager.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/utilities/isPlainObject.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/utilities/mergeDeep.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/Extension.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/getTextBetween.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/getTextSerializersFromSchema.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/extensions/clipboardTextSerializer.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/blur.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/clearContent.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/clearNodes.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/command.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/createParagraphNear.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/deleteCurrentNode.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/deleteNode.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/deleteRange.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/deleteSelection.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/enter.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/exitCode.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/utilities/objectIncludes.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/getMarkRange.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/getMarkType.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/extendMarkRange.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/first.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/isTextSelection.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/utilities/minMax.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/resolveFocusPosition.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/utilities/isiOS.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/focus.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/forEach.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/insertContent.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/utilities/elementFromString.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/createNodeFromContent.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/selectionToInsertionEnd.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/insertContentAt.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/join.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/utilities/isMacOS.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/keyboardShortcut.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/isNodeActive.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/lift.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/liftEmptyBlock.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/liftListItem.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/newlineInCode.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/getSchemaTypeNameByName.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/utilities/deleteProps.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/resetAttributes.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/scrollIntoView.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/selectAll.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/selectNodeBackward.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/selectNodeForward.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/selectParentNode.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/selectTextblockEnd.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/selectTextblockStart.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/createDocument.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/setContent.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/combineTransactionSteps.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/defaultBlockAt.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/findChildren.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/findChildrenInRange.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/findParentNodeClosestToPos.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/findParentNode.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/getHTMLFromFragment.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/getSchema.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/generateHTML.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/generateJSON.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/getText.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/generateText.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/getMarkAttributes.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/getNodeAttributes.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/getAttributes.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/utilities/removeDuplicates.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/getChangedRanges.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/getDebugJSON.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/getMarksBetween.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/getSplittedAttributes.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/isMarkActive.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/isActive.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/isList.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/isNodeEmpty.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/isNodeSelection.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/helpers/posToDOMRect.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/setMark.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/setMeta.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/setNode.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/setNodeSelection.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/setTextSelection.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/sinkListItem.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/splitBlock.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/splitListItem.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/toggleList.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/toggleMark.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/toggleNode.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/toggleWrap.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/undoInputRule.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/unsetAllMarks.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/unsetMark.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/updateAttributes.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/wrapIn.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/commands/wrapInList.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/extensions/commands.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/extensions/editable.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/extensions/focusEvents.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/extensions/keymap.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/extensions/tabindex.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/style.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/utilities/createStyleTag.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/Editor.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/inputRules/markInputRule.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/inputRules/nodeInputRule.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/inputRules/textblockTypeInputRule.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/inputRules/textInputRule.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/inputRules/wrappingInputRule.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/Mark.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/Node.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/NodeView.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/pasteRules/markPasteRule.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/utilities/escapeForRegEx.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/utilities/isString.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/pasteRules/nodePasteRule.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/pasteRules/textPasteRule.ts", "../../../../../apps/wiki/node_modules/@tiptap/core/src/Tracker.ts", "../../../../../apps/wiki/node_modules/linkifyjs/dist/linkify.es.js", "../../../../../apps/wiki/node_modules/@tiptap/extension-link/src/helpers/autolink.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-link/src/helpers/clickHandler.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-link/src/helpers/pasteHandler.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-link/src/link.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-image/src/image.ts", "../../../../../apps/wiki/node_modules/prosemirror-tables/dist/index.js", "../../../../../apps/wiki/node_modules/@tiptap/extension-table/src/TableView.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-table/src/utilities/createCell.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-table/src/utilities/getTableNodeTypes.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-table/src/utilities/createTable.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-table/src/utilities/isCellSelection.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-table/src/utilities/deleteTableWhenAllCellsSelected.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-table/src/table.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-blockquote/src/blockquote.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-bold/src/bold.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-list-item/src/list-item.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-text-style/src/text-style.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-bullet-list/src/bullet-list.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-code/src/code.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-code-block/src/code-block.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-document/src/document.ts", "../../../../../apps/wiki/node_modules/prosemirror-dropcursor/dist/index.js", "../../../../../apps/wiki/node_modules/@tiptap/extension-dropcursor/src/dropcursor.ts", "../../../../../apps/wiki/node_modules/prosemirror-gapcursor/dist/index.js", "../../../../../apps/wiki/node_modules/@tiptap/extension-gapcursor/src/gapcursor.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-hard-break/src/hard-break.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-heading/src/heading.ts", "../../../../../apps/wiki/node_modules/rope-sequence/dist/index.es.js", "../../../../../apps/wiki/node_modules/prosemirror-history/dist/index.js", "../../../../../apps/wiki/node_modules/@tiptap/extension-history/src/history.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-horizontal-rule/src/horizontal-rule.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-italic/src/italic.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-list-item/src/list-item.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-list-item/src/list-item.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-text-style/src/text-style.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-ordered-list/src/ordered-list.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-paragraph/src/paragraph.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-strike/src/strike.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-text/src/text.ts", "../../../../../apps/wiki/node_modules/@tiptap/starter-kit/src/starter-kit.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-table-row/src/table-row.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-text-align/src/text-align.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-table-cell/src/table-cell.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-placeholder/src/placeholder.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-table-header/src/table-header.ts", "../../../../../apps/wiki/node_modules/node_modules/highlight.js/lib/core.js", "../../../../../apps/wiki/node_modules/@tiptap/extension-code-block-lowlight/src/lowlight-plugin.ts", "../../../../../apps/wiki/node_modules/@tiptap/extension-code-block-lowlight/src/code-block-lowlight.ts", "../../../../../apps/one_wiki/one_wiki/public/js/editor.js"],
  "sourcesContent": ["module.exports=function(e){var t={};function n(s){if(t[s])return t[s].exports;var r=t[s]={i:s,l:!1,exports:{}};return e[s].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,s){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:s})},n.r=function(e){Object.defineProperty(e,\"__esModule\",{value:!0})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"/dist/\",n(n.s=1)}([function(e,t,n){\"use strict\";n.r(t);var s={equal:0,delete:1,insert:2,none:3,replace:4};class r{constructor(e,t,n){this.startInOld=e,this.startInNew=t,this.size=n}get endInOld(){return this.startInOld+this.size}get endInNew(){return this.startInNew+this.size}}class i{constructor(){this.blockSize=0,this.repeatingWordsAccuracy=0,this.ignoreWhitespaceDifferences=!1}}const o=/^\\s*<\\/?[^>]+>\\s*$/,l=/<[^\\s>]+/,h=/^(\\s|&nbsp;)+$/,c=/[\\w\\#@]+/,d=[\"<img\"];function a(e){return!d.some(t=>null!==e&&e.startsWith(t))&&o.test(e)}function u(e,t,n){return[\"<\",t,' class=\"',n,'\">',e,\"</\",t,\">\"].join(\"\")}function p(e){return\"<\"===e}function f(e){return\"&\"===e}function w(e){return\";\"===e}function g(e){return h.test(e)}function I(e){return a(e)?function(e){return e=l.exec(e)[0]+(e.endsWith(\"/>\")?\"/>\":\">\")}(e):e}function W(e){return c.test(e)}function O(e,t,n){return e.push(t),e.length>n&&e.shift(),e.length!==n?null:e.join(\"\")}class x{constructor(e,t,n,s,r,i,o){this.oldWords=e,this.newWords=t,this.startInOld=n,this.endInOld=s,this.startInNew=r,this.endInNew=i,this.options=o}indexNewWords(){this.wordIndices=new Map;let e=[];for(let t=this.startInNew;t<this.endInNew;t++){let n=O(e,this.normalizeForIndex(this.newWords[t]),this.options.blockSize);null!==n&&(this.wordIndices.has(n)?this.wordIndices.get(n).push(t):this.wordIndices.set(n,[t]))}}normalizeForIndex(e){return e=I(e),this.options.IgnoreWhiteSpaceDifferences&&g(e)?\" \":e}findMatch(){if(this.indexNewWords(),this.removeRepeatingWords(),0===this.wordIndices.length)return null;let e=this.startInOld,t=this.startInNew,n=0,s=new Map;const i=this.options.blockSize;let o=[];for(let r=this.startInOld;r<this.endInOld;r++){let l=O(o,this.normalizeForIndex(this.oldWords[r]),i);if(null===l)continue;let h=new Map;if(this.wordIndices.has(l)){for(let o of this.wordIndices.get(l)){let l=(s.has(o-1)?s.get(o-1):0)+1;h.set(o,l),l>n&&(e=r-l-i+2,t=o-l-i+2,n=l)}s=h}else s=h}return 0!==n?new r(e,t,n+i-1):null}removeRepeatingWords(){let e=this.newWords.length+this.options.repeatingWordsAccuracy,t=Array.from(this.wordIndices.entries()).filter(t=>t[1].length>e).map(e=>e[0]);for(let e of t)this.wordIndices.delete(e)}}class m{constructor(e,t,n,s,r){this.action=e,this.startInOld=t,this.endInOld=n,this.startInNew=s,this.endInNew=r}}var b={character:0,tag:1,whitespace:2,entity:3};function N(e,t){let n={mode:b.character,currentWord:[],words:[]},s=function(e,t){let n=new Map;if(null===t)return n;for(let s of t){let t;for(;null!==(t=s.exec(e));){if(n.has(t.index))throw new Error(\"One or more block expressions result in a text sequence that overlaps. Current expression: \"+s.toString());n.set(t.index,t.index+t[0].length)}}return n}(e,t),r=!!s.size,i=!1,o=-1;for(let t=0;t<e.length;t++){var l=e[t];if(r){o===index&&(o=-1,i=!1);let e=0;if(s.has(index)&&(i=!0,o=e=s.get(index)),i){n.currentWord.push(l),n.mode=b.character;continue}}switch(n.mode){case b.character:p(l)?k(n,\"<\",b.tag):f(l)?k(n,l,b.entity):g(l)?k(n,l,b.whitespace):W(l)&&(0===n.currentWord.length||W(n.currentWord[n.currentWord.length-1]))?n.currentWord.push(l):k(n,l,b.character);break;case b.tag:\">\"===l?(n.currentWord.push(l),n.words.push(n.currentWord.join(\"\")),n.currentWord=[],n.mode=g(l)?b.whitespace:b.character):n.currentWord.push(l);break;case b.whitespace:p(l)?k(n,l,b.tag):f(l)?k(n,l,b.entity):g(l)?n.currentWord.push(l):k(n,l,b.character);break;case b.entity:if(p(l))k(n,l,b.tag);else if(g(l))k(n,l,b.whitespace);else if(w(l)){let e=!0;if(0!==n.currentWord.length&&(n.currentWord.push(l),n.words.push(n.currentWord.join(\"\")),n.words.length>2&&g(n.words[n.words.length-2])&&g(n.words[n.words.length-1]))){let t=n.words[n.words.length-2],s=n.words[n.words.length-1];n.words.splice(n.words.length-2,2),n.currentWord=[(t+s).split()],n.mode=b.whitespace,e=!1}e&&(n.currentWord=[],n.mode=b.character)}else W(l)?n.currentWord.push(l):k(n,l,b.character)}}return 0!==n.currentWord.length&&n.words.push(n.currentWord.join(\"\")),n.words}function k(e,t,n){0!==e.currentWord.length&&e.words.push(e.currentWord.join(\"\")),e.currentWord=[t],e.mode=n}const y=4,M=new Map([[\"</strong>\",0],[\"</em>\",0],[\"</b>\",0],[\"</i>\",0],[\"</big>\",0],[\"</small>\",0],[\"</u>\",0],[\"</sub>\",0],[\"</strike>\",0],[\"</s>\",0]]),T=/<((strong)|(b)|(i)|(em)|(big)|(small)|(u)|(sub)|(sup)|(strike)|(s))[\\>\\s]+/gi;class v{constructor(e,t){this.content=[],this.newText=t,this.oldText=e,this.specialTagDiffStack=[],this.newWords=[],this.oldWords=[],this.matchGranularity=0,this.blockExpressions=[],this.repeatingWordsAccuracy=1,this.ignoreWhiteSpaceDifferences=!1,this.orphanMatchThreshold=0}build(){if(this.oldText===this.newText)return this.newText;this.splitInputsIntoWords(),this.matchGranularity=Math.min(y,this.oldWords.length,this.newWords.length);let e=this.operations();for(let t of e)this.performOperation(t);return this.content.join(\"\")}addBlockExpression(e){this.blockExpressions.push(e)}splitInputsIntoWords(){this.oldWords=N(this.oldText,this.blockExpressions),this.oldText=null,this.newWords=N(this.newText,this.blockExpressions),this.newText=null}performOperation(e){switch(e.action){case s.equal:this.processEqualOperation(e);break;case s.delete:this.processDeleteOperation(e,\"diffdel\");break;case s.insert:this.processInsertOperation(e,\"diffins\");break;case s.none:break;case s.replace:this.processReplaceOperation(e)}}processReplaceOperation(e){this.processDeleteOperation(e,\"diffmod\"),this.processInsertOperation(e,\"diffmod\")}processInsertOperation(e,t){let n=this.newWords.filter((t,n)=>n>=e.startInNew&&n<e.endInNew);this.insertTag(\"ins\",t,n)}processDeleteOperation(e,t){let n=this.oldWords.filter((t,n)=>n>=e.startInOld&&n<e.endInOld);this.insertTag(\"del\",t,n)}processEqualOperation(e){let t=this.newWords.filter((t,n)=>n>=e.startInNew&&n<e.endInNew);this.content.push(t.join(\"\"))}insertTag(e,t,n){for(;n.length;){let s=this.extractConsecutiveWords(n,e=>!a(e)),r=\"\",i=!1;if(0!==s.length){let n=u(s.join(\"\"),e,t);this.content.push(n)}else{if(T.test(n[0])){if(this.specialTagDiffStack.push(n[0]),r='<ins class=\"mod\">',\"del\"===e)for(n.shift();n.length>0&&T.test(n[0]);)n.shift()}else if(M.has(n[0])){let t=0===this.specialTagDiffStack.length?null:this.specialTagDiffStack.pop();if(null!==t&&t===n[0].replace(/\\//g,\"\")&&(r=\"</ins>\",i=!0),\"del\"===e)for(n.shift();n.length>0&&M.has(n[0]);)n.shift()}if(0===n.length&&0===r.length)break;i?this.content.push(r+this.extractConsecutiveWords(n,a).join(\"\")):this.content.push(this.extractConsecutiveWords(n,a).join(\"\")+r)}}}extractConsecutiveWords(e,t){let n=null;for(let s=0;s<e.length;s++){let r=e[s];if(0===s&&\" \"===r&&(e[s]=\"&nbsp;\"),!t(r)){n=s;break}}if(null!==n){let t=e.filter((e,t)=>t>=0&&t<n);return n>0&&e.splice(0,n),t}{let t=e.filter((t,n)=>n>=0&&n<e.length);return e.splice(0,e.length),t}}operations(){let e=0,t=0,n=[],i=this.matchingBlocks();i.push(new r(this.oldWords.length,this.newWords.length,0));let o=this.removeOrphans(i);for(let r of o){let i,o=e===r.startInOld,l=t===r.startInNew;(i=o||l?o&&!l?s.insert:o?s.none:s.delete:s.replace)!==s.none&&n.push(new m(i,e,r.startInOld,t,r.startInNew)),0!==r.length&&n.push(new m(s.equal,r.startInOld,r.endInOld,r.startInNew,r.endInNew)),e=r.endInOld,t=r.endInNew}return n}*removeOrphans(e){let t=null,n=null;for(let s of e){if(null===n){t=new r(0,0,0),n=s;continue}if(t.endInOld===n.startInOld&&t.endInNew===n.startInNew||n.endInOld===s.startInOld&&n.endInNew===s.startInNew){yield n;t=n;n=s;continue}let e=(e,t)=>e+t.length,i=this.oldWords.slice(t.endInOld,s.startInOld).reduce(e,0),o=this.newWords.slice(t.endInNew,s.startInNew).reduce(e,0);this.newWords.slice(n.startInNew,n.endInNew).reduce(e,0)>Math.max(i,o)*this.orphanMatchThreshold&&(yield n),t=n,n=s}yield n}matchingBlocks(){let e=[];return this.findMatchingBlocks(0,this.oldWords.length,0,this.newWords.length,e),e}findMatchingBlocks(e,t,n,s,r){let i=this.findMatch(e,t,n,s);null!==i&&(e<i.startInOld&&n<i.startInNew&&this.findMatchingBlocks(e,i.startInOld,n,i.startInNew,r),r.push(i),i.endInOld<t&&i.endInNew<s&&this.findMatchingBlocks(i.endInOld,t,i.endInNew,s,r))}findMatch(e,t,n,s){for(let r=this.matchGranularity;r>0;r--){let o=new i;o.blockSize=r,o.repeatingWordsAccuracy=this.repeatingWordsAccuracy,o.ignoreWhitespaceDifferences=this.ignoreWhiteSpaceDifferences;let l=new x(this.oldWords,this.newWords,e,t,n,s,o).findMatch();if(null!==l)return l}return null}}v.execute=function(e,t){return new v(e,t).build()};t.default=v},function(e,t,n){e.exports=n(0)}]);", "var deepFreezeEs6 = {exports: {}};\n\nfunction deepFreeze(obj) {\n    if (obj instanceof Map) {\n        obj.clear = obj.delete = obj.set = function () {\n            throw new Error('map is read-only');\n        };\n    } else if (obj instanceof Set) {\n        obj.add = obj.clear = obj.delete = function () {\n            throw new Error('set is read-only');\n        };\n    }\n\n    // Freeze self\n    Object.freeze(obj);\n\n    Object.getOwnPropertyNames(obj).forEach(function (name) {\n        var prop = obj[name];\n\n        // Freeze prop if it is an object\n        if (typeof prop == 'object' && !Object.isFrozen(prop)) {\n            deepFreeze(prop);\n        }\n    });\n\n    return obj;\n}\n\ndeepFreezeEs6.exports = deepFreeze;\ndeepFreezeEs6.exports.default = deepFreeze;\n\n/** @typedef {import('highlight.js').CallbackResponse} CallbackResponse */\n/** @typedef {import('highlight.js').CompiledMode} CompiledMode */\n/** @implements CallbackResponse */\n\nclass Response {\n  /**\n   * @param {CompiledMode} mode\n   */\n  constructor(mode) {\n    // eslint-disable-next-line no-undefined\n    if (mode.data === undefined) mode.data = {};\n\n    this.data = mode.data;\n    this.isMatchIgnored = false;\n  }\n\n  ignoreMatch() {\n    this.isMatchIgnored = true;\n  }\n}\n\n/**\n * @param {string} value\n * @returns {string}\n */\nfunction escapeHTML(value) {\n  return value\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#x27;');\n}\n\n/**\n * performs a shallow merge of multiple objects into one\n *\n * @template T\n * @param {T} original\n * @param {Record<string,any>[]} objects\n * @returns {T} a single new object\n */\nfunction inherit$1(original, ...objects) {\n  /** @type Record<string,any> */\n  const result = Object.create(null);\n\n  for (const key in original) {\n    result[key] = original[key];\n  }\n  objects.forEach(function(obj) {\n    for (const key in obj) {\n      result[key] = obj[key];\n    }\n  });\n  return /** @type {T} */ (result);\n}\n\n/**\n * @typedef {object} Renderer\n * @property {(text: string) => void} addText\n * @property {(node: Node) => void} openNode\n * @property {(node: Node) => void} closeNode\n * @property {() => string} value\n */\n\n/** @typedef {{scope?: string, language?: string, sublanguage?: boolean}} Node */\n/** @typedef {{walk: (r: Renderer) => void}} Tree */\n/** */\n\nconst SPAN_CLOSE = '</span>';\n\n/**\n * Determines if a node needs to be wrapped in <span>\n *\n * @param {Node} node */\nconst emitsWrappingTags = (node) => {\n  // rarely we can have a sublanguage where language is undefined\n  // TODO: track down why\n  return !!node.scope || (node.sublanguage && node.language);\n};\n\n/**\n *\n * @param {string} name\n * @param {{prefix:string}} options\n */\nconst scopeToCSSClass = (name, { prefix }) => {\n  if (name.includes(\".\")) {\n    const pieces = name.split(\".\");\n    return [\n      `${prefix}${pieces.shift()}`,\n      ...(pieces.map((x, i) => `${x}${\"_\".repeat(i + 1)}`))\n    ].join(\" \");\n  }\n  return `${prefix}${name}`;\n};\n\n/** @type {Renderer} */\nclass HTMLRenderer {\n  /**\n   * Creates a new HTMLRenderer\n   *\n   * @param {Tree} parseTree - the parse tree (must support `walk` API)\n   * @param {{classPrefix: string}} options\n   */\n  constructor(parseTree, options) {\n    this.buffer = \"\";\n    this.classPrefix = options.classPrefix;\n    parseTree.walk(this);\n  }\n\n  /**\n   * Adds texts to the output stream\n   *\n   * @param {string} text */\n  addText(text) {\n    this.buffer += escapeHTML(text);\n  }\n\n  /**\n   * Adds a node open to the output stream (if needed)\n   *\n   * @param {Node} node */\n  openNode(node) {\n    if (!emitsWrappingTags(node)) return;\n\n    let className = \"\";\n    if (node.sublanguage) {\n      className = `language-${node.language}`;\n    } else {\n      className = scopeToCSSClass(node.scope, { prefix: this.classPrefix });\n    }\n    this.span(className);\n  }\n\n  /**\n   * Adds a node close to the output stream (if needed)\n   *\n   * @param {Node} node */\n  closeNode(node) {\n    if (!emitsWrappingTags(node)) return;\n\n    this.buffer += SPAN_CLOSE;\n  }\n\n  /**\n   * returns the accumulated buffer\n  */\n  value() {\n    return this.buffer;\n  }\n\n  // helpers\n\n  /**\n   * Builds a span element\n   *\n   * @param {string} className */\n  span(className) {\n    this.buffer += `<span class=\"${className}\">`;\n  }\n}\n\n/** @typedef {{scope?: string, language?: string, sublanguage?: boolean, children: Node[]} | string} Node */\n/** @typedef {{scope?: string, language?: string, sublanguage?: boolean, children: Node[]} } DataNode */\n/** @typedef {import('highlight.js').Emitter} Emitter */\n/**  */\n\n/** @returns {DataNode} */\nconst newNode = (opts = {}) => {\n  /** @type DataNode */\n  const result = { children: [] };\n  Object.assign(result, opts);\n  return result;\n};\n\nclass TokenTree {\n  constructor() {\n    /** @type DataNode */\n    this.rootNode = newNode();\n    this.stack = [this.rootNode];\n  }\n\n  get top() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  get root() { return this.rootNode; }\n\n  /** @param {Node} node */\n  add(node) {\n    this.top.children.push(node);\n  }\n\n  /** @param {string} scope */\n  openNode(scope) {\n    /** @type Node */\n    const node = newNode({ scope });\n    this.add(node);\n    this.stack.push(node);\n  }\n\n  closeNode() {\n    if (this.stack.length > 1) {\n      return this.stack.pop();\n    }\n    // eslint-disable-next-line no-undefined\n    return undefined;\n  }\n\n  closeAllNodes() {\n    while (this.closeNode());\n  }\n\n  toJSON() {\n    return JSON.stringify(this.rootNode, null, 4);\n  }\n\n  /**\n   * @typedef { import(\"./html_renderer\").Renderer } Renderer\n   * @param {Renderer} builder\n   */\n  walk(builder) {\n    // this does not\n    return this.constructor._walk(builder, this.rootNode);\n    // this works\n    // return TokenTree._walk(builder, this.rootNode);\n  }\n\n  /**\n   * @param {Renderer} builder\n   * @param {Node} node\n   */\n  static _walk(builder, node) {\n    if (typeof node === \"string\") {\n      builder.addText(node);\n    } else if (node.children) {\n      builder.openNode(node);\n      node.children.forEach((child) => this._walk(builder, child));\n      builder.closeNode(node);\n    }\n    return builder;\n  }\n\n  /**\n   * @param {Node} node\n   */\n  static _collapse(node) {\n    if (typeof node === \"string\") return;\n    if (!node.children) return;\n\n    if (node.children.every(el => typeof el === \"string\")) {\n      // node.text = node.children.join(\"\");\n      // delete node.children;\n      node.children = [node.children.join(\"\")];\n    } else {\n      node.children.forEach((child) => {\n        TokenTree._collapse(child);\n      });\n    }\n  }\n}\n\n/**\n  Currently this is all private API, but this is the minimal API necessary\n  that an Emitter must implement to fully support the parser.\n\n  Minimal interface:\n\n  - addKeyword(text, scope)\n  - addText(text)\n  - addSublanguage(emitter, subLanguageName)\n  - finalize()\n  - openNode(scope)\n  - closeNode()\n  - closeAllNodes()\n  - toHTML()\n\n*/\n\n/**\n * @implements {Emitter}\n */\nclass TokenTreeEmitter extends TokenTree {\n  /**\n   * @param {*} options\n   */\n  constructor(options) {\n    super();\n    this.options = options;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} scope\n   */\n  addKeyword(text, scope) {\n    if (text === \"\") { return; }\n\n    this.openNode(scope);\n    this.addText(text);\n    this.closeNode();\n  }\n\n  /**\n   * @param {string} text\n   */\n  addText(text) {\n    if (text === \"\") { return; }\n\n    this.add(text);\n  }\n\n  /**\n   * @param {Emitter & {root: DataNode}} emitter\n   * @param {string} name\n   */\n  addSublanguage(emitter, name) {\n    /** @type DataNode */\n    const node = emitter.root;\n    node.sublanguage = true;\n    node.language = name;\n    this.add(node);\n  }\n\n  toHTML() {\n    const renderer = new HTMLRenderer(this, this.options);\n    return renderer.value();\n  }\n\n  finalize() {\n    return true;\n  }\n}\n\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction anyNumberOfTimes(re) {\n  return concat('(?:', re, ')*');\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction optional(re) {\n  return concat('(?:', re, ')?');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/**\n * @param { Array<string | RegExp | Object> } args\n * @returns {object}\n */\nfunction stripOptionsFromArgs(args) {\n  const opts = args[args.length - 1];\n\n  if (typeof opts === 'object' && opts.constructor === Object) {\n    args.splice(args.length - 1, 1);\n    return opts;\n  } else {\n    return {};\n  }\n}\n\n/** @typedef { {capture?: boolean} } RegexEitherOptions */\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] | [...(RegExp | string)[], RegexEitherOptions]} args\n * @returns {string}\n */\nfunction either(...args) {\n  /** @type { object & {capture?: boolean} }  */\n  const opts = stripOptionsFromArgs(args);\n  const joined = '('\n    + (opts.capture ? \"\" : \"?:\")\n    + args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/**\n * @param {RegExp | string} re\n * @returns {number}\n */\nfunction countMatchGroups(re) {\n  return (new RegExp(re.toString() + '|')).exec('').length - 1;\n}\n\n/**\n * Does lexeme start with a regular expression match at the beginning\n * @param {RegExp} re\n * @param {string} lexeme\n */\nfunction startsWith(re, lexeme) {\n  const match = re && re.exec(lexeme);\n  return match && match.index === 0;\n}\n\n// BACKREF_RE matches an open parenthesis or backreference. To avoid\n// an incorrect parse, it additionally matches the following:\n// - [...] elements, where the meaning of parentheses and escapes change\n// - other escape sequences, so we do not misparse escape sequences as\n//   interesting elements\n// - non-matching or lookahead parentheses, which do not capture. These\n//   follow the '(' with a '?'.\nconst BACKREF_RE = /\\[(?:[^\\\\\\]]|\\\\.)*\\]|\\(\\??|\\\\([1-9][0-9]*)|\\\\./;\n\n// **INTERNAL** Not intended for outside usage\n// join logically computes regexps.join(separator), but fixes the\n// backreferences so they continue to match.\n// it also places each individual regular expression into it's own\n// match group, keeping track of the sequencing of those match groups\n// is currently an exercise for the caller. :-)\n/**\n * @param {(string | RegExp)[]} regexps\n * @param {{joinWith: string}} opts\n * @returns {string}\n */\nfunction _rewriteBackreferences(regexps, { joinWith }) {\n  let numCaptures = 0;\n\n  return regexps.map((regex) => {\n    numCaptures += 1;\n    const offset = numCaptures;\n    let re = source(regex);\n    let out = '';\n\n    while (re.length > 0) {\n      const match = BACKREF_RE.exec(re);\n      if (!match) {\n        out += re;\n        break;\n      }\n      out += re.substring(0, match.index);\n      re = re.substring(match.index + match[0].length);\n      if (match[0][0] === '\\\\' && match[1]) {\n        // Adjust the backreference.\n        out += '\\\\' + String(Number(match[1]) + offset);\n      } else {\n        out += match[0];\n        if (match[0] === '(') {\n          numCaptures++;\n        }\n      }\n    }\n    return out;\n  }).map(re => `(${re})`).join(joinWith);\n}\n\n/** @typedef {import('highlight.js').Mode} Mode */\n/** @typedef {import('highlight.js').ModeCallback} ModeCallback */\n\n// Common regexps\nconst MATCH_NOTHING_RE = /\\b\\B/;\nconst IDENT_RE = '[a-zA-Z]\\\\w*';\nconst UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\\\w*';\nconst NUMBER_RE = '\\\\b\\\\d+(\\\\.\\\\d+)?';\nconst C_NUMBER_RE = '(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)'; // 0x..., 0..., decimal, float\nconst BINARY_NUMBER_RE = '\\\\b(0b[01]+)'; // 0b...\nconst RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~';\n\n/**\n* @param { Partial<Mode> & {binary?: string | RegExp} } opts\n*/\nconst SHEBANG = (opts = {}) => {\n  const beginShebang = /^#![ ]*\\//;\n  if (opts.binary) {\n    opts.begin = concat(\n      beginShebang,\n      /.*\\b/,\n      opts.binary,\n      /\\b.*/);\n  }\n  return inherit$1({\n    scope: 'meta',\n    begin: beginShebang,\n    end: /$/,\n    relevance: 0,\n    /** @type {ModeCallback} */\n    \"on:begin\": (m, resp) => {\n      if (m.index !== 0) resp.ignoreMatch();\n    }\n  }, opts);\n};\n\n// Common modes\nconst BACKSLASH_ESCAPE = {\n  begin: '\\\\\\\\[\\\\s\\\\S]', relevance: 0\n};\nconst APOS_STRING_MODE = {\n  scope: 'string',\n  begin: '\\'',\n  end: '\\'',\n  illegal: '\\\\n',\n  contains: [BACKSLASH_ESCAPE]\n};\nconst QUOTE_STRING_MODE = {\n  scope: 'string',\n  begin: '\"',\n  end: '\"',\n  illegal: '\\\\n',\n  contains: [BACKSLASH_ESCAPE]\n};\nconst PHRASAL_WORDS_MODE = {\n  begin: /\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b/\n};\n/**\n * Creates a comment mode\n *\n * @param {string | RegExp} begin\n * @param {string | RegExp} end\n * @param {Mode | {}} [modeOptions]\n * @returns {Partial<Mode>}\n */\nconst COMMENT = function(begin, end, modeOptions = {}) {\n  const mode = inherit$1(\n    {\n      scope: 'comment',\n      begin,\n      end,\n      contains: []\n    },\n    modeOptions\n  );\n  mode.contains.push({\n    scope: 'doctag',\n    // hack to avoid the space from being included. the space is necessary to\n    // match here to prevent the plain text rule below from gobbling up doctags\n    begin: '[ ]*(?=(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):)',\n    end: /(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):/,\n    excludeBegin: true,\n    relevance: 0\n  });\n  const ENGLISH_WORD = either(\n    // list of common 1 and 2 letter words in English\n    \"I\",\n    \"a\",\n    \"is\",\n    \"so\",\n    \"us\",\n    \"to\",\n    \"at\",\n    \"if\",\n    \"in\",\n    \"it\",\n    \"on\",\n    // note: this is not an exhaustive list of contractions, just popular ones\n    /[A-Za-z]+['](d|ve|re|ll|t|s|n)/, // contractions - can't we'd they're let's, etc\n    /[A-Za-z]+[-][a-z]+/, // `no-way`, etc.\n    /[A-Za-z][a-z]{2,}/ // allow capitalized words at beginning of sentences\n  );\n  // looking like plain text, more likely to be a comment\n  mode.contains.push(\n    {\n      // TODO: how to include \", (, ) without breaking grammars that use these for\n      // comment delimiters?\n      // begin: /[ ]+([()\"]?([A-Za-z'-]{3,}|is|a|I|so|us|[tT][oO]|at|if|in|it|on)[.]?[()\":]?([.][ ]|[ ]|\\))){3}/\n      // ---\n\n      // this tries to find sequences of 3 english words in a row (without any\n      // \"programming\" type syntax) this gives us a strong signal that we've\n      // TRULY found a comment - vs perhaps scanning with the wrong language.\n      // It's possible to find something that LOOKS like the start of the\n      // comment - but then if there is no readable text - good chance it is a\n      // false match and not a comment.\n      //\n      // for a visual example please see:\n      // https://github.com/highlightjs/highlight.js/issues/2827\n\n      begin: concat(\n        /[ ]+/, // necessary to prevent us gobbling up doctags like /* @author Bob Mcgill */\n        '(',\n        ENGLISH_WORD,\n        /[.]?[:]?([.][ ]|[ ])/,\n        '){3}') // look for 3 words in a row\n    }\n  );\n  return mode;\n};\nconst C_LINE_COMMENT_MODE = COMMENT('//', '$');\nconst C_BLOCK_COMMENT_MODE = COMMENT('/\\\\*', '\\\\*/');\nconst HASH_COMMENT_MODE = COMMENT('#', '$');\nconst NUMBER_MODE = {\n  scope: 'number',\n  begin: NUMBER_RE,\n  relevance: 0\n};\nconst C_NUMBER_MODE = {\n  scope: 'number',\n  begin: C_NUMBER_RE,\n  relevance: 0\n};\nconst BINARY_NUMBER_MODE = {\n  scope: 'number',\n  begin: BINARY_NUMBER_RE,\n  relevance: 0\n};\nconst REGEXP_MODE = {\n  // this outer rule makes sure we actually have a WHOLE regex and not simply\n  // an expression such as:\n  //\n  //     3 / something\n  //\n  // (which will then blow up when regex's `illegal` sees the newline)\n  begin: /(?=\\/[^/\\n]*\\/)/,\n  contains: [{\n    scope: 'regexp',\n    begin: /\\//,\n    end: /\\/[gimuy]*/,\n    illegal: /\\n/,\n    contains: [\n      BACKSLASH_ESCAPE,\n      {\n        begin: /\\[/,\n        end: /\\]/,\n        relevance: 0,\n        contains: [BACKSLASH_ESCAPE]\n      }\n    ]\n  }]\n};\nconst TITLE_MODE = {\n  scope: 'title',\n  begin: IDENT_RE,\n  relevance: 0\n};\nconst UNDERSCORE_TITLE_MODE = {\n  scope: 'title',\n  begin: UNDERSCORE_IDENT_RE,\n  relevance: 0\n};\nconst METHOD_GUARD = {\n  // excludes method names from keyword processing\n  begin: '\\\\.\\\\s*' + UNDERSCORE_IDENT_RE,\n  relevance: 0\n};\n\n/**\n * Adds end same as begin mechanics to a mode\n *\n * Your mode must include at least a single () match group as that first match\n * group is what is used for comparison\n * @param {Partial<Mode>} mode\n */\nconst END_SAME_AS_BEGIN = function(mode) {\n  return Object.assign(mode,\n    {\n      /** @type {ModeCallback} */\n      'on:begin': (m, resp) => { resp.data._beginMatch = m[1]; },\n      /** @type {ModeCallback} */\n      'on:end': (m, resp) => { if (resp.data._beginMatch !== m[1]) resp.ignoreMatch(); }\n    });\n};\n\nvar MODES = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    MATCH_NOTHING_RE: MATCH_NOTHING_RE,\n    IDENT_RE: IDENT_RE,\n    UNDERSCORE_IDENT_RE: UNDERSCORE_IDENT_RE,\n    NUMBER_RE: NUMBER_RE,\n    C_NUMBER_RE: C_NUMBER_RE,\n    BINARY_NUMBER_RE: BINARY_NUMBER_RE,\n    RE_STARTERS_RE: RE_STARTERS_RE,\n    SHEBANG: SHEBANG,\n    BACKSLASH_ESCAPE: BACKSLASH_ESCAPE,\n    APOS_STRING_MODE: APOS_STRING_MODE,\n    QUOTE_STRING_MODE: QUOTE_STRING_MODE,\n    PHRASAL_WORDS_MODE: PHRASAL_WORDS_MODE,\n    COMMENT: COMMENT,\n    C_LINE_COMMENT_MODE: C_LINE_COMMENT_MODE,\n    C_BLOCK_COMMENT_MODE: C_BLOCK_COMMENT_MODE,\n    HASH_COMMENT_MODE: HASH_COMMENT_MODE,\n    NUMBER_MODE: NUMBER_MODE,\n    C_NUMBER_MODE: C_NUMBER_MODE,\n    BINARY_NUMBER_MODE: BINARY_NUMBER_MODE,\n    REGEXP_MODE: REGEXP_MODE,\n    TITLE_MODE: TITLE_MODE,\n    UNDERSCORE_TITLE_MODE: UNDERSCORE_TITLE_MODE,\n    METHOD_GUARD: METHOD_GUARD,\n    END_SAME_AS_BEGIN: END_SAME_AS_BEGIN\n});\n\n/**\n@typedef {import('highlight.js').CallbackResponse} CallbackResponse\n@typedef {import('highlight.js').CompilerExt} CompilerExt\n*/\n\n// Grammar extensions / plugins\n// See: https://github.com/highlightjs/highlight.js/issues/2833\n\n// Grammar extensions allow \"syntactic sugar\" to be added to the grammar modes\n// without requiring any underlying changes to the compiler internals.\n\n// `compileMatch` being the perfect small example of now allowing a grammar\n// author to write `match` when they desire to match a single expression rather\n// than being forced to use `begin`.  The extension then just moves `match` into\n// `begin` when it runs.  Ie, no features have been added, but we've just made\n// the experience of writing (and reading grammars) a little bit nicer.\n\n// ------\n\n// TODO: We need negative look-behind support to do this properly\n/**\n * Skip a match if it has a preceding dot\n *\n * This is used for `beginKeywords` to prevent matching expressions such as\n * `bob.keyword.do()`. The mode compiler automatically wires this up as a\n * special _internal_ 'on:begin' callback for modes with `beginKeywords`\n * @param {RegExpMatchArray} match\n * @param {CallbackResponse} response\n */\nfunction skipIfHasPrecedingDot(match, response) {\n  const before = match.input[match.index - 1];\n  if (before === \".\") {\n    response.ignoreMatch();\n  }\n}\n\n/**\n *\n * @type {CompilerExt}\n */\nfunction scopeClassName(mode, _parent) {\n  // eslint-disable-next-line no-undefined\n  if (mode.className !== undefined) {\n    mode.scope = mode.className;\n    delete mode.className;\n  }\n}\n\n/**\n * `beginKeywords` syntactic sugar\n * @type {CompilerExt}\n */\nfunction beginKeywords(mode, parent) {\n  if (!parent) return;\n  if (!mode.beginKeywords) return;\n\n  // for languages with keywords that include non-word characters checking for\n  // a word boundary is not sufficient, so instead we check for a word boundary\n  // or whitespace - this does no harm in any case since our keyword engine\n  // doesn't allow spaces in keywords anyways and we still check for the boundary\n  // first\n  mode.begin = '\\\\b(' + mode.beginKeywords.split(' ').join('|') + ')(?!\\\\.)(?=\\\\b|\\\\s)';\n  mode.__beforeBegin = skipIfHasPrecedingDot;\n  mode.keywords = mode.keywords || mode.beginKeywords;\n  delete mode.beginKeywords;\n\n  // prevents double relevance, the keywords themselves provide\n  // relevance, the mode doesn't need to double it\n  // eslint-disable-next-line no-undefined\n  if (mode.relevance === undefined) mode.relevance = 0;\n}\n\n/**\n * Allow `illegal` to contain an array of illegal values\n * @type {CompilerExt}\n */\nfunction compileIllegal(mode, _parent) {\n  if (!Array.isArray(mode.illegal)) return;\n\n  mode.illegal = either(...mode.illegal);\n}\n\n/**\n * `match` to match a single expression for readability\n * @type {CompilerExt}\n */\nfunction compileMatch(mode, _parent) {\n  if (!mode.match) return;\n  if (mode.begin || mode.end) throw new Error(\"begin & end are not supported with match\");\n\n  mode.begin = mode.match;\n  delete mode.match;\n}\n\n/**\n * provides the default 1 relevance to all modes\n * @type {CompilerExt}\n */\nfunction compileRelevance(mode, _parent) {\n  // eslint-disable-next-line no-undefined\n  if (mode.relevance === undefined) mode.relevance = 1;\n}\n\n// allow beforeMatch to act as a \"qualifier\" for the match\n// the full match begin must be [beforeMatch][begin]\nconst beforeMatchExt = (mode, parent) => {\n  if (!mode.beforeMatch) return;\n  // starts conflicts with endsParent which we need to make sure the child\n  // rule is not matched multiple times\n  if (mode.starts) throw new Error(\"beforeMatch cannot be used with starts\");\n\n  const originalMode = Object.assign({}, mode);\n  Object.keys(mode).forEach((key) => { delete mode[key]; });\n\n  mode.keywords = originalMode.keywords;\n  mode.begin = concat(originalMode.beforeMatch, lookahead(originalMode.begin));\n  mode.starts = {\n    relevance: 0,\n    contains: [\n      Object.assign(originalMode, { endsParent: true })\n    ]\n  };\n  mode.relevance = 0;\n\n  delete originalMode.beforeMatch;\n};\n\n// keywords that should have no default relevance value\nconst COMMON_KEYWORDS = [\n  'of',\n  'and',\n  'for',\n  'in',\n  'not',\n  'or',\n  'if',\n  'then',\n  'parent', // common variable name\n  'list', // common variable name\n  'value' // common variable name\n];\n\nconst DEFAULT_KEYWORD_SCOPE = \"keyword\";\n\n/**\n * Given raw keywords from a language definition, compile them.\n *\n * @param {string | Record<string,string|string[]> | Array<string>} rawKeywords\n * @param {boolean} caseInsensitive\n */\nfunction compileKeywords(rawKeywords, caseInsensitive, scopeName = DEFAULT_KEYWORD_SCOPE) {\n  /** @type {import(\"highlight.js/private\").KeywordDict} */\n  const compiledKeywords = Object.create(null);\n\n  // input can be a string of keywords, an array of keywords, or a object with\n  // named keys representing scopeName (which can then point to a string or array)\n  if (typeof rawKeywords === 'string') {\n    compileList(scopeName, rawKeywords.split(\" \"));\n  } else if (Array.isArray(rawKeywords)) {\n    compileList(scopeName, rawKeywords);\n  } else {\n    Object.keys(rawKeywords).forEach(function(scopeName) {\n      // collapse all our objects back into the parent object\n      Object.assign(\n        compiledKeywords,\n        compileKeywords(rawKeywords[scopeName], caseInsensitive, scopeName)\n      );\n    });\n  }\n  return compiledKeywords;\n\n  // ---\n\n  /**\n   * Compiles an individual list of keywords\n   *\n   * Ex: \"for if when while|5\"\n   *\n   * @param {string} scopeName\n   * @param {Array<string>} keywordList\n   */\n  function compileList(scopeName, keywordList) {\n    if (caseInsensitive) {\n      keywordList = keywordList.map(x => x.toLowerCase());\n    }\n    keywordList.forEach(function(keyword) {\n      const pair = keyword.split('|');\n      compiledKeywords[pair[0]] = [scopeName, scoreForKeyword(pair[0], pair[1])];\n    });\n  }\n}\n\n/**\n * Returns the proper score for a given keyword\n *\n * Also takes into account comment keywords, which will be scored 0 UNLESS\n * another score has been manually assigned.\n * @param {string} keyword\n * @param {string} [providedScore]\n */\nfunction scoreForKeyword(keyword, providedScore) {\n  // manual scores always win over common keywords\n  // so you can force a score of 1 if you really insist\n  if (providedScore) {\n    return Number(providedScore);\n  }\n\n  return commonKeyword(keyword) ? 0 : 1;\n}\n\n/**\n * Determines if a given keyword is common or not\n *\n * @param {string} keyword */\nfunction commonKeyword(keyword) {\n  return COMMON_KEYWORDS.includes(keyword.toLowerCase());\n}\n\n/*\n\nFor the reasoning behind this please see:\nhttps://github.com/highlightjs/highlight.js/issues/2880#issuecomment-747275419\n\n*/\n\n/**\n * @type {Record<string, boolean>}\n */\nconst seenDeprecations = {};\n\n/**\n * @param {string} message\n */\nconst error = (message) => {\n  console.error(message);\n};\n\n/**\n * @param {string} message\n * @param {any} args\n */\nconst warn = (message, ...args) => {\n  console.log(`WARN: ${message}`, ...args);\n};\n\n/**\n * @param {string} version\n * @param {string} message\n */\nconst deprecated = (version, message) => {\n  if (seenDeprecations[`${version}/${message}`]) return;\n\n  console.log(`Deprecated as of ${version}. ${message}`);\n  seenDeprecations[`${version}/${message}`] = true;\n};\n\n/* eslint-disable no-throw-literal */\n\n/**\n@typedef {import('highlight.js').CompiledMode} CompiledMode\n*/\n\nconst MultiClassError = new Error();\n\n/**\n * Renumbers labeled scope names to account for additional inner match\n * groups that otherwise would break everything.\n *\n * Lets say we 3 match scopes:\n *\n *   { 1 => ..., 2 => ..., 3 => ... }\n *\n * So what we need is a clean match like this:\n *\n *   (a)(b)(c) => [ \"a\", \"b\", \"c\" ]\n *\n * But this falls apart with inner match groups:\n *\n * (a)(((b)))(c) => [\"a\", \"b\", \"b\", \"b\", \"c\" ]\n *\n * Our scopes are now \"out of alignment\" and we're repeating `b` 3 times.\n * What needs to happen is the numbers are remapped:\n *\n *   { 1 => ..., 2 => ..., 5 => ... }\n *\n * We also need to know that the ONLY groups that should be output\n * are 1, 2, and 5.  This function handles this behavior.\n *\n * @param {CompiledMode} mode\n * @param {Array<RegExp | string>} regexes\n * @param {{key: \"beginScope\"|\"endScope\"}} opts\n */\nfunction remapScopeNames(mode, regexes, { key }) {\n  let offset = 0;\n  const scopeNames = mode[key];\n  /** @type Record<number,boolean> */\n  const emit = {};\n  /** @type Record<number,string> */\n  const positions = {};\n\n  for (let i = 1; i <= regexes.length; i++) {\n    positions[i + offset] = scopeNames[i];\n    emit[i + offset] = true;\n    offset += countMatchGroups(regexes[i - 1]);\n  }\n  // we use _emit to keep track of which match groups are \"top-level\" to avoid double\n  // output from inside match groups\n  mode[key] = positions;\n  mode[key]._emit = emit;\n  mode[key]._multi = true;\n}\n\n/**\n * @param {CompiledMode} mode\n */\nfunction beginMultiClass(mode) {\n  if (!Array.isArray(mode.begin)) return;\n\n  if (mode.skip || mode.excludeBegin || mode.returnBegin) {\n    error(\"skip, excludeBegin, returnBegin not compatible with beginScope: {}\");\n    throw MultiClassError;\n  }\n\n  if (typeof mode.beginScope !== \"object\" || mode.beginScope === null) {\n    error(\"beginScope must be object\");\n    throw MultiClassError;\n  }\n\n  remapScopeNames(mode, mode.begin, { key: \"beginScope\" });\n  mode.begin = _rewriteBackreferences(mode.begin, { joinWith: \"\" });\n}\n\n/**\n * @param {CompiledMode} mode\n */\nfunction endMultiClass(mode) {\n  if (!Array.isArray(mode.end)) return;\n\n  if (mode.skip || mode.excludeEnd || mode.returnEnd) {\n    error(\"skip, excludeEnd, returnEnd not compatible with endScope: {}\");\n    throw MultiClassError;\n  }\n\n  if (typeof mode.endScope !== \"object\" || mode.endScope === null) {\n    error(\"endScope must be object\");\n    throw MultiClassError;\n  }\n\n  remapScopeNames(mode, mode.end, { key: \"endScope\" });\n  mode.end = _rewriteBackreferences(mode.end, { joinWith: \"\" });\n}\n\n/**\n * this exists only to allow `scope: {}` to be used beside `match:`\n * Otherwise `beginScope` would necessary and that would look weird\n\n  {\n    match: [ /def/, /\\w+/ ]\n    scope: { 1: \"keyword\" , 2: \"title\" }\n  }\n\n * @param {CompiledMode} mode\n */\nfunction scopeSugar(mode) {\n  if (mode.scope && typeof mode.scope === \"object\" && mode.scope !== null) {\n    mode.beginScope = mode.scope;\n    delete mode.scope;\n  }\n}\n\n/**\n * @param {CompiledMode} mode\n */\nfunction MultiClass(mode) {\n  scopeSugar(mode);\n\n  if (typeof mode.beginScope === \"string\") {\n    mode.beginScope = { _wrap: mode.beginScope };\n  }\n  if (typeof mode.endScope === \"string\") {\n    mode.endScope = { _wrap: mode.endScope };\n  }\n\n  beginMultiClass(mode);\n  endMultiClass(mode);\n}\n\n/**\n@typedef {import('highlight.js').Mode} Mode\n@typedef {import('highlight.js').CompiledMode} CompiledMode\n@typedef {import('highlight.js').Language} Language\n@typedef {import('highlight.js').HLJSPlugin} HLJSPlugin\n@typedef {import('highlight.js').CompiledLanguage} CompiledLanguage\n*/\n\n// compilation\n\n/**\n * Compiles a language definition result\n *\n * Given the raw result of a language definition (Language), compiles this so\n * that it is ready for highlighting code.\n * @param {Language} language\n * @returns {CompiledLanguage}\n */\nfunction compileLanguage(language) {\n  /**\n   * Builds a regex with the case sensitivity of the current language\n   *\n   * @param {RegExp | string} value\n   * @param {boolean} [global]\n   */\n  function langRe(value, global) {\n    return new RegExp(\n      source(value),\n      'm'\n      + (language.case_insensitive ? 'i' : '')\n      + (language.unicodeRegex ? 'u' : '')\n      + (global ? 'g' : '')\n    );\n  }\n\n  /**\n    Stores multiple regular expressions and allows you to quickly search for\n    them all in a string simultaneously - returning the first match.  It does\n    this by creating a huge (a|b|c) regex - each individual item wrapped with ()\n    and joined by `|` - using match groups to track position.  When a match is\n    found checking which position in the array has content allows us to figure\n    out which of the original regexes / match groups triggered the match.\n\n    The match object itself (the result of `Regex.exec`) is returned but also\n    enhanced by merging in any meta-data that was registered with the regex.\n    This is how we keep track of which mode matched, and what type of rule\n    (`illegal`, `begin`, end, etc).\n  */\n  class MultiRegex {\n    constructor() {\n      this.matchIndexes = {};\n      // @ts-ignore\n      this.regexes = [];\n      this.matchAt = 1;\n      this.position = 0;\n    }\n\n    // @ts-ignore\n    addRule(re, opts) {\n      opts.position = this.position++;\n      // @ts-ignore\n      this.matchIndexes[this.matchAt] = opts;\n      this.regexes.push([opts, re]);\n      this.matchAt += countMatchGroups(re) + 1;\n    }\n\n    compile() {\n      if (this.regexes.length === 0) {\n        // avoids the need to check length every time exec is called\n        // @ts-ignore\n        this.exec = () => null;\n      }\n      const terminators = this.regexes.map(el => el[1]);\n      this.matcherRe = langRe(_rewriteBackreferences(terminators, { joinWith: '|' }), true);\n      this.lastIndex = 0;\n    }\n\n    /** @param {string} s */\n    exec(s) {\n      this.matcherRe.lastIndex = this.lastIndex;\n      const match = this.matcherRe.exec(s);\n      if (!match) { return null; }\n\n      // eslint-disable-next-line no-undefined\n      const i = match.findIndex((el, i) => i > 0 && el !== undefined);\n      // @ts-ignore\n      const matchData = this.matchIndexes[i];\n      // trim off any earlier non-relevant match groups (ie, the other regex\n      // match groups that make up the multi-matcher)\n      match.splice(0, i);\n\n      return Object.assign(match, matchData);\n    }\n  }\n\n  /*\n    Created to solve the key deficiently with MultiRegex - there is no way to\n    test for multiple matches at a single location.  Why would we need to do\n    that?  In the future a more dynamic engine will allow certain matches to be\n    ignored.  An example: if we matched say the 3rd regex in a large group but\n    decided to ignore it - we'd need to started testing again at the 4th\n    regex... but MultiRegex itself gives us no real way to do that.\n\n    So what this class creates MultiRegexs on the fly for whatever search\n    position they are needed.\n\n    NOTE: These additional MultiRegex objects are created dynamically.  For most\n    grammars most of the time we will never actually need anything more than the\n    first MultiRegex - so this shouldn't have too much overhead.\n\n    Say this is our search group, and we match regex3, but wish to ignore it.\n\n      regex1 | regex2 | regex3 | regex4 | regex5    ' ie, startAt = 0\n\n    What we need is a new MultiRegex that only includes the remaining\n    possibilities:\n\n      regex4 | regex5                               ' ie, startAt = 3\n\n    This class wraps all that complexity up in a simple API... `startAt` decides\n    where in the array of expressions to start doing the matching. It\n    auto-increments, so if a match is found at position 2, then startAt will be\n    set to 3.  If the end is reached startAt will return to 0.\n\n    MOST of the time the parser will be setting startAt manually to 0.\n  */\n  class ResumableMultiRegex {\n    constructor() {\n      // @ts-ignore\n      this.rules = [];\n      // @ts-ignore\n      this.multiRegexes = [];\n      this.count = 0;\n\n      this.lastIndex = 0;\n      this.regexIndex = 0;\n    }\n\n    // @ts-ignore\n    getMatcher(index) {\n      if (this.multiRegexes[index]) return this.multiRegexes[index];\n\n      const matcher = new MultiRegex();\n      this.rules.slice(index).forEach(([re, opts]) => matcher.addRule(re, opts));\n      matcher.compile();\n      this.multiRegexes[index] = matcher;\n      return matcher;\n    }\n\n    resumingScanAtSamePosition() {\n      return this.regexIndex !== 0;\n    }\n\n    considerAll() {\n      this.regexIndex = 0;\n    }\n\n    // @ts-ignore\n    addRule(re, opts) {\n      this.rules.push([re, opts]);\n      if (opts.type === \"begin\") this.count++;\n    }\n\n    /** @param {string} s */\n    exec(s) {\n      const m = this.getMatcher(this.regexIndex);\n      m.lastIndex = this.lastIndex;\n      let result = m.exec(s);\n\n      // The following is because we have no easy way to say \"resume scanning at the\n      // existing position but also skip the current rule ONLY\". What happens is\n      // all prior rules are also skipped which can result in matching the wrong\n      // thing. Example of matching \"booger\":\n\n      // our matcher is [string, \"booger\", number]\n      //\n      // ....booger....\n\n      // if \"booger\" is ignored then we'd really need a regex to scan from the\n      // SAME position for only: [string, number] but ignoring \"booger\" (if it\n      // was the first match), a simple resume would scan ahead who knows how\n      // far looking only for \"number\", ignoring potential string matches (or\n      // future \"booger\" matches that might be valid.)\n\n      // So what we do: We execute two matchers, one resuming at the same\n      // position, but the second full matcher starting at the position after:\n\n      //     /--- resume first regex match here (for [number])\n      //     |/---- full match here for [string, \"booger\", number]\n      //     vv\n      // ....booger....\n\n      // Which ever results in a match first is then used. So this 3-4 step\n      // process essentially allows us to say \"match at this position, excluding\n      // a prior rule that was ignored\".\n      //\n      // 1. Match \"booger\" first, ignore. Also proves that [string] does non match.\n      // 2. Resume matching for [number]\n      // 3. Match at index + 1 for [string, \"booger\", number]\n      // 4. If #2 and #3 result in matches, which came first?\n      if (this.resumingScanAtSamePosition()) {\n        if (result && result.index === this.lastIndex) ; else { // use the second matcher result\n          const m2 = this.getMatcher(0);\n          m2.lastIndex = this.lastIndex + 1;\n          result = m2.exec(s);\n        }\n      }\n\n      if (result) {\n        this.regexIndex += result.position + 1;\n        if (this.regexIndex === this.count) {\n          // wrap-around to considering all matches again\n          this.considerAll();\n        }\n      }\n\n      return result;\n    }\n  }\n\n  /**\n   * Given a mode, builds a huge ResumableMultiRegex that can be used to walk\n   * the content and find matches.\n   *\n   * @param {CompiledMode} mode\n   * @returns {ResumableMultiRegex}\n   */\n  function buildModeRegex(mode) {\n    const mm = new ResumableMultiRegex();\n\n    mode.contains.forEach(term => mm.addRule(term.begin, { rule: term, type: \"begin\" }));\n\n    if (mode.terminatorEnd) {\n      mm.addRule(mode.terminatorEnd, { type: \"end\" });\n    }\n    if (mode.illegal) {\n      mm.addRule(mode.illegal, { type: \"illegal\" });\n    }\n\n    return mm;\n  }\n\n  /** skip vs abort vs ignore\n   *\n   * @skip   - The mode is still entered and exited normally (and contains rules apply),\n   *           but all content is held and added to the parent buffer rather than being\n   *           output when the mode ends.  Mostly used with `sublanguage` to build up\n   *           a single large buffer than can be parsed by sublanguage.\n   *\n   *             - The mode begin ands ends normally.\n   *             - Content matched is added to the parent mode buffer.\n   *             - The parser cursor is moved forward normally.\n   *\n   * @abort  - A hack placeholder until we have ignore.  Aborts the mode (as if it\n   *           never matched) but DOES NOT continue to match subsequent `contains`\n   *           modes.  Abort is bad/suboptimal because it can result in modes\n   *           farther down not getting applied because an earlier rule eats the\n   *           content but then aborts.\n   *\n   *             - The mode does not begin.\n   *             - Content matched by `begin` is added to the mode buffer.\n   *             - The parser cursor is moved forward accordingly.\n   *\n   * @ignore - Ignores the mode (as if it never matched) and continues to match any\n   *           subsequent `contains` modes.  Ignore isn't technically possible with\n   *           the current parser implementation.\n   *\n   *             - The mode does not begin.\n   *             - Content matched by `begin` is ignored.\n   *             - The parser cursor is not moved forward.\n   */\n\n  /**\n   * Compiles an individual mode\n   *\n   * This can raise an error if the mode contains certain detectable known logic\n   * issues.\n   * @param {Mode} mode\n   * @param {CompiledMode | null} [parent]\n   * @returns {CompiledMode | never}\n   */\n  function compileMode(mode, parent) {\n    const cmode = /** @type CompiledMode */ (mode);\n    if (mode.isCompiled) return cmode;\n\n    [\n      scopeClassName,\n      // do this early so compiler extensions generally don't have to worry about\n      // the distinction between match/begin\n      compileMatch,\n      MultiClass,\n      beforeMatchExt\n    ].forEach(ext => ext(mode, parent));\n\n    language.compilerExtensions.forEach(ext => ext(mode, parent));\n\n    // __beforeBegin is considered private API, internal use only\n    mode.__beforeBegin = null;\n\n    [\n      beginKeywords,\n      // do this later so compiler extensions that come earlier have access to the\n      // raw array if they wanted to perhaps manipulate it, etc.\n      compileIllegal,\n      // default to 1 relevance if not specified\n      compileRelevance\n    ].forEach(ext => ext(mode, parent));\n\n    mode.isCompiled = true;\n\n    let keywordPattern = null;\n    if (typeof mode.keywords === \"object\" && mode.keywords.$pattern) {\n      // we need a copy because keywords might be compiled multiple times\n      // so we can't go deleting $pattern from the original on the first\n      // pass\n      mode.keywords = Object.assign({}, mode.keywords);\n      keywordPattern = mode.keywords.$pattern;\n      delete mode.keywords.$pattern;\n    }\n    keywordPattern = keywordPattern || /\\w+/;\n\n    if (mode.keywords) {\n      mode.keywords = compileKeywords(mode.keywords, language.case_insensitive);\n    }\n\n    cmode.keywordPatternRe = langRe(keywordPattern, true);\n\n    if (parent) {\n      if (!mode.begin) mode.begin = /\\B|\\b/;\n      cmode.beginRe = langRe(cmode.begin);\n      if (!mode.end && !mode.endsWithParent) mode.end = /\\B|\\b/;\n      if (mode.end) cmode.endRe = langRe(cmode.end);\n      cmode.terminatorEnd = source(cmode.end) || '';\n      if (mode.endsWithParent && parent.terminatorEnd) {\n        cmode.terminatorEnd += (mode.end ? '|' : '') + parent.terminatorEnd;\n      }\n    }\n    if (mode.illegal) cmode.illegalRe = langRe(/** @type {RegExp | string} */ (mode.illegal));\n    if (!mode.contains) mode.contains = [];\n\n    mode.contains = [].concat(...mode.contains.map(function(c) {\n      return expandOrCloneMode(c === 'self' ? mode : c);\n    }));\n    mode.contains.forEach(function(c) { compileMode(/** @type Mode */ (c), cmode); });\n\n    if (mode.starts) {\n      compileMode(mode.starts, parent);\n    }\n\n    cmode.matcher = buildModeRegex(cmode);\n    return cmode;\n  }\n\n  if (!language.compilerExtensions) language.compilerExtensions = [];\n\n  // self is not valid at the top-level\n  if (language.contains && language.contains.includes('self')) {\n    throw new Error(\"ERR: contains `self` is not supported at the top-level of a language.  See documentation.\");\n  }\n\n  // we need a null object, which inherit will guarantee\n  language.classNameAliases = inherit$1(language.classNameAliases || {});\n\n  return compileMode(/** @type Mode */ (language));\n}\n\n/**\n * Determines if a mode has a dependency on it's parent or not\n *\n * If a mode does have a parent dependency then often we need to clone it if\n * it's used in multiple places so that each copy points to the correct parent,\n * where-as modes without a parent can often safely be re-used at the bottom of\n * a mode chain.\n *\n * @param {Mode | null} mode\n * @returns {boolean} - is there a dependency on the parent?\n * */\nfunction dependencyOnParent(mode) {\n  if (!mode) return false;\n\n  return mode.endsWithParent || dependencyOnParent(mode.starts);\n}\n\n/**\n * Expands a mode or clones it if necessary\n *\n * This is necessary for modes with parental dependenceis (see notes on\n * `dependencyOnParent`) and for nodes that have `variants` - which must then be\n * exploded into their own individual modes at compile time.\n *\n * @param {Mode} mode\n * @returns {Mode | Mode[]}\n * */\nfunction expandOrCloneMode(mode) {\n  if (mode.variants && !mode.cachedVariants) {\n    mode.cachedVariants = mode.variants.map(function(variant) {\n      return inherit$1(mode, { variants: null }, variant);\n    });\n  }\n\n  // EXPAND\n  // if we have variants then essentially \"replace\" the mode with the variants\n  // this happens in compileMode, where this function is called from\n  if (mode.cachedVariants) {\n    return mode.cachedVariants;\n  }\n\n  // CLONE\n  // if we have dependencies on parents then we need a unique\n  // instance of ourselves, so we can be reused with many\n  // different parents without issue\n  if (dependencyOnParent(mode)) {\n    return inherit$1(mode, { starts: mode.starts ? inherit$1(mode.starts) : null });\n  }\n\n  if (Object.isFrozen(mode)) {\n    return inherit$1(mode);\n  }\n\n  // no special dependency issues, just return ourselves\n  return mode;\n}\n\nvar version = \"11.7.0\";\n\nclass HTMLInjectionError extends Error {\n  constructor(reason, html) {\n    super(reason);\n    this.name = \"HTMLInjectionError\";\n    this.html = html;\n  }\n}\n\n/*\nSyntax highlighting with language autodetection.\nhttps://highlightjs.org/\n*/\n\n/**\n@typedef {import('highlight.js').Mode} Mode\n@typedef {import('highlight.js').CompiledMode} CompiledMode\n@typedef {import('highlight.js').CompiledScope} CompiledScope\n@typedef {import('highlight.js').Language} Language\n@typedef {import('highlight.js').HLJSApi} HLJSApi\n@typedef {import('highlight.js').HLJSPlugin} HLJSPlugin\n@typedef {import('highlight.js').PluginEvent} PluginEvent\n@typedef {import('highlight.js').HLJSOptions} HLJSOptions\n@typedef {import('highlight.js').LanguageFn} LanguageFn\n@typedef {import('highlight.js').HighlightedHTMLElement} HighlightedHTMLElement\n@typedef {import('highlight.js').BeforeHighlightContext} BeforeHighlightContext\n@typedef {import('highlight.js/private').MatchType} MatchType\n@typedef {import('highlight.js/private').KeywordData} KeywordData\n@typedef {import('highlight.js/private').EnhancedMatch} EnhancedMatch\n@typedef {import('highlight.js/private').AnnotatedError} AnnotatedError\n@typedef {import('highlight.js').AutoHighlightResult} AutoHighlightResult\n@typedef {import('highlight.js').HighlightOptions} HighlightOptions\n@typedef {import('highlight.js').HighlightResult} HighlightResult\n*/\n\n\nconst escape = escapeHTML;\nconst inherit = inherit$1;\nconst NO_MATCH = Symbol(\"nomatch\");\nconst MAX_KEYWORD_HITS = 7;\n\n/**\n * @param {any} hljs - object that is extended (legacy)\n * @returns {HLJSApi}\n */\nconst HLJS = function(hljs) {\n  // Global internal variables used within the highlight.js library.\n  /** @type {Record<string, Language>} */\n  const languages = Object.create(null);\n  /** @type {Record<string, string>} */\n  const aliases = Object.create(null);\n  /** @type {HLJSPlugin[]} */\n  const plugins = [];\n\n  // safe/production mode - swallows more errors, tries to keep running\n  // even if a single syntax or parse hits a fatal error\n  let SAFE_MODE = true;\n  const LANGUAGE_NOT_FOUND = \"Could not find the language '{}', did you forget to load/include a language module?\";\n  /** @type {Language} */\n  const PLAINTEXT_LANGUAGE = { disableAutodetect: true, name: 'Plain text', contains: [] };\n\n  // Global options used when within external APIs. This is modified when\n  // calling the `hljs.configure` function.\n  /** @type HLJSOptions */\n  let options = {\n    ignoreUnescapedHTML: false,\n    throwUnescapedHTML: false,\n    noHighlightRe: /^(no-?highlight)$/i,\n    languageDetectRe: /\\blang(?:uage)?-([\\w-]+)\\b/i,\n    classPrefix: 'hljs-',\n    cssSelector: 'pre code',\n    languages: null,\n    // beta configuration options, subject to change, welcome to discuss\n    // https://github.com/highlightjs/highlight.js/issues/1086\n    __emitter: TokenTreeEmitter\n  };\n\n  /* Utility functions */\n\n  /**\n   * Tests a language name to see if highlighting should be skipped\n   * @param {string} languageName\n   */\n  function shouldNotHighlight(languageName) {\n    return options.noHighlightRe.test(languageName);\n  }\n\n  /**\n   * @param {HighlightedHTMLElement} block - the HTML element to determine language for\n   */\n  function blockLanguage(block) {\n    let classes = block.className + ' ';\n\n    classes += block.parentNode ? block.parentNode.className : '';\n\n    // language-* takes precedence over non-prefixed class names.\n    const match = options.languageDetectRe.exec(classes);\n    if (match) {\n      const language = getLanguage(match[1]);\n      if (!language) {\n        warn(LANGUAGE_NOT_FOUND.replace(\"{}\", match[1]));\n        warn(\"Falling back to no-highlight mode for this block.\", block);\n      }\n      return language ? match[1] : 'no-highlight';\n    }\n\n    return classes\n      .split(/\\s+/)\n      .find((_class) => shouldNotHighlight(_class) || getLanguage(_class));\n  }\n\n  /**\n   * Core highlighting function.\n   *\n   * OLD API\n   * highlight(lang, code, ignoreIllegals, continuation)\n   *\n   * NEW API\n   * highlight(code, {lang, ignoreIllegals})\n   *\n   * @param {string} codeOrLanguageName - the language to use for highlighting\n   * @param {string | HighlightOptions} optionsOrCode - the code to highlight\n   * @param {boolean} [ignoreIllegals] - whether to ignore illegal matches, default is to bail\n   *\n   * @returns {HighlightResult} Result - an object that represents the result\n   * @property {string} language - the language name\n   * @property {number} relevance - the relevance score\n   * @property {string} value - the highlighted HTML code\n   * @property {string} code - the original raw code\n   * @property {CompiledMode} top - top of the current mode stack\n   * @property {boolean} illegal - indicates whether any illegal matches were found\n  */\n  function highlight(codeOrLanguageName, optionsOrCode, ignoreIllegals) {\n    let code = \"\";\n    let languageName = \"\";\n    if (typeof optionsOrCode === \"object\") {\n      code = codeOrLanguageName;\n      ignoreIllegals = optionsOrCode.ignoreIllegals;\n      languageName = optionsOrCode.language;\n    } else {\n      // old API\n      deprecated(\"10.7.0\", \"highlight(lang, code, ...args) has been deprecated.\");\n      deprecated(\"10.7.0\", \"Please use highlight(code, options) instead.\\nhttps://github.com/highlightjs/highlight.js/issues/2277\");\n      languageName = codeOrLanguageName;\n      code = optionsOrCode;\n    }\n\n    // https://github.com/highlightjs/highlight.js/issues/3149\n    // eslint-disable-next-line no-undefined\n    if (ignoreIllegals === undefined) { ignoreIllegals = true; }\n\n    /** @type {BeforeHighlightContext} */\n    const context = {\n      code,\n      language: languageName\n    };\n    // the plugin can change the desired language or the code to be highlighted\n    // just be changing the object it was passed\n    fire(\"before:highlight\", context);\n\n    // a before plugin can usurp the result completely by providing it's own\n    // in which case we don't even need to call highlight\n    const result = context.result\n      ? context.result\n      : _highlight(context.language, context.code, ignoreIllegals);\n\n    result.code = context.code;\n    // the plugin can change anything in result to suite it\n    fire(\"after:highlight\", result);\n\n    return result;\n  }\n\n  /**\n   * private highlight that's used internally and does not fire callbacks\n   *\n   * @param {string} languageName - the language to use for highlighting\n   * @param {string} codeToHighlight - the code to highlight\n   * @param {boolean?} [ignoreIllegals] - whether to ignore illegal matches, default is to bail\n   * @param {CompiledMode?} [continuation] - current continuation mode, if any\n   * @returns {HighlightResult} - result of the highlight operation\n  */\n  function _highlight(languageName, codeToHighlight, ignoreIllegals, continuation) {\n    const keywordHits = Object.create(null);\n\n    /**\n     * Return keyword data if a match is a keyword\n     * @param {CompiledMode} mode - current mode\n     * @param {string} matchText - the textual match\n     * @returns {KeywordData | false}\n     */\n    function keywordData(mode, matchText) {\n      return mode.keywords[matchText];\n    }\n\n    function processKeywords() {\n      if (!top.keywords) {\n        emitter.addText(modeBuffer);\n        return;\n      }\n\n      let lastIndex = 0;\n      top.keywordPatternRe.lastIndex = 0;\n      let match = top.keywordPatternRe.exec(modeBuffer);\n      let buf = \"\";\n\n      while (match) {\n        buf += modeBuffer.substring(lastIndex, match.index);\n        const word = language.case_insensitive ? match[0].toLowerCase() : match[0];\n        const data = keywordData(top, word);\n        if (data) {\n          const [kind, keywordRelevance] = data;\n          emitter.addText(buf);\n          buf = \"\";\n\n          keywordHits[word] = (keywordHits[word] || 0) + 1;\n          if (keywordHits[word] <= MAX_KEYWORD_HITS) relevance += keywordRelevance;\n          if (kind.startsWith(\"_\")) {\n            // _ implied for relevance only, do not highlight\n            // by applying a class name\n            buf += match[0];\n          } else {\n            const cssClass = language.classNameAliases[kind] || kind;\n            emitter.addKeyword(match[0], cssClass);\n          }\n        } else {\n          buf += match[0];\n        }\n        lastIndex = top.keywordPatternRe.lastIndex;\n        match = top.keywordPatternRe.exec(modeBuffer);\n      }\n      buf += modeBuffer.substring(lastIndex);\n      emitter.addText(buf);\n    }\n\n    function processSubLanguage() {\n      if (modeBuffer === \"\") return;\n      /** @type HighlightResult */\n      let result = null;\n\n      if (typeof top.subLanguage === 'string') {\n        if (!languages[top.subLanguage]) {\n          emitter.addText(modeBuffer);\n          return;\n        }\n        result = _highlight(top.subLanguage, modeBuffer, true, continuations[top.subLanguage]);\n        continuations[top.subLanguage] = /** @type {CompiledMode} */ (result._top);\n      } else {\n        result = highlightAuto(modeBuffer, top.subLanguage.length ? top.subLanguage : null);\n      }\n\n      // Counting embedded language score towards the host language may be disabled\n      // with zeroing the containing mode relevance. Use case in point is Markdown that\n      // allows XML everywhere and makes every XML snippet to have a much larger Markdown\n      // score.\n      if (top.relevance > 0) {\n        relevance += result.relevance;\n      }\n      emitter.addSublanguage(result._emitter, result.language);\n    }\n\n    function processBuffer() {\n      if (top.subLanguage != null) {\n        processSubLanguage();\n      } else {\n        processKeywords();\n      }\n      modeBuffer = '';\n    }\n\n    /**\n     * @param {CompiledScope} scope\n     * @param {RegExpMatchArray} match\n     */\n    function emitMultiClass(scope, match) {\n      let i = 1;\n      const max = match.length - 1;\n      while (i <= max) {\n        if (!scope._emit[i]) { i++; continue; }\n        const klass = language.classNameAliases[scope[i]] || scope[i];\n        const text = match[i];\n        if (klass) {\n          emitter.addKeyword(text, klass);\n        } else {\n          modeBuffer = text;\n          processKeywords();\n          modeBuffer = \"\";\n        }\n        i++;\n      }\n    }\n\n    /**\n     * @param {CompiledMode} mode - new mode to start\n     * @param {RegExpMatchArray} match\n     */\n    function startNewMode(mode, match) {\n      if (mode.scope && typeof mode.scope === \"string\") {\n        emitter.openNode(language.classNameAliases[mode.scope] || mode.scope);\n      }\n      if (mode.beginScope) {\n        // beginScope just wraps the begin match itself in a scope\n        if (mode.beginScope._wrap) {\n          emitter.addKeyword(modeBuffer, language.classNameAliases[mode.beginScope._wrap] || mode.beginScope._wrap);\n          modeBuffer = \"\";\n        } else if (mode.beginScope._multi) {\n          // at this point modeBuffer should just be the match\n          emitMultiClass(mode.beginScope, match);\n          modeBuffer = \"\";\n        }\n      }\n\n      top = Object.create(mode, { parent: { value: top } });\n      return top;\n    }\n\n    /**\n     * @param {CompiledMode } mode - the mode to potentially end\n     * @param {RegExpMatchArray} match - the latest match\n     * @param {string} matchPlusRemainder - match plus remainder of content\n     * @returns {CompiledMode | void} - the next mode, or if void continue on in current mode\n     */\n    function endOfMode(mode, match, matchPlusRemainder) {\n      let matched = startsWith(mode.endRe, matchPlusRemainder);\n\n      if (matched) {\n        if (mode[\"on:end\"]) {\n          const resp = new Response(mode);\n          mode[\"on:end\"](match, resp);\n          if (resp.isMatchIgnored) matched = false;\n        }\n\n        if (matched) {\n          while (mode.endsParent && mode.parent) {\n            mode = mode.parent;\n          }\n          return mode;\n        }\n      }\n      // even if on:end fires an `ignore` it's still possible\n      // that we might trigger the end node because of a parent mode\n      if (mode.endsWithParent) {\n        return endOfMode(mode.parent, match, matchPlusRemainder);\n      }\n    }\n\n    /**\n     * Handle matching but then ignoring a sequence of text\n     *\n     * @param {string} lexeme - string containing full match text\n     */\n    function doIgnore(lexeme) {\n      if (top.matcher.regexIndex === 0) {\n        // no more regexes to potentially match here, so we move the cursor forward one\n        // space\n        modeBuffer += lexeme[0];\n        return 1;\n      } else {\n        // no need to move the cursor, we still have additional regexes to try and\n        // match at this very spot\n        resumeScanAtSamePosition = true;\n        return 0;\n      }\n    }\n\n    /**\n     * Handle the start of a new potential mode match\n     *\n     * @param {EnhancedMatch} match - the current match\n     * @returns {number} how far to advance the parse cursor\n     */\n    function doBeginMatch(match) {\n      const lexeme = match[0];\n      const newMode = match.rule;\n\n      const resp = new Response(newMode);\n      // first internal before callbacks, then the public ones\n      const beforeCallbacks = [newMode.__beforeBegin, newMode[\"on:begin\"]];\n      for (const cb of beforeCallbacks) {\n        if (!cb) continue;\n        cb(match, resp);\n        if (resp.isMatchIgnored) return doIgnore(lexeme);\n      }\n\n      if (newMode.skip) {\n        modeBuffer += lexeme;\n      } else {\n        if (newMode.excludeBegin) {\n          modeBuffer += lexeme;\n        }\n        processBuffer();\n        if (!newMode.returnBegin && !newMode.excludeBegin) {\n          modeBuffer = lexeme;\n        }\n      }\n      startNewMode(newMode, match);\n      return newMode.returnBegin ? 0 : lexeme.length;\n    }\n\n    /**\n     * Handle the potential end of mode\n     *\n     * @param {RegExpMatchArray} match - the current match\n     */\n    function doEndMatch(match) {\n      const lexeme = match[0];\n      const matchPlusRemainder = codeToHighlight.substring(match.index);\n\n      const endMode = endOfMode(top, match, matchPlusRemainder);\n      if (!endMode) { return NO_MATCH; }\n\n      const origin = top;\n      if (top.endScope && top.endScope._wrap) {\n        processBuffer();\n        emitter.addKeyword(lexeme, top.endScope._wrap);\n      } else if (top.endScope && top.endScope._multi) {\n        processBuffer();\n        emitMultiClass(top.endScope, match);\n      } else if (origin.skip) {\n        modeBuffer += lexeme;\n      } else {\n        if (!(origin.returnEnd || origin.excludeEnd)) {\n          modeBuffer += lexeme;\n        }\n        processBuffer();\n        if (origin.excludeEnd) {\n          modeBuffer = lexeme;\n        }\n      }\n      do {\n        if (top.scope) {\n          emitter.closeNode();\n        }\n        if (!top.skip && !top.subLanguage) {\n          relevance += top.relevance;\n        }\n        top = top.parent;\n      } while (top !== endMode.parent);\n      if (endMode.starts) {\n        startNewMode(endMode.starts, match);\n      }\n      return origin.returnEnd ? 0 : lexeme.length;\n    }\n\n    function processContinuations() {\n      const list = [];\n      for (let current = top; current !== language; current = current.parent) {\n        if (current.scope) {\n          list.unshift(current.scope);\n        }\n      }\n      list.forEach(item => emitter.openNode(item));\n    }\n\n    /** @type {{type?: MatchType, index?: number, rule?: Mode}}} */\n    let lastMatch = {};\n\n    /**\n     *  Process an individual match\n     *\n     * @param {string} textBeforeMatch - text preceding the match (since the last match)\n     * @param {EnhancedMatch} [match] - the match itself\n     */\n    function processLexeme(textBeforeMatch, match) {\n      const lexeme = match && match[0];\n\n      // add non-matched text to the current mode buffer\n      modeBuffer += textBeforeMatch;\n\n      if (lexeme == null) {\n        processBuffer();\n        return 0;\n      }\n\n      // we've found a 0 width match and we're stuck, so we need to advance\n      // this happens when we have badly behaved rules that have optional matchers to the degree that\n      // sometimes they can end up matching nothing at all\n      // Ref: https://github.com/highlightjs/highlight.js/issues/2140\n      if (lastMatch.type === \"begin\" && match.type === \"end\" && lastMatch.index === match.index && lexeme === \"\") {\n        // spit the \"skipped\" character that our regex choked on back into the output sequence\n        modeBuffer += codeToHighlight.slice(match.index, match.index + 1);\n        if (!SAFE_MODE) {\n          /** @type {AnnotatedError} */\n          const err = new Error(`0 width match regex (${languageName})`);\n          err.languageName = languageName;\n          err.badRule = lastMatch.rule;\n          throw err;\n        }\n        return 1;\n      }\n      lastMatch = match;\n\n      if (match.type === \"begin\") {\n        return doBeginMatch(match);\n      } else if (match.type === \"illegal\" && !ignoreIllegals) {\n        // illegal match, we do not continue processing\n        /** @type {AnnotatedError} */\n        const err = new Error('Illegal lexeme \"' + lexeme + '\" for mode \"' + (top.scope || '<unnamed>') + '\"');\n        err.mode = top;\n        throw err;\n      } else if (match.type === \"end\") {\n        const processed = doEndMatch(match);\n        if (processed !== NO_MATCH) {\n          return processed;\n        }\n      }\n\n      // edge case for when illegal matches $ (end of line) which is technically\n      // a 0 width match but not a begin/end match so it's not caught by the\n      // first handler (when ignoreIllegals is true)\n      if (match.type === \"illegal\" && lexeme === \"\") {\n        // advance so we aren't stuck in an infinite loop\n        return 1;\n      }\n\n      // infinite loops are BAD, this is a last ditch catch all. if we have a\n      // decent number of iterations yet our index (cursor position in our\n      // parsing) still 3x behind our index then something is very wrong\n      // so we bail\n      if (iterations > 100000 && iterations > match.index * 3) {\n        const err = new Error('potential infinite loop, way more iterations than matches');\n        throw err;\n      }\n\n      /*\n      Why might be find ourselves here?  An potential end match that was\n      triggered but could not be completed.  IE, `doEndMatch` returned NO_MATCH.\n      (this could be because a callback requests the match be ignored, etc)\n\n      This causes no real harm other than stopping a few times too many.\n      */\n\n      modeBuffer += lexeme;\n      return lexeme.length;\n    }\n\n    const language = getLanguage(languageName);\n    if (!language) {\n      error(LANGUAGE_NOT_FOUND.replace(\"{}\", languageName));\n      throw new Error('Unknown language: \"' + languageName + '\"');\n    }\n\n    const md = compileLanguage(language);\n    let result = '';\n    /** @type {CompiledMode} */\n    let top = continuation || md;\n    /** @type Record<string,CompiledMode> */\n    const continuations = {}; // keep continuations for sub-languages\n    const emitter = new options.__emitter(options);\n    processContinuations();\n    let modeBuffer = '';\n    let relevance = 0;\n    let index = 0;\n    let iterations = 0;\n    let resumeScanAtSamePosition = false;\n\n    try {\n      top.matcher.considerAll();\n\n      for (;;) {\n        iterations++;\n        if (resumeScanAtSamePosition) {\n          // only regexes not matched previously will now be\n          // considered for a potential match\n          resumeScanAtSamePosition = false;\n        } else {\n          top.matcher.considerAll();\n        }\n        top.matcher.lastIndex = index;\n\n        const match = top.matcher.exec(codeToHighlight);\n        // console.log(\"match\", match[0], match.rule && match.rule.begin)\n\n        if (!match) break;\n\n        const beforeMatch = codeToHighlight.substring(index, match.index);\n        const processedCount = processLexeme(beforeMatch, match);\n        index = match.index + processedCount;\n      }\n      processLexeme(codeToHighlight.substring(index));\n      emitter.closeAllNodes();\n      emitter.finalize();\n      result = emitter.toHTML();\n\n      return {\n        language: languageName,\n        value: result,\n        relevance: relevance,\n        illegal: false,\n        _emitter: emitter,\n        _top: top\n      };\n    } catch (err) {\n      if (err.message && err.message.includes('Illegal')) {\n        return {\n          language: languageName,\n          value: escape(codeToHighlight),\n          illegal: true,\n          relevance: 0,\n          _illegalBy: {\n            message: err.message,\n            index: index,\n            context: codeToHighlight.slice(index - 100, index + 100),\n            mode: err.mode,\n            resultSoFar: result\n          },\n          _emitter: emitter\n        };\n      } else if (SAFE_MODE) {\n        return {\n          language: languageName,\n          value: escape(codeToHighlight),\n          illegal: false,\n          relevance: 0,\n          errorRaised: err,\n          _emitter: emitter,\n          _top: top\n        };\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  /**\n   * returns a valid highlight result, without actually doing any actual work,\n   * auto highlight starts with this and it's possible for small snippets that\n   * auto-detection may not find a better match\n   * @param {string} code\n   * @returns {HighlightResult}\n   */\n  function justTextHighlightResult(code) {\n    const result = {\n      value: escape(code),\n      illegal: false,\n      relevance: 0,\n      _top: PLAINTEXT_LANGUAGE,\n      _emitter: new options.__emitter(options)\n    };\n    result._emitter.addText(code);\n    return result;\n  }\n\n  /**\n  Highlighting with language detection. Accepts a string with the code to\n  highlight. Returns an object with the following properties:\n\n  - language (detected language)\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n  - secondBest (object with the same structure for second-best heuristically\n    detected language, may be absent)\n\n    @param {string} code\n    @param {Array<string>} [languageSubset]\n    @returns {AutoHighlightResult}\n  */\n  function highlightAuto(code, languageSubset) {\n    languageSubset = languageSubset || options.languages || Object.keys(languages);\n    const plaintext = justTextHighlightResult(code);\n\n    const results = languageSubset.filter(getLanguage).filter(autoDetection).map(name =>\n      _highlight(name, code, false)\n    );\n    results.unshift(plaintext); // plaintext is always an option\n\n    const sorted = results.sort((a, b) => {\n      // sort base on relevance\n      if (a.relevance !== b.relevance) return b.relevance - a.relevance;\n\n      // always award the tie to the base language\n      // ie if C++ and Arduino are tied, it's more likely to be C++\n      if (a.language && b.language) {\n        if (getLanguage(a.language).supersetOf === b.language) {\n          return 1;\n        } else if (getLanguage(b.language).supersetOf === a.language) {\n          return -1;\n        }\n      }\n\n      // otherwise say they are equal, which has the effect of sorting on\n      // relevance while preserving the original ordering - which is how ties\n      // have historically been settled, ie the language that comes first always\n      // wins in the case of a tie\n      return 0;\n    });\n\n    const [best, secondBest] = sorted;\n\n    /** @type {AutoHighlightResult} */\n    const result = best;\n    result.secondBest = secondBest;\n\n    return result;\n  }\n\n  /**\n   * Builds new class name for block given the language name\n   *\n   * @param {HTMLElement} element\n   * @param {string} [currentLang]\n   * @param {string} [resultLang]\n   */\n  function updateClassName(element, currentLang, resultLang) {\n    const language = (currentLang && aliases[currentLang]) || resultLang;\n\n    element.classList.add(\"hljs\");\n    element.classList.add(`language-${language}`);\n  }\n\n  /**\n   * Applies highlighting to a DOM node containing code.\n   *\n   * @param {HighlightedHTMLElement} element - the HTML element to highlight\n  */\n  function highlightElement(element) {\n    /** @type HTMLElement */\n    let node = null;\n    const language = blockLanguage(element);\n\n    if (shouldNotHighlight(language)) return;\n\n    fire(\"before:highlightElement\",\n      { el: element, language: language });\n\n    // we should be all text, no child nodes (unescaped HTML) - this is possibly\n    // an HTML injection attack - it's likely too late if this is already in\n    // production (the code has likely already done its damage by the time\n    // we're seeing it)... but we yell loudly about this so that hopefully it's\n    // more likely to be caught in development before making it to production\n    if (element.children.length > 0) {\n      if (!options.ignoreUnescapedHTML) {\n        console.warn(\"One of your code blocks includes unescaped HTML. This is a potentially serious security risk.\");\n        console.warn(\"https://github.com/highlightjs/highlight.js/wiki/security\");\n        console.warn(\"The element with unescaped HTML:\");\n        console.warn(element);\n      }\n      if (options.throwUnescapedHTML) {\n        const err = new HTMLInjectionError(\n          \"One of your code blocks includes unescaped HTML.\",\n          element.innerHTML\n        );\n        throw err;\n      }\n    }\n\n    node = element;\n    const text = node.textContent;\n    const result = language ? highlight(text, { language, ignoreIllegals: true }) : highlightAuto(text);\n\n    element.innerHTML = result.value;\n    updateClassName(element, language, result.language);\n    element.result = {\n      language: result.language,\n      // TODO: remove with version 11.0\n      re: result.relevance,\n      relevance: result.relevance\n    };\n    if (result.secondBest) {\n      element.secondBest = {\n        language: result.secondBest.language,\n        relevance: result.secondBest.relevance\n      };\n    }\n\n    fire(\"after:highlightElement\", { el: element, result, text });\n  }\n\n  /**\n   * Updates highlight.js global options with the passed options\n   *\n   * @param {Partial<HLJSOptions>} userOptions\n   */\n  function configure(userOptions) {\n    options = inherit(options, userOptions);\n  }\n\n  // TODO: remove v12, deprecated\n  const initHighlighting = () => {\n    highlightAll();\n    deprecated(\"10.6.0\", \"initHighlighting() deprecated.  Use highlightAll() now.\");\n  };\n\n  // TODO: remove v12, deprecated\n  function initHighlightingOnLoad() {\n    highlightAll();\n    deprecated(\"10.6.0\", \"initHighlightingOnLoad() deprecated.  Use highlightAll() now.\");\n  }\n\n  let wantsHighlight = false;\n\n  /**\n   * auto-highlights all pre>code elements on the page\n   */\n  function highlightAll() {\n    // if we are called too early in the loading process\n    if (document.readyState === \"loading\") {\n      wantsHighlight = true;\n      return;\n    }\n\n    const blocks = document.querySelectorAll(options.cssSelector);\n    blocks.forEach(highlightElement);\n  }\n\n  function boot() {\n    // if a highlight was requested before DOM was loaded, do now\n    if (wantsHighlight) highlightAll();\n  }\n\n  // make sure we are in the browser environment\n  if (typeof window !== 'undefined' && window.addEventListener) {\n    window.addEventListener('DOMContentLoaded', boot, false);\n  }\n\n  /**\n   * Register a language grammar module\n   *\n   * @param {string} languageName\n   * @param {LanguageFn} languageDefinition\n   */\n  function registerLanguage(languageName, languageDefinition) {\n    let lang = null;\n    try {\n      lang = languageDefinition(hljs);\n    } catch (error$1) {\n      error(\"Language definition for '{}' could not be registered.\".replace(\"{}\", languageName));\n      // hard or soft error\n      if (!SAFE_MODE) { throw error$1; } else { error(error$1); }\n      // languages that have serious errors are replaced with essentially a\n      // \"plaintext\" stand-in so that the code blocks will still get normal\n      // css classes applied to them - and one bad language won't break the\n      // entire highlighter\n      lang = PLAINTEXT_LANGUAGE;\n    }\n    // give it a temporary name if it doesn't have one in the meta-data\n    if (!lang.name) lang.name = languageName;\n    languages[languageName] = lang;\n    lang.rawDefinition = languageDefinition.bind(null, hljs);\n\n    if (lang.aliases) {\n      registerAliases(lang.aliases, { languageName });\n    }\n  }\n\n  /**\n   * Remove a language grammar module\n   *\n   * @param {string} languageName\n   */\n  function unregisterLanguage(languageName) {\n    delete languages[languageName];\n    for (const alias of Object.keys(aliases)) {\n      if (aliases[alias] === languageName) {\n        delete aliases[alias];\n      }\n    }\n  }\n\n  /**\n   * @returns {string[]} List of language internal names\n   */\n  function listLanguages() {\n    return Object.keys(languages);\n  }\n\n  /**\n   * @param {string} name - name of the language to retrieve\n   * @returns {Language | undefined}\n   */\n  function getLanguage(name) {\n    name = (name || '').toLowerCase();\n    return languages[name] || languages[aliases[name]];\n  }\n\n  /**\n   *\n   * @param {string|string[]} aliasList - single alias or list of aliases\n   * @param {{languageName: string}} opts\n   */\n  function registerAliases(aliasList, { languageName }) {\n    if (typeof aliasList === 'string') {\n      aliasList = [aliasList];\n    }\n    aliasList.forEach(alias => { aliases[alias.toLowerCase()] = languageName; });\n  }\n\n  /**\n   * Determines if a given language has auto-detection enabled\n   * @param {string} name - name of the language\n   */\n  function autoDetection(name) {\n    const lang = getLanguage(name);\n    return lang && !lang.disableAutodetect;\n  }\n\n  /**\n   * Upgrades the old highlightBlock plugins to the new\n   * highlightElement API\n   * @param {HLJSPlugin} plugin\n   */\n  function upgradePluginAPI(plugin) {\n    // TODO: remove with v12\n    if (plugin[\"before:highlightBlock\"] && !plugin[\"before:highlightElement\"]) {\n      plugin[\"before:highlightElement\"] = (data) => {\n        plugin[\"before:highlightBlock\"](\n          Object.assign({ block: data.el }, data)\n        );\n      };\n    }\n    if (plugin[\"after:highlightBlock\"] && !plugin[\"after:highlightElement\"]) {\n      plugin[\"after:highlightElement\"] = (data) => {\n        plugin[\"after:highlightBlock\"](\n          Object.assign({ block: data.el }, data)\n        );\n      };\n    }\n  }\n\n  /**\n   * @param {HLJSPlugin} plugin\n   */\n  function addPlugin(plugin) {\n    upgradePluginAPI(plugin);\n    plugins.push(plugin);\n  }\n\n  /**\n   *\n   * @param {PluginEvent} event\n   * @param {any} args\n   */\n  function fire(event, args) {\n    const cb = event;\n    plugins.forEach(function(plugin) {\n      if (plugin[cb]) {\n        plugin[cb](args);\n      }\n    });\n  }\n\n  /**\n   * DEPRECATED\n   * @param {HighlightedHTMLElement} el\n   */\n  function deprecateHighlightBlock(el) {\n    deprecated(\"10.7.0\", \"highlightBlock will be removed entirely in v12.0\");\n    deprecated(\"10.7.0\", \"Please use highlightElement now.\");\n\n    return highlightElement(el);\n  }\n\n  /* Interface definition */\n  Object.assign(hljs, {\n    highlight,\n    highlightAuto,\n    highlightAll,\n    highlightElement,\n    // TODO: Remove with v12 API\n    highlightBlock: deprecateHighlightBlock,\n    configure,\n    initHighlighting,\n    initHighlightingOnLoad,\n    registerLanguage,\n    unregisterLanguage,\n    listLanguages,\n    getLanguage,\n    registerAliases,\n    autoDetection,\n    inherit,\n    addPlugin\n  });\n\n  hljs.debugMode = function() { SAFE_MODE = false; };\n  hljs.safeMode = function() { SAFE_MODE = true; };\n  hljs.versionString = version;\n\n  hljs.regex = {\n    concat: concat,\n    lookahead: lookahead,\n    either: either,\n    optional: optional,\n    anyNumberOfTimes: anyNumberOfTimes\n  };\n\n  for (const key in MODES) {\n    // @ts-ignore\n    if (typeof MODES[key] === \"object\") {\n      // @ts-ignore\n      deepFreezeEs6.exports(MODES[key]);\n    }\n  }\n\n  // merge all the modes/regexes into our main object\n  Object.assign(hljs, MODES);\n\n  return hljs;\n};\n\n// export an \"instance\" of the highlighter\nvar highlight = HLJS({});\n\nmodule.exports = highlight;\nhighlight.HighlightJS = highlight;\nhighlight.default = highlight;\n", "//\n// format - printf-like string formatting for JavaScript\n// github.com/samsonjs/format\n// @_sjs\n//\n// Copyright 2010 - 2013 Sami Samhuri <sami@samhuri.net>\n//\n// MIT License\n// http://sjs.mit-license.org\n//\n\n;(function() {\n\n  //// Export the API\n  var namespace;\n\n  // CommonJS / Node module\n  if (typeof module !== 'undefined') {\n    namespace = module.exports = format;\n  }\n\n  // Browsers and other environments\n  else {\n    // Get the global object. Works in ES3, ES5, and ES5 strict mode.\n    namespace = (function(){ return this || (1,eval)('this') }());\n  }\n\n  namespace.format = format;\n  namespace.vsprintf = vsprintf;\n\n  if (typeof console !== 'undefined' && typeof console.log === 'function') {\n    namespace.printf = printf;\n  }\n\n  function printf(/* ... */) {\n    console.log(format.apply(null, arguments));\n  }\n\n  function vsprintf(fmt, replacements) {\n    return format.apply(null, [fmt].concat(replacements));\n  }\n\n  function format(fmt) {\n    var argIndex = 1 // skip initial format argument\n      , args = [].slice.call(arguments)\n      , i = 0\n      , n = fmt.length\n      , result = ''\n      , c\n      , escaped = false\n      , arg\n      , tmp\n      , leadingZero = false\n      , precision\n      , nextArg = function() { return args[argIndex++]; }\n      , slurpNumber = function() {\n          var digits = '';\n          while (/\\d/.test(fmt[i])) {\n            digits += fmt[i++];\n            c = fmt[i];\n          }\n          return digits.length > 0 ? parseInt(digits) : null;\n        }\n      ;\n    for (; i < n; ++i) {\n      c = fmt[i];\n      if (escaped) {\n        escaped = false;\n        if (c == '.') {\n          leadingZero = false;\n          c = fmt[++i];\n        }\n        else if (c == '0' && fmt[i + 1] == '.') {\n          leadingZero = true;\n          i += 2;\n          c = fmt[i];\n        }\n        else {\n          leadingZero = true;\n        }\n        precision = slurpNumber();\n        switch (c) {\n        case 'b': // number in binary\n          result += parseInt(nextArg(), 10).toString(2);\n          break;\n        case 'c': // character\n          arg = nextArg();\n          if (typeof arg === 'string' || arg instanceof String)\n            result += arg;\n          else\n            result += String.fromCharCode(parseInt(arg, 10));\n          break;\n        case 'd': // number in decimal\n          result += parseInt(nextArg(), 10);\n          break;\n        case 'f': // floating point number\n          tmp = String(parseFloat(nextArg()).toFixed(precision || 6));\n          result += leadingZero ? tmp : tmp.replace(/^0/, '');\n          break;\n        case 'j': // JSON\n          result += JSON.stringify(nextArg());\n          break;\n        case 'o': // number in octal\n          result += '0' + parseInt(nextArg(), 10).toString(8);\n          break;\n        case 's': // string\n          result += nextArg();\n          break;\n        case 'x': // lowercase hexadecimal\n          result += '0x' + parseInt(nextArg(), 10).toString(16);\n          break;\n        case 'X': // uppercase hexadecimal\n          result += '0x' + parseInt(nextArg(), 10).toString(16).toUpperCase();\n          break;\n        default:\n          result += c;\n          break;\n        }\n      } else if (c === '%') {\n        escaped = true;\n      } else {\n        result += c;\n      }\n    }\n    return result;\n  }\n\n}());\n", "window.Wiki = class Wiki {\n  activate_sidebars() {\n    $(\".sidebar-item\").each(function (index) {\n      const active_class = \"active\";\n      let page_href = decodeURIComponent(window.location.pathname.slice(1));\n      if (page_href.indexOf(\"#\") !== -1) {\n        page_href = page_href.slice(0, page_href.indexOf(\"#\"));\n      }\n      if ($(this).data(\"route\") == page_href) {\n        $(this).addClass(active_class);\n        $(this).find(\"a\").addClass(active_class);\n      }\n    });\n    // scroll the active sidebar item into view\n    let active_sidebar_item = $(\".doc-sidebar .sidebar-item.active\");\n    if (active_sidebar_item.length > 0) {\n      setTimeout(function () {\n        active_sidebar_item.get(0).scrollIntoView({\n          behavior: \"smooth\",\n          block: \"center\",\n        });\n      }, 50);\n    }\n  }\n\n  toggle_sidebar(event) {\n    $(event.currentTarget).parent().children(\"ul\").toggleClass(\"hidden\");\n    $(event.currentTarget).find(\".drop-icon\").toggleClass(\"rotate\");\n    event.stopPropagation();\n  }\n\n  set_active_sidebar() {\n    $(\".doc-sidebar,.web-sidebar\").on(\n      \"click\",\n      \".collapsible\",\n      this.toggle_sidebar,\n    );\n\n    $(\".sidebar-item.active\")\n      .parents(\" .web-sidebar .sidebar-group>ul\")\n      .removeClass(\"hidden\");\n  }\n\n  scrolltotop() {\n    $(\"html,body\").animate({ scrollTop: 0 }, 0);\n  }\n\n  set_last_updated_date() {\n   \n    const lastUpdatedDate = frappe.datetime.prettyDate(\n      $(\".user-contributions\").data(\"date\"),\n    );\n    $(\".user-contributions\").append(`last updated ${lastUpdatedDate}`);\n  }\n\n  set_darkmode_button() {\n    function switchBanner() {\n      const altSrc = $(\".navbar-brand img\").data(\"alt-src\");\n      const src = $(\".navbar-brand img\").attr(\"src\");\n      if (\n        ![\"{{ light_mode_logo }}\", \"{{ dark_mode_logo }}\", \"None\"].includes(\n          altSrc,\n        )\n      ) {\n        $(\".navbar-brand img\").attr(\"src\", altSrc);\n        $(\".navbar-brand img\").data(\"alt-src\", src);\n      }\n    }\n    const darkMode = localStorage.getItem(\"darkMode\");\n\n    if (\n      (!(\"darkMode\" in localStorage) &&\n        !window.matchMedia?.(\"(prefers-color-scheme: dark)\")?.matches) ||\n      darkMode === \"false\"\n    ) {\n      $(\".sun-moon-container .feather-sun\").removeClass(\"hide\");\n    } else {\n      $(\".sun-moon-container .feather-moon\").removeClass(\"hide\");\n      switchBanner();\n    }\n\n    $(\".sun-moon-container\").on(\"click\", function () {\n      $(\".sun-moon-container .feather-sun\").toggleClass(\"hide\");\n      $(\".sun-moon-container .feather-moon\").toggleClass(\"hide\");\n\n      switchBanner();\n\n      $(\"body\").toggleClass(\"dark\");\n\n      localStorage.setItem(\"darkMode\", $(\"body\").hasClass(\"dark\"));\n    });\n  }\n\n  add_link_to_headings() {\n    $(\".wiki-content\")\n      .not(\".revision-content\")\n      .find(\"h2, h3, h4, h5, h6\")\n      .each((i, $heading) => {\n        const text = $heading.textContent.trim();\n        $heading.id = text.replace(/[^a-z0-9]+/gi, \"-\").toLowerCase();\n        let id = $heading.id;\n        let $a = $('<a class=\"no-underline\">')\n          .prop(\"href\", \"#\" + id)\n          .attr(\"aria-hidden\", \"true\").html(`\n\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" style=\"width: 0.8em; height: 0.8em;\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"\n\t\t\t\t\t\tstroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-link\">\n\t\t\t\t\t\t<path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path>\n\t\t\t\t\t\t<path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path>\n\t\t\t\t\t</svg>\n\t\t\t\t`);\n        $($heading).append($a);\n      });\n  }\n\n  add_click_to_copy() {\n    $(\"pre code\")\n      .parent(\"pre\")\n      .prepend(\n        `<button title=\"Copy Code\" class=\"btn copy-btn\" data-toggle=\"tooltip\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-clipboard\"><path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"></path><rect x=\"8\" y=\"2\" width=\"8\" height=\"4\" rx=\"1\" ry=\"1\"></rect></svg></button>`,\n      );\n\n    $(\".copy-btn\").on(\"click\", function () {\n      frappe.utils.copy_to_clipboard($(this).siblings(\"code\").text());\n    });\n  }\n};\n", "import HtmlDiff from \"htmldiff-js\";\n\nfunction setSortable() {\n  \n  new Sortable(this, {\n    group: {\n      name: \"qux\",\n      put: [\"qux\"],\n      pull: [\"qux\"],\n    },\n    swapThreshold: 0.7,\n    filter: \".disabled\",\n    onEnd: function (e) {\n      frappe.utils.debounce(() => {\n        frappe.call({\n          method: \"wiki.wiki.doctype.wiki_space.wiki_space.update_sidebar\",\n          args: {\n            sidebar_items: getSidebarItems(),\n          },\n        });\n      }, 1500)();\n\n      // whitespace cleanup to display warning message for empty groups\n      if ($(e.from).children(\"li\").length === 0) $(e.from).empty();\n    },\n    onMove: function (e) {\n      if (\n        // don't allow groups to nest inside groups\n        ($(e.dragged).hasClass(\"sidebar-group\") &&\n          !$(e.to).is($(\".doc-sidebar .sidebar-items > .list-unstyled\"))) ||\n        // only allow items to nest inside groups and not root\n        ($(e.dragged).hasClass(\"sidebar-item\") &&\n          $(e.to).is($(\".doc-sidebar .sidebar-items > .list-unstyled\")))\n      )\n        return false;\n    },\n  });\n}\n\nfunction set_search_params(key = \"\", value = \"\") {\n  const url = new URL(window.location.href.split(\"?\")[0]);\n  if (key && value) url.searchParams.set(key, value);\n  window.history.pushState({}, \"\", url);\n}\n\nfunction toggleEditor() {\n  $(\".wiki-content\").toggleClass(\"hide\");\n  $(\".wiki-page-meta\").toggleClass(\"hide\");\n  $(\".wiki-footer\").toggleClass(\"hide\");\n  $(\".wiki-edit-control-btn\").toggleClass(\"hide\");\n  $(\".page-toc\").toggleClass(\"hide\");\n  $(\".remove-sidebar-item\").toggleClass(\"hide\");\n  $(\".sidebar-item, .sidebar-group\").toggleClass(\"disabled\");\n  $(\".drop-icon\").toggleClass(\"hide\");\n  $(\".add-sidebar-page\").toggleClass(\"hide\");\n  $(\".add-sidebar-group, .sidebar-view-mode-btn\").toggleClass(\"hide\");\n\n  // avoid hiding editor when params ?editWiki or ?newWiki\n  if ($(\".from-markdown\").is(\":visible\")) {\n    $(\".wiki-editor\").toggleClass(\"hide\");\n    $(\".wiki-options, .sidebar-edit-mode-btn\").toggleClass(\"hide\");\n  } else {\n    const urlParams = new URLSearchParams(window.location.search);\n    if (urlParams.get(\"editWiki\") || urlParams.get(\"newWiki\"))\n      $(\".wiki-options, .sidebar-edit-mode-btn\").toggleClass(\"hide\");\n\n    $(\".from-markdown\").toggleClass(\"hide\");\n  }\n\n  // sidebar item pointer switching\n  if ($(\".sidebar-edit-mode-btn\").hasClass(\"hide\")) {\n    $(\".sidebar-group div, .sidebar-item, .sidebar-item a\")\n      .not(\".remove-sidebar-item\")\n      .css(\"cursor\", \"grab\");\n    $(\".sidebar-item a\").removeAttr(\"href\");\n  } else {\n    $(\".sidebar-group div, .sidebar-item a\").css(\"cursor\", \"pointer\");\n    $(\".sidebar-item\").css(\"cursor\", \"default\");\n    $(\".sidebar-item\").each(function () {\n      $(this)\n        .find(\"a\")\n        .attr(\"href\", `/${$(this).data(\"route\")}`);\n    });\n  }\n\n  $(\".wiki-title\").toggleClass(\"hide\");\n}\n\nwindow.RenderWiki = class RenderWiki extends Wiki {\n  constructor(opts) {\n    super();\n    $(\"document\").ready(() => {\n      this.set_darkmode_button();\n      if (\n        window.location.pathname != \"/revisions\" &&\n        window.location.pathname != \"/compare\"\n      ) {\n        this.add_link_to_headings();\n        this.activate_sidebars();\n        this.set_active_sidebar();\n        this.set_nav_buttons();\n        this.set_toc();\n        this.set_last_updated_date();\n        this.scrolltotop();\n        this.set_add_item();\n        this.add_trash_icon();\n        this.set_empty_ul();\n        this.set_edit_mode();\n        this.set_url_state();\n        this.set_revisions();\n        this.add_click_to_copy();\n      }\n    });\n  }\n\n  set_url_state() {\n    const urlParams = new URLSearchParams(window.location.search);\n\n    if (urlParams.get(\"editWiki\") && $(\".wiki-options\").length) {\n      toggleEditor();\n      $(\"html\").css({ overflow: \"hidden\" });\n    } else if (urlParams.get(\"newWiki\")) {\n      toggleEditor();\n      $(\"html\").css({ overflow: \"hidden\" });\n\n      if (\n        !$(\n          `.doc-sidebar .sidebar-group[data-title=\"${urlParams.get(\n            \"newWiki\",\n          )}\"] .add-sidebar-page`,\n        ).length\n      ) {\n        this.add_wiki_sidebar(urlParams.get(\"newWiki\"));\n\n        $(\n          $(\n            `.sidebar-items > .list-unstyled .h6:contains(${urlParams.get(\n              \"newWiki\",\n            )}) + .add-sidebar-page`,\n          )[0],\n        ).trigger(\"click\");\n      } else\n        $(\n          $(\n            `.sidebar-items > .list-unstyled .h6:contains(${urlParams.get(\n              \"newWiki\",\n            )}) + .add-sidebar-page`,\n          )[1],\n        ).trigger(\"click\");\n    }\n    $(\".wiki-footer, .wiki-page-meta\").toggleClass(\"hide\");\n  }\n\n  set_toc() {\n    $(document).ready(function () {\n      $(window).scroll(function () {\n        if (currentAnchor().not(\".no-underline\").hasClass(\"active\")) return;\n        $(\".page-toc a\").removeClass(\"active\");\n        currentAnchor().addClass(\"active\");\n      });\n\n      const navbarHeight = $(\".navbar\").height();\n      $(\".page-toc a\").click(function (e) {\n        e.preventDefault();\n        var target = $(this).attr(\"href\");\n        var offset = $(target).offset().top - navbarHeight - 50;\n        $(\"html, body\").animate(\n          {\n            scrollTop: offset,\n          },\n          500,\n        );\n      });\n    });\n\n    function tocItem(anchor) {\n      return $('[href=\"' + anchor + '\"]');\n    }\n\n    function heading(anchor) {\n      return $(\"[id=\" + anchor.substr(1) + \"]\");\n    }\n\n    var _anchors = null;\n    function anchors() {\n      if (!_anchors) {\n        _anchors = $(\".page-toc a\").map(function () {\n          return $(this).attr(\"href\");\n        });\n      }\n      return _anchors;\n    }\n\n    function currentAnchor() {\n      var winY = window.pageYOffset;\n      var currAnchor = null;\n      anchors().each(function () {\n        var y = heading(this).position().top;\n        if (y < winY + window.innerHeight * 0.23) {\n          currAnchor = this;\n          return;\n        }\n      });\n      return tocItem(currAnchor);\n    }\n  }\n\n  set_nav_buttons() {\n    var current_index = -1;\n    const sidebar_items = $(\".sidebar-column\").find(\"a\").not(\".navbar-brand\");\n\n    sidebar_items.each(function (index) {\n      if ($(this).attr(\"class\")) {\n        let dish = $(this).attr(\"class\").split(/\\s+/)[0];\n        if (dish === \"active\") {\n          current_index = index;\n        }\n      }\n    });\n\n    if (current_index > 0) {\n      $(\".btn.left\")[0].href = sidebar_items[current_index - 1].href;\n      $($(\".btn.left p\")[1]).text(sidebar_items[current_index - 1].innerText);\n    } else {\n      $(\".btn.left\").hide();\n    }\n\n    if (current_index >= 0 && current_index < sidebar_items.length - 1) {\n      $(\".btn.right\")[0].href = sidebar_items[current_index + 1].href;\n      $($(\".btn.right p\")[1]).text(sidebar_items[current_index + 1].innerText);\n    } else {\n      $(\".btn.right\").hide();\n    }\n  }\n\n  set_edit_mode() {\n    $(\".sidebar-item, .sidebar-group\").addClass(\"disabled\");\n\n    $(\".web-sidebar ul\").each(setSortable);\n\n    frappe.call({\n      method: \"wiki.wiki.doctype.wiki_page.wiki_page.has_edit_permission\",\n      args: {},\n      callback: (r) => {\n        const urlParams = new URLSearchParams(window.location.search);\n        if (\n          r.message &&\n          !(urlParams.get(\"editWiki\") || urlParams.get(\"newWiki\"))\n        )\n          $(\".sidebar-edit-mode-btn, .edit-wiki-btn\").removeClass(\"hide\");\n      },\n    });\n\n    $(\".edit-wiki-btn, .sidebar-edit-mode-btn\").on(\"click\", function () {\n      if (frappe.session.user === \"Guest\")\n        window.location.assign(\n          `/login?redirect-to=${window.location.pathname}`,\n        );\n      else {\n        const urlParams = new URLSearchParams(window.location.search);\n\n        // switch to edit mode\n        \n        toggleEditor();\n        $(\"html\").css({ overflow: \"hidden\" });\n\n        if (!urlParams.get(\"editWiki\")) set_search_params(\"editWiki\", \"1\");\n      }\n    });\n\n    $(\".discard-edit-btn , .sidebar-view-mode-btn\").on(\"click\", () => {\n      // switch to view mode\n      toggleEditor();\n      $(\"html\").css({ overflow: \"auto\" });\n      $('.sidebar-item[data-name=\"new-wiki-page\"]').remove();\n      set_search_params();\n      this.activate_sidebars();\n    });\n\n    $(\".add-wiki-btn\").on(\"click\", () => {\n      const groupName = $(\".sidebar-item.active\").data(\"group-name\");\n      $(\".edit-wiki-btn\").trigger(\"click\");\n      $(\n        `.doc-sidebar .add-sidebar-page[data-group-name=\"${groupName}\"]`,\n      ).trigger(\"click\");\n    });\n\n    let active_items = \"\";\n    $(\".sidebar-items > .list-unstyled\").on(\n      \"click\",\n      \".add-sidebar-page\",\n      function (e) {\n        const urlParams = new URLSearchParams(window.location.search);\n        const groupName = $(this).parent().children(\"span:first-child\").text();\n        const newWikiPage = $(\".sidebar-item[data-name=new-wiki-page]\");\n        const newSidebarItem = $(`\n        <li class=\"sidebar-item active\" data-type=\"Wiki Page\" data-name=\"new-wiki-page\" data-group-name=\"${groupName}\">\n          <div>\n            <a href=\"#\" class=\"active\">New Wiki Page</a>\n          </div>\n        </li>\n      `);\n\n        if (newWikiPage.length) {\n          // a temp new item is already created\n          if (newWikiPage.data(\"group-name\") !== groupName) {\n            // when new item is created in a different group as earlier\n            newSidebarItem.appendTo(\n              $(this).parent().parent().children(\".list-unstyled\"),\n            );\n            if (urlParams.get(\"newWiki\") !== groupName)\n              set_search_params(\"newWiki\", groupName);\n          } else {\n            // when new item is removed (discarding it) by clicking on + again\n            active_items.each(function () {\n              $(this).toggleClass(\"active\");\n            });\n\n            toggleEditor();\n            set_search_params();\n          }\n          newWikiPage.remove();\n        } else {\n          // fresh new item\n          active_items = $(\n            \".sidebar-item.active, .sidebar-item.active .active\",\n          ).removeClass(\"active\");\n\n          newSidebarItem.appendTo(\n            $(this).parent().parent().children(\".list-unstyled\"),\n          );\n          if (!$(\".wiki-editor\").is(\":visible\")) toggleEditor();\n          if (urlParams.get(\"newWiki\") !== groupName)\n            set_search_params(\"newWiki\", groupName);\n        }\n\n        $(this).parent().parent().each(setSortable);\n        e.stopPropagation();\n      },\n    );\n  }\n\n  add_trash_icon() {\n    const trashIcon = `<div class=\"text-muted hide remove-sidebar-item small\">\n      <span class=\"trash-icon\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-trash\"><polyline points=\"3 6 5 6 21 6\"></polyline><path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path></svg>\n      </span>\n    </div>`;\n\n    $(\".sidebar-item > div\").each(function (index) {\n      $(trashIcon).insertAfter($(this));\n    });\n\n    $(\".sidebar-items > .list-unstyled\").on(\n      \"click\",\n      \".remove-sidebar-item\",\n      function (e) {\n        e.stopPropagation();\n\n        const sidebar_item = $($(this).parents(\"li\")[0]);\n        const route = sidebar_item.data(\"route\");\n        const title = sidebar_item.data(\"title\");\n\n        const dialog = frappe.msgprint({\n          title: __(\"Delete Wiki Page\"),\n          indicator: \"red\",\n          message: __(\n            `Are you sure you want to <b>delete</b> the Wiki Page <b>${title}</b>?`,\n          ),\n          primary_action: {\n            label: \"Yes\",\n            action() {\n              frappe.call({\n                method:\n                  \"wiki.wiki.doctype.wiki_page.wiki_page.delete_wiki_page\",\n                args: {\n                  wiki_page_route: route,\n                },\n                callback: (r) => {\n                  if (r.message) {\n                    sidebar_item.remove();\n\n                    frappe.show_alert({\n                      message: `Wiki Page <b>${title}</b> deleted`,\n                      indicator: \"green\",\n                    });\n                    dialog.hide();\n                  }\n                },\n              });\n            },\n          },\n        });\n      },\n    );\n  }\n\n  set_revisions() {\n    const initial_content = $(\".revision-content\").html().trim();\n    let revisions = [];\n    let currentRevisionIndex = 1;\n\n    // set initial revision\n    if (initial_content !== \"<h3>No Revisions</h3>\") {\n      $(\".revision-content\")[0].innerHTML = HtmlDiff.execute(\n        $(\".revision-content\").html(),\n        $(\".from-markdown .wiki-content\")\n          .html()\n          .replaceAll(/<br class=\"ProseMirror-trailingBreak\">/g, \"\"),\n      );\n      $(\".previous-revision\").removeClass(\"hide\");\n    } else {\n      $(\".revision-time\").hide();\n      $(\".revisions-modal .modal-header\").hide();\n    }\n\n    $(\".show-revisions\").on(\"click\", function () {\n      frappe.call({\n        method:\n          \"wiki.wiki.doctype.wiki_page_revision.wiki_page_revision.get_revisions\",\n        args: {\n          wiki_page_name: $('[name=\"wiki-page-name\"]').val(),\n        },\n        callback: (r) => {\n          revisions = r.message;\n        },\n      });\n    });\n\n    function addHljsClass() {\n      // to fix code blocks not having .hljs class\n      // which leaves without styles from hljs\n      $(\".revision-content code\").each(function () {\n        if ($(this).parent().is(\"pre\")) $(this).addClass(\"hljs\");\n      });\n    }\n\n    // set previous revision\n    $(\".previous-revision\").on(\"click\", function () {\n      const currentRevision = revisions[currentRevisionIndex];\n      let previousRevision = { content: \"\", creation: \"\", author: \"\" };\n\n      if (revisions.length > currentRevisionIndex + 1)\n        previousRevision = revisions[currentRevisionIndex + 1];\n\n      if (!previousRevision.content) $(this).addClass(\"hide\");\n      $(\".next-revision\").removeClass(\"hide\");\n      if (previousRevision.content)\n        $(\".revision-content\")[0].innerHTML = HtmlDiff.execute(\n          previousRevision.content,\n          currentRevision.content,\n        );\n      else $(\".revision-content\")[0].innerHTML = currentRevision.content;\n      $(\n        \".revision-time\",\n      )[0].innerHTML = `${currentRevision.author} edited ${currentRevision.revision_time}`;\n      currentRevisionIndex++;\n      addHljsClass();\n    });\n\n    // set next revision\n    $(\".next-revision\").on(\"click\", function () {\n      const currentRevision = revisions[currentRevisionIndex - 2];\n      let nextRevision = { content: \"\", creation: \"\", author: \"\" };\n\n      if (currentRevisionIndex > 0)\n        nextRevision = revisions[currentRevisionIndex - 1];\n\n      if (currentRevisionIndex <= 2) $(this).addClass(\"hide\");\n      $(\".previous-revision\").removeClass(\"hide\");\n      $(\".revision-content\")[0].innerHTML = HtmlDiff.execute(\n        nextRevision.content,\n        currentRevision.content,\n      );\n      $(\n        \".revision-time\",\n      )[0].innerHTML = `${currentRevision.author} edited ${currentRevision.revision_time}`;\n      currentRevisionIndex--;\n      addHljsClass();\n    });\n  }\n\n  set_add_item() {\n    var me = this;\n    $(\".add-sidebar-group\").on(\"click\", function () {\n      $(\"#addGroupModal\").modal();\n    });\n\n    $(\".add-group-btn\").on(\"click\", () => {\n      const title = $(\"#addGroupModal #title\").val();\n      if (title) {\n        $(\"#addGroupModal\").modal();\n        $(\"#addGroupModal #title\").val(\"\");\n        this.add_wiki_sidebar(title);\n      }\n    });\n  }\n\n  add_wiki_sidebar(title) {\n    let $new_page = this.get_wiki_sidebar_html(title);\n\n    $new_page.appendTo(\n      $(\".doc-sidebar .sidebar-items\")\n        .children(\".list-unstyled\")\n        .not(\".hidden\")\n        .first(),\n    );\n\n    $(\".web-sidebar ul\").each(setSortable);\n  }\n\n  get_wiki_sidebar_html(title) {\n    return $(`\n\t\t\t<li class=\"sidebar-group\" data-type=\"Wiki Sidebar\"\n\t\t\t\tdata-name=\"new-sidebar\" data-new=1 data-title=\"${title}\" draggable=\"false\">\n\t\t\t\t<div class=\"collapsible\">\n\t\t\t\t\t<span class=\"h6\">${title}</span>\n          <span class='add-sidebar-page'>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-plus\"><line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line></svg>\n          </span>\n          <span class='drop-icon hide'>\n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M8 10L12 14L16 10\" stroke=\"#4C5A67\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n              </svg>\n          </span>\n        </div>\n        <ul class=\"list-unstyled\" style=\"min-height:20px;\"> </ul>\n\t\t\t</li>\n\t\t\t`);\n  }\n\n  set_empty_ul() {\n    $(\".collapsible\").each(function () {\n      if ($(this).parent().find(\"ul\").length == 0) {\n        $(this)\n          .parent()\n          .append(\n            $(`<ul class=\"list-unstyled\" style=\"min-height:20px;\"> </ul`),\n          );\n      }\n    });\n  }\n\n  setup_search(search_scope = \"\") {\n    const $dropdown_menu = $(\"#searchModal .search-dropdown-menu\");\n    const searchInput = $(\"#searchInput\");\n    let dropdownItems;\n    let offsetIndex = 0;\n\n    function trimContent(content) {\n      let trimmedLength = 100;\n      const indexOf = content.indexOf('<b class=\"match\">');\n      if (indexOf === -1) {\n        return content.slice(0, 100);\n      }\n\n      let start = indexOf - trimmedLength / 2;\n      if (start < 0) {\n        start = 0;\n      }\n      let end = indexOf + trimmedLength / 2;\n      if (end > content.length) {\n        end = content.length;\n      }\n\n      // fixes html tags when they are sliced\n      return new DOMParser().parseFromString(\n        content.slice(start, end),\n        \"text/html\",\n      ).body.innerHTML;\n    }\n\n    $(document).on(\"keypress\", (e) => {\n      if (\n        $(e.target).is(\"textarea, input, select\") ||\n        $(e.target).hasClass(\"ProseMirror\")\n      )\n        return;\n\n      if (e.key === \"/\") {\n        e.preventDefault();\n        $(\"#searchModal\").modal();\n      }\n    });\n\n    $(\"#searchModal\").on(\"shown.bs.modal\", function () {\n      searchInput.trigger(\"focus\");\n    });\n\n    searchInput.on(\n      \"input\",\n      frappe.utils.debounce(() => {\n        if (!searchInput.val()) {\n          clear_dropdown();\n          return;\n        }\n\n        frappe\n          .call({\n            method: \"wiki.wiki.doctype.wiki_page.search.search\",\n            args: {\n              query: searchInput.val(),\n              path: window.location.pathname,\n              space: search_scope,\n            },\n          })\n          .then((res) => {\n            let results = res.message.docs || [];\n            let dropdown_html;\n            if (results.length === 0) {\n              dropdown_html = `<div style=\"margin: 1.5rem 9rem;\">No results found</div>`;\n            } else {\n              dropdown_html = results\n                .map((r) => {\n                  return `<a class=\"dropdown-item\" href=\"/${r.route}\">\n              <h6>${r.title}</h6>\n              <div>${\n                res.message.search_engine === \"frappe_web_search\"\n                  ? r.content\n                  : trimContent(r.content)\n              }</div>\n              </a>\n              <div class='dropdown-border'></div>`;\n                })\n                .join(\"\");\n            }\n            $dropdown_menu.html(dropdown_html);\n            $dropdown_menu.addClass(\"show\");\n            dropdownItems = $dropdown_menu.find(\".dropdown-item\");\n          });\n      }, 500),\n    );\n\n    $(\"#dropdownMenuSearch, .mobile-search-icon\").on(\"click\", () => {\n      $(\"#searchModal\").modal();\n    });\n\n    searchInput.on(\"keydown\", function (e) {\n      if (e.key === \"ArrowDown\") navigate(0);\n    });\n\n    $dropdown_menu.on(\"keydown\", function (e) {\n      if (e.key === \"ArrowUp\") navigate(-1);\n      else if (e.key === \"ArrowDown\") navigate(1);\n      else if (e.key === \"Escape\") setTimeout(() => clear_dropdown(), 300);\n    });\n\n    // Clear dropdown when clicked\n    $(window).on(\"click\", function (e) {\n      if (\n        !$(e.target).is($(\"#searchModal\")) &&\n        !$(\"#searchModal\").has(e.target).length\n      ) {\n        searchInput.val(\"\");\n        clear_dropdown();\n      }\n    });\n\n    // Navigate the list\n    var navigate = function (diff) {\n      offsetIndex += diff;\n\n      if (offsetIndex >= dropdownItems.length) offsetIndex = 0;\n      if (offsetIndex < 0) offsetIndex = dropdownItems.length - 1;\n      dropdownItems.eq(offsetIndex).trigger(\"focus\");\n    };\n\n    function clear_dropdown() {\n      offsetIndex = 0;\n      $dropdown_menu.html(\"\");\n      $dropdown_menu.removeClass(\"show\");\n      dropdownItems = undefined;\n    }\n\n    // Remove focus state on hover\n    $dropdown_menu.on(\"mouseover\", function () {\n      dropdownItems.blur();\n    });\n  }\n};\n", "/*\nLanguage: C++\nCategory: common, system\nWebsite: https://isocpp.org\n*/\n\n/** @type LanguageFn */\nfunction cPlusPlus(hljs) {\n  const regex = hljs.regex;\n  // added for historic reasons because `hljs.C_LINE_COMMENT_MODE` does\n  // not include such support nor can we be sure all the grammars depending\n  // on it would desire this behavior\n  const C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$', { contains: [ { begin: /\\\\\\n/ } ] });\n  const DECLTYPE_AUTO_RE = 'decltype\\\\(auto\\\\)';\n  const NAMESPACE_RE = '[a-zA-Z_]\\\\w*::';\n  const TEMPLATE_ARGUMENT_RE = '<[^<>]+>';\n  const FUNCTION_TYPE_RE = '(?!struct)('\n    + DECLTYPE_AUTO_RE + '|'\n    + regex.optional(NAMESPACE_RE)\n    + '[a-zA-Z_]\\\\w*' + regex.optional(TEMPLATE_ARGUMENT_RE)\n  + ')';\n\n  const CPP_PRIMITIVE_TYPES = {\n    className: 'type',\n    begin: '\\\\b[a-z\\\\d_]*_t\\\\b'\n  };\n\n  // https://en.cppreference.com/w/cpp/language/escape\n  // \\\\ \\x \\xFF \\u2837 \\u00323747 \\374\n  const CHARACTER_ESCAPES = '\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)';\n  const STRINGS = {\n    className: 'string',\n    variants: [\n      {\n        begin: '(u8?|U|L)?\"',\n        end: '\"',\n        illegal: '\\\\n',\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      {\n        begin: '(u8?|U|L)?\\'(' + CHARACTER_ESCAPES + '|.)',\n        end: '\\'',\n        illegal: '.'\n      },\n      hljs.END_SAME_AS_BEGIN({\n        begin: /(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,\n        end: /\\)([^()\\\\ ]{0,16})\"/\n      })\n    ]\n  };\n\n  const NUMBERS = {\n    className: 'number',\n    variants: [\n      { begin: '\\\\b(0b[01\\']+)' },\n      { begin: '(-?)\\\\b([\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)' },\n      { begin: '(-?)(\\\\b0[xX][a-fA-F0-9\\']+|(\\\\b[\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)([eE][-+]?[\\\\d\\']+)?)' }\n    ],\n    relevance: 0\n  };\n\n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: /#\\s*[a-z]+\\b/,\n    end: /$/,\n    keywords: { keyword:\n        'if else elif endif define undef warning error line '\n        + 'pragma _Pragma ifdef ifndef include' },\n    contains: [\n      {\n        begin: /\\\\\\n/,\n        relevance: 0\n      },\n      hljs.inherit(STRINGS, { className: 'string' }),\n      {\n        className: 'string',\n        begin: /<.*?>/\n      },\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n\n  const TITLE_MODE = {\n    className: 'title',\n    begin: regex.optional(NAMESPACE_RE) + hljs.IDENT_RE,\n    relevance: 0\n  };\n\n  const FUNCTION_TITLE = regex.optional(NAMESPACE_RE) + hljs.IDENT_RE + '\\\\s*\\\\(';\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const RESERVED_KEYWORDS = [\n    'alignas',\n    'alignof',\n    'and',\n    'and_eq',\n    'asm',\n    'atomic_cancel',\n    'atomic_commit',\n    'atomic_noexcept',\n    'auto',\n    'bitand',\n    'bitor',\n    'break',\n    'case',\n    'catch',\n    'class',\n    'co_await',\n    'co_return',\n    'co_yield',\n    'compl',\n    'concept',\n    'const_cast|10',\n    'consteval',\n    'constexpr',\n    'constinit',\n    'continue',\n    'decltype',\n    'default',\n    'delete',\n    'do',\n    'dynamic_cast|10',\n    'else',\n    'enum',\n    'explicit',\n    'export',\n    'extern',\n    'false',\n    'final',\n    'for',\n    'friend',\n    'goto',\n    'if',\n    'import',\n    'inline',\n    'module',\n    'mutable',\n    'namespace',\n    'new',\n    'noexcept',\n    'not',\n    'not_eq',\n    'nullptr',\n    'operator',\n    'or',\n    'or_eq',\n    'override',\n    'private',\n    'protected',\n    'public',\n    'reflexpr',\n    'register',\n    'reinterpret_cast|10',\n    'requires',\n    'return',\n    'sizeof',\n    'static_assert',\n    'static_cast|10',\n    'struct',\n    'switch',\n    'synchronized',\n    'template',\n    'this',\n    'thread_local',\n    'throw',\n    'transaction_safe',\n    'transaction_safe_dynamic',\n    'true',\n    'try',\n    'typedef',\n    'typeid',\n    'typename',\n    'union',\n    'using',\n    'virtual',\n    'volatile',\n    'while',\n    'xor',\n    'xor_eq'\n  ];\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const RESERVED_TYPES = [\n    'bool',\n    'char',\n    'char16_t',\n    'char32_t',\n    'char8_t',\n    'double',\n    'float',\n    'int',\n    'long',\n    'short',\n    'void',\n    'wchar_t',\n    'unsigned',\n    'signed',\n    'const',\n    'static'\n  ];\n\n  const TYPE_HINTS = [\n    'any',\n    'auto_ptr',\n    'barrier',\n    'binary_semaphore',\n    'bitset',\n    'complex',\n    'condition_variable',\n    'condition_variable_any',\n    'counting_semaphore',\n    'deque',\n    'false_type',\n    'future',\n    'imaginary',\n    'initializer_list',\n    'istringstream',\n    'jthread',\n    'latch',\n    'lock_guard',\n    'multimap',\n    'multiset',\n    'mutex',\n    'optional',\n    'ostringstream',\n    'packaged_task',\n    'pair',\n    'promise',\n    'priority_queue',\n    'queue',\n    'recursive_mutex',\n    'recursive_timed_mutex',\n    'scoped_lock',\n    'set',\n    'shared_future',\n    'shared_lock',\n    'shared_mutex',\n    'shared_timed_mutex',\n    'shared_ptr',\n    'stack',\n    'string_view',\n    'stringstream',\n    'timed_mutex',\n    'thread',\n    'true_type',\n    'tuple',\n    'unique_lock',\n    'unique_ptr',\n    'unordered_map',\n    'unordered_multimap',\n    'unordered_multiset',\n    'unordered_set',\n    'variant',\n    'vector',\n    'weak_ptr',\n    'wstring',\n    'wstring_view'\n  ];\n\n  const FUNCTION_HINTS = [\n    'abort',\n    'abs',\n    'acos',\n    'apply',\n    'as_const',\n    'asin',\n    'atan',\n    'atan2',\n    'calloc',\n    'ceil',\n    'cerr',\n    'cin',\n    'clog',\n    'cos',\n    'cosh',\n    'cout',\n    'declval',\n    'endl',\n    'exchange',\n    'exit',\n    'exp',\n    'fabs',\n    'floor',\n    'fmod',\n    'forward',\n    'fprintf',\n    'fputs',\n    'free',\n    'frexp',\n    'fscanf',\n    'future',\n    'invoke',\n    'isalnum',\n    'isalpha',\n    'iscntrl',\n    'isdigit',\n    'isgraph',\n    'islower',\n    'isprint',\n    'ispunct',\n    'isspace',\n    'isupper',\n    'isxdigit',\n    'labs',\n    'launder',\n    'ldexp',\n    'log',\n    'log10',\n    'make_pair',\n    'make_shared',\n    'make_shared_for_overwrite',\n    'make_tuple',\n    'make_unique',\n    'malloc',\n    'memchr',\n    'memcmp',\n    'memcpy',\n    'memset',\n    'modf',\n    'move',\n    'pow',\n    'printf',\n    'putchar',\n    'puts',\n    'realloc',\n    'scanf',\n    'sin',\n    'sinh',\n    'snprintf',\n    'sprintf',\n    'sqrt',\n    'sscanf',\n    'std',\n    'stderr',\n    'stdin',\n    'stdout',\n    'strcat',\n    'strchr',\n    'strcmp',\n    'strcpy',\n    'strcspn',\n    'strlen',\n    'strncat',\n    'strncmp',\n    'strncpy',\n    'strpbrk',\n    'strrchr',\n    'strspn',\n    'strstr',\n    'swap',\n    'tan',\n    'tanh',\n    'terminate',\n    'to_underlying',\n    'tolower',\n    'toupper',\n    'vfprintf',\n    'visit',\n    'vprintf',\n    'vsprintf'\n  ];\n\n  const LITERALS = [\n    'NULL',\n    'false',\n    'nullopt',\n    'nullptr',\n    'true'\n  ];\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const BUILT_IN = [ '_Pragma' ];\n\n  const CPP_KEYWORDS = {\n    type: RESERVED_TYPES,\n    keyword: RESERVED_KEYWORDS,\n    literal: LITERALS,\n    built_in: BUILT_IN,\n    _type_hints: TYPE_HINTS\n  };\n\n  const FUNCTION_DISPATCH = {\n    className: 'function.dispatch',\n    relevance: 0,\n    keywords: {\n      // Only for relevance, not highlighting.\n      _hint: FUNCTION_HINTS },\n    begin: regex.concat(\n      /\\b/,\n      /(?!decltype)/,\n      /(?!if)/,\n      /(?!for)/,\n      /(?!switch)/,\n      /(?!while)/,\n      hljs.IDENT_RE,\n      regex.lookahead(/(<[^<>]+>|)\\s*\\(/))\n  };\n\n  const EXPRESSION_CONTAINS = [\n    FUNCTION_DISPATCH,\n    PREPROCESSOR,\n    CPP_PRIMITIVE_TYPES,\n    C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    NUMBERS,\n    STRINGS\n  ];\n\n  const EXPRESSION_CONTEXT = {\n    // This mode covers expression context where we can't expect a function\n    // definition and shouldn't highlight anything that looks like one:\n    // `return some()`, `else if()`, `(x*sum(1, 2))`\n    variants: [\n      {\n        begin: /=/,\n        end: /;/\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/\n      },\n      {\n        beginKeywords: 'new throw return else',\n        end: /;/\n      }\n    ],\n    keywords: CPP_KEYWORDS,\n    contains: EXPRESSION_CONTAINS.concat([\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: CPP_KEYWORDS,\n        contains: EXPRESSION_CONTAINS.concat([ 'self' ]),\n        relevance: 0\n      }\n    ]),\n    relevance: 0\n  };\n\n  const FUNCTION_DECLARATION = {\n    className: 'function',\n    begin: '(' + FUNCTION_TYPE_RE + '[\\\\*&\\\\s]+)+' + FUNCTION_TITLE,\n    returnBegin: true,\n    end: /[{;=]/,\n    excludeEnd: true,\n    keywords: CPP_KEYWORDS,\n    illegal: /[^\\w\\s\\*&:<>.]/,\n    contains: [\n      { // to prevent it from being confused as the function title\n        begin: DECLTYPE_AUTO_RE,\n        keywords: CPP_KEYWORDS,\n        relevance: 0\n      },\n      {\n        begin: FUNCTION_TITLE,\n        returnBegin: true,\n        contains: [ TITLE_MODE ],\n        relevance: 0\n      },\n      // needed because we do not have look-behind on the below rule\n      // to prevent it from grabbing the final : in a :: pair\n      {\n        begin: /::/,\n        relevance: 0\n      },\n      // initializers\n      {\n        begin: /:/,\n        endsWithParent: true,\n        contains: [\n          STRINGS,\n          NUMBERS\n        ]\n      },\n      // allow for multiple declarations, e.g.:\n      // extern void f(int), g(char);\n      {\n        relevance: 0,\n        match: /,/\n      },\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: CPP_KEYWORDS,\n        relevance: 0,\n        contains: [\n          C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          STRINGS,\n          NUMBERS,\n          CPP_PRIMITIVE_TYPES,\n          // Count matching parentheses.\n          {\n            begin: /\\(/,\n            end: /\\)/,\n            keywords: CPP_KEYWORDS,\n            relevance: 0,\n            contains: [\n              'self',\n              C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRINGS,\n              NUMBERS,\n              CPP_PRIMITIVE_TYPES\n            ]\n          }\n        ]\n      },\n      CPP_PRIMITIVE_TYPES,\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      PREPROCESSOR\n    ]\n  };\n\n  return {\n    name: 'C++',\n    aliases: [\n      'cc',\n      'c++',\n      'h++',\n      'hpp',\n      'hh',\n      'hxx',\n      'cxx'\n    ],\n    keywords: CPP_KEYWORDS,\n    illegal: '</',\n    classNameAliases: { 'function.dispatch': 'built_in' },\n    contains: [].concat(\n      EXPRESSION_CONTEXT,\n      FUNCTION_DECLARATION,\n      FUNCTION_DISPATCH,\n      EXPRESSION_CONTAINS,\n      [\n        PREPROCESSOR,\n        { // containers: ie, `vector <int> rooms (9);`\n          begin: '\\\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array|tuple|optional|variant|function)\\\\s*<(?!<)',\n          end: '>',\n          keywords: CPP_KEYWORDS,\n          contains: [\n            'self',\n            CPP_PRIMITIVE_TYPES\n          ]\n        },\n        {\n          begin: hljs.IDENT_RE + '::',\n          keywords: CPP_KEYWORDS\n        },\n        {\n          match: [\n            // extra complexity to deal with `enum class` and `enum struct`\n            /\\b(?:enum(?:\\s+(?:class|struct))?|class|struct|union)/,\n            /\\s+/,\n            /\\w+/\n          ],\n          className: {\n            1: 'keyword',\n            3: 'title.class'\n          }\n        }\n      ])\n  };\n}\n\n/*\nLanguage: Arduino\nAuthor: Stefania Mellai <s.mellai@arduino.cc>\nDescription: The Arduino\u00AE Language is a superset of C++. This rules are designed to highlight the Arduino\u00AE source code. For info about language see http://www.arduino.cc.\nWebsite: https://www.arduino.cc\n*/\n\n/** @type LanguageFn */\nfunction arduino(hljs) {\n  const ARDUINO_KW = {\n    type: [\n      \"boolean\",\n      \"byte\",\n      \"word\",\n      \"String\"\n    ],\n    built_in: [\n      \"KeyboardController\",\n      \"MouseController\",\n      \"SoftwareSerial\",\n      \"EthernetServer\",\n      \"EthernetClient\",\n      \"LiquidCrystal\",\n      \"RobotControl\",\n      \"GSMVoiceCall\",\n      \"EthernetUDP\",\n      \"EsploraTFT\",\n      \"HttpClient\",\n      \"RobotMotor\",\n      \"WiFiClient\",\n      \"GSMScanner\",\n      \"FileSystem\",\n      \"Scheduler\",\n      \"GSMServer\",\n      \"YunClient\",\n      \"YunServer\",\n      \"IPAddress\",\n      \"GSMClient\",\n      \"GSMModem\",\n      \"Keyboard\",\n      \"Ethernet\",\n      \"Console\",\n      \"GSMBand\",\n      \"Esplora\",\n      \"Stepper\",\n      \"Process\",\n      \"WiFiUDP\",\n      \"GSM_SMS\",\n      \"Mailbox\",\n      \"USBHost\",\n      \"Firmata\",\n      \"PImage\",\n      \"Client\",\n      \"Server\",\n      \"GSMPIN\",\n      \"FileIO\",\n      \"Bridge\",\n      \"Serial\",\n      \"EEPROM\",\n      \"Stream\",\n      \"Mouse\",\n      \"Audio\",\n      \"Servo\",\n      \"File\",\n      \"Task\",\n      \"GPRS\",\n      \"WiFi\",\n      \"Wire\",\n      \"TFT\",\n      \"GSM\",\n      \"SPI\",\n      \"SD\"\n    ],\n    _hints: [\n      \"setup\",\n      \"loop\",\n      \"runShellCommandAsynchronously\",\n      \"analogWriteResolution\",\n      \"retrieveCallingNumber\",\n      \"printFirmwareVersion\",\n      \"analogReadResolution\",\n      \"sendDigitalPortPair\",\n      \"noListenOnLocalhost\",\n      \"readJoystickButton\",\n      \"setFirmwareVersion\",\n      \"readJoystickSwitch\",\n      \"scrollDisplayRight\",\n      \"getVoiceCallStatus\",\n      \"scrollDisplayLeft\",\n      \"writeMicroseconds\",\n      \"delayMicroseconds\",\n      \"beginTransmission\",\n      \"getSignalStrength\",\n      \"runAsynchronously\",\n      \"getAsynchronously\",\n      \"listenOnLocalhost\",\n      \"getCurrentCarrier\",\n      \"readAccelerometer\",\n      \"messageAvailable\",\n      \"sendDigitalPorts\",\n      \"lineFollowConfig\",\n      \"countryNameWrite\",\n      \"runShellCommand\",\n      \"readStringUntil\",\n      \"rewindDirectory\",\n      \"readTemperature\",\n      \"setClockDivider\",\n      \"readLightSensor\",\n      \"endTransmission\",\n      \"analogReference\",\n      \"detachInterrupt\",\n      \"countryNameRead\",\n      \"attachInterrupt\",\n      \"encryptionType\",\n      \"readBytesUntil\",\n      \"robotNameWrite\",\n      \"readMicrophone\",\n      \"robotNameRead\",\n      \"cityNameWrite\",\n      \"userNameWrite\",\n      \"readJoystickY\",\n      \"readJoystickX\",\n      \"mouseReleased\",\n      \"openNextFile\",\n      \"scanNetworks\",\n      \"noInterrupts\",\n      \"digitalWrite\",\n      \"beginSpeaker\",\n      \"mousePressed\",\n      \"isActionDone\",\n      \"mouseDragged\",\n      \"displayLogos\",\n      \"noAutoscroll\",\n      \"addParameter\",\n      \"remoteNumber\",\n      \"getModifiers\",\n      \"keyboardRead\",\n      \"userNameRead\",\n      \"waitContinue\",\n      \"processInput\",\n      \"parseCommand\",\n      \"printVersion\",\n      \"readNetworks\",\n      \"writeMessage\",\n      \"blinkVersion\",\n      \"cityNameRead\",\n      \"readMessage\",\n      \"setDataMode\",\n      \"parsePacket\",\n      \"isListening\",\n      \"setBitOrder\",\n      \"beginPacket\",\n      \"isDirectory\",\n      \"motorsWrite\",\n      \"drawCompass\",\n      \"digitalRead\",\n      \"clearScreen\",\n      \"serialEvent\",\n      \"rightToLeft\",\n      \"setTextSize\",\n      \"leftToRight\",\n      \"requestFrom\",\n      \"keyReleased\",\n      \"compassRead\",\n      \"analogWrite\",\n      \"interrupts\",\n      \"WiFiServer\",\n      \"disconnect\",\n      \"playMelody\",\n      \"parseFloat\",\n      \"autoscroll\",\n      \"getPINUsed\",\n      \"setPINUsed\",\n      \"setTimeout\",\n      \"sendAnalog\",\n      \"readSlider\",\n      \"analogRead\",\n      \"beginWrite\",\n      \"createChar\",\n      \"motorsStop\",\n      \"keyPressed\",\n      \"tempoWrite\",\n      \"readButton\",\n      \"subnetMask\",\n      \"debugPrint\",\n      \"macAddress\",\n      \"writeGreen\",\n      \"randomSeed\",\n      \"attachGPRS\",\n      \"readString\",\n      \"sendString\",\n      \"remotePort\",\n      \"releaseAll\",\n      \"mouseMoved\",\n      \"background\",\n      \"getXChange\",\n      \"getYChange\",\n      \"answerCall\",\n      \"getResult\",\n      \"voiceCall\",\n      \"endPacket\",\n      \"constrain\",\n      \"getSocket\",\n      \"writeJSON\",\n      \"getButton\",\n      \"available\",\n      \"connected\",\n      \"findUntil\",\n      \"readBytes\",\n      \"exitValue\",\n      \"readGreen\",\n      \"writeBlue\",\n      \"startLoop\",\n      \"IPAddress\",\n      \"isPressed\",\n      \"sendSysex\",\n      \"pauseMode\",\n      \"gatewayIP\",\n      \"setCursor\",\n      \"getOemKey\",\n      \"tuneWrite\",\n      \"noDisplay\",\n      \"loadImage\",\n      \"switchPIN\",\n      \"onRequest\",\n      \"onReceive\",\n      \"changePIN\",\n      \"playFile\",\n      \"noBuffer\",\n      \"parseInt\",\n      \"overflow\",\n      \"checkPIN\",\n      \"knobRead\",\n      \"beginTFT\",\n      \"bitClear\",\n      \"updateIR\",\n      \"bitWrite\",\n      \"position\",\n      \"writeRGB\",\n      \"highByte\",\n      \"writeRed\",\n      \"setSpeed\",\n      \"readBlue\",\n      \"noStroke\",\n      \"remoteIP\",\n      \"transfer\",\n      \"shutdown\",\n      \"hangCall\",\n      \"beginSMS\",\n      \"endWrite\",\n      \"attached\",\n      \"maintain\",\n      \"noCursor\",\n      \"checkReg\",\n      \"checkPUK\",\n      \"shiftOut\",\n      \"isValid\",\n      \"shiftIn\",\n      \"pulseIn\",\n      \"connect\",\n      \"println\",\n      \"localIP\",\n      \"pinMode\",\n      \"getIMEI\",\n      \"display\",\n      \"noBlink\",\n      \"process\",\n      \"getBand\",\n      \"running\",\n      \"beginSD\",\n      \"drawBMP\",\n      \"lowByte\",\n      \"setBand\",\n      \"release\",\n      \"bitRead\",\n      \"prepare\",\n      \"pointTo\",\n      \"readRed\",\n      \"setMode\",\n      \"noFill\",\n      \"remove\",\n      \"listen\",\n      \"stroke\",\n      \"detach\",\n      \"attach\",\n      \"noTone\",\n      \"exists\",\n      \"buffer\",\n      \"height\",\n      \"bitSet\",\n      \"circle\",\n      \"config\",\n      \"cursor\",\n      \"random\",\n      \"IRread\",\n      \"setDNS\",\n      \"endSMS\",\n      \"getKey\",\n      \"micros\",\n      \"millis\",\n      \"begin\",\n      \"print\",\n      \"write\",\n      \"ready\",\n      \"flush\",\n      \"width\",\n      \"isPIN\",\n      \"blink\",\n      \"clear\",\n      \"press\",\n      \"mkdir\",\n      \"rmdir\",\n      \"close\",\n      \"point\",\n      \"yield\",\n      \"image\",\n      \"BSSID\",\n      \"click\",\n      \"delay\",\n      \"read\",\n      \"text\",\n      \"move\",\n      \"peek\",\n      \"beep\",\n      \"rect\",\n      \"line\",\n      \"open\",\n      \"seek\",\n      \"fill\",\n      \"size\",\n      \"turn\",\n      \"stop\",\n      \"home\",\n      \"find\",\n      \"step\",\n      \"tone\",\n      \"sqrt\",\n      \"RSSI\",\n      \"SSID\",\n      \"end\",\n      \"bit\",\n      \"tan\",\n      \"cos\",\n      \"sin\",\n      \"pow\",\n      \"map\",\n      \"abs\",\n      \"max\",\n      \"min\",\n      \"get\",\n      \"run\",\n      \"put\"\n    ],\n    literal: [\n      \"DIGITAL_MESSAGE\",\n      \"FIRMATA_STRING\",\n      \"ANALOG_MESSAGE\",\n      \"REPORT_DIGITAL\",\n      \"REPORT_ANALOG\",\n      \"INPUT_PULLUP\",\n      \"SET_PIN_MODE\",\n      \"INTERNAL2V56\",\n      \"SYSTEM_RESET\",\n      \"LED_BUILTIN\",\n      \"INTERNAL1V1\",\n      \"SYSEX_START\",\n      \"INTERNAL\",\n      \"EXTERNAL\",\n      \"DEFAULT\",\n      \"OUTPUT\",\n      \"INPUT\",\n      \"HIGH\",\n      \"LOW\"\n    ]\n  };\n\n  const ARDUINO = cPlusPlus(hljs);\n\n  const kws = /** @type {Record<string,any>} */ (ARDUINO.keywords);\n\n  kws.type = [\n    ...kws.type,\n    ...ARDUINO_KW.type\n  ];\n  kws.literal = [\n    ...kws.literal,\n    ...ARDUINO_KW.literal\n  ];\n  kws.built_in = [\n    ...kws.built_in,\n    ...ARDUINO_KW.built_in\n  ];\n  kws._hints = ARDUINO_KW._hints;\n\n  ARDUINO.name = 'Arduino';\n  ARDUINO.aliases = [ 'ino' ];\n  ARDUINO.supersetOf = \"cpp\";\n\n  return ARDUINO;\n}\n\nexport { arduino as default };\n", "/*\nLanguage: Bash\nAuthor: vah <vahtenberg@gmail.com>\nContributrors: Benjamin Pannell <contact@sierrasoftworks.com>\nWebsite: https://www.gnu.org/software/bash/\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction bash(hljs) {\n  const regex = hljs.regex;\n  const VAR = {};\n  const BRACED_VAR = {\n    begin: /\\$\\{/,\n    end: /\\}/,\n    contains: [\n      \"self\",\n      {\n        begin: /:-/,\n        contains: [ VAR ]\n      } // default values\n    ]\n  };\n  Object.assign(VAR, {\n    className: 'variable',\n    variants: [\n      { begin: regex.concat(/\\$[\\w\\d#@][\\w\\d_]*/,\n        // negative look-ahead tries to avoid matching patterns that are not\n        // Perl at all like $ident$, @ident@, etc.\n        `(?![\\\\w\\\\d])(?![$])`) },\n      BRACED_VAR\n    ]\n  });\n\n  const SUBST = {\n    className: 'subst',\n    begin: /\\$\\(/,\n    end: /\\)/,\n    contains: [ hljs.BACKSLASH_ESCAPE ]\n  };\n  const HERE_DOC = {\n    begin: /<<-?\\s*(?=\\w+)/,\n    starts: { contains: [\n      hljs.END_SAME_AS_BEGIN({\n        begin: /(\\w+)/,\n        end: /(\\w+)/,\n        className: 'string'\n      })\n    ] }\n  };\n  const QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/,\n    end: /\"/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      VAR,\n      SUBST\n    ]\n  };\n  SUBST.contains.push(QUOTE_STRING);\n  const ESCAPED_QUOTE = {\n    className: '',\n    begin: /\\\\\"/\n\n  };\n  const APOS_STRING = {\n    className: 'string',\n    begin: /'/,\n    end: /'/\n  };\n  const ARITHMETIC = {\n    begin: /\\$?\\(\\(/,\n    end: /\\)\\)/,\n    contains: [\n      {\n        begin: /\\d+#[0-9a-f]+/,\n        className: \"number\"\n      },\n      hljs.NUMBER_MODE,\n      VAR\n    ]\n  };\n  const SH_LIKE_SHELLS = [\n    \"fish\",\n    \"bash\",\n    \"zsh\",\n    \"sh\",\n    \"csh\",\n    \"ksh\",\n    \"tcsh\",\n    \"dash\",\n    \"scsh\",\n  ];\n  const KNOWN_SHEBANG = hljs.SHEBANG({\n    binary: `(${SH_LIKE_SHELLS.join(\"|\")})`,\n    relevance: 10\n  });\n  const FUNCTION = {\n    className: 'function',\n    begin: /\\w[\\w\\d_]*\\s*\\(\\s*\\)\\s*\\{/,\n    returnBegin: true,\n    contains: [ hljs.inherit(hljs.TITLE_MODE, { begin: /\\w[\\w\\d_]*/ }) ],\n    relevance: 0\n  };\n\n  const KEYWORDS = [\n    \"if\",\n    \"then\",\n    \"else\",\n    \"elif\",\n    \"fi\",\n    \"for\",\n    \"while\",\n    \"in\",\n    \"do\",\n    \"done\",\n    \"case\",\n    \"esac\",\n    \"function\"\n  ];\n\n  const LITERALS = [\n    \"true\",\n    \"false\"\n  ];\n\n  // to consume paths to prevent keyword matches inside them\n  const PATH_MODE = { match: /(\\/[a-z._-]+)+/ };\n\n  // http://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n  const SHELL_BUILT_INS = [\n    \"break\",\n    \"cd\",\n    \"continue\",\n    \"eval\",\n    \"exec\",\n    \"exit\",\n    \"export\",\n    \"getopts\",\n    \"hash\",\n    \"pwd\",\n    \"readonly\",\n    \"return\",\n    \"shift\",\n    \"test\",\n    \"times\",\n    \"trap\",\n    \"umask\",\n    \"unset\"\n  ];\n\n  const BASH_BUILT_INS = [\n    \"alias\",\n    \"bind\",\n    \"builtin\",\n    \"caller\",\n    \"command\",\n    \"declare\",\n    \"echo\",\n    \"enable\",\n    \"help\",\n    \"let\",\n    \"local\",\n    \"logout\",\n    \"mapfile\",\n    \"printf\",\n    \"read\",\n    \"readarray\",\n    \"source\",\n    \"type\",\n    \"typeset\",\n    \"ulimit\",\n    \"unalias\"\n  ];\n\n  const ZSH_BUILT_INS = [\n    \"autoload\",\n    \"bg\",\n    \"bindkey\",\n    \"bye\",\n    \"cap\",\n    \"chdir\",\n    \"clone\",\n    \"comparguments\",\n    \"compcall\",\n    \"compctl\",\n    \"compdescribe\",\n    \"compfiles\",\n    \"compgroups\",\n    \"compquote\",\n    \"comptags\",\n    \"comptry\",\n    \"compvalues\",\n    \"dirs\",\n    \"disable\",\n    \"disown\",\n    \"echotc\",\n    \"echoti\",\n    \"emulate\",\n    \"fc\",\n    \"fg\",\n    \"float\",\n    \"functions\",\n    \"getcap\",\n    \"getln\",\n    \"history\",\n    \"integer\",\n    \"jobs\",\n    \"kill\",\n    \"limit\",\n    \"log\",\n    \"noglob\",\n    \"popd\",\n    \"print\",\n    \"pushd\",\n    \"pushln\",\n    \"rehash\",\n    \"sched\",\n    \"setcap\",\n    \"setopt\",\n    \"stat\",\n    \"suspend\",\n    \"ttyctl\",\n    \"unfunction\",\n    \"unhash\",\n    \"unlimit\",\n    \"unsetopt\",\n    \"vared\",\n    \"wait\",\n    \"whence\",\n    \"where\",\n    \"which\",\n    \"zcompile\",\n    \"zformat\",\n    \"zftp\",\n    \"zle\",\n    \"zmodload\",\n    \"zparseopts\",\n    \"zprof\",\n    \"zpty\",\n    \"zregexparse\",\n    \"zsocket\",\n    \"zstyle\",\n    \"ztcp\"\n  ];\n\n  const GNU_CORE_UTILS = [\n    \"chcon\",\n    \"chgrp\",\n    \"chown\",\n    \"chmod\",\n    \"cp\",\n    \"dd\",\n    \"df\",\n    \"dir\",\n    \"dircolors\",\n    \"ln\",\n    \"ls\",\n    \"mkdir\",\n    \"mkfifo\",\n    \"mknod\",\n    \"mktemp\",\n    \"mv\",\n    \"realpath\",\n    \"rm\",\n    \"rmdir\",\n    \"shred\",\n    \"sync\",\n    \"touch\",\n    \"truncate\",\n    \"vdir\",\n    \"b2sum\",\n    \"base32\",\n    \"base64\",\n    \"cat\",\n    \"cksum\",\n    \"comm\",\n    \"csplit\",\n    \"cut\",\n    \"expand\",\n    \"fmt\",\n    \"fold\",\n    \"head\",\n    \"join\",\n    \"md5sum\",\n    \"nl\",\n    \"numfmt\",\n    \"od\",\n    \"paste\",\n    \"ptx\",\n    \"pr\",\n    \"sha1sum\",\n    \"sha224sum\",\n    \"sha256sum\",\n    \"sha384sum\",\n    \"sha512sum\",\n    \"shuf\",\n    \"sort\",\n    \"split\",\n    \"sum\",\n    \"tac\",\n    \"tail\",\n    \"tr\",\n    \"tsort\",\n    \"unexpand\",\n    \"uniq\",\n    \"wc\",\n    \"arch\",\n    \"basename\",\n    \"chroot\",\n    \"date\",\n    \"dirname\",\n    \"du\",\n    \"echo\",\n    \"env\",\n    \"expr\",\n    \"factor\",\n    // \"false\", // keyword literal already\n    \"groups\",\n    \"hostid\",\n    \"id\",\n    \"link\",\n    \"logname\",\n    \"nice\",\n    \"nohup\",\n    \"nproc\",\n    \"pathchk\",\n    \"pinky\",\n    \"printenv\",\n    \"printf\",\n    \"pwd\",\n    \"readlink\",\n    \"runcon\",\n    \"seq\",\n    \"sleep\",\n    \"stat\",\n    \"stdbuf\",\n    \"stty\",\n    \"tee\",\n    \"test\",\n    \"timeout\",\n    // \"true\", // keyword literal already\n    \"tty\",\n    \"uname\",\n    \"unlink\",\n    \"uptime\",\n    \"users\",\n    \"who\",\n    \"whoami\",\n    \"yes\"\n  ];\n\n  return {\n    name: 'Bash',\n    aliases: [ 'sh' ],\n    keywords: {\n      $pattern: /\\b[a-z][a-z0-9._-]+\\b/,\n      keyword: KEYWORDS,\n      literal: LITERALS,\n      built_in: [\n        ...SHELL_BUILT_INS,\n        ...BASH_BUILT_INS,\n        // Shell modifiers\n        \"set\",\n        \"shopt\",\n        ...ZSH_BUILT_INS,\n        ...GNU_CORE_UTILS\n      ]\n    },\n    contains: [\n      KNOWN_SHEBANG, // to catch known shells and boost relevancy\n      hljs.SHEBANG(), // to catch unknown shells but still highlight the shebang\n      FUNCTION,\n      ARITHMETIC,\n      hljs.HASH_COMMENT_MODE,\n      HERE_DOC,\n      PATH_MODE,\n      QUOTE_STRING,\n      ESCAPED_QUOTE,\n      APOS_STRING,\n      VAR\n    ]\n  };\n}\n\nexport { bash as default };\n", "/*\nLanguage: C\nCategory: common, system\nWebsite: https://en.wikipedia.org/wiki/C_(programming_language)\n*/\n\n/** @type LanguageFn */\nfunction c(hljs) {\n  const regex = hljs.regex;\n  // added for historic reasons because `hljs.C_LINE_COMMENT_MODE` does\n  // not include such support nor can we be sure all the grammars depending\n  // on it would desire this behavior\n  const C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$', { contains: [ { begin: /\\\\\\n/ } ] });\n  const DECLTYPE_AUTO_RE = 'decltype\\\\(auto\\\\)';\n  const NAMESPACE_RE = '[a-zA-Z_]\\\\w*::';\n  const TEMPLATE_ARGUMENT_RE = '<[^<>]+>';\n  const FUNCTION_TYPE_RE = '('\n    + DECLTYPE_AUTO_RE + '|'\n    + regex.optional(NAMESPACE_RE)\n    + '[a-zA-Z_]\\\\w*' + regex.optional(TEMPLATE_ARGUMENT_RE)\n  + ')';\n\n\n  const TYPES = {\n    className: 'type',\n    variants: [\n      { begin: '\\\\b[a-z\\\\d_]*_t\\\\b' },\n      { match: /\\batomic_[a-z]{3,6}\\b/ }\n    ]\n\n  };\n\n  // https://en.cppreference.com/w/cpp/language/escape\n  // \\\\ \\x \\xFF \\u2837 \\u00323747 \\374\n  const CHARACTER_ESCAPES = '\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)';\n  const STRINGS = {\n    className: 'string',\n    variants: [\n      {\n        begin: '(u8?|U|L)?\"',\n        end: '\"',\n        illegal: '\\\\n',\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      {\n        begin: '(u8?|U|L)?\\'(' + CHARACTER_ESCAPES + \"|.)\",\n        end: '\\'',\n        illegal: '.'\n      },\n      hljs.END_SAME_AS_BEGIN({\n        begin: /(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,\n        end: /\\)([^()\\\\ ]{0,16})\"/\n      })\n    ]\n  };\n\n  const NUMBERS = {\n    className: 'number',\n    variants: [\n      { begin: '\\\\b(0b[01\\']+)' },\n      { begin: '(-?)\\\\b([\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)' },\n      { begin: '(-?)(\\\\b0[xX][a-fA-F0-9\\']+|(\\\\b[\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)([eE][-+]?[\\\\d\\']+)?)' }\n    ],\n    relevance: 0\n  };\n\n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: /#\\s*[a-z]+\\b/,\n    end: /$/,\n    keywords: { keyword:\n        'if else elif endif define undef warning error line '\n        + 'pragma _Pragma ifdef ifndef include' },\n    contains: [\n      {\n        begin: /\\\\\\n/,\n        relevance: 0\n      },\n      hljs.inherit(STRINGS, { className: 'string' }),\n      {\n        className: 'string',\n        begin: /<.*?>/\n      },\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n\n  const TITLE_MODE = {\n    className: 'title',\n    begin: regex.optional(NAMESPACE_RE) + hljs.IDENT_RE,\n    relevance: 0\n  };\n\n  const FUNCTION_TITLE = regex.optional(NAMESPACE_RE) + hljs.IDENT_RE + '\\\\s*\\\\(';\n\n  const C_KEYWORDS = [\n    \"asm\",\n    \"auto\",\n    \"break\",\n    \"case\",\n    \"continue\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"enum\",\n    \"extern\",\n    \"for\",\n    \"fortran\",\n    \"goto\",\n    \"if\",\n    \"inline\",\n    \"register\",\n    \"restrict\",\n    \"return\",\n    \"sizeof\",\n    \"struct\",\n    \"switch\",\n    \"typedef\",\n    \"union\",\n    \"volatile\",\n    \"while\",\n    \"_Alignas\",\n    \"_Alignof\",\n    \"_Atomic\",\n    \"_Generic\",\n    \"_Noreturn\",\n    \"_Static_assert\",\n    \"_Thread_local\",\n    // aliases\n    \"alignas\",\n    \"alignof\",\n    \"noreturn\",\n    \"static_assert\",\n    \"thread_local\",\n    // not a C keyword but is, for all intents and purposes, treated exactly like one.\n    \"_Pragma\"\n  ];\n\n  const C_TYPES = [\n    \"float\",\n    \"double\",\n    \"signed\",\n    \"unsigned\",\n    \"int\",\n    \"short\",\n    \"long\",\n    \"char\",\n    \"void\",\n    \"_Bool\",\n    \"_Complex\",\n    \"_Imaginary\",\n    \"_Decimal32\",\n    \"_Decimal64\",\n    \"_Decimal128\",\n    // modifiers\n    \"const\",\n    \"static\",\n    // aliases\n    \"complex\",\n    \"bool\",\n    \"imaginary\"\n  ];\n\n  const KEYWORDS = {\n    keyword: C_KEYWORDS,\n    type: C_TYPES,\n    literal: 'true false NULL',\n    // TODO: apply hinting work similar to what was done in cpp.js\n    built_in: 'std string wstring cin cout cerr clog stdin stdout stderr stringstream istringstream ostringstream '\n      + 'auto_ptr deque list queue stack vector map set pair bitset multiset multimap unordered_set '\n      + 'unordered_map unordered_multiset unordered_multimap priority_queue make_pair array shared_ptr abort terminate abs acos '\n      + 'asin atan2 atan calloc ceil cosh cos exit exp fabs floor fmod fprintf fputs free frexp '\n      + 'fscanf future isalnum isalpha iscntrl isdigit isgraph islower isprint ispunct isspace isupper '\n      + 'isxdigit tolower toupper labs ldexp log10 log malloc realloc memchr memcmp memcpy memset modf pow '\n      + 'printf putchar puts scanf sinh sin snprintf sprintf sqrt sscanf strcat strchr strcmp '\n      + 'strcpy strcspn strlen strncat strncmp strncpy strpbrk strrchr strspn strstr tanh tan '\n      + 'vfprintf vprintf vsprintf endl initializer_list unique_ptr',\n  };\n\n  const EXPRESSION_CONTAINS = [\n    PREPROCESSOR,\n    TYPES,\n    C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    NUMBERS,\n    STRINGS\n  ];\n\n  const EXPRESSION_CONTEXT = {\n    // This mode covers expression context where we can't expect a function\n    // definition and shouldn't highlight anything that looks like one:\n    // `return some()`, `else if()`, `(x*sum(1, 2))`\n    variants: [\n      {\n        begin: /=/,\n        end: /;/\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/\n      },\n      {\n        beginKeywords: 'new throw return else',\n        end: /;/\n      }\n    ],\n    keywords: KEYWORDS,\n    contains: EXPRESSION_CONTAINS.concat([\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: KEYWORDS,\n        contains: EXPRESSION_CONTAINS.concat([ 'self' ]),\n        relevance: 0\n      }\n    ]),\n    relevance: 0\n  };\n\n  const FUNCTION_DECLARATION = {\n    begin: '(' + FUNCTION_TYPE_RE + '[\\\\*&\\\\s]+)+' + FUNCTION_TITLE,\n    returnBegin: true,\n    end: /[{;=]/,\n    excludeEnd: true,\n    keywords: KEYWORDS,\n    illegal: /[^\\w\\s\\*&:<>.]/,\n    contains: [\n      { // to prevent it from being confused as the function title\n        begin: DECLTYPE_AUTO_RE,\n        keywords: KEYWORDS,\n        relevance: 0\n      },\n      {\n        begin: FUNCTION_TITLE,\n        returnBegin: true,\n        contains: [ hljs.inherit(TITLE_MODE, { className: \"title.function\" }) ],\n        relevance: 0\n      },\n      // allow for multiple declarations, e.g.:\n      // extern void f(int), g(char);\n      {\n        relevance: 0,\n        match: /,/\n      },\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: KEYWORDS,\n        relevance: 0,\n        contains: [\n          C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          STRINGS,\n          NUMBERS,\n          TYPES,\n          // Count matching parentheses.\n          {\n            begin: /\\(/,\n            end: /\\)/,\n            keywords: KEYWORDS,\n            relevance: 0,\n            contains: [\n              'self',\n              C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRINGS,\n              NUMBERS,\n              TYPES\n            ]\n          }\n        ]\n      },\n      TYPES,\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      PREPROCESSOR\n    ]\n  };\n\n  return {\n    name: \"C\",\n    aliases: [ 'h' ],\n    keywords: KEYWORDS,\n    // Until differentiations are added between `c` and `cpp`, `c` will\n    // not be auto-detected to avoid auto-detect conflicts between C and C++\n    disableAutodetect: true,\n    illegal: '</',\n    contains: [].concat(\n      EXPRESSION_CONTEXT,\n      FUNCTION_DECLARATION,\n      EXPRESSION_CONTAINS,\n      [\n        PREPROCESSOR,\n        {\n          begin: hljs.IDENT_RE + '::',\n          keywords: KEYWORDS\n        },\n        {\n          className: 'class',\n          beginKeywords: 'enum class struct union',\n          end: /[{;:<>=]/,\n          contains: [\n            { beginKeywords: \"final class struct\" },\n            hljs.TITLE_MODE\n          ]\n        }\n      ]),\n    exports: {\n      preprocessor: PREPROCESSOR,\n      strings: STRINGS,\n      keywords: KEYWORDS\n    }\n  };\n}\n\nexport { c as default };\n", "/*\nLanguage: C++\nCategory: common, system\nWebsite: https://isocpp.org\n*/\n\n/** @type LanguageFn */\nfunction cpp(hljs) {\n  const regex = hljs.regex;\n  // added for historic reasons because `hljs.C_LINE_COMMENT_MODE` does\n  // not include such support nor can we be sure all the grammars depending\n  // on it would desire this behavior\n  const C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$', { contains: [ { begin: /\\\\\\n/ } ] });\n  const DECLTYPE_AUTO_RE = 'decltype\\\\(auto\\\\)';\n  const NAMESPACE_RE = '[a-zA-Z_]\\\\w*::';\n  const TEMPLATE_ARGUMENT_RE = '<[^<>]+>';\n  const FUNCTION_TYPE_RE = '(?!struct)('\n    + DECLTYPE_AUTO_RE + '|'\n    + regex.optional(NAMESPACE_RE)\n    + '[a-zA-Z_]\\\\w*' + regex.optional(TEMPLATE_ARGUMENT_RE)\n  + ')';\n\n  const CPP_PRIMITIVE_TYPES = {\n    className: 'type',\n    begin: '\\\\b[a-z\\\\d_]*_t\\\\b'\n  };\n\n  // https://en.cppreference.com/w/cpp/language/escape\n  // \\\\ \\x \\xFF \\u2837 \\u00323747 \\374\n  const CHARACTER_ESCAPES = '\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)';\n  const STRINGS = {\n    className: 'string',\n    variants: [\n      {\n        begin: '(u8?|U|L)?\"',\n        end: '\"',\n        illegal: '\\\\n',\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      {\n        begin: '(u8?|U|L)?\\'(' + CHARACTER_ESCAPES + '|.)',\n        end: '\\'',\n        illegal: '.'\n      },\n      hljs.END_SAME_AS_BEGIN({\n        begin: /(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,\n        end: /\\)([^()\\\\ ]{0,16})\"/\n      })\n    ]\n  };\n\n  const NUMBERS = {\n    className: 'number',\n    variants: [\n      { begin: '\\\\b(0b[01\\']+)' },\n      { begin: '(-?)\\\\b([\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)' },\n      { begin: '(-?)(\\\\b0[xX][a-fA-F0-9\\']+|(\\\\b[\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)([eE][-+]?[\\\\d\\']+)?)' }\n    ],\n    relevance: 0\n  };\n\n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: /#\\s*[a-z]+\\b/,\n    end: /$/,\n    keywords: { keyword:\n        'if else elif endif define undef warning error line '\n        + 'pragma _Pragma ifdef ifndef include' },\n    contains: [\n      {\n        begin: /\\\\\\n/,\n        relevance: 0\n      },\n      hljs.inherit(STRINGS, { className: 'string' }),\n      {\n        className: 'string',\n        begin: /<.*?>/\n      },\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n\n  const TITLE_MODE = {\n    className: 'title',\n    begin: regex.optional(NAMESPACE_RE) + hljs.IDENT_RE,\n    relevance: 0\n  };\n\n  const FUNCTION_TITLE = regex.optional(NAMESPACE_RE) + hljs.IDENT_RE + '\\\\s*\\\\(';\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const RESERVED_KEYWORDS = [\n    'alignas',\n    'alignof',\n    'and',\n    'and_eq',\n    'asm',\n    'atomic_cancel',\n    'atomic_commit',\n    'atomic_noexcept',\n    'auto',\n    'bitand',\n    'bitor',\n    'break',\n    'case',\n    'catch',\n    'class',\n    'co_await',\n    'co_return',\n    'co_yield',\n    'compl',\n    'concept',\n    'const_cast|10',\n    'consteval',\n    'constexpr',\n    'constinit',\n    'continue',\n    'decltype',\n    'default',\n    'delete',\n    'do',\n    'dynamic_cast|10',\n    'else',\n    'enum',\n    'explicit',\n    'export',\n    'extern',\n    'false',\n    'final',\n    'for',\n    'friend',\n    'goto',\n    'if',\n    'import',\n    'inline',\n    'module',\n    'mutable',\n    'namespace',\n    'new',\n    'noexcept',\n    'not',\n    'not_eq',\n    'nullptr',\n    'operator',\n    'or',\n    'or_eq',\n    'override',\n    'private',\n    'protected',\n    'public',\n    'reflexpr',\n    'register',\n    'reinterpret_cast|10',\n    'requires',\n    'return',\n    'sizeof',\n    'static_assert',\n    'static_cast|10',\n    'struct',\n    'switch',\n    'synchronized',\n    'template',\n    'this',\n    'thread_local',\n    'throw',\n    'transaction_safe',\n    'transaction_safe_dynamic',\n    'true',\n    'try',\n    'typedef',\n    'typeid',\n    'typename',\n    'union',\n    'using',\n    'virtual',\n    'volatile',\n    'while',\n    'xor',\n    'xor_eq'\n  ];\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const RESERVED_TYPES = [\n    'bool',\n    'char',\n    'char16_t',\n    'char32_t',\n    'char8_t',\n    'double',\n    'float',\n    'int',\n    'long',\n    'short',\n    'void',\n    'wchar_t',\n    'unsigned',\n    'signed',\n    'const',\n    'static'\n  ];\n\n  const TYPE_HINTS = [\n    'any',\n    'auto_ptr',\n    'barrier',\n    'binary_semaphore',\n    'bitset',\n    'complex',\n    'condition_variable',\n    'condition_variable_any',\n    'counting_semaphore',\n    'deque',\n    'false_type',\n    'future',\n    'imaginary',\n    'initializer_list',\n    'istringstream',\n    'jthread',\n    'latch',\n    'lock_guard',\n    'multimap',\n    'multiset',\n    'mutex',\n    'optional',\n    'ostringstream',\n    'packaged_task',\n    'pair',\n    'promise',\n    'priority_queue',\n    'queue',\n    'recursive_mutex',\n    'recursive_timed_mutex',\n    'scoped_lock',\n    'set',\n    'shared_future',\n    'shared_lock',\n    'shared_mutex',\n    'shared_timed_mutex',\n    'shared_ptr',\n    'stack',\n    'string_view',\n    'stringstream',\n    'timed_mutex',\n    'thread',\n    'true_type',\n    'tuple',\n    'unique_lock',\n    'unique_ptr',\n    'unordered_map',\n    'unordered_multimap',\n    'unordered_multiset',\n    'unordered_set',\n    'variant',\n    'vector',\n    'weak_ptr',\n    'wstring',\n    'wstring_view'\n  ];\n\n  const FUNCTION_HINTS = [\n    'abort',\n    'abs',\n    'acos',\n    'apply',\n    'as_const',\n    'asin',\n    'atan',\n    'atan2',\n    'calloc',\n    'ceil',\n    'cerr',\n    'cin',\n    'clog',\n    'cos',\n    'cosh',\n    'cout',\n    'declval',\n    'endl',\n    'exchange',\n    'exit',\n    'exp',\n    'fabs',\n    'floor',\n    'fmod',\n    'forward',\n    'fprintf',\n    'fputs',\n    'free',\n    'frexp',\n    'fscanf',\n    'future',\n    'invoke',\n    'isalnum',\n    'isalpha',\n    'iscntrl',\n    'isdigit',\n    'isgraph',\n    'islower',\n    'isprint',\n    'ispunct',\n    'isspace',\n    'isupper',\n    'isxdigit',\n    'labs',\n    'launder',\n    'ldexp',\n    'log',\n    'log10',\n    'make_pair',\n    'make_shared',\n    'make_shared_for_overwrite',\n    'make_tuple',\n    'make_unique',\n    'malloc',\n    'memchr',\n    'memcmp',\n    'memcpy',\n    'memset',\n    'modf',\n    'move',\n    'pow',\n    'printf',\n    'putchar',\n    'puts',\n    'realloc',\n    'scanf',\n    'sin',\n    'sinh',\n    'snprintf',\n    'sprintf',\n    'sqrt',\n    'sscanf',\n    'std',\n    'stderr',\n    'stdin',\n    'stdout',\n    'strcat',\n    'strchr',\n    'strcmp',\n    'strcpy',\n    'strcspn',\n    'strlen',\n    'strncat',\n    'strncmp',\n    'strncpy',\n    'strpbrk',\n    'strrchr',\n    'strspn',\n    'strstr',\n    'swap',\n    'tan',\n    'tanh',\n    'terminate',\n    'to_underlying',\n    'tolower',\n    'toupper',\n    'vfprintf',\n    'visit',\n    'vprintf',\n    'vsprintf'\n  ];\n\n  const LITERALS = [\n    'NULL',\n    'false',\n    'nullopt',\n    'nullptr',\n    'true'\n  ];\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const BUILT_IN = [ '_Pragma' ];\n\n  const CPP_KEYWORDS = {\n    type: RESERVED_TYPES,\n    keyword: RESERVED_KEYWORDS,\n    literal: LITERALS,\n    built_in: BUILT_IN,\n    _type_hints: TYPE_HINTS\n  };\n\n  const FUNCTION_DISPATCH = {\n    className: 'function.dispatch',\n    relevance: 0,\n    keywords: {\n      // Only for relevance, not highlighting.\n      _hint: FUNCTION_HINTS },\n    begin: regex.concat(\n      /\\b/,\n      /(?!decltype)/,\n      /(?!if)/,\n      /(?!for)/,\n      /(?!switch)/,\n      /(?!while)/,\n      hljs.IDENT_RE,\n      regex.lookahead(/(<[^<>]+>|)\\s*\\(/))\n  };\n\n  const EXPRESSION_CONTAINS = [\n    FUNCTION_DISPATCH,\n    PREPROCESSOR,\n    CPP_PRIMITIVE_TYPES,\n    C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    NUMBERS,\n    STRINGS\n  ];\n\n  const EXPRESSION_CONTEXT = {\n    // This mode covers expression context where we can't expect a function\n    // definition and shouldn't highlight anything that looks like one:\n    // `return some()`, `else if()`, `(x*sum(1, 2))`\n    variants: [\n      {\n        begin: /=/,\n        end: /;/\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/\n      },\n      {\n        beginKeywords: 'new throw return else',\n        end: /;/\n      }\n    ],\n    keywords: CPP_KEYWORDS,\n    contains: EXPRESSION_CONTAINS.concat([\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: CPP_KEYWORDS,\n        contains: EXPRESSION_CONTAINS.concat([ 'self' ]),\n        relevance: 0\n      }\n    ]),\n    relevance: 0\n  };\n\n  const FUNCTION_DECLARATION = {\n    className: 'function',\n    begin: '(' + FUNCTION_TYPE_RE + '[\\\\*&\\\\s]+)+' + FUNCTION_TITLE,\n    returnBegin: true,\n    end: /[{;=]/,\n    excludeEnd: true,\n    keywords: CPP_KEYWORDS,\n    illegal: /[^\\w\\s\\*&:<>.]/,\n    contains: [\n      { // to prevent it from being confused as the function title\n        begin: DECLTYPE_AUTO_RE,\n        keywords: CPP_KEYWORDS,\n        relevance: 0\n      },\n      {\n        begin: FUNCTION_TITLE,\n        returnBegin: true,\n        contains: [ TITLE_MODE ],\n        relevance: 0\n      },\n      // needed because we do not have look-behind on the below rule\n      // to prevent it from grabbing the final : in a :: pair\n      {\n        begin: /::/,\n        relevance: 0\n      },\n      // initializers\n      {\n        begin: /:/,\n        endsWithParent: true,\n        contains: [\n          STRINGS,\n          NUMBERS\n        ]\n      },\n      // allow for multiple declarations, e.g.:\n      // extern void f(int), g(char);\n      {\n        relevance: 0,\n        match: /,/\n      },\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: CPP_KEYWORDS,\n        relevance: 0,\n        contains: [\n          C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          STRINGS,\n          NUMBERS,\n          CPP_PRIMITIVE_TYPES,\n          // Count matching parentheses.\n          {\n            begin: /\\(/,\n            end: /\\)/,\n            keywords: CPP_KEYWORDS,\n            relevance: 0,\n            contains: [\n              'self',\n              C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRINGS,\n              NUMBERS,\n              CPP_PRIMITIVE_TYPES\n            ]\n          }\n        ]\n      },\n      CPP_PRIMITIVE_TYPES,\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      PREPROCESSOR\n    ]\n  };\n\n  return {\n    name: 'C++',\n    aliases: [\n      'cc',\n      'c++',\n      'h++',\n      'hpp',\n      'hh',\n      'hxx',\n      'cxx'\n    ],\n    keywords: CPP_KEYWORDS,\n    illegal: '</',\n    classNameAliases: { 'function.dispatch': 'built_in' },\n    contains: [].concat(\n      EXPRESSION_CONTEXT,\n      FUNCTION_DECLARATION,\n      FUNCTION_DISPATCH,\n      EXPRESSION_CONTAINS,\n      [\n        PREPROCESSOR,\n        { // containers: ie, `vector <int> rooms (9);`\n          begin: '\\\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array|tuple|optional|variant|function)\\\\s*<(?!<)',\n          end: '>',\n          keywords: CPP_KEYWORDS,\n          contains: [\n            'self',\n            CPP_PRIMITIVE_TYPES\n          ]\n        },\n        {\n          begin: hljs.IDENT_RE + '::',\n          keywords: CPP_KEYWORDS\n        },\n        {\n          match: [\n            // extra complexity to deal with `enum class` and `enum struct`\n            /\\b(?:enum(?:\\s+(?:class|struct))?|class|struct|union)/,\n            /\\s+/,\n            /\\w+/\n          ],\n          className: {\n            1: 'keyword',\n            3: 'title.class'\n          }\n        }\n      ])\n  };\n}\n\nexport { cpp as default };\n", "/*\nLanguage: C#\nAuthor: Jason Diamond <jason@diamond.name>\nContributor: Nicolas LLOBERA <nllobera@gmail.com>, Pieter Vantorre <pietervantorre@gmail.com>, David Pine <david.pine@microsoft.com>\nWebsite: https://docs.microsoft.com/dotnet/csharp/\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction csharp(hljs) {\n  const BUILT_IN_KEYWORDS = [\n    'bool',\n    'byte',\n    'char',\n    'decimal',\n    'delegate',\n    'double',\n    'dynamic',\n    'enum',\n    'float',\n    'int',\n    'long',\n    'nint',\n    'nuint',\n    'object',\n    'sbyte',\n    'short',\n    'string',\n    'ulong',\n    'uint',\n    'ushort'\n  ];\n  const FUNCTION_MODIFIERS = [\n    'public',\n    'private',\n    'protected',\n    'static',\n    'internal',\n    'protected',\n    'abstract',\n    'async',\n    'extern',\n    'override',\n    'unsafe',\n    'virtual',\n    'new',\n    'sealed',\n    'partial'\n  ];\n  const LITERAL_KEYWORDS = [\n    'default',\n    'false',\n    'null',\n    'true'\n  ];\n  const NORMAL_KEYWORDS = [\n    'abstract',\n    'as',\n    'base',\n    'break',\n    'case',\n    'catch',\n    'class',\n    'const',\n    'continue',\n    'do',\n    'else',\n    'event',\n    'explicit',\n    'extern',\n    'finally',\n    'fixed',\n    'for',\n    'foreach',\n    'goto',\n    'if',\n    'implicit',\n    'in',\n    'interface',\n    'internal',\n    'is',\n    'lock',\n    'namespace',\n    'new',\n    'operator',\n    'out',\n    'override',\n    'params',\n    'private',\n    'protected',\n    'public',\n    'readonly',\n    'record',\n    'ref',\n    'return',\n    'scoped',\n    'sealed',\n    'sizeof',\n    'stackalloc',\n    'static',\n    'struct',\n    'switch',\n    'this',\n    'throw',\n    'try',\n    'typeof',\n    'unchecked',\n    'unsafe',\n    'using',\n    'virtual',\n    'void',\n    'volatile',\n    'while'\n  ];\n  const CONTEXTUAL_KEYWORDS = [\n    'add',\n    'alias',\n    'and',\n    'ascending',\n    'async',\n    'await',\n    'by',\n    'descending',\n    'equals',\n    'from',\n    'get',\n    'global',\n    'group',\n    'init',\n    'into',\n    'join',\n    'let',\n    'nameof',\n    'not',\n    'notnull',\n    'on',\n    'or',\n    'orderby',\n    'partial',\n    'remove',\n    'select',\n    'set',\n    'unmanaged',\n    'value|0',\n    'var',\n    'when',\n    'where',\n    'with',\n    'yield'\n  ];\n\n  const KEYWORDS = {\n    keyword: NORMAL_KEYWORDS.concat(CONTEXTUAL_KEYWORDS),\n    built_in: BUILT_IN_KEYWORDS,\n    literal: LITERAL_KEYWORDS\n  };\n  const TITLE_MODE = hljs.inherit(hljs.TITLE_MODE, { begin: '[a-zA-Z](\\\\.?\\\\w)*' });\n  const NUMBERS = {\n    className: 'number',\n    variants: [\n      { begin: '\\\\b(0b[01\\']+)' },\n      { begin: '(-?)\\\\b([\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)(u|U|l|L|ul|UL|f|F|b|B)' },\n      { begin: '(-?)(\\\\b0[xX][a-fA-F0-9\\']+|(\\\\b[\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)([eE][-+]?[\\\\d\\']+)?)' }\n    ],\n    relevance: 0\n  };\n  const VERBATIM_STRING = {\n    className: 'string',\n    begin: '@\"',\n    end: '\"',\n    contains: [ { begin: '\"\"' } ]\n  };\n  const VERBATIM_STRING_NO_LF = hljs.inherit(VERBATIM_STRING, { illegal: /\\n/ });\n  const SUBST = {\n    className: 'subst',\n    begin: /\\{/,\n    end: /\\}/,\n    keywords: KEYWORDS\n  };\n  const SUBST_NO_LF = hljs.inherit(SUBST, { illegal: /\\n/ });\n  const INTERPOLATED_STRING = {\n    className: 'string',\n    begin: /\\$\"/,\n    end: '\"',\n    illegal: /\\n/,\n    contains: [\n      { begin: /\\{\\{/ },\n      { begin: /\\}\\}/ },\n      hljs.BACKSLASH_ESCAPE,\n      SUBST_NO_LF\n    ]\n  };\n  const INTERPOLATED_VERBATIM_STRING = {\n    className: 'string',\n    begin: /\\$@\"/,\n    end: '\"',\n    contains: [\n      { begin: /\\{\\{/ },\n      { begin: /\\}\\}/ },\n      { begin: '\"\"' },\n      SUBST\n    ]\n  };\n  const INTERPOLATED_VERBATIM_STRING_NO_LF = hljs.inherit(INTERPOLATED_VERBATIM_STRING, {\n    illegal: /\\n/,\n    contains: [\n      { begin: /\\{\\{/ },\n      { begin: /\\}\\}/ },\n      { begin: '\"\"' },\n      SUBST_NO_LF\n    ]\n  });\n  SUBST.contains = [\n    INTERPOLATED_VERBATIM_STRING,\n    INTERPOLATED_STRING,\n    VERBATIM_STRING,\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    NUMBERS,\n    hljs.C_BLOCK_COMMENT_MODE\n  ];\n  SUBST_NO_LF.contains = [\n    INTERPOLATED_VERBATIM_STRING_NO_LF,\n    INTERPOLATED_STRING,\n    VERBATIM_STRING_NO_LF,\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    NUMBERS,\n    hljs.inherit(hljs.C_BLOCK_COMMENT_MODE, { illegal: /\\n/ })\n  ];\n  const STRING = { variants: [\n    INTERPOLATED_VERBATIM_STRING,\n    INTERPOLATED_STRING,\n    VERBATIM_STRING,\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE\n  ] };\n\n  const GENERIC_MODIFIER = {\n    begin: \"<\",\n    end: \">\",\n    contains: [\n      { beginKeywords: \"in out\" },\n      TITLE_MODE\n    ]\n  };\n  const TYPE_IDENT_RE = hljs.IDENT_RE + '(<' + hljs.IDENT_RE + '(\\\\s*,\\\\s*' + hljs.IDENT_RE + ')*>)?(\\\\[\\\\])?';\n  const AT_IDENTIFIER = {\n    // prevents expressions like `@class` from incorrect flagging\n    // `class` as a keyword\n    begin: \"@\" + hljs.IDENT_RE,\n    relevance: 0\n  };\n\n  return {\n    name: 'C#',\n    aliases: [\n      'cs',\n      'c#'\n    ],\n    keywords: KEYWORDS,\n    illegal: /::/,\n    contains: [\n      hljs.COMMENT(\n        '///',\n        '$',\n        {\n          returnBegin: true,\n          contains: [\n            {\n              className: 'doctag',\n              variants: [\n                {\n                  begin: '///',\n                  relevance: 0\n                },\n                { begin: '<!--|-->' },\n                {\n                  begin: '</?',\n                  end: '>'\n                }\n              ]\n            }\n          ]\n        }\n      ),\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'meta',\n        begin: '#',\n        end: '$',\n        keywords: { keyword: 'if else elif endif define undef warning error line region endregion pragma checksum' }\n      },\n      STRING,\n      NUMBERS,\n      {\n        beginKeywords: 'class interface',\n        relevance: 0,\n        end: /[{;=]/,\n        illegal: /[^\\s:,]/,\n        contains: [\n          { beginKeywords: \"where class\" },\n          TITLE_MODE,\n          GENERIC_MODIFIER,\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        beginKeywords: 'namespace',\n        relevance: 0,\n        end: /[{;=]/,\n        illegal: /[^\\s:]/,\n        contains: [\n          TITLE_MODE,\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        beginKeywords: 'record',\n        relevance: 0,\n        end: /[{;=]/,\n        illegal: /[^\\s:]/,\n        contains: [\n          TITLE_MODE,\n          GENERIC_MODIFIER,\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        // [Attributes(\"\")]\n        className: 'meta',\n        begin: '^\\\\s*\\\\[(?=[\\\\w])',\n        excludeBegin: true,\n        end: '\\\\]',\n        excludeEnd: true,\n        contains: [\n          {\n            className: 'string',\n            begin: /\"/,\n            end: /\"/\n          }\n        ]\n      },\n      {\n        // Expression keywords prevent 'keyword Name(...)' from being\n        // recognized as a function definition\n        beginKeywords: 'new return throw await else',\n        relevance: 0\n      },\n      {\n        className: 'function',\n        begin: '(' + TYPE_IDENT_RE + '\\\\s+)+' + hljs.IDENT_RE + '\\\\s*(<[^=]+>\\\\s*)?\\\\(',\n        returnBegin: true,\n        end: /\\s*[{;=]/,\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        contains: [\n          // prevents these from being highlighted `title`\n          {\n            beginKeywords: FUNCTION_MODIFIERS.join(\" \"),\n            relevance: 0\n          },\n          {\n            begin: hljs.IDENT_RE + '\\\\s*(<[^=]+>\\\\s*)?\\\\(',\n            returnBegin: true,\n            contains: [\n              hljs.TITLE_MODE,\n              GENERIC_MODIFIER\n            ],\n            relevance: 0\n          },\n          { match: /\\(\\)/ },\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            excludeBegin: true,\n            excludeEnd: true,\n            keywords: KEYWORDS,\n            relevance: 0,\n            contains: [\n              STRING,\n              NUMBERS,\n              hljs.C_BLOCK_COMMENT_MODE\n            ]\n          },\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      AT_IDENTIFIER\n    ]\n  };\n}\n\nexport { csharp as default };\n", "const MODES = (hljs) => {\n  return {\n    IMPORTANT: {\n      scope: 'meta',\n      begin: '!important'\n    },\n    BLOCK_COMMENT: hljs.C_BLOCK_COMMENT_MODE,\n    HEXCOLOR: {\n      scope: 'number',\n      begin: /#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\\b/\n    },\n    FUNCTION_DISPATCH: {\n      className: \"built_in\",\n      begin: /[\\w-]+(?=\\()/\n    },\n    ATTRIBUTE_SELECTOR_MODE: {\n      scope: 'selector-attr',\n      begin: /\\[/,\n      end: /\\]/,\n      illegal: '$',\n      contains: [\n        hljs.APOS_STRING_MODE,\n        hljs.QUOTE_STRING_MODE\n      ]\n    },\n    CSS_NUMBER_MODE: {\n      scope: 'number',\n      begin: hljs.NUMBER_RE + '(' +\n        '%|em|ex|ch|rem' +\n        '|vw|vh|vmin|vmax' +\n        '|cm|mm|in|pt|pc|px' +\n        '|deg|grad|rad|turn' +\n        '|s|ms' +\n        '|Hz|kHz' +\n        '|dpi|dpcm|dppx' +\n        ')?',\n      relevance: 0\n    },\n    CSS_VARIABLE: {\n      className: \"attr\",\n      begin: /--[A-Za-z][A-Za-z0-9_-]*/\n    }\n  };\n};\n\nconst TAGS = [\n  'a',\n  'abbr',\n  'address',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'blockquote',\n  'body',\n  'button',\n  'canvas',\n  'caption',\n  'cite',\n  'code',\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'div',\n  'dl',\n  'dt',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'header',\n  'hgroup',\n  'html',\n  'i',\n  'iframe',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'mark',\n  'menu',\n  'nav',\n  'object',\n  'ol',\n  'p',\n  'q',\n  'quote',\n  'samp',\n  'section',\n  'span',\n  'strong',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'ul',\n  'var',\n  'video'\n];\n\nconst MEDIA_FEATURES = [\n  'any-hover',\n  'any-pointer',\n  'aspect-ratio',\n  'color',\n  'color-gamut',\n  'color-index',\n  'device-aspect-ratio',\n  'device-height',\n  'device-width',\n  'display-mode',\n  'forced-colors',\n  'grid',\n  'height',\n  'hover',\n  'inverted-colors',\n  'monochrome',\n  'orientation',\n  'overflow-block',\n  'overflow-inline',\n  'pointer',\n  'prefers-color-scheme',\n  'prefers-contrast',\n  'prefers-reduced-motion',\n  'prefers-reduced-transparency',\n  'resolution',\n  'scan',\n  'scripting',\n  'update',\n  'width',\n  // TODO: find a better solution?\n  'min-width',\n  'max-width',\n  'min-height',\n  'max-height'\n];\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes\nconst PSEUDO_CLASSES = [\n  'active',\n  'any-link',\n  'blank',\n  'checked',\n  'current',\n  'default',\n  'defined',\n  'dir', // dir()\n  'disabled',\n  'drop',\n  'empty',\n  'enabled',\n  'first',\n  'first-child',\n  'first-of-type',\n  'fullscreen',\n  'future',\n  'focus',\n  'focus-visible',\n  'focus-within',\n  'has', // has()\n  'host', // host or host()\n  'host-context', // host-context()\n  'hover',\n  'indeterminate',\n  'in-range',\n  'invalid',\n  'is', // is()\n  'lang', // lang()\n  'last-child',\n  'last-of-type',\n  'left',\n  'link',\n  'local-link',\n  'not', // not()\n  'nth-child', // nth-child()\n  'nth-col', // nth-col()\n  'nth-last-child', // nth-last-child()\n  'nth-last-col', // nth-last-col()\n  'nth-last-of-type', //nth-last-of-type()\n  'nth-of-type', //nth-of-type()\n  'only-child',\n  'only-of-type',\n  'optional',\n  'out-of-range',\n  'past',\n  'placeholder-shown',\n  'read-only',\n  'read-write',\n  'required',\n  'right',\n  'root',\n  'scope',\n  'target',\n  'target-within',\n  'user-invalid',\n  'valid',\n  'visited',\n  'where' // where()\n];\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements\nconst PSEUDO_ELEMENTS = [\n  'after',\n  'backdrop',\n  'before',\n  'cue',\n  'cue-region',\n  'first-letter',\n  'first-line',\n  'grammar-error',\n  'marker',\n  'part',\n  'placeholder',\n  'selection',\n  'slotted',\n  'spelling-error'\n];\n\nconst ATTRIBUTES = [\n  'align-content',\n  'align-items',\n  'align-self',\n  'all',\n  'animation',\n  'animation-delay',\n  'animation-direction',\n  'animation-duration',\n  'animation-fill-mode',\n  'animation-iteration-count',\n  'animation-name',\n  'animation-play-state',\n  'animation-timing-function',\n  'backface-visibility',\n  'background',\n  'background-attachment',\n  'background-blend-mode',\n  'background-clip',\n  'background-color',\n  'background-image',\n  'background-origin',\n  'background-position',\n  'background-repeat',\n  'background-size',\n  'block-size',\n  'border',\n  'border-block',\n  'border-block-color',\n  'border-block-end',\n  'border-block-end-color',\n  'border-block-end-style',\n  'border-block-end-width',\n  'border-block-start',\n  'border-block-start-color',\n  'border-block-start-style',\n  'border-block-start-width',\n  'border-block-style',\n  'border-block-width',\n  'border-bottom',\n  'border-bottom-color',\n  'border-bottom-left-radius',\n  'border-bottom-right-radius',\n  'border-bottom-style',\n  'border-bottom-width',\n  'border-collapse',\n  'border-color',\n  'border-image',\n  'border-image-outset',\n  'border-image-repeat',\n  'border-image-slice',\n  'border-image-source',\n  'border-image-width',\n  'border-inline',\n  'border-inline-color',\n  'border-inline-end',\n  'border-inline-end-color',\n  'border-inline-end-style',\n  'border-inline-end-width',\n  'border-inline-start',\n  'border-inline-start-color',\n  'border-inline-start-style',\n  'border-inline-start-width',\n  'border-inline-style',\n  'border-inline-width',\n  'border-left',\n  'border-left-color',\n  'border-left-style',\n  'border-left-width',\n  'border-radius',\n  'border-right',\n  'border-right-color',\n  'border-right-style',\n  'border-right-width',\n  'border-spacing',\n  'border-style',\n  'border-top',\n  'border-top-color',\n  'border-top-left-radius',\n  'border-top-right-radius',\n  'border-top-style',\n  'border-top-width',\n  'border-width',\n  'bottom',\n  'box-decoration-break',\n  'box-shadow',\n  'box-sizing',\n  'break-after',\n  'break-before',\n  'break-inside',\n  'caption-side',\n  'caret-color',\n  'clear',\n  'clip',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'column-count',\n  'column-fill',\n  'column-gap',\n  'column-rule',\n  'column-rule-color',\n  'column-rule-style',\n  'column-rule-width',\n  'column-span',\n  'column-width',\n  'columns',\n  'contain',\n  'content',\n  'content-visibility',\n  'counter-increment',\n  'counter-reset',\n  'cue',\n  'cue-after',\n  'cue-before',\n  'cursor',\n  'direction',\n  'display',\n  'empty-cells',\n  'filter',\n  'flex',\n  'flex-basis',\n  'flex-direction',\n  'flex-flow',\n  'flex-grow',\n  'flex-shrink',\n  'flex-wrap',\n  'float',\n  'flow',\n  'font',\n  'font-display',\n  'font-family',\n  'font-feature-settings',\n  'font-kerning',\n  'font-language-override',\n  'font-size',\n  'font-size-adjust',\n  'font-smoothing',\n  'font-stretch',\n  'font-style',\n  'font-synthesis',\n  'font-variant',\n  'font-variant-caps',\n  'font-variant-east-asian',\n  'font-variant-ligatures',\n  'font-variant-numeric',\n  'font-variant-position',\n  'font-variation-settings',\n  'font-weight',\n  'gap',\n  'glyph-orientation-vertical',\n  'grid',\n  'grid-area',\n  'grid-auto-columns',\n  'grid-auto-flow',\n  'grid-auto-rows',\n  'grid-column',\n  'grid-column-end',\n  'grid-column-start',\n  'grid-gap',\n  'grid-row',\n  'grid-row-end',\n  'grid-row-start',\n  'grid-template',\n  'grid-template-areas',\n  'grid-template-columns',\n  'grid-template-rows',\n  'hanging-punctuation',\n  'height',\n  'hyphens',\n  'icon',\n  'image-orientation',\n  'image-rendering',\n  'image-resolution',\n  'ime-mode',\n  'inline-size',\n  'isolation',\n  'justify-content',\n  'left',\n  'letter-spacing',\n  'line-break',\n  'line-height',\n  'list-style',\n  'list-style-image',\n  'list-style-position',\n  'list-style-type',\n  'margin',\n  'margin-block',\n  'margin-block-end',\n  'margin-block-start',\n  'margin-bottom',\n  'margin-inline',\n  'margin-inline-end',\n  'margin-inline-start',\n  'margin-left',\n  'margin-right',\n  'margin-top',\n  'marks',\n  'mask',\n  'mask-border',\n  'mask-border-mode',\n  'mask-border-outset',\n  'mask-border-repeat',\n  'mask-border-slice',\n  'mask-border-source',\n  'mask-border-width',\n  'mask-clip',\n  'mask-composite',\n  'mask-image',\n  'mask-mode',\n  'mask-origin',\n  'mask-position',\n  'mask-repeat',\n  'mask-size',\n  'mask-type',\n  'max-block-size',\n  'max-height',\n  'max-inline-size',\n  'max-width',\n  'min-block-size',\n  'min-height',\n  'min-inline-size',\n  'min-width',\n  'mix-blend-mode',\n  'nav-down',\n  'nav-index',\n  'nav-left',\n  'nav-right',\n  'nav-up',\n  'none',\n  'normal',\n  'object-fit',\n  'object-position',\n  'opacity',\n  'order',\n  'orphans',\n  'outline',\n  'outline-color',\n  'outline-offset',\n  'outline-style',\n  'outline-width',\n  'overflow',\n  'overflow-wrap',\n  'overflow-x',\n  'overflow-y',\n  'padding',\n  'padding-block',\n  'padding-block-end',\n  'padding-block-start',\n  'padding-bottom',\n  'padding-inline',\n  'padding-inline-end',\n  'padding-inline-start',\n  'padding-left',\n  'padding-right',\n  'padding-top',\n  'page-break-after',\n  'page-break-before',\n  'page-break-inside',\n  'pause',\n  'pause-after',\n  'pause-before',\n  'perspective',\n  'perspective-origin',\n  'pointer-events',\n  'position',\n  'quotes',\n  'resize',\n  'rest',\n  'rest-after',\n  'rest-before',\n  'right',\n  'row-gap',\n  'scroll-margin',\n  'scroll-margin-block',\n  'scroll-margin-block-end',\n  'scroll-margin-block-start',\n  'scroll-margin-bottom',\n  'scroll-margin-inline',\n  'scroll-margin-inline-end',\n  'scroll-margin-inline-start',\n  'scroll-margin-left',\n  'scroll-margin-right',\n  'scroll-margin-top',\n  'scroll-padding',\n  'scroll-padding-block',\n  'scroll-padding-block-end',\n  'scroll-padding-block-start',\n  'scroll-padding-bottom',\n  'scroll-padding-inline',\n  'scroll-padding-inline-end',\n  'scroll-padding-inline-start',\n  'scroll-padding-left',\n  'scroll-padding-right',\n  'scroll-padding-top',\n  'scroll-snap-align',\n  'scroll-snap-stop',\n  'scroll-snap-type',\n  'scrollbar-color',\n  'scrollbar-gutter',\n  'scrollbar-width',\n  'shape-image-threshold',\n  'shape-margin',\n  'shape-outside',\n  'speak',\n  'speak-as',\n  'src', // @font-face\n  'tab-size',\n  'table-layout',\n  'text-align',\n  'text-align-all',\n  'text-align-last',\n  'text-combine-upright',\n  'text-decoration',\n  'text-decoration-color',\n  'text-decoration-line',\n  'text-decoration-style',\n  'text-emphasis',\n  'text-emphasis-color',\n  'text-emphasis-position',\n  'text-emphasis-style',\n  'text-indent',\n  'text-justify',\n  'text-orientation',\n  'text-overflow',\n  'text-rendering',\n  'text-shadow',\n  'text-transform',\n  'text-underline-position',\n  'top',\n  'transform',\n  'transform-box',\n  'transform-origin',\n  'transform-style',\n  'transition',\n  'transition-delay',\n  'transition-duration',\n  'transition-property',\n  'transition-timing-function',\n  'unicode-bidi',\n  'vertical-align',\n  'visibility',\n  'voice-balance',\n  'voice-duration',\n  'voice-family',\n  'voice-pitch',\n  'voice-range',\n  'voice-rate',\n  'voice-stress',\n  'voice-volume',\n  'white-space',\n  'widows',\n  'width',\n  'will-change',\n  'word-break',\n  'word-spacing',\n  'word-wrap',\n  'writing-mode',\n  'z-index'\n  // reverse makes sure longer attributes `font-weight` are matched fully\n  // instead of getting false positives on say `font`\n].reverse();\n\n/*\nLanguage: CSS\nCategory: common, css, web\nWebsite: https://developer.mozilla.org/en-US/docs/Web/CSS\n*/\n\n/** @type LanguageFn */\nfunction css(hljs) {\n  const regex = hljs.regex;\n  const modes = MODES(hljs);\n  const VENDOR_PREFIX = { begin: /-(webkit|moz|ms|o)-(?=[a-z])/ };\n  const AT_MODIFIERS = \"and or not only\";\n  const AT_PROPERTY_RE = /@-?\\w[\\w]*(-\\w+)*/; // @-webkit-keyframes\n  const IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';\n  const STRINGS = [\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE\n  ];\n\n  return {\n    name: 'CSS',\n    case_insensitive: true,\n    illegal: /[=|'\\$]/,\n    keywords: { keyframePosition: \"from to\" },\n    classNameAliases: {\n      // for visual continuity with `tag {}` and because we\n      // don't have a great class for this?\n      keyframePosition: \"selector-tag\" },\n    contains: [\n      modes.BLOCK_COMMENT,\n      VENDOR_PREFIX,\n      // to recognize keyframe 40% etc which are outside the scope of our\n      // attribute value mode\n      modes.CSS_NUMBER_MODE,\n      {\n        className: 'selector-id',\n        begin: /#[A-Za-z0-9_-]+/,\n        relevance: 0\n      },\n      {\n        className: 'selector-class',\n        begin: '\\\\.' + IDENT_RE,\n        relevance: 0\n      },\n      modes.ATTRIBUTE_SELECTOR_MODE,\n      {\n        className: 'selector-pseudo',\n        variants: [\n          { begin: ':(' + PSEUDO_CLASSES.join('|') + ')' },\n          { begin: ':(:)?(' + PSEUDO_ELEMENTS.join('|') + ')' }\n        ]\n      },\n      // we may actually need this (12/2020)\n      // { // pseudo-selector params\n      //   begin: /\\(/,\n      //   end: /\\)/,\n      //   contains: [ hljs.CSS_NUMBER_MODE ]\n      // },\n      modes.CSS_VARIABLE,\n      {\n        className: 'attribute',\n        begin: '\\\\b(' + ATTRIBUTES.join('|') + ')\\\\b'\n      },\n      // attribute values\n      {\n        begin: /:/,\n        end: /[;}{]/,\n        contains: [\n          modes.BLOCK_COMMENT,\n          modes.HEXCOLOR,\n          modes.IMPORTANT,\n          modes.CSS_NUMBER_MODE,\n          ...STRINGS,\n          // needed to highlight these as strings and to avoid issues with\n          // illegal characters that might be inside urls that would tigger the\n          // languages illegal stack\n          {\n            begin: /(url|data-uri)\\(/,\n            end: /\\)/,\n            relevance: 0, // from keywords\n            keywords: { built_in: \"url data-uri\" },\n            contains: [\n              ...STRINGS,\n              {\n                className: \"string\",\n                // any character other than `)` as in `url()` will be the start\n                // of a string, which ends with `)` (from the parent mode)\n                begin: /[^)]/,\n                endsWithParent: true,\n                excludeEnd: true\n              }\n            ]\n          },\n          modes.FUNCTION_DISPATCH\n        ]\n      },\n      {\n        begin: regex.lookahead(/@/),\n        end: '[{;]',\n        relevance: 0,\n        illegal: /:/, // break on Less variables @var: ...\n        contains: [\n          {\n            className: 'keyword',\n            begin: AT_PROPERTY_RE\n          },\n          {\n            begin: /\\s/,\n            endsWithParent: true,\n            excludeEnd: true,\n            relevance: 0,\n            keywords: {\n              $pattern: /[a-z-]+/,\n              keyword: AT_MODIFIERS,\n              attribute: MEDIA_FEATURES.join(\" \")\n            },\n            contains: [\n              {\n                begin: /[a-z-]+(?=:)/,\n                className: \"attribute\"\n              },\n              ...STRINGS,\n              modes.CSS_NUMBER_MODE\n            ]\n          }\n        ]\n      },\n      {\n        className: 'selector-tag',\n        begin: '\\\\b(' + TAGS.join('|') + ')\\\\b'\n      }\n    ]\n  };\n}\n\nexport { css as default };\n", "/*\nLanguage: Diff\nDescription: Unified and context diff\nAuthor: Vasily Polovnyov <vast@whiteants.net>\nWebsite: https://www.gnu.org/software/diffutils/\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction diff(hljs) {\n  const regex = hljs.regex;\n  return {\n    name: 'Diff',\n    aliases: [ 'patch' ],\n    contains: [\n      {\n        className: 'meta',\n        relevance: 10,\n        match: regex.either(\n          /^@@ +-\\d+,\\d+ +\\+\\d+,\\d+ +@@/,\n          /^\\*\\*\\* +\\d+,\\d+ +\\*\\*\\*\\*$/,\n          /^--- +\\d+,\\d+ +----$/\n        )\n      },\n      {\n        className: 'comment',\n        variants: [\n          {\n            begin: regex.either(\n              /Index: /,\n              /^index/,\n              /={3,}/,\n              /^-{3}/,\n              /^\\*{3} /,\n              /^\\+{3}/,\n              /^diff --git/\n            ),\n            end: /$/\n          },\n          { match: /^\\*{15}$/ }\n        ]\n      },\n      {\n        className: 'addition',\n        begin: /^\\+/,\n        end: /$/\n      },\n      {\n        className: 'deletion',\n        begin: /^-/,\n        end: /$/\n      },\n      {\n        className: 'addition',\n        begin: /^!/,\n        end: /$/\n      }\n    ]\n  };\n}\n\nexport { diff as default };\n", "/*\nLanguage: Go\nAuthor: Stephan Kountso aka StepLg <steplg@gmail.com>\nContributors: Evgeny Stepanischev <imbolk@gmail.com>\nDescription: Google go language (golang). For info about language\nWebsite: http://golang.org/\nCategory: common, system\n*/\n\nfunction go(hljs) {\n  const LITERALS = [\n    \"true\",\n    \"false\",\n    \"iota\",\n    \"nil\"\n  ];\n  const BUILT_INS = [\n    \"append\",\n    \"cap\",\n    \"close\",\n    \"complex\",\n    \"copy\",\n    \"imag\",\n    \"len\",\n    \"make\",\n    \"new\",\n    \"panic\",\n    \"print\",\n    \"println\",\n    \"real\",\n    \"recover\",\n    \"delete\"\n  ];\n  const TYPES = [\n    \"bool\",\n    \"byte\",\n    \"complex64\",\n    \"complex128\",\n    \"error\",\n    \"float32\",\n    \"float64\",\n    \"int8\",\n    \"int16\",\n    \"int32\",\n    \"int64\",\n    \"string\",\n    \"uint8\",\n    \"uint16\",\n    \"uint32\",\n    \"uint64\",\n    \"int\",\n    \"uint\",\n    \"uintptr\",\n    \"rune\"\n  ];\n  const KWS = [\n    \"break\",\n    \"case\",\n    \"chan\",\n    \"const\",\n    \"continue\",\n    \"default\",\n    \"defer\",\n    \"else\",\n    \"fallthrough\",\n    \"for\",\n    \"func\",\n    \"go\",\n    \"goto\",\n    \"if\",\n    \"import\",\n    \"interface\",\n    \"map\",\n    \"package\",\n    \"range\",\n    \"return\",\n    \"select\",\n    \"struct\",\n    \"switch\",\n    \"type\",\n    \"var\",\n  ];\n  const KEYWORDS = {\n    keyword: KWS,\n    type: TYPES,\n    literal: LITERALS,\n    built_in: BUILT_INS\n  };\n  return {\n    name: 'Go',\n    aliases: [ 'golang' ],\n    keywords: KEYWORDS,\n    illegal: '</',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'string',\n        variants: [\n          hljs.QUOTE_STRING_MODE,\n          hljs.APOS_STRING_MODE,\n          {\n            begin: '`',\n            end: '`'\n          }\n        ]\n      },\n      {\n        className: 'number',\n        variants: [\n          {\n            begin: hljs.C_NUMBER_RE + '[i]',\n            relevance: 1\n          },\n          hljs.C_NUMBER_MODE\n        ]\n      },\n      { begin: /:=/ // relevance booster\n      },\n      {\n        className: 'function',\n        beginKeywords: 'func',\n        end: '\\\\s*(\\\\{|$)',\n        excludeEnd: true,\n        contains: [\n          hljs.TITLE_MODE,\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            endsParent: true,\n            keywords: KEYWORDS,\n            illegal: /[\"']/\n          }\n        ]\n      }\n    ]\n  };\n}\n\nexport { go as default };\n", "/*\n Language: GraphQL\n Author: John Foster (GH jf990), and others\n Description: GraphQL is a query language for APIs\n Category: web, common\n*/\n\n/** @type LanguageFn */\nfunction graphql(hljs) {\n  const regex = hljs.regex;\n  const GQL_NAME = /[_A-Za-z][_0-9A-Za-z]*/;\n  return {\n    name: \"GraphQL\",\n    aliases: [ \"gql\" ],\n    case_insensitive: true,\n    disableAutodetect: false,\n    keywords: {\n      keyword: [\n        \"query\",\n        \"mutation\",\n        \"subscription\",\n        \"type\",\n        \"input\",\n        \"schema\",\n        \"directive\",\n        \"interface\",\n        \"union\",\n        \"scalar\",\n        \"fragment\",\n        \"enum\",\n        \"on\"\n      ],\n      literal: [\n        \"true\",\n        \"false\",\n        \"null\"\n      ]\n    },\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.NUMBER_MODE,\n      {\n        scope: \"punctuation\",\n        match: /[.]{3}/,\n        relevance: 0\n      },\n      {\n        scope: \"punctuation\",\n        begin: /[\\!\\(\\)\\:\\=\\[\\]\\{\\|\\}]{1}/,\n        relevance: 0\n      },\n      {\n        scope: \"variable\",\n        begin: /\\$/,\n        end: /\\W/,\n        excludeEnd: true,\n        relevance: 0\n      },\n      {\n        scope: \"meta\",\n        match: /@\\w+/,\n        excludeEnd: true\n      },\n      {\n        scope: \"symbol\",\n        begin: regex.concat(GQL_NAME, regex.lookahead(/\\s*:/)),\n        relevance: 0\n      }\n    ],\n    illegal: [\n      /[;<']/,\n      /BEGIN/\n    ]\n  };\n}\n\nexport { graphql as default };\n", "/*\nLanguage: TOML, also INI\nDescription: TOML aims to be a minimal configuration file format that's easy to read due to obvious semantics.\nContributors: Guillaume Gomez <guillaume1.gomez@gmail.com>\nCategory: common, config\nWebsite: https://github.com/toml-lang/toml\n*/\n\nfunction ini(hljs) {\n  const regex = hljs.regex;\n  const NUMBERS = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      { begin: /([+-]+)?[\\d]+_[\\d_]+/ },\n      { begin: hljs.NUMBER_RE }\n    ]\n  };\n  const COMMENTS = hljs.COMMENT();\n  COMMENTS.variants = [\n    {\n      begin: /;/,\n      end: /$/\n    },\n    {\n      begin: /#/,\n      end: /$/\n    }\n  ];\n  const VARIABLES = {\n    className: 'variable',\n    variants: [\n      { begin: /\\$[\\w\\d\"][\\w\\d_]*/ },\n      { begin: /\\$\\{(.*?)\\}/ }\n    ]\n  };\n  const LITERALS = {\n    className: 'literal',\n    begin: /\\bon|off|true|false|yes|no\\b/\n  };\n  const STRINGS = {\n    className: \"string\",\n    contains: [ hljs.BACKSLASH_ESCAPE ],\n    variants: [\n      {\n        begin: \"'''\",\n        end: \"'''\",\n        relevance: 10\n      },\n      {\n        begin: '\"\"\"',\n        end: '\"\"\"',\n        relevance: 10\n      },\n      {\n        begin: '\"',\n        end: '\"'\n      },\n      {\n        begin: \"'\",\n        end: \"'\"\n      }\n    ]\n  };\n  const ARRAY = {\n    begin: /\\[/,\n    end: /\\]/,\n    contains: [\n      COMMENTS,\n      LITERALS,\n      VARIABLES,\n      STRINGS,\n      NUMBERS,\n      'self'\n    ],\n    relevance: 0\n  };\n\n  const BARE_KEY = /[A-Za-z0-9_-]+/;\n  const QUOTED_KEY_DOUBLE_QUOTE = /\"(\\\\\"|[^\"])*\"/;\n  const QUOTED_KEY_SINGLE_QUOTE = /'[^']*'/;\n  const ANY_KEY = regex.either(\n    BARE_KEY, QUOTED_KEY_DOUBLE_QUOTE, QUOTED_KEY_SINGLE_QUOTE\n  );\n  const DOTTED_KEY = regex.concat(\n    ANY_KEY, '(\\\\s*\\\\.\\\\s*', ANY_KEY, ')*',\n    regex.lookahead(/\\s*=\\s*[^#\\s]/)\n  );\n\n  return {\n    name: 'TOML, also INI',\n    aliases: [ 'toml' ],\n    case_insensitive: true,\n    illegal: /\\S/,\n    contains: [\n      COMMENTS,\n      {\n        className: 'section',\n        begin: /\\[+/,\n        end: /\\]+/\n      },\n      {\n        begin: DOTTED_KEY,\n        className: 'attr',\n        starts: {\n          end: /$/,\n          contains: [\n            COMMENTS,\n            ARRAY,\n            LITERALS,\n            VARIABLES,\n            STRINGS,\n            NUMBERS\n          ]\n        }\n      }\n    ]\n  };\n}\n\nexport { ini as default };\n", "// https://docs.oracle.com/javase/specs/jls/se15/html/jls-3.html#jls-3.10\nvar decimalDigits = '[0-9](_*[0-9])*';\nvar frac = `\\\\.(${decimalDigits})`;\nvar hexDigits = '[0-9a-fA-F](_*[0-9a-fA-F])*';\nvar NUMERIC = {\n  className: 'number',\n  variants: [\n    // DecimalFloatingPointLiteral\n    // including ExponentPart\n    { begin: `(\\\\b(${decimalDigits})((${frac})|\\\\.)?|(${frac}))` +\n      `[eE][+-]?(${decimalDigits})[fFdD]?\\\\b` },\n    // excluding ExponentPart\n    { begin: `\\\\b(${decimalDigits})((${frac})[fFdD]?\\\\b|\\\\.([fFdD]\\\\b)?)` },\n    { begin: `(${frac})[fFdD]?\\\\b` },\n    { begin: `\\\\b(${decimalDigits})[fFdD]\\\\b` },\n\n    // HexadecimalFloatingPointLiteral\n    { begin: `\\\\b0[xX]((${hexDigits})\\\\.?|(${hexDigits})?\\\\.(${hexDigits}))` +\n      `[pP][+-]?(${decimalDigits})[fFdD]?\\\\b` },\n\n    // DecimalIntegerLiteral\n    { begin: '\\\\b(0|[1-9](_*[0-9])*)[lL]?\\\\b' },\n\n    // HexIntegerLiteral\n    { begin: `\\\\b0[xX](${hexDigits})[lL]?\\\\b` },\n\n    // OctalIntegerLiteral\n    { begin: '\\\\b0(_*[0-7])*[lL]?\\\\b' },\n\n    // BinaryIntegerLiteral\n    { begin: '\\\\b0[bB][01](_*[01])*[lL]?\\\\b' },\n  ],\n  relevance: 0\n};\n\n/*\nLanguage: Java\nAuthor: Vsevolod Solovyov <vsevolod.solovyov@gmail.com>\nCategory: common, enterprise\nWebsite: https://www.java.com/\n*/\n\n/**\n * Allows recursive regex expressions to a given depth\n *\n * ie: recurRegex(\"(abc~~~)\", /~~~/g, 2) becomes:\n * (abc(abc(abc)))\n *\n * @param {string} re\n * @param {RegExp} substitution (should be a g mode regex)\n * @param {number} depth\n * @returns {string}``\n */\nfunction recurRegex(re, substitution, depth) {\n  if (depth === -1) return \"\";\n\n  return re.replace(substitution, _ => {\n    return recurRegex(re, substitution, depth - 1);\n  });\n}\n\n/** @type LanguageFn */\nfunction java(hljs) {\n  const regex = hljs.regex;\n  const JAVA_IDENT_RE = '[\\u00C0-\\u02B8a-zA-Z_$][\\u00C0-\\u02B8a-zA-Z_$0-9]*';\n  const GENERIC_IDENT_RE = JAVA_IDENT_RE\n    + recurRegex('(?:<' + JAVA_IDENT_RE + '~~~(?:\\\\s*,\\\\s*' + JAVA_IDENT_RE + '~~~)*>)?', /~~~/g, 2);\n  const MAIN_KEYWORDS = [\n    'synchronized',\n    'abstract',\n    'private',\n    'var',\n    'static',\n    'if',\n    'const ',\n    'for',\n    'while',\n    'strictfp',\n    'finally',\n    'protected',\n    'import',\n    'native',\n    'final',\n    'void',\n    'enum',\n    'else',\n    'break',\n    'transient',\n    'catch',\n    'instanceof',\n    'volatile',\n    'case',\n    'assert',\n    'package',\n    'default',\n    'public',\n    'try',\n    'switch',\n    'continue',\n    'throws',\n    'protected',\n    'public',\n    'private',\n    'module',\n    'requires',\n    'exports',\n    'do',\n    'sealed',\n    'yield',\n    'permits'\n  ];\n\n  const BUILT_INS = [\n    'super',\n    'this'\n  ];\n\n  const LITERALS = [\n    'false',\n    'true',\n    'null'\n  ];\n\n  const TYPES = [\n    'char',\n    'boolean',\n    'long',\n    'float',\n    'int',\n    'byte',\n    'short',\n    'double'\n  ];\n\n  const KEYWORDS = {\n    keyword: MAIN_KEYWORDS,\n    literal: LITERALS,\n    type: TYPES,\n    built_in: BUILT_INS\n  };\n\n  const ANNOTATION = {\n    className: 'meta',\n    begin: '@' + JAVA_IDENT_RE,\n    contains: [\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        contains: [ \"self\" ] // allow nested () inside our annotation\n      }\n    ]\n  };\n  const PARAMS = {\n    className: 'params',\n    begin: /\\(/,\n    end: /\\)/,\n    keywords: KEYWORDS,\n    relevance: 0,\n    contains: [ hljs.C_BLOCK_COMMENT_MODE ],\n    endsParent: true\n  };\n\n  return {\n    name: 'Java',\n    aliases: [ 'jsp' ],\n    keywords: KEYWORDS,\n    illegal: /<\\/|#/,\n    contains: [\n      hljs.COMMENT(\n        '/\\\\*\\\\*',\n        '\\\\*/',\n        {\n          relevance: 0,\n          contains: [\n            {\n              // eat up @'s in emails to prevent them to be recognized as doctags\n              begin: /\\w+@/,\n              relevance: 0\n            },\n            {\n              className: 'doctag',\n              begin: '@[A-Za-z]+'\n            }\n          ]\n        }\n      ),\n      // relevance boost\n      {\n        begin: /import java\\.[a-z]+\\./,\n        keywords: \"import\",\n        relevance: 2\n      },\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        begin: /\"\"\"/,\n        end: /\"\"\"/,\n        className: \"string\",\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        match: [\n          /\\b(?:class|interface|enum|extends|implements|new)/,\n          /\\s+/,\n          JAVA_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"title.class\"\n        }\n      },\n      {\n        // Exceptions for hyphenated keywords\n        match: /non-sealed/,\n        scope: \"keyword\"\n      },\n      {\n        begin: [\n          regex.concat(/(?!else)/, JAVA_IDENT_RE),\n          /\\s+/,\n          JAVA_IDENT_RE,\n          /\\s+/,\n          /=(?!=)/\n        ],\n        className: {\n          1: \"type\",\n          3: \"variable\",\n          5: \"operator\"\n        }\n      },\n      {\n        begin: [\n          /record/,\n          /\\s+/,\n          JAVA_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"title.class\"\n        },\n        contains: [\n          PARAMS,\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        // Expression keywords prevent 'keyword Name(...)' from being\n        // recognized as a function definition\n        beginKeywords: 'new throw return else',\n        relevance: 0\n      },\n      {\n        begin: [\n          '(?:' + GENERIC_IDENT_RE + '\\\\s+)',\n          hljs.UNDERSCORE_IDENT_RE,\n          /\\s*(?=\\()/\n        ],\n        className: { 2: \"title.function\" },\n        keywords: KEYWORDS,\n        contains: [\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            keywords: KEYWORDS,\n            relevance: 0,\n            contains: [\n              ANNOTATION,\n              hljs.APOS_STRING_MODE,\n              hljs.QUOTE_STRING_MODE,\n              NUMERIC,\n              hljs.C_BLOCK_COMMENT_MODE\n            ]\n          },\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      NUMERIC,\n      ANNOTATION\n    ]\n  };\n}\n\nexport { java as default };\n", "const IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\nconst KEYWORDS = [\n  \"as\", // for exports\n  \"in\",\n  \"of\",\n  \"if\",\n  \"for\",\n  \"while\",\n  \"finally\",\n  \"var\",\n  \"new\",\n  \"function\",\n  \"do\",\n  \"return\",\n  \"void\",\n  \"else\",\n  \"break\",\n  \"catch\",\n  \"instanceof\",\n  \"with\",\n  \"throw\",\n  \"case\",\n  \"default\",\n  \"try\",\n  \"switch\",\n  \"continue\",\n  \"typeof\",\n  \"delete\",\n  \"let\",\n  \"yield\",\n  \"const\",\n  \"class\",\n  // JS handles these with a special rule\n  // \"get\",\n  // \"set\",\n  \"debugger\",\n  \"async\",\n  \"await\",\n  \"static\",\n  \"import\",\n  \"from\",\n  \"export\",\n  \"extends\"\n];\nconst LITERALS = [\n  \"true\",\n  \"false\",\n  \"null\",\n  \"undefined\",\n  \"NaN\",\n  \"Infinity\"\n];\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\nconst TYPES = [\n  // Fundamental objects\n  \"Object\",\n  \"Function\",\n  \"Boolean\",\n  \"Symbol\",\n  // numbers and dates\n  \"Math\",\n  \"Date\",\n  \"Number\",\n  \"BigInt\",\n  // text\n  \"String\",\n  \"RegExp\",\n  // Indexed collections\n  \"Array\",\n  \"Float32Array\",\n  \"Float64Array\",\n  \"Int8Array\",\n  \"Uint8Array\",\n  \"Uint8ClampedArray\",\n  \"Int16Array\",\n  \"Int32Array\",\n  \"Uint16Array\",\n  \"Uint32Array\",\n  \"BigInt64Array\",\n  \"BigUint64Array\",\n  // Keyed collections\n  \"Set\",\n  \"Map\",\n  \"WeakSet\",\n  \"WeakMap\",\n  // Structured data\n  \"ArrayBuffer\",\n  \"SharedArrayBuffer\",\n  \"Atomics\",\n  \"DataView\",\n  \"JSON\",\n  // Control abstraction objects\n  \"Promise\",\n  \"Generator\",\n  \"GeneratorFunction\",\n  \"AsyncFunction\",\n  // Reflection\n  \"Reflect\",\n  \"Proxy\",\n  // Internationalization\n  \"Intl\",\n  // WebAssembly\n  \"WebAssembly\"\n];\n\nconst ERROR_TYPES = [\n  \"Error\",\n  \"EvalError\",\n  \"InternalError\",\n  \"RangeError\",\n  \"ReferenceError\",\n  \"SyntaxError\",\n  \"TypeError\",\n  \"URIError\"\n];\n\nconst BUILT_IN_GLOBALS = [\n  \"setInterval\",\n  \"setTimeout\",\n  \"clearInterval\",\n  \"clearTimeout\",\n\n  \"require\",\n  \"exports\",\n\n  \"eval\",\n  \"isFinite\",\n  \"isNaN\",\n  \"parseFloat\",\n  \"parseInt\",\n  \"decodeURI\",\n  \"decodeURIComponent\",\n  \"encodeURI\",\n  \"encodeURIComponent\",\n  \"escape\",\n  \"unescape\"\n];\n\nconst BUILT_IN_VARIABLES = [\n  \"arguments\",\n  \"this\",\n  \"super\",\n  \"console\",\n  \"window\",\n  \"document\",\n  \"localStorage\",\n  \"module\",\n  \"global\" // Node.js\n];\n\nconst BUILT_INS = [].concat(\n  BUILT_IN_GLOBALS,\n  TYPES,\n  ERROR_TYPES\n);\n\n/*\nLanguage: JavaScript\nDescription: JavaScript (JS) is a lightweight, interpreted, or just-in-time compiled programming language with first-class functions.\nCategory: common, scripting, web\nWebsite: https://developer.mozilla.org/en-US/docs/Web/JavaScript\n*/\n\n/** @type LanguageFn */\nfunction javascript(hljs) {\n  const regex = hljs.regex;\n  /**\n   * Takes a string like \"<Booger\" and checks to see\n   * if we can find a matching \"</Booger\" later in the\n   * content.\n   * @param {RegExpMatchArray} match\n   * @param {{after:number}} param1\n   */\n  const hasClosingTag = (match, { after }) => {\n    const tag = \"</\" + match[0].slice(1);\n    const pos = match.input.indexOf(tag, after);\n    return pos !== -1;\n  };\n\n  const IDENT_RE$1 = IDENT_RE;\n  const FRAGMENT = {\n    begin: '<>',\n    end: '</>'\n  };\n  // to avoid some special cases inside isTrulyOpeningTag\n  const XML_SELF_CLOSING = /<[A-Za-z0-9\\\\._:-]+\\s*\\/>/;\n  const XML_TAG = {\n    begin: /<[A-Za-z0-9\\\\._:-]+/,\n    end: /\\/[A-Za-z0-9\\\\._:-]+>|\\/>/,\n    /**\n     * @param {RegExpMatchArray} match\n     * @param {CallbackResponse} response\n     */\n    isTrulyOpeningTag: (match, response) => {\n      const afterMatchIndex = match[0].length + match.index;\n      const nextChar = match.input[afterMatchIndex];\n      if (\n        // HTML should not include another raw `<` inside a tag\n        // nested type?\n        // `<Array<Array<number>>`, etc.\n        nextChar === \"<\" ||\n        // the , gives away that this is not HTML\n        // `<T, A extends keyof T, V>`\n        nextChar === \",\"\n        ) {\n        response.ignoreMatch();\n        return;\n      }\n\n      // `<something>`\n      // Quite possibly a tag, lets look for a matching closing tag...\n      if (nextChar === \">\") {\n        // if we cannot find a matching closing tag, then we\n        // will ignore it\n        if (!hasClosingTag(match, { after: afterMatchIndex })) {\n          response.ignoreMatch();\n        }\n      }\n\n      // `<blah />` (self-closing)\n      // handled by simpleSelfClosing rule\n\n      let m;\n      const afterMatch = match.input.substring(afterMatchIndex);\n\n      // some more template typing stuff\n      //  <T = any>(key?: string) => Modify<\n      if ((m = afterMatch.match(/^\\s*=/))) {\n        response.ignoreMatch();\n        return;\n      }\n\n      // `<From extends string>`\n      // technically this could be HTML, but it smells like a type\n      // NOTE: This is ugh, but added specifically for https://github.com/highlightjs/highlight.js/issues/3276\n      if ((m = afterMatch.match(/^\\s+extends\\s+/))) {\n        if (m.index === 0) {\n          response.ignoreMatch();\n          // eslint-disable-next-line no-useless-return\n          return;\n        }\n      }\n    }\n  };\n  const KEYWORDS$1 = {\n    $pattern: IDENT_RE,\n    keyword: KEYWORDS,\n    literal: LITERALS,\n    built_in: BUILT_INS,\n    \"variable.language\": BUILT_IN_VARIABLES\n  };\n\n  // https://tc39.es/ecma262/#sec-literals-numeric-literals\n  const decimalDigits = '[0-9](_?[0-9])*';\n  const frac = `\\\\.(${decimalDigits})`;\n  // DecimalIntegerLiteral, including Annex B NonOctalDecimalIntegerLiteral\n  // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\n  const decimalInteger = `0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*`;\n  const NUMBER = {\n    className: 'number',\n    variants: [\n      // DecimalLiteral\n      { begin: `(\\\\b(${decimalInteger})((${frac})|\\\\.)?|(${frac}))` +\n        `[eE][+-]?(${decimalDigits})\\\\b` },\n      { begin: `\\\\b(${decimalInteger})\\\\b((${frac})\\\\b|\\\\.)?|(${frac})\\\\b` },\n\n      // DecimalBigIntegerLiteral\n      { begin: `\\\\b(0|[1-9](_?[0-9])*)n\\\\b` },\n\n      // NonDecimalIntegerLiteral\n      { begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\\\b\" },\n      { begin: \"\\\\b0[bB][0-1](_?[0-1])*n?\\\\b\" },\n      { begin: \"\\\\b0[oO][0-7](_?[0-7])*n?\\\\b\" },\n\n      // LegacyOctalIntegerLiteral (does not include underscore separators)\n      // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\n      { begin: \"\\\\b0[0-7]+n?\\\\b\" },\n    ],\n    relevance: 0\n  };\n\n  const SUBST = {\n    className: 'subst',\n    begin: '\\\\$\\\\{',\n    end: '\\\\}',\n    keywords: KEYWORDS$1,\n    contains: [] // defined later\n  };\n  const HTML_TEMPLATE = {\n    begin: 'html`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'xml'\n    }\n  };\n  const CSS_TEMPLATE = {\n    begin: 'css`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'css'\n    }\n  };\n  const TEMPLATE_STRING = {\n    className: 'string',\n    begin: '`',\n    end: '`',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ]\n  };\n  const JSDOC_COMMENT = hljs.COMMENT(\n    /\\/\\*\\*(?!\\/)/,\n    '\\\\*/',\n    {\n      relevance: 0,\n      contains: [\n        {\n          begin: '(?=@[A-Za-z]+)',\n          relevance: 0,\n          contains: [\n            {\n              className: 'doctag',\n              begin: '@[A-Za-z]+'\n            },\n            {\n              className: 'type',\n              begin: '\\\\{',\n              end: '\\\\}',\n              excludeEnd: true,\n              excludeBegin: true,\n              relevance: 0\n            },\n            {\n              className: 'variable',\n              begin: IDENT_RE$1 + '(?=\\\\s*(-)|$)',\n              endsParent: true,\n              relevance: 0\n            },\n            // eat spaces (not newlines) so we can find\n            // types or variables\n            {\n              begin: /(?=[^\\n])\\s/,\n              relevance: 0\n            }\n          ]\n        }\n      ]\n    }\n  );\n  const COMMENT = {\n    className: \"comment\",\n    variants: [\n      JSDOC_COMMENT,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_LINE_COMMENT_MODE\n    ]\n  };\n  const SUBST_INTERNALS = [\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    HTML_TEMPLATE,\n    CSS_TEMPLATE,\n    TEMPLATE_STRING,\n    // Skip numbers when they are part of a variable name\n    { match: /\\$\\d+/ },\n    NUMBER,\n    // This is intentional:\n    // See https://github.com/highlightjs/highlight.js/issues/3288\n    // hljs.REGEXP_MODE\n  ];\n  SUBST.contains = SUBST_INTERNALS\n    .concat({\n      // we need to pair up {} inside our subst to prevent\n      // it from ending too early by matching another }\n      begin: /\\{/,\n      end: /\\}/,\n      keywords: KEYWORDS$1,\n      contains: [\n        \"self\"\n      ].concat(SUBST_INTERNALS)\n    });\n  const SUBST_AND_COMMENTS = [].concat(COMMENT, SUBST.contains);\n  const PARAMS_CONTAINS = SUBST_AND_COMMENTS.concat([\n    // eat recursive parens in sub expressions\n    {\n      begin: /\\(/,\n      end: /\\)/,\n      keywords: KEYWORDS$1,\n      contains: [\"self\"].concat(SUBST_AND_COMMENTS)\n    }\n  ]);\n  const PARAMS = {\n    className: 'params',\n    begin: /\\(/,\n    end: /\\)/,\n    excludeBegin: true,\n    excludeEnd: true,\n    keywords: KEYWORDS$1,\n    contains: PARAMS_CONTAINS\n  };\n\n  // ES6 classes\n  const CLASS_OR_EXTENDS = {\n    variants: [\n      // class Car extends vehicle\n      {\n        match: [\n          /class/,\n          /\\s+/,\n          IDENT_RE$1,\n          /\\s+/,\n          /extends/,\n          /\\s+/,\n          regex.concat(IDENT_RE$1, \"(\", regex.concat(/\\./, IDENT_RE$1), \")*\")\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.class\",\n          5: \"keyword\",\n          7: \"title.class.inherited\"\n        }\n      },\n      // class Car\n      {\n        match: [\n          /class/,\n          /\\s+/,\n          IDENT_RE$1\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.class\"\n        }\n      },\n\n    ]\n  };\n\n  const CLASS_REFERENCE = {\n    relevance: 0,\n    match:\n    regex.either(\n      // Hard coded exceptions\n      /\\bJSON/,\n      // Float32Array, OutT\n      /\\b[A-Z][a-z]+([A-Z][a-z]*|\\d)*/,\n      // CSSFactory, CSSFactoryT\n      /\\b[A-Z]{2,}([A-Z][a-z]+|\\d)+([A-Z][a-z]*)*/,\n      // FPs, FPsT\n      /\\b[A-Z]{2,}[a-z]+([A-Z][a-z]+|\\d)*([A-Z][a-z]*)*/,\n      // P\n      // single letters are not highlighted\n      // BLAH\n      // this will be flagged as a UPPER_CASE_CONSTANT instead\n    ),\n    className: \"title.class\",\n    keywords: {\n      _: [\n        // se we still get relevance credit for JS library classes\n        ...TYPES,\n        ...ERROR_TYPES\n      ]\n    }\n  };\n\n  const USE_STRICT = {\n    label: \"use_strict\",\n    className: 'meta',\n    relevance: 10,\n    begin: /^\\s*['\"]use (strict|asm)['\"]/\n  };\n\n  const FUNCTION_DEFINITION = {\n    variants: [\n      {\n        match: [\n          /function/,\n          /\\s+/,\n          IDENT_RE$1,\n          /(?=\\s*\\()/\n        ]\n      },\n      // anonymous function\n      {\n        match: [\n          /function/,\n          /\\s*(?=\\()/\n        ]\n      }\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    label: \"func.def\",\n    contains: [ PARAMS ],\n    illegal: /%/\n  };\n\n  const UPPER_CASE_CONSTANT = {\n    relevance: 0,\n    match: /\\b[A-Z][A-Z_0-9]+\\b/,\n    className: \"variable.constant\"\n  };\n\n  function noneOf(list) {\n    return regex.concat(\"(?!\", list.join(\"|\"), \")\");\n  }\n\n  const FUNCTION_CALL = {\n    match: regex.concat(\n      /\\b/,\n      noneOf([\n        ...BUILT_IN_GLOBALS,\n        \"super\",\n        \"import\"\n      ]),\n      IDENT_RE$1, regex.lookahead(/\\(/)),\n    className: \"title.function\",\n    relevance: 0\n  };\n\n  const PROPERTY_ACCESS = {\n    begin: regex.concat(/\\./, regex.lookahead(\n      regex.concat(IDENT_RE$1, /(?![0-9A-Za-z$_(])/)\n    )),\n    end: IDENT_RE$1,\n    excludeBegin: true,\n    keywords: \"prototype\",\n    className: \"property\",\n    relevance: 0\n  };\n\n  const GETTER_OR_SETTER = {\n    match: [\n      /get|set/,\n      /\\s+/,\n      IDENT_RE$1,\n      /(?=\\()/\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [\n      { // eat to avoid empty params\n        begin: /\\(\\)/\n      },\n      PARAMS\n    ]\n  };\n\n  const FUNC_LEAD_IN_RE = '(\\\\(' +\n    '[^()]*(\\\\(' +\n    '[^()]*(\\\\(' +\n    '[^()]*' +\n    '\\\\)[^()]*)*' +\n    '\\\\)[^()]*)*' +\n    '\\\\)|' + hljs.UNDERSCORE_IDENT_RE + ')\\\\s*=>';\n\n  const FUNCTION_VARIABLE = {\n    match: [\n      /const|var|let/, /\\s+/,\n      IDENT_RE$1, /\\s*/,\n      /=\\s*/,\n      /(async\\s*)?/, // async is optional\n      regex.lookahead(FUNC_LEAD_IN_RE)\n    ],\n    keywords: \"async\",\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [\n      PARAMS\n    ]\n  };\n\n  return {\n    name: 'Javascript',\n    aliases: ['js', 'jsx', 'mjs', 'cjs'],\n    keywords: KEYWORDS$1,\n    // this will be extended by TypeScript\n    exports: { PARAMS_CONTAINS, CLASS_REFERENCE },\n    illegal: /#(?![$_A-z])/,\n    contains: [\n      hljs.SHEBANG({\n        label: \"shebang\",\n        binary: \"node\",\n        relevance: 5\n      }),\n      USE_STRICT,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      HTML_TEMPLATE,\n      CSS_TEMPLATE,\n      TEMPLATE_STRING,\n      COMMENT,\n      // Skip numbers when they are part of a variable name\n      { match: /\\$\\d+/ },\n      NUMBER,\n      CLASS_REFERENCE,\n      {\n        className: 'attr',\n        begin: IDENT_RE$1 + regex.lookahead(':'),\n        relevance: 0\n      },\n      FUNCTION_VARIABLE,\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n        keywords: 'return throw case',\n        relevance: 0,\n        contains: [\n          COMMENT,\n          hljs.REGEXP_MODE,\n          {\n            className: 'function',\n            // we have to count the parens to make sure we actually have the\n            // correct bounding ( ) before the =>.  There could be any number of\n            // sub-expressions inside also surrounded by parens.\n            begin: FUNC_LEAD_IN_RE,\n            returnBegin: true,\n            end: '\\\\s*=>',\n            contains: [\n              {\n                className: 'params',\n                variants: [\n                  {\n                    begin: hljs.UNDERSCORE_IDENT_RE,\n                    relevance: 0\n                  },\n                  {\n                    className: null,\n                    begin: /\\(\\s*\\)/,\n                    skip: true\n                  },\n                  {\n                    begin: /\\(/,\n                    end: /\\)/,\n                    excludeBegin: true,\n                    excludeEnd: true,\n                    keywords: KEYWORDS$1,\n                    contains: PARAMS_CONTAINS\n                  }\n                ]\n              }\n            ]\n          },\n          { // could be a comma delimited list of params to a function call\n            begin: /,/,\n            relevance: 0\n          },\n          {\n            match: /\\s+/,\n            relevance: 0\n          },\n          { // JSX\n            variants: [\n              { begin: FRAGMENT.begin, end: FRAGMENT.end },\n              { match: XML_SELF_CLOSING },\n              {\n                begin: XML_TAG.begin,\n                // we carefully check the opening tag to see if it truly\n                // is a tag and not a false positive\n                'on:begin': XML_TAG.isTrulyOpeningTag,\n                end: XML_TAG.end\n              }\n            ],\n            subLanguage: 'xml',\n            contains: [\n              {\n                begin: XML_TAG.begin,\n                end: XML_TAG.end,\n                skip: true,\n                contains: ['self']\n              }\n            ]\n          }\n        ],\n      },\n      FUNCTION_DEFINITION,\n      {\n        // prevent this from getting swallowed up by function\n        // since they appear \"function like\"\n        beginKeywords: \"while if switch catch for\"\n      },\n      {\n        // we have to count the parens to make sure we actually have the correct\n        // bounding ( ).  There could be any number of sub-expressions inside\n        // also surrounded by parens.\n        begin: '\\\\b(?!function)' + hljs.UNDERSCORE_IDENT_RE +\n          '\\\\(' + // first parens\n          '[^()]*(\\\\(' +\n            '[^()]*(\\\\(' +\n              '[^()]*' +\n            '\\\\)[^()]*)*' +\n          '\\\\)[^()]*)*' +\n          '\\\\)\\\\s*\\\\{', // end parens\n        returnBegin:true,\n        label: \"func.def\",\n        contains: [\n          PARAMS,\n          hljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE$1, className: \"title.function\" })\n        ]\n      },\n      // catch ... so it won't trigger the property rule below\n      {\n        match: /\\.\\.\\./,\n        relevance: 0\n      },\n      PROPERTY_ACCESS,\n      // hack: prevents detection of keywords in some circumstances\n      // .keyword()\n      // $keyword = x\n      {\n        match: '\\\\$' + IDENT_RE$1,\n        relevance: 0\n      },\n      {\n        match: [ /\\bconstructor(?=\\s*\\()/ ],\n        className: { 1: \"title.function\" },\n        contains: [ PARAMS ]\n      },\n      FUNCTION_CALL,\n      UPPER_CASE_CONSTANT,\n      CLASS_OR_EXTENDS,\n      GETTER_OR_SETTER,\n      {\n        match: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n      }\n    ]\n  };\n}\n\nexport { javascript as default };\n", "/*\nLanguage: JSON\nDescription: JSON (JavaScript Object Notation) is a lightweight data-interchange format.\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\nWebsite: http://www.json.org\nCategory: common, protocols, web\n*/\n\nfunction json(hljs) {\n  const ATTRIBUTE = {\n    className: 'attr',\n    begin: /\"(\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    relevance: 1.01\n  };\n  const PUNCTUATION = {\n    match: /[{}[\\],:]/,\n    className: \"punctuation\",\n    relevance: 0\n  };\n  const LITERALS = [\n    \"true\",\n    \"false\",\n    \"null\"\n  ];\n  // NOTE: normally we would rely on `keywords` for this but using a mode here allows us\n  // - to use the very tight `illegal: \\S` rule later to flag any other character\n  // - as illegal indicating that despite looking like JSON we do not truly have\n  // - JSON and thus improve false-positively greatly since JSON will try and claim\n  // - all sorts of JSON looking stuff\n  const LITERALS_MODE = {\n    scope: \"literal\",\n    beginKeywords: LITERALS.join(\" \"),\n  };\n\n  return {\n    name: 'JSON',\n    keywords:{\n      literal: LITERALS,\n    },\n    contains: [\n      ATTRIBUTE,\n      PUNCTUATION,\n      hljs.QUOTE_STRING_MODE,\n      LITERALS_MODE,\n      hljs.C_NUMBER_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ],\n    illegal: '\\\\S'\n  };\n}\n\nexport { json as default };\n", "// https://docs.oracle.com/javase/specs/jls/se15/html/jls-3.html#jls-3.10\nvar decimalDigits = '[0-9](_*[0-9])*';\nvar frac = `\\\\.(${decimalDigits})`;\nvar hexDigits = '[0-9a-fA-F](_*[0-9a-fA-F])*';\nvar NUMERIC = {\n  className: 'number',\n  variants: [\n    // DecimalFloatingPointLiteral\n    // including ExponentPart\n    { begin: `(\\\\b(${decimalDigits})((${frac})|\\\\.)?|(${frac}))` +\n      `[eE][+-]?(${decimalDigits})[fFdD]?\\\\b` },\n    // excluding ExponentPart\n    { begin: `\\\\b(${decimalDigits})((${frac})[fFdD]?\\\\b|\\\\.([fFdD]\\\\b)?)` },\n    { begin: `(${frac})[fFdD]?\\\\b` },\n    { begin: `\\\\b(${decimalDigits})[fFdD]\\\\b` },\n\n    // HexadecimalFloatingPointLiteral\n    { begin: `\\\\b0[xX]((${hexDigits})\\\\.?|(${hexDigits})?\\\\.(${hexDigits}))` +\n      `[pP][+-]?(${decimalDigits})[fFdD]?\\\\b` },\n\n    // DecimalIntegerLiteral\n    { begin: '\\\\b(0|[1-9](_*[0-9])*)[lL]?\\\\b' },\n\n    // HexIntegerLiteral\n    { begin: `\\\\b0[xX](${hexDigits})[lL]?\\\\b` },\n\n    // OctalIntegerLiteral\n    { begin: '\\\\b0(_*[0-7])*[lL]?\\\\b' },\n\n    // BinaryIntegerLiteral\n    { begin: '\\\\b0[bB][01](_*[01])*[lL]?\\\\b' },\n  ],\n  relevance: 0\n};\n\n/*\n Language: Kotlin\n Description: Kotlin is an OSS statically typed programming language that targets the JVM, Android, JavaScript and Native.\n Author: Sergey Mashkov <cy6erGn0m@gmail.com>\n Website: https://kotlinlang.org\n Category: common\n */\n\nfunction kotlin(hljs) {\n  const KEYWORDS = {\n    keyword:\n      'abstract as val var vararg get set class object open private protected public noinline '\n      + 'crossinline dynamic final enum if else do while for when throw try catch finally '\n      + 'import package is in fun override companion reified inline lateinit init '\n      + 'interface annotation data sealed internal infix operator out by constructor super '\n      + 'tailrec where const inner suspend typealias external expect actual',\n    built_in:\n      'Byte Short Char Int Long Boolean Float Double Void Unit Nothing',\n    literal:\n      'true false null'\n  };\n  const KEYWORDS_WITH_LABEL = {\n    className: 'keyword',\n    begin: /\\b(break|continue|return|this)\\b/,\n    starts: { contains: [\n      {\n        className: 'symbol',\n        begin: /@\\w+/\n      }\n    ] }\n  };\n  const LABEL = {\n    className: 'symbol',\n    begin: hljs.UNDERSCORE_IDENT_RE + '@'\n  };\n\n  // for string templates\n  const SUBST = {\n    className: 'subst',\n    begin: /\\$\\{/,\n    end: /\\}/,\n    contains: [ hljs.C_NUMBER_MODE ]\n  };\n  const VARIABLE = {\n    className: 'variable',\n    begin: '\\\\$' + hljs.UNDERSCORE_IDENT_RE\n  };\n  const STRING = {\n    className: 'string',\n    variants: [\n      {\n        begin: '\"\"\"',\n        end: '\"\"\"(?=[^\"])',\n        contains: [\n          VARIABLE,\n          SUBST\n        ]\n      },\n      // Can't use built-in modes easily, as we want to use STRING in the meta\n      // context as 'meta-string' and there's no syntax to remove explicitly set\n      // classNames in built-in modes.\n      {\n        begin: '\\'',\n        end: '\\'',\n        illegal: /\\n/,\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      {\n        begin: '\"',\n        end: '\"',\n        illegal: /\\n/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          VARIABLE,\n          SUBST\n        ]\n      }\n    ]\n  };\n  SUBST.contains.push(STRING);\n\n  const ANNOTATION_USE_SITE = {\n    className: 'meta',\n    begin: '@(?:file|property|field|get|set|receiver|param|setparam|delegate)\\\\s*:(?:\\\\s*' + hljs.UNDERSCORE_IDENT_RE + ')?'\n  };\n  const ANNOTATION = {\n    className: 'meta',\n    begin: '@' + hljs.UNDERSCORE_IDENT_RE,\n    contains: [\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        contains: [\n          hljs.inherit(STRING, { className: 'string' }),\n          \"self\"\n        ]\n      }\n    ]\n  };\n\n  // https://kotlinlang.org/docs/reference/whatsnew11.html#underscores-in-numeric-literals\n  // According to the doc above, the number mode of kotlin is the same as java 8,\n  // so the code below is copied from java.js\n  const KOTLIN_NUMBER_MODE = NUMERIC;\n  const KOTLIN_NESTED_COMMENT = hljs.COMMENT(\n    '/\\\\*', '\\\\*/',\n    { contains: [ hljs.C_BLOCK_COMMENT_MODE ] }\n  );\n  const KOTLIN_PAREN_TYPE = { variants: [\n    {\n      className: 'type',\n      begin: hljs.UNDERSCORE_IDENT_RE\n    },\n    {\n      begin: /\\(/,\n      end: /\\)/,\n      contains: [] // defined later\n    }\n  ] };\n  const KOTLIN_PAREN_TYPE2 = KOTLIN_PAREN_TYPE;\n  KOTLIN_PAREN_TYPE2.variants[1].contains = [ KOTLIN_PAREN_TYPE ];\n  KOTLIN_PAREN_TYPE.variants[1].contains = [ KOTLIN_PAREN_TYPE2 ];\n\n  return {\n    name: 'Kotlin',\n    aliases: [\n      'kt',\n      'kts'\n    ],\n    keywords: KEYWORDS,\n    contains: [\n      hljs.COMMENT(\n        '/\\\\*\\\\*',\n        '\\\\*/',\n        {\n          relevance: 0,\n          contains: [\n            {\n              className: 'doctag',\n              begin: '@[A-Za-z]+'\n            }\n          ]\n        }\n      ),\n      hljs.C_LINE_COMMENT_MODE,\n      KOTLIN_NESTED_COMMENT,\n      KEYWORDS_WITH_LABEL,\n      LABEL,\n      ANNOTATION_USE_SITE,\n      ANNOTATION,\n      {\n        className: 'function',\n        beginKeywords: 'fun',\n        end: '[(]|$',\n        returnBegin: true,\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        relevance: 5,\n        contains: [\n          {\n            begin: hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(',\n            returnBegin: true,\n            relevance: 0,\n            contains: [ hljs.UNDERSCORE_TITLE_MODE ]\n          },\n          {\n            className: 'type',\n            begin: /</,\n            end: />/,\n            keywords: 'reified',\n            relevance: 0\n          },\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            endsParent: true,\n            keywords: KEYWORDS,\n            relevance: 0,\n            contains: [\n              {\n                begin: /:/,\n                end: /[=,\\/]/,\n                endsWithParent: true,\n                contains: [\n                  KOTLIN_PAREN_TYPE,\n                  hljs.C_LINE_COMMENT_MODE,\n                  KOTLIN_NESTED_COMMENT\n                ],\n                relevance: 0\n              },\n              hljs.C_LINE_COMMENT_MODE,\n              KOTLIN_NESTED_COMMENT,\n              ANNOTATION_USE_SITE,\n              ANNOTATION,\n              STRING,\n              hljs.C_NUMBER_MODE\n            ]\n          },\n          KOTLIN_NESTED_COMMENT\n        ]\n      },\n      {\n        begin: [\n          /class|interface|trait/,\n          /\\s+/,\n          hljs.UNDERSCORE_IDENT_RE\n        ],\n        beginScope: {\n          3: \"title.class\"\n        },\n        keywords: 'class interface trait',\n        end: /[:\\{(]|$/,\n        excludeEnd: true,\n        illegal: 'extends implements',\n        contains: [\n          { beginKeywords: 'public protected internal private constructor' },\n          hljs.UNDERSCORE_TITLE_MODE,\n          {\n            className: 'type',\n            begin: /</,\n            end: />/,\n            excludeBegin: true,\n            excludeEnd: true,\n            relevance: 0\n          },\n          {\n            className: 'type',\n            begin: /[,:]\\s*/,\n            end: /[<\\(,){\\s]|$/,\n            excludeBegin: true,\n            returnEnd: true\n          },\n          ANNOTATION_USE_SITE,\n          ANNOTATION\n        ]\n      },\n      STRING,\n      {\n        className: 'meta',\n        begin: \"^#!/usr/bin/env\",\n        end: '$',\n        illegal: '\\n'\n      },\n      KOTLIN_NUMBER_MODE\n    ]\n  };\n}\n\nexport { kotlin as default };\n", "const MODES = (hljs) => {\n  return {\n    IMPORTANT: {\n      scope: 'meta',\n      begin: '!important'\n    },\n    BLOCK_COMMENT: hljs.C_BLOCK_COMMENT_MODE,\n    HEXCOLOR: {\n      scope: 'number',\n      begin: /#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\\b/\n    },\n    FUNCTION_DISPATCH: {\n      className: \"built_in\",\n      begin: /[\\w-]+(?=\\()/\n    },\n    ATTRIBUTE_SELECTOR_MODE: {\n      scope: 'selector-attr',\n      begin: /\\[/,\n      end: /\\]/,\n      illegal: '$',\n      contains: [\n        hljs.APOS_STRING_MODE,\n        hljs.QUOTE_STRING_MODE\n      ]\n    },\n    CSS_NUMBER_MODE: {\n      scope: 'number',\n      begin: hljs.NUMBER_RE + '(' +\n        '%|em|ex|ch|rem' +\n        '|vw|vh|vmin|vmax' +\n        '|cm|mm|in|pt|pc|px' +\n        '|deg|grad|rad|turn' +\n        '|s|ms' +\n        '|Hz|kHz' +\n        '|dpi|dpcm|dppx' +\n        ')?',\n      relevance: 0\n    },\n    CSS_VARIABLE: {\n      className: \"attr\",\n      begin: /--[A-Za-z][A-Za-z0-9_-]*/\n    }\n  };\n};\n\nconst TAGS = [\n  'a',\n  'abbr',\n  'address',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'blockquote',\n  'body',\n  'button',\n  'canvas',\n  'caption',\n  'cite',\n  'code',\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'div',\n  'dl',\n  'dt',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'header',\n  'hgroup',\n  'html',\n  'i',\n  'iframe',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'mark',\n  'menu',\n  'nav',\n  'object',\n  'ol',\n  'p',\n  'q',\n  'quote',\n  'samp',\n  'section',\n  'span',\n  'strong',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'ul',\n  'var',\n  'video'\n];\n\nconst MEDIA_FEATURES = [\n  'any-hover',\n  'any-pointer',\n  'aspect-ratio',\n  'color',\n  'color-gamut',\n  'color-index',\n  'device-aspect-ratio',\n  'device-height',\n  'device-width',\n  'display-mode',\n  'forced-colors',\n  'grid',\n  'height',\n  'hover',\n  'inverted-colors',\n  'monochrome',\n  'orientation',\n  'overflow-block',\n  'overflow-inline',\n  'pointer',\n  'prefers-color-scheme',\n  'prefers-contrast',\n  'prefers-reduced-motion',\n  'prefers-reduced-transparency',\n  'resolution',\n  'scan',\n  'scripting',\n  'update',\n  'width',\n  // TODO: find a better solution?\n  'min-width',\n  'max-width',\n  'min-height',\n  'max-height'\n];\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes\nconst PSEUDO_CLASSES = [\n  'active',\n  'any-link',\n  'blank',\n  'checked',\n  'current',\n  'default',\n  'defined',\n  'dir', // dir()\n  'disabled',\n  'drop',\n  'empty',\n  'enabled',\n  'first',\n  'first-child',\n  'first-of-type',\n  'fullscreen',\n  'future',\n  'focus',\n  'focus-visible',\n  'focus-within',\n  'has', // has()\n  'host', // host or host()\n  'host-context', // host-context()\n  'hover',\n  'indeterminate',\n  'in-range',\n  'invalid',\n  'is', // is()\n  'lang', // lang()\n  'last-child',\n  'last-of-type',\n  'left',\n  'link',\n  'local-link',\n  'not', // not()\n  'nth-child', // nth-child()\n  'nth-col', // nth-col()\n  'nth-last-child', // nth-last-child()\n  'nth-last-col', // nth-last-col()\n  'nth-last-of-type', //nth-last-of-type()\n  'nth-of-type', //nth-of-type()\n  'only-child',\n  'only-of-type',\n  'optional',\n  'out-of-range',\n  'past',\n  'placeholder-shown',\n  'read-only',\n  'read-write',\n  'required',\n  'right',\n  'root',\n  'scope',\n  'target',\n  'target-within',\n  'user-invalid',\n  'valid',\n  'visited',\n  'where' // where()\n];\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements\nconst PSEUDO_ELEMENTS = [\n  'after',\n  'backdrop',\n  'before',\n  'cue',\n  'cue-region',\n  'first-letter',\n  'first-line',\n  'grammar-error',\n  'marker',\n  'part',\n  'placeholder',\n  'selection',\n  'slotted',\n  'spelling-error'\n];\n\nconst ATTRIBUTES = [\n  'align-content',\n  'align-items',\n  'align-self',\n  'all',\n  'animation',\n  'animation-delay',\n  'animation-direction',\n  'animation-duration',\n  'animation-fill-mode',\n  'animation-iteration-count',\n  'animation-name',\n  'animation-play-state',\n  'animation-timing-function',\n  'backface-visibility',\n  'background',\n  'background-attachment',\n  'background-blend-mode',\n  'background-clip',\n  'background-color',\n  'background-image',\n  'background-origin',\n  'background-position',\n  'background-repeat',\n  'background-size',\n  'block-size',\n  'border',\n  'border-block',\n  'border-block-color',\n  'border-block-end',\n  'border-block-end-color',\n  'border-block-end-style',\n  'border-block-end-width',\n  'border-block-start',\n  'border-block-start-color',\n  'border-block-start-style',\n  'border-block-start-width',\n  'border-block-style',\n  'border-block-width',\n  'border-bottom',\n  'border-bottom-color',\n  'border-bottom-left-radius',\n  'border-bottom-right-radius',\n  'border-bottom-style',\n  'border-bottom-width',\n  'border-collapse',\n  'border-color',\n  'border-image',\n  'border-image-outset',\n  'border-image-repeat',\n  'border-image-slice',\n  'border-image-source',\n  'border-image-width',\n  'border-inline',\n  'border-inline-color',\n  'border-inline-end',\n  'border-inline-end-color',\n  'border-inline-end-style',\n  'border-inline-end-width',\n  'border-inline-start',\n  'border-inline-start-color',\n  'border-inline-start-style',\n  'border-inline-start-width',\n  'border-inline-style',\n  'border-inline-width',\n  'border-left',\n  'border-left-color',\n  'border-left-style',\n  'border-left-width',\n  'border-radius',\n  'border-right',\n  'border-right-color',\n  'border-right-style',\n  'border-right-width',\n  'border-spacing',\n  'border-style',\n  'border-top',\n  'border-top-color',\n  'border-top-left-radius',\n  'border-top-right-radius',\n  'border-top-style',\n  'border-top-width',\n  'border-width',\n  'bottom',\n  'box-decoration-break',\n  'box-shadow',\n  'box-sizing',\n  'break-after',\n  'break-before',\n  'break-inside',\n  'caption-side',\n  'caret-color',\n  'clear',\n  'clip',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'column-count',\n  'column-fill',\n  'column-gap',\n  'column-rule',\n  'column-rule-color',\n  'column-rule-style',\n  'column-rule-width',\n  'column-span',\n  'column-width',\n  'columns',\n  'contain',\n  'content',\n  'content-visibility',\n  'counter-increment',\n  'counter-reset',\n  'cue',\n  'cue-after',\n  'cue-before',\n  'cursor',\n  'direction',\n  'display',\n  'empty-cells',\n  'filter',\n  'flex',\n  'flex-basis',\n  'flex-direction',\n  'flex-flow',\n  'flex-grow',\n  'flex-shrink',\n  'flex-wrap',\n  'float',\n  'flow',\n  'font',\n  'font-display',\n  'font-family',\n  'font-feature-settings',\n  'font-kerning',\n  'font-language-override',\n  'font-size',\n  'font-size-adjust',\n  'font-smoothing',\n  'font-stretch',\n  'font-style',\n  'font-synthesis',\n  'font-variant',\n  'font-variant-caps',\n  'font-variant-east-asian',\n  'font-variant-ligatures',\n  'font-variant-numeric',\n  'font-variant-position',\n  'font-variation-settings',\n  'font-weight',\n  'gap',\n  'glyph-orientation-vertical',\n  'grid',\n  'grid-area',\n  'grid-auto-columns',\n  'grid-auto-flow',\n  'grid-auto-rows',\n  'grid-column',\n  'grid-column-end',\n  'grid-column-start',\n  'grid-gap',\n  'grid-row',\n  'grid-row-end',\n  'grid-row-start',\n  'grid-template',\n  'grid-template-areas',\n  'grid-template-columns',\n  'grid-template-rows',\n  'hanging-punctuation',\n  'height',\n  'hyphens',\n  'icon',\n  'image-orientation',\n  'image-rendering',\n  'image-resolution',\n  'ime-mode',\n  'inline-size',\n  'isolation',\n  'justify-content',\n  'left',\n  'letter-spacing',\n  'line-break',\n  'line-height',\n  'list-style',\n  'list-style-image',\n  'list-style-position',\n  'list-style-type',\n  'margin',\n  'margin-block',\n  'margin-block-end',\n  'margin-block-start',\n  'margin-bottom',\n  'margin-inline',\n  'margin-inline-end',\n  'margin-inline-start',\n  'margin-left',\n  'margin-right',\n  'margin-top',\n  'marks',\n  'mask',\n  'mask-border',\n  'mask-border-mode',\n  'mask-border-outset',\n  'mask-border-repeat',\n  'mask-border-slice',\n  'mask-border-source',\n  'mask-border-width',\n  'mask-clip',\n  'mask-composite',\n  'mask-image',\n  'mask-mode',\n  'mask-origin',\n  'mask-position',\n  'mask-repeat',\n  'mask-size',\n  'mask-type',\n  'max-block-size',\n  'max-height',\n  'max-inline-size',\n  'max-width',\n  'min-block-size',\n  'min-height',\n  'min-inline-size',\n  'min-width',\n  'mix-blend-mode',\n  'nav-down',\n  'nav-index',\n  'nav-left',\n  'nav-right',\n  'nav-up',\n  'none',\n  'normal',\n  'object-fit',\n  'object-position',\n  'opacity',\n  'order',\n  'orphans',\n  'outline',\n  'outline-color',\n  'outline-offset',\n  'outline-style',\n  'outline-width',\n  'overflow',\n  'overflow-wrap',\n  'overflow-x',\n  'overflow-y',\n  'padding',\n  'padding-block',\n  'padding-block-end',\n  'padding-block-start',\n  'padding-bottom',\n  'padding-inline',\n  'padding-inline-end',\n  'padding-inline-start',\n  'padding-left',\n  'padding-right',\n  'padding-top',\n  'page-break-after',\n  'page-break-before',\n  'page-break-inside',\n  'pause',\n  'pause-after',\n  'pause-before',\n  'perspective',\n  'perspective-origin',\n  'pointer-events',\n  'position',\n  'quotes',\n  'resize',\n  'rest',\n  'rest-after',\n  'rest-before',\n  'right',\n  'row-gap',\n  'scroll-margin',\n  'scroll-margin-block',\n  'scroll-margin-block-end',\n  'scroll-margin-block-start',\n  'scroll-margin-bottom',\n  'scroll-margin-inline',\n  'scroll-margin-inline-end',\n  'scroll-margin-inline-start',\n  'scroll-margin-left',\n  'scroll-margin-right',\n  'scroll-margin-top',\n  'scroll-padding',\n  'scroll-padding-block',\n  'scroll-padding-block-end',\n  'scroll-padding-block-start',\n  'scroll-padding-bottom',\n  'scroll-padding-inline',\n  'scroll-padding-inline-end',\n  'scroll-padding-inline-start',\n  'scroll-padding-left',\n  'scroll-padding-right',\n  'scroll-padding-top',\n  'scroll-snap-align',\n  'scroll-snap-stop',\n  'scroll-snap-type',\n  'scrollbar-color',\n  'scrollbar-gutter',\n  'scrollbar-width',\n  'shape-image-threshold',\n  'shape-margin',\n  'shape-outside',\n  'speak',\n  'speak-as',\n  'src', // @font-face\n  'tab-size',\n  'table-layout',\n  'text-align',\n  'text-align-all',\n  'text-align-last',\n  'text-combine-upright',\n  'text-decoration',\n  'text-decoration-color',\n  'text-decoration-line',\n  'text-decoration-style',\n  'text-emphasis',\n  'text-emphasis-color',\n  'text-emphasis-position',\n  'text-emphasis-style',\n  'text-indent',\n  'text-justify',\n  'text-orientation',\n  'text-overflow',\n  'text-rendering',\n  'text-shadow',\n  'text-transform',\n  'text-underline-position',\n  'top',\n  'transform',\n  'transform-box',\n  'transform-origin',\n  'transform-style',\n  'transition',\n  'transition-delay',\n  'transition-duration',\n  'transition-property',\n  'transition-timing-function',\n  'unicode-bidi',\n  'vertical-align',\n  'visibility',\n  'voice-balance',\n  'voice-duration',\n  'voice-family',\n  'voice-pitch',\n  'voice-range',\n  'voice-rate',\n  'voice-stress',\n  'voice-volume',\n  'white-space',\n  'widows',\n  'width',\n  'will-change',\n  'word-break',\n  'word-spacing',\n  'word-wrap',\n  'writing-mode',\n  'z-index'\n  // reverse makes sure longer attributes `font-weight` are matched fully\n  // instead of getting false positives on say `font`\n].reverse();\n\n// some grammars use them all as a single group\nconst PSEUDO_SELECTORS = PSEUDO_CLASSES.concat(PSEUDO_ELEMENTS);\n\n/*\nLanguage: Less\nDescription: It's CSS, with just a little more.\nAuthor:   Max Mikhailov <seven.phases.max@gmail.com>\nWebsite: http://lesscss.org\nCategory: common, css, web\n*/\n\n/** @type LanguageFn */\nfunction less(hljs) {\n  const modes = MODES(hljs);\n  const PSEUDO_SELECTORS$1 = PSEUDO_SELECTORS;\n\n  const AT_MODIFIERS = \"and or not only\";\n  const IDENT_RE = '[\\\\w-]+'; // yes, Less identifiers may begin with a digit\n  const INTERP_IDENT_RE = '(' + IDENT_RE + '|@\\\\{' + IDENT_RE + '\\\\})';\n\n  /* Generic Modes */\n\n  const RULES = []; const VALUE_MODES = []; // forward def. for recursive modes\n\n  const STRING_MODE = function(c) {\n    return {\n    // Less strings are not multiline (also include '~' for more consistent coloring of \"escaped\" strings)\n      className: 'string',\n      begin: '~?' + c + '.*?' + c\n    };\n  };\n\n  const IDENT_MODE = function(name, begin, relevance) {\n    return {\n      className: name,\n      begin: begin,\n      relevance: relevance\n    };\n  };\n\n  const AT_KEYWORDS = {\n    $pattern: /[a-z-]+/,\n    keyword: AT_MODIFIERS,\n    attribute: MEDIA_FEATURES.join(\" \")\n  };\n\n  const PARENS_MODE = {\n    // used only to properly balance nested parens inside mixin call, def. arg list\n    begin: '\\\\(',\n    end: '\\\\)',\n    contains: VALUE_MODES,\n    keywords: AT_KEYWORDS,\n    relevance: 0\n  };\n\n  // generic Less highlighter (used almost everywhere except selectors):\n  VALUE_MODES.push(\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    STRING_MODE(\"'\"),\n    STRING_MODE('\"'),\n    modes.CSS_NUMBER_MODE, // fixme: it does not include dot for numbers like .5em :(\n    {\n      begin: '(url|data-uri)\\\\(',\n      starts: {\n        className: 'string',\n        end: '[\\\\)\\\\n]',\n        excludeEnd: true\n      }\n    },\n    modes.HEXCOLOR,\n    PARENS_MODE,\n    IDENT_MODE('variable', '@@?' + IDENT_RE, 10),\n    IDENT_MODE('variable', '@\\\\{' + IDENT_RE + '\\\\}'),\n    IDENT_MODE('built_in', '~?`[^`]*?`'), // inline javascript (or whatever host language) *multiline* string\n    { // @media features (it\u2019s here to not duplicate things in AT_RULE_MODE with extra PARENS_MODE overriding):\n      className: 'attribute',\n      begin: IDENT_RE + '\\\\s*:',\n      end: ':',\n      returnBegin: true,\n      excludeEnd: true\n    },\n    modes.IMPORTANT,\n    { beginKeywords: 'and not' },\n    modes.FUNCTION_DISPATCH\n  );\n\n  const VALUE_WITH_RULESETS = VALUE_MODES.concat({\n    begin: /\\{/,\n    end: /\\}/,\n    contains: RULES\n  });\n\n  const MIXIN_GUARD_MODE = {\n    beginKeywords: 'when',\n    endsWithParent: true,\n    contains: [ { beginKeywords: 'and not' } ].concat(VALUE_MODES) // using this form to override VALUE\u2019s 'function' match\n  };\n\n  /* Rule-Level Modes */\n\n  const RULE_MODE = {\n    begin: INTERP_IDENT_RE + '\\\\s*:',\n    returnBegin: true,\n    end: /[;}]/,\n    relevance: 0,\n    contains: [\n      { begin: /-(webkit|moz|ms|o)-/ },\n      modes.CSS_VARIABLE,\n      {\n        className: 'attribute',\n        begin: '\\\\b(' + ATTRIBUTES.join('|') + ')\\\\b',\n        end: /(?=:)/,\n        starts: {\n          endsWithParent: true,\n          illegal: '[<=$]',\n          relevance: 0,\n          contains: VALUE_MODES\n        }\n      }\n    ]\n  };\n\n  const AT_RULE_MODE = {\n    className: 'keyword',\n    begin: '@(import|media|charset|font-face|(-[a-z]+-)?keyframes|supports|document|namespace|page|viewport|host)\\\\b',\n    starts: {\n      end: '[;{}]',\n      keywords: AT_KEYWORDS,\n      returnEnd: true,\n      contains: VALUE_MODES,\n      relevance: 0\n    }\n  };\n\n  // variable definitions and calls\n  const VAR_RULE_MODE = {\n    className: 'variable',\n    variants: [\n      // using more strict pattern for higher relevance to increase chances of Less detection.\n      // this is *the only* Less specific statement used in most of the sources, so...\n      // (we\u2019ll still often loose to the css-parser unless there's '//' comment,\n      // simply because 1 variable just can't beat 99 properties :)\n      {\n        begin: '@' + IDENT_RE + '\\\\s*:',\n        relevance: 15\n      },\n      { begin: '@' + IDENT_RE }\n    ],\n    starts: {\n      end: '[;}]',\n      returnEnd: true,\n      contains: VALUE_WITH_RULESETS\n    }\n  };\n\n  const SELECTOR_MODE = {\n    // first parse unambiguous selectors (i.e. those not starting with tag)\n    // then fall into the scary lookahead-discriminator variant.\n    // this mode also handles mixin definitions and calls\n    variants: [\n      {\n        begin: '[\\\\.#:&\\\\[>]',\n        end: '[;{}]' // mixin calls end with ';'\n      },\n      {\n        begin: INTERP_IDENT_RE,\n        end: /\\{/\n      }\n    ],\n    returnBegin: true,\n    returnEnd: true,\n    illegal: '[<=\\'$\"]',\n    relevance: 0,\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      MIXIN_GUARD_MODE,\n      IDENT_MODE('keyword', 'all\\\\b'),\n      IDENT_MODE('variable', '@\\\\{' + IDENT_RE + '\\\\}'), // otherwise it\u2019s identified as tag\n      \n      {\n        begin: '\\\\b(' + TAGS.join('|') + ')\\\\b',\n        className: 'selector-tag'\n      },\n      modes.CSS_NUMBER_MODE,\n      IDENT_MODE('selector-tag', INTERP_IDENT_RE, 0),\n      IDENT_MODE('selector-id', '#' + INTERP_IDENT_RE),\n      IDENT_MODE('selector-class', '\\\\.' + INTERP_IDENT_RE, 0),\n      IDENT_MODE('selector-tag', '&', 0),\n      modes.ATTRIBUTE_SELECTOR_MODE,\n      {\n        className: 'selector-pseudo',\n        begin: ':(' + PSEUDO_CLASSES.join('|') + ')'\n      },\n      {\n        className: 'selector-pseudo',\n        begin: ':(:)?(' + PSEUDO_ELEMENTS.join('|') + ')'\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        relevance: 0,\n        contains: VALUE_WITH_RULESETS\n      }, // argument list of parametric mixins\n      { begin: '!important' }, // eat !important after mixin call or it will be colored as tag\n      modes.FUNCTION_DISPATCH\n    ]\n  };\n\n  const PSEUDO_SELECTOR_MODE = {\n    begin: IDENT_RE + ':(:)?' + `(${PSEUDO_SELECTORS$1.join('|')})`,\n    returnBegin: true,\n    contains: [ SELECTOR_MODE ]\n  };\n\n  RULES.push(\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    AT_RULE_MODE,\n    VAR_RULE_MODE,\n    PSEUDO_SELECTOR_MODE,\n    RULE_MODE,\n    SELECTOR_MODE,\n    MIXIN_GUARD_MODE,\n    modes.FUNCTION_DISPATCH\n  );\n\n  return {\n    name: 'Less',\n    case_insensitive: true,\n    illegal: '[=>\\'/<($\"]',\n    contains: RULES\n  };\n}\n\nexport { less as default };\n", "/*\nLanguage: Lua\nDescription: Lua is a powerful, efficient, lightweight, embeddable scripting language.\nAuthor: Andrew Fedorov <dmmdrs@mail.ru>\nCategory: common, scripting\nWebsite: https://www.lua.org\n*/\n\nfunction lua(hljs) {\n  const OPENING_LONG_BRACKET = '\\\\[=*\\\\[';\n  const CLOSING_LONG_BRACKET = '\\\\]=*\\\\]';\n  const LONG_BRACKETS = {\n    begin: OPENING_LONG_BRACKET,\n    end: CLOSING_LONG_BRACKET,\n    contains: [ 'self' ]\n  };\n  const COMMENTS = [\n    hljs.COMMENT('--(?!' + OPENING_LONG_BRACKET + ')', '$'),\n    hljs.COMMENT(\n      '--' + OPENING_LONG_BRACKET,\n      CLOSING_LONG_BRACKET,\n      {\n        contains: [ LONG_BRACKETS ],\n        relevance: 10\n      }\n    )\n  ];\n  return {\n    name: 'Lua',\n    keywords: {\n      $pattern: hljs.UNDERSCORE_IDENT_RE,\n      literal: \"true false nil\",\n      keyword: \"and break do else elseif end for goto if in local not or repeat return then until while\",\n      built_in:\n        // Metatags and globals:\n        '_G _ENV _VERSION __index __newindex __mode __call __metatable __tostring __len '\n        + '__gc __add __sub __mul __div __mod __pow __concat __unm __eq __lt __le assert '\n        // Standard methods and properties:\n        + 'collectgarbage dofile error getfenv getmetatable ipairs load loadfile loadstring '\n        + 'module next pairs pcall print rawequal rawget rawset require select setfenv '\n        + 'setmetatable tonumber tostring type unpack xpcall arg self '\n        // Library methods and properties (one line per library):\n        + 'coroutine resume yield status wrap create running debug getupvalue '\n        + 'debug sethook getmetatable gethook setmetatable setlocal traceback setfenv getinfo setupvalue getlocal getregistry getfenv '\n        + 'io lines write close flush open output type read stderr stdin input stdout popen tmpfile '\n        + 'math log max acos huge ldexp pi cos tanh pow deg tan cosh sinh random randomseed frexp ceil floor rad abs sqrt modf asin min mod fmod log10 atan2 exp sin atan '\n        + 'os exit setlocale date getenv difftime remove time clock tmpname rename execute package preload loadlib loaded loaders cpath config path seeall '\n        + 'string sub upper len gfind rep find match char dump gmatch reverse byte format gsub lower '\n        + 'table setn insert getn foreachi maxn foreach concat sort remove'\n    },\n    contains: COMMENTS.concat([\n      {\n        className: 'function',\n        beginKeywords: 'function',\n        end: '\\\\)',\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, { begin: '([_a-zA-Z]\\\\w*\\\\.)*([_a-zA-Z]\\\\w*:)?[_a-zA-Z]\\\\w*' }),\n          {\n            className: 'params',\n            begin: '\\\\(',\n            endsWithParent: true,\n            contains: COMMENTS\n          }\n        ].concat(COMMENTS)\n      },\n      hljs.C_NUMBER_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'string',\n        begin: OPENING_LONG_BRACKET,\n        end: CLOSING_LONG_BRACKET,\n        contains: [ LONG_BRACKETS ],\n        relevance: 5\n      }\n    ])\n  };\n}\n\nexport { lua as default };\n", "/*\nLanguage: Makefile\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\nContributors: Jo\u00EBl Porquet <joel@porquet.org>\nWebsite: https://www.gnu.org/software/make/manual/html_node/Introduction.html\nCategory: common\n*/\n\nfunction makefile(hljs) {\n  /* Variables: simple (eg $(var)) and special (eg $@) */\n  const VARIABLE = {\n    className: 'variable',\n    variants: [\n      {\n        begin: '\\\\$\\\\(' + hljs.UNDERSCORE_IDENT_RE + '\\\\)',\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      { begin: /\\$[@%<?\\^\\+\\*]/ }\n    ]\n  };\n  /* Quoted string with variables inside */\n  const QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/,\n    end: /\"/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      VARIABLE\n    ]\n  };\n  /* Function: $(func arg,...) */\n  const FUNC = {\n    className: 'variable',\n    begin: /\\$\\([\\w-]+\\s/,\n    end: /\\)/,\n    keywords: { built_in:\n        'subst patsubst strip findstring filter filter-out sort '\n        + 'word wordlist firstword lastword dir notdir suffix basename '\n        + 'addsuffix addprefix join wildcard realpath abspath error warning '\n        + 'shell origin flavor foreach if or and call eval file value' },\n    contains: [ VARIABLE ]\n  };\n  /* Variable assignment */\n  const ASSIGNMENT = { begin: '^' + hljs.UNDERSCORE_IDENT_RE + '\\\\s*(?=[:+?]?=)' };\n  /* Meta targets (.PHONY) */\n  const META = {\n    className: 'meta',\n    begin: /^\\.PHONY:/,\n    end: /$/,\n    keywords: {\n      $pattern: /[\\.\\w]+/,\n      keyword: '.PHONY'\n    }\n  };\n  /* Targets */\n  const TARGET = {\n    className: 'section',\n    begin: /^[^\\s]+:/,\n    end: /$/,\n    contains: [ VARIABLE ]\n  };\n  return {\n    name: 'Makefile',\n    aliases: [\n      'mk',\n      'mak',\n      'make',\n    ],\n    keywords: {\n      $pattern: /[\\w-]+/,\n      keyword: 'define endef undefine ifdef ifndef ifeq ifneq else endif '\n      + 'include -include sinclude override export unexport private vpath'\n    },\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      VARIABLE,\n      QUOTE_STRING,\n      FUNC,\n      ASSIGNMENT,\n      META,\n      TARGET\n    ]\n  };\n}\n\nexport { makefile as default };\n", "/*\nLanguage: Markdown\nRequires: xml.js\nAuthor: John Crepezzi <john.crepezzi@gmail.com>\nWebsite: https://daringfireball.net/projects/markdown/\nCategory: common, markup\n*/\n\nfunction markdown(hljs) {\n  const regex = hljs.regex;\n  const INLINE_HTML = {\n    begin: /<\\/?[A-Za-z_]/,\n    end: '>',\n    subLanguage: 'xml',\n    relevance: 0\n  };\n  const HORIZONTAL_RULE = {\n    begin: '^[-\\\\*]{3,}',\n    end: '$'\n  };\n  const CODE = {\n    className: 'code',\n    variants: [\n      // TODO: fix to allow these to work with sublanguage also\n      { begin: '(`{3,})[^`](.|\\\\n)*?\\\\1`*[ ]*' },\n      { begin: '(~{3,})[^~](.|\\\\n)*?\\\\1~*[ ]*' },\n      // needed to allow markdown as a sublanguage to work\n      {\n        begin: '```',\n        end: '```+[ ]*$'\n      },\n      {\n        begin: '~~~',\n        end: '~~~+[ ]*$'\n      },\n      { begin: '`.+?`' },\n      {\n        begin: '(?=^( {4}|\\\\t))',\n        // use contains to gobble up multiple lines to allow the block to be whatever size\n        // but only have a single open/close tag vs one per line\n        contains: [\n          {\n            begin: '^( {4}|\\\\t)',\n            end: '(\\\\n)$'\n          }\n        ],\n        relevance: 0\n      }\n    ]\n  };\n  const LIST = {\n    className: 'bullet',\n    begin: '^[ \\t]*([*+-]|(\\\\d+\\\\.))(?=\\\\s+)',\n    end: '\\\\s+',\n    excludeEnd: true\n  };\n  const LINK_REFERENCE = {\n    begin: /^\\[[^\\n]+\\]:/,\n    returnBegin: true,\n    contains: [\n      {\n        className: 'symbol',\n        begin: /\\[/,\n        end: /\\]/,\n        excludeBegin: true,\n        excludeEnd: true\n      },\n      {\n        className: 'link',\n        begin: /:\\s*/,\n        end: /$/,\n        excludeBegin: true\n      }\n    ]\n  };\n  const URL_SCHEME = /[A-Za-z][A-Za-z0-9+.-]*/;\n  const LINK = {\n    variants: [\n      // too much like nested array access in so many languages\n      // to have any real relevance\n      {\n        begin: /\\[.+?\\]\\[.*?\\]/,\n        relevance: 0\n      },\n      // popular internet URLs\n      {\n        begin: /\\[.+?\\]\\(((data|javascript|mailto):|(?:http|ftp)s?:\\/\\/).*?\\)/,\n        relevance: 2\n      },\n      {\n        begin: regex.concat(/\\[.+?\\]\\(/, URL_SCHEME, /:\\/\\/.*?\\)/),\n        relevance: 2\n      },\n      // relative urls\n      {\n        begin: /\\[.+?\\]\\([./?&#].*?\\)/,\n        relevance: 1\n      },\n      // whatever else, lower relevance (might not be a link at all)\n      {\n        begin: /\\[.*?\\]\\(.*?\\)/,\n        relevance: 0\n      }\n    ],\n    returnBegin: true,\n    contains: [\n      {\n        // empty strings for alt or link text\n        match: /\\[(?=\\])/ },\n      {\n        className: 'string',\n        relevance: 0,\n        begin: '\\\\[',\n        end: '\\\\]',\n        excludeBegin: true,\n        returnEnd: true\n      },\n      {\n        className: 'link',\n        relevance: 0,\n        begin: '\\\\]\\\\(',\n        end: '\\\\)',\n        excludeBegin: true,\n        excludeEnd: true\n      },\n      {\n        className: 'symbol',\n        relevance: 0,\n        begin: '\\\\]\\\\[',\n        end: '\\\\]',\n        excludeBegin: true,\n        excludeEnd: true\n      }\n    ]\n  };\n  const BOLD = {\n    className: 'strong',\n    contains: [], // defined later\n    variants: [\n      {\n        begin: /_{2}(?!\\s)/,\n        end: /_{2}/\n      },\n      {\n        begin: /\\*{2}(?!\\s)/,\n        end: /\\*{2}/\n      }\n    ]\n  };\n  const ITALIC = {\n    className: 'emphasis',\n    contains: [], // defined later\n    variants: [\n      {\n        begin: /\\*(?![*\\s])/,\n        end: /\\*/\n      },\n      {\n        begin: /_(?![_\\s])/,\n        end: /_/,\n        relevance: 0\n      }\n    ]\n  };\n\n  // 3 level deep nesting is not allowed because it would create confusion\n  // in cases like `***testing***` because where we don't know if the last\n  // `***` is starting a new bold/italic or finishing the last one\n  const BOLD_WITHOUT_ITALIC = hljs.inherit(BOLD, { contains: [] });\n  const ITALIC_WITHOUT_BOLD = hljs.inherit(ITALIC, { contains: [] });\n  BOLD.contains.push(ITALIC_WITHOUT_BOLD);\n  ITALIC.contains.push(BOLD_WITHOUT_ITALIC);\n\n  let CONTAINABLE = [\n    INLINE_HTML,\n    LINK\n  ];\n\n  [\n    BOLD,\n    ITALIC,\n    BOLD_WITHOUT_ITALIC,\n    ITALIC_WITHOUT_BOLD\n  ].forEach(m => {\n    m.contains = m.contains.concat(CONTAINABLE);\n  });\n\n  CONTAINABLE = CONTAINABLE.concat(BOLD, ITALIC);\n\n  const HEADER = {\n    className: 'section',\n    variants: [\n      {\n        begin: '^#{1,6}',\n        end: '$',\n        contains: CONTAINABLE\n      },\n      {\n        begin: '(?=^.+?\\\\n[=-]{2,}$)',\n        contains: [\n          { begin: '^[=-]*$' },\n          {\n            begin: '^',\n            end: \"\\\\n\",\n            contains: CONTAINABLE\n          }\n        ]\n      }\n    ]\n  };\n\n  const BLOCKQUOTE = {\n    className: 'quote',\n    begin: '^>\\\\s+',\n    contains: CONTAINABLE,\n    end: '$'\n  };\n\n  return {\n    name: 'Markdown',\n    aliases: [\n      'md',\n      'mkdown',\n      'mkd'\n    ],\n    contains: [\n      HEADER,\n      INLINE_HTML,\n      LIST,\n      BOLD,\n      ITALIC,\n      BLOCKQUOTE,\n      CODE,\n      HORIZONTAL_RULE,\n      LINK,\n      LINK_REFERENCE\n    ]\n  };\n}\n\nexport { markdown as default };\n", "/*\nLanguage: Objective-C\nAuthor: Valerii Hiora <valerii.hiora@gmail.com>\nContributors: Angel G. Olloqui <angelgarcia.mail@gmail.com>, Matt Diephouse <matt@diephouse.com>, Andrew Farmer <ahfarmer@gmail.com>, Minh Nguy\u1EC5n <mxn@1ec5.org>\nWebsite: https://developer.apple.com/documentation/objectivec\nCategory: common\n*/\n\nfunction objectivec(hljs) {\n  const API_CLASS = {\n    className: 'built_in',\n    begin: '\\\\b(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)\\\\w+'\n  };\n  const IDENTIFIER_RE = /[a-zA-Z@][a-zA-Z0-9_]*/;\n  const TYPES = [\n    \"int\",\n    \"float\",\n    \"char\",\n    \"unsigned\",\n    \"signed\",\n    \"short\",\n    \"long\",\n    \"double\",\n    \"wchar_t\",\n    \"unichar\",\n    \"void\",\n    \"bool\",\n    \"BOOL\",\n    \"id|0\",\n    \"_Bool\"\n  ];\n  const KWS = [\n    \"while\",\n    \"export\",\n    \"sizeof\",\n    \"typedef\",\n    \"const\",\n    \"struct\",\n    \"for\",\n    \"union\",\n    \"volatile\",\n    \"static\",\n    \"mutable\",\n    \"if\",\n    \"do\",\n    \"return\",\n    \"goto\",\n    \"enum\",\n    \"else\",\n    \"break\",\n    \"extern\",\n    \"asm\",\n    \"case\",\n    \"default\",\n    \"register\",\n    \"explicit\",\n    \"typename\",\n    \"switch\",\n    \"continue\",\n    \"inline\",\n    \"readonly\",\n    \"assign\",\n    \"readwrite\",\n    \"self\",\n    \"@synchronized\",\n    \"id\",\n    \"typeof\",\n    \"nonatomic\",\n    \"IBOutlet\",\n    \"IBAction\",\n    \"strong\",\n    \"weak\",\n    \"copy\",\n    \"in\",\n    \"out\",\n    \"inout\",\n    \"bycopy\",\n    \"byref\",\n    \"oneway\",\n    \"__strong\",\n    \"__weak\",\n    \"__block\",\n    \"__autoreleasing\",\n    \"@private\",\n    \"@protected\",\n    \"@public\",\n    \"@try\",\n    \"@property\",\n    \"@end\",\n    \"@throw\",\n    \"@catch\",\n    \"@finally\",\n    \"@autoreleasepool\",\n    \"@synthesize\",\n    \"@dynamic\",\n    \"@selector\",\n    \"@optional\",\n    \"@required\",\n    \"@encode\",\n    \"@package\",\n    \"@import\",\n    \"@defs\",\n    \"@compatibility_alias\",\n    \"__bridge\",\n    \"__bridge_transfer\",\n    \"__bridge_retained\",\n    \"__bridge_retain\",\n    \"__covariant\",\n    \"__contravariant\",\n    \"__kindof\",\n    \"_Nonnull\",\n    \"_Nullable\",\n    \"_Null_unspecified\",\n    \"__FUNCTION__\",\n    \"__PRETTY_FUNCTION__\",\n    \"__attribute__\",\n    \"getter\",\n    \"setter\",\n    \"retain\",\n    \"unsafe_unretained\",\n    \"nonnull\",\n    \"nullable\",\n    \"null_unspecified\",\n    \"null_resettable\",\n    \"class\",\n    \"instancetype\",\n    \"NS_DESIGNATED_INITIALIZER\",\n    \"NS_UNAVAILABLE\",\n    \"NS_REQUIRES_SUPER\",\n    \"NS_RETURNS_INNER_POINTER\",\n    \"NS_INLINE\",\n    \"NS_AVAILABLE\",\n    \"NS_DEPRECATED\",\n    \"NS_ENUM\",\n    \"NS_OPTIONS\",\n    \"NS_SWIFT_UNAVAILABLE\",\n    \"NS_ASSUME_NONNULL_BEGIN\",\n    \"NS_ASSUME_NONNULL_END\",\n    \"NS_REFINED_FOR_SWIFT\",\n    \"NS_SWIFT_NAME\",\n    \"NS_SWIFT_NOTHROW\",\n    \"NS_DURING\",\n    \"NS_HANDLER\",\n    \"NS_ENDHANDLER\",\n    \"NS_VALUERETURN\",\n    \"NS_VOIDRETURN\"\n  ];\n  const LITERALS = [\n    \"false\",\n    \"true\",\n    \"FALSE\",\n    \"TRUE\",\n    \"nil\",\n    \"YES\",\n    \"NO\",\n    \"NULL\"\n  ];\n  const BUILT_INS = [\n    \"dispatch_once_t\",\n    \"dispatch_queue_t\",\n    \"dispatch_sync\",\n    \"dispatch_async\",\n    \"dispatch_once\"\n  ];\n  const KEYWORDS = {\n    \"variable.language\": [\n      \"this\",\n      \"super\"\n    ],\n    $pattern: IDENTIFIER_RE,\n    keyword: KWS,\n    literal: LITERALS,\n    built_in: BUILT_INS,\n    type: TYPES\n  };\n  const CLASS_KEYWORDS = {\n    $pattern: IDENTIFIER_RE,\n    keyword: [\n      \"@interface\",\n      \"@class\",\n      \"@protocol\",\n      \"@implementation\"\n    ]\n  };\n  return {\n    name: 'Objective-C',\n    aliases: [\n      'mm',\n      'objc',\n      'obj-c',\n      'obj-c++',\n      'objective-c++'\n    ],\n    keywords: KEYWORDS,\n    illegal: '</',\n    contains: [\n      API_CLASS,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_NUMBER_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.APOS_STRING_MODE,\n      {\n        className: 'string',\n        variants: [\n          {\n            begin: '@\"',\n            end: '\"',\n            illegal: '\\\\n',\n            contains: [ hljs.BACKSLASH_ESCAPE ]\n          }\n        ]\n      },\n      {\n        className: 'meta',\n        begin: /#\\s*[a-z]+\\b/,\n        end: /$/,\n        keywords: { keyword:\n            'if else elif endif define undef warning error line '\n            + 'pragma ifdef ifndef include' },\n        contains: [\n          {\n            begin: /\\\\\\n/,\n            relevance: 0\n          },\n          hljs.inherit(hljs.QUOTE_STRING_MODE, { className: 'string' }),\n          {\n            className: 'string',\n            begin: /<.*?>/,\n            end: /$/,\n            illegal: '\\\\n'\n          },\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        className: 'class',\n        begin: '(' + CLASS_KEYWORDS.keyword.join('|') + ')\\\\b',\n        end: /(\\{|$)/,\n        excludeEnd: true,\n        keywords: CLASS_KEYWORDS,\n        contains: [ hljs.UNDERSCORE_TITLE_MODE ]\n      },\n      {\n        begin: '\\\\.' + hljs.UNDERSCORE_IDENT_RE,\n        relevance: 0\n      }\n    ]\n  };\n}\n\nexport { objectivec as default };\n", "/*\nLanguage: Perl\nAuthor: Peter Leonov <gojpeg@yandex.ru>\nWebsite: https://www.perl.org\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction perl(hljs) {\n  const regex = hljs.regex;\n  const KEYWORDS = [\n    'abs',\n    'accept',\n    'alarm',\n    'and',\n    'atan2',\n    'bind',\n    'binmode',\n    'bless',\n    'break',\n    'caller',\n    'chdir',\n    'chmod',\n    'chomp',\n    'chop',\n    'chown',\n    'chr',\n    'chroot',\n    'close',\n    'closedir',\n    'connect',\n    'continue',\n    'cos',\n    'crypt',\n    'dbmclose',\n    'dbmopen',\n    'defined',\n    'delete',\n    'die',\n    'do',\n    'dump',\n    'each',\n    'else',\n    'elsif',\n    'endgrent',\n    'endhostent',\n    'endnetent',\n    'endprotoent',\n    'endpwent',\n    'endservent',\n    'eof',\n    'eval',\n    'exec',\n    'exists',\n    'exit',\n    'exp',\n    'fcntl',\n    'fileno',\n    'flock',\n    'for',\n    'foreach',\n    'fork',\n    'format',\n    'formline',\n    'getc',\n    'getgrent',\n    'getgrgid',\n    'getgrnam',\n    'gethostbyaddr',\n    'gethostbyname',\n    'gethostent',\n    'getlogin',\n    'getnetbyaddr',\n    'getnetbyname',\n    'getnetent',\n    'getpeername',\n    'getpgrp',\n    'getpriority',\n    'getprotobyname',\n    'getprotobynumber',\n    'getprotoent',\n    'getpwent',\n    'getpwnam',\n    'getpwuid',\n    'getservbyname',\n    'getservbyport',\n    'getservent',\n    'getsockname',\n    'getsockopt',\n    'given',\n    'glob',\n    'gmtime',\n    'goto',\n    'grep',\n    'gt',\n    'hex',\n    'if',\n    'index',\n    'int',\n    'ioctl',\n    'join',\n    'keys',\n    'kill',\n    'last',\n    'lc',\n    'lcfirst',\n    'length',\n    'link',\n    'listen',\n    'local',\n    'localtime',\n    'log',\n    'lstat',\n    'lt',\n    'ma',\n    'map',\n    'mkdir',\n    'msgctl',\n    'msgget',\n    'msgrcv',\n    'msgsnd',\n    'my',\n    'ne',\n    'next',\n    'no',\n    'not',\n    'oct',\n    'open',\n    'opendir',\n    'or',\n    'ord',\n    'our',\n    'pack',\n    'package',\n    'pipe',\n    'pop',\n    'pos',\n    'print',\n    'printf',\n    'prototype',\n    'push',\n    'q|0',\n    'qq',\n    'quotemeta',\n    'qw',\n    'qx',\n    'rand',\n    'read',\n    'readdir',\n    'readline',\n    'readlink',\n    'readpipe',\n    'recv',\n    'redo',\n    'ref',\n    'rename',\n    'require',\n    'reset',\n    'return',\n    'reverse',\n    'rewinddir',\n    'rindex',\n    'rmdir',\n    'say',\n    'scalar',\n    'seek',\n    'seekdir',\n    'select',\n    'semctl',\n    'semget',\n    'semop',\n    'send',\n    'setgrent',\n    'sethostent',\n    'setnetent',\n    'setpgrp',\n    'setpriority',\n    'setprotoent',\n    'setpwent',\n    'setservent',\n    'setsockopt',\n    'shift',\n    'shmctl',\n    'shmget',\n    'shmread',\n    'shmwrite',\n    'shutdown',\n    'sin',\n    'sleep',\n    'socket',\n    'socketpair',\n    'sort',\n    'splice',\n    'split',\n    'sprintf',\n    'sqrt',\n    'srand',\n    'stat',\n    'state',\n    'study',\n    'sub',\n    'substr',\n    'symlink',\n    'syscall',\n    'sysopen',\n    'sysread',\n    'sysseek',\n    'system',\n    'syswrite',\n    'tell',\n    'telldir',\n    'tie',\n    'tied',\n    'time',\n    'times',\n    'tr',\n    'truncate',\n    'uc',\n    'ucfirst',\n    'umask',\n    'undef',\n    'unless',\n    'unlink',\n    'unpack',\n    'unshift',\n    'untie',\n    'until',\n    'use',\n    'utime',\n    'values',\n    'vec',\n    'wait',\n    'waitpid',\n    'wantarray',\n    'warn',\n    'when',\n    'while',\n    'write',\n    'x|0',\n    'xor',\n    'y|0'\n  ];\n\n  // https://perldoc.perl.org/perlre#Modifiers\n  const REGEX_MODIFIERS = /[dualxmsipngr]{0,12}/; // aa and xx are valid, making max length 12\n  const PERL_KEYWORDS = {\n    $pattern: /[\\w.]+/,\n    keyword: KEYWORDS.join(\" \")\n  };\n  const SUBST = {\n    className: 'subst',\n    begin: '[$@]\\\\{',\n    end: '\\\\}',\n    keywords: PERL_KEYWORDS\n  };\n  const METHOD = {\n    begin: /->\\{/,\n    end: /\\}/\n    // contains defined later\n  };\n  const VAR = { variants: [\n    { begin: /\\$\\d/ },\n    { begin: regex.concat(\n      /[$%@](\\^\\w\\b|#\\w+(::\\w+)*|\\{\\w+\\}|\\w+(::\\w*)*)/,\n      // negative look-ahead tries to avoid matching patterns that are not\n      // Perl at all like $ident$, @ident@, etc.\n      `(?![A-Za-z])(?![@$%])`\n    ) },\n    {\n      begin: /[$%@][^\\s\\w{]/,\n      relevance: 0\n    }\n  ] };\n  const STRING_CONTAINS = [\n    hljs.BACKSLASH_ESCAPE,\n    SUBST,\n    VAR\n  ];\n  const REGEX_DELIMS = [\n    /!/,\n    /\\//,\n    /\\|/,\n    /\\?/,\n    /'/,\n    /\"/, // valid but infrequent and weird\n    /#/ // valid but infrequent and weird\n  ];\n  /**\n   * @param {string|RegExp} prefix\n   * @param {string|RegExp} open\n   * @param {string|RegExp} close\n   */\n  const PAIRED_DOUBLE_RE = (prefix, open, close = '\\\\1') => {\n    const middle = (close === '\\\\1')\n      ? close\n      : regex.concat(close, open);\n    return regex.concat(\n      regex.concat(\"(?:\", prefix, \")\"),\n      open,\n      /(?:\\\\.|[^\\\\\\/])*?/,\n      middle,\n      /(?:\\\\.|[^\\\\\\/])*?/,\n      close,\n      REGEX_MODIFIERS\n    );\n  };\n  /**\n   * @param {string|RegExp} prefix\n   * @param {string|RegExp} open\n   * @param {string|RegExp} close\n   */\n  const PAIRED_RE = (prefix, open, close) => {\n    return regex.concat(\n      regex.concat(\"(?:\", prefix, \")\"),\n      open,\n      /(?:\\\\.|[^\\\\\\/])*?/,\n      close,\n      REGEX_MODIFIERS\n    );\n  };\n  const PERL_DEFAULT_CONTAINS = [\n    VAR,\n    hljs.HASH_COMMENT_MODE,\n    hljs.COMMENT(\n      /^=\\w/,\n      /=cut/,\n      { endsWithParent: true }\n    ),\n    METHOD,\n    {\n      className: 'string',\n      contains: STRING_CONTAINS,\n      variants: [\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\(',\n          end: '\\\\)',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\[',\n          end: '\\\\]',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\{',\n          end: '\\\\}',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\|',\n          end: '\\\\|',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*<',\n          end: '>',\n          relevance: 5\n        },\n        {\n          begin: 'qw\\\\s+q',\n          end: 'q',\n          relevance: 5\n        },\n        {\n          begin: '\\'',\n          end: '\\'',\n          contains: [ hljs.BACKSLASH_ESCAPE ]\n        },\n        {\n          begin: '\"',\n          end: '\"'\n        },\n        {\n          begin: '`',\n          end: '`',\n          contains: [ hljs.BACKSLASH_ESCAPE ]\n        },\n        {\n          begin: /\\{\\w+\\}/,\n          relevance: 0\n        },\n        {\n          begin: '-?\\\\w+\\\\s*=>',\n          relevance: 0\n        }\n      ]\n    },\n    {\n      className: 'number',\n      begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n      relevance: 0\n    },\n    { // regexp container\n      begin: '(\\\\/\\\\/|' + hljs.RE_STARTERS_RE + '|\\\\b(split|return|print|reverse|grep)\\\\b)\\\\s*',\n      keywords: 'split return print reverse grep',\n      relevance: 0,\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        {\n          className: 'regexp',\n          variants: [\n            // allow matching common delimiters\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", regex.either(...REGEX_DELIMS, { capture: true })) },\n            // and then paired delmis\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\(\", \"\\\\)\") },\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\[\", \"\\\\]\") },\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\{\", \"\\\\}\") }\n          ],\n          relevance: 2\n        },\n        {\n          className: 'regexp',\n          variants: [\n            {\n              // could be a comment in many languages so do not count\n              // as relevant\n              begin: /(m|qr)\\/\\//,\n              relevance: 0\n            },\n            // prefix is optional with /regex/\n            { begin: PAIRED_RE(\"(?:m|qr)?\", /\\//, /\\//) },\n            // allow matching common delimiters\n            { begin: PAIRED_RE(\"m|qr\", regex.either(...REGEX_DELIMS, { capture: true }), /\\1/) },\n            // allow common paired delmins\n            { begin: PAIRED_RE(\"m|qr\", /\\(/, /\\)/) },\n            { begin: PAIRED_RE(\"m|qr\", /\\[/, /\\]/) },\n            { begin: PAIRED_RE(\"m|qr\", /\\{/, /\\}/) }\n          ]\n        }\n      ]\n    },\n    {\n      className: 'function',\n      beginKeywords: 'sub',\n      end: '(\\\\s*\\\\(.*?\\\\))?[;{]',\n      excludeEnd: true,\n      relevance: 5,\n      contains: [ hljs.TITLE_MODE ]\n    },\n    {\n      begin: '-\\\\w\\\\b',\n      relevance: 0\n    },\n    {\n      begin: \"^__DATA__$\",\n      end: \"^__END__$\",\n      subLanguage: 'mojolicious',\n      contains: [\n        {\n          begin: \"^@@.*\",\n          end: \"$\",\n          className: \"comment\"\n        }\n      ]\n    }\n  ];\n  SUBST.contains = PERL_DEFAULT_CONTAINS;\n  METHOD.contains = PERL_DEFAULT_CONTAINS;\n\n  return {\n    name: 'Perl',\n    aliases: [\n      'pl',\n      'pm'\n    ],\n    keywords: PERL_KEYWORDS,\n    contains: PERL_DEFAULT_CONTAINS\n  };\n}\n\nexport { perl as default };\n", "/*\nLanguage: PHP\nAuthor: Victor Karamzin <Victor.Karamzin@enterra-inc.com>\nContributors: Evgeny Stepanischev <imbolk@gmail.com>, Ivan Sagalaev <maniac@softwaremaniacs.org>\nWebsite: https://www.php.net\nCategory: common\n*/\n\n/**\n * @param {HLJSApi} hljs\n * @returns {LanguageDetail}\n * */\nfunction php(hljs) {\n  const regex = hljs.regex;\n  // negative look-ahead tries to avoid matching patterns that are not\n  // Perl at all like $ident$, @ident@, etc.\n  const NOT_PERL_ETC = /(?![A-Za-z0-9])(?![$])/;\n  const IDENT_RE = regex.concat(\n    /[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*/,\n    NOT_PERL_ETC);\n  // Will not detect camelCase classes\n  const PASCAL_CASE_CLASS_NAME_RE = regex.concat(\n    /(\\\\?[A-Z][a-z0-9_\\x7f-\\xff]+|\\\\?[A-Z]+(?=[A-Z][a-z0-9_\\x7f-\\xff])){1,}/,\n    NOT_PERL_ETC);\n  const VARIABLE = {\n    scope: 'variable',\n    match: '\\\\$+' + IDENT_RE,\n  };\n  const PREPROCESSOR = {\n    scope: 'meta',\n    variants: [\n      { begin: /<\\?php/, relevance: 10 }, // boost for obvious PHP\n      { begin: /<\\?=/ },\n      // less relevant per PSR-1 which says not to use short-tags\n      { begin: /<\\?/, relevance: 0.1 },\n      { begin: /\\?>/ } // end php tag\n    ]\n  };\n  const SUBST = {\n    scope: 'subst',\n    variants: [\n      { begin: /\\$\\w+/ },\n      {\n        begin: /\\{\\$/,\n        end: /\\}/\n      }\n    ]\n  };\n  const SINGLE_QUOTED = hljs.inherit(hljs.APOS_STRING_MODE, { illegal: null, });\n  const DOUBLE_QUOTED = hljs.inherit(hljs.QUOTE_STRING_MODE, {\n    illegal: null,\n    contains: hljs.QUOTE_STRING_MODE.contains.concat(SUBST),\n  });\n  const HEREDOC = hljs.END_SAME_AS_BEGIN({\n    begin: /<<<[ \\t]*(\\w+)\\n/,\n    end: /[ \\t]*(\\w+)\\b/,\n    contains: hljs.QUOTE_STRING_MODE.contains.concat(SUBST),\n  });\n  // list of valid whitespaces because non-breaking space might be part of a IDENT_RE\n  const WHITESPACE = '[ \\t\\n]';\n  const STRING = {\n    scope: 'string',\n    variants: [\n      DOUBLE_QUOTED,\n      SINGLE_QUOTED,\n      HEREDOC\n    ]\n  };\n  const NUMBER = {\n    scope: 'number',\n    variants: [\n      { begin: `\\\\b0[bB][01]+(?:_[01]+)*\\\\b` }, // Binary w/ underscore support\n      { begin: `\\\\b0[oO][0-7]+(?:_[0-7]+)*\\\\b` }, // Octals w/ underscore support\n      { begin: `\\\\b0[xX][\\\\da-fA-F]+(?:_[\\\\da-fA-F]+)*\\\\b` }, // Hex w/ underscore support\n      // Decimals w/ underscore support, with optional fragments and scientific exponent (e) suffix.\n      { begin: `(?:\\\\b\\\\d+(?:_\\\\d+)*(\\\\.(?:\\\\d+(?:_\\\\d+)*))?|\\\\B\\\\.\\\\d+)(?:[eE][+-]?\\\\d+)?` }\n    ],\n    relevance: 0\n  };\n  const LITERALS = [\n    \"false\",\n    \"null\",\n    \"true\"\n  ];\n  const KWS = [\n    // Magic constants:\n    // <https://www.php.net/manual/en/language.constants.predefined.php>\n    \"__CLASS__\",\n    \"__DIR__\",\n    \"__FILE__\",\n    \"__FUNCTION__\",\n    \"__COMPILER_HALT_OFFSET__\",\n    \"__LINE__\",\n    \"__METHOD__\",\n    \"__NAMESPACE__\",\n    \"__TRAIT__\",\n    // Function that look like language construct or language construct that look like function:\n    // List of keywords that may not require parenthesis\n    \"die\",\n    \"echo\",\n    \"exit\",\n    \"include\",\n    \"include_once\",\n    \"print\",\n    \"require\",\n    \"require_once\",\n    // These are not language construct (function) but operate on the currently-executing function and can access the current symbol table\n    // 'compact extract func_get_arg func_get_args func_num_args get_called_class get_parent_class ' +\n    // Other keywords:\n    // <https://www.php.net/manual/en/reserved.php>\n    // <https://www.php.net/manual/en/language.types.type-juggling.php>\n    \"array\",\n    \"abstract\",\n    \"and\",\n    \"as\",\n    \"binary\",\n    \"bool\",\n    \"boolean\",\n    \"break\",\n    \"callable\",\n    \"case\",\n    \"catch\",\n    \"class\",\n    \"clone\",\n    \"const\",\n    \"continue\",\n    \"declare\",\n    \"default\",\n    \"do\",\n    \"double\",\n    \"else\",\n    \"elseif\",\n    \"empty\",\n    \"enddeclare\",\n    \"endfor\",\n    \"endforeach\",\n    \"endif\",\n    \"endswitch\",\n    \"endwhile\",\n    \"enum\",\n    \"eval\",\n    \"extends\",\n    \"final\",\n    \"finally\",\n    \"float\",\n    \"for\",\n    \"foreach\",\n    \"from\",\n    \"global\",\n    \"goto\",\n    \"if\",\n    \"implements\",\n    \"instanceof\",\n    \"insteadof\",\n    \"int\",\n    \"integer\",\n    \"interface\",\n    \"isset\",\n    \"iterable\",\n    \"list\",\n    \"match|0\",\n    \"mixed\",\n    \"new\",\n    \"never\",\n    \"object\",\n    \"or\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"readonly\",\n    \"real\",\n    \"return\",\n    \"string\",\n    \"switch\",\n    \"throw\",\n    \"trait\",\n    \"try\",\n    \"unset\",\n    \"use\",\n    \"var\",\n    \"void\",\n    \"while\",\n    \"xor\",\n    \"yield\"\n  ];\n\n  const BUILT_INS = [\n    // Standard PHP library:\n    // <https://www.php.net/manual/en/book.spl.php>\n    \"Error|0\",\n    \"AppendIterator\",\n    \"ArgumentCountError\",\n    \"ArithmeticError\",\n    \"ArrayIterator\",\n    \"ArrayObject\",\n    \"AssertionError\",\n    \"BadFunctionCallException\",\n    \"BadMethodCallException\",\n    \"CachingIterator\",\n    \"CallbackFilterIterator\",\n    \"CompileError\",\n    \"Countable\",\n    \"DirectoryIterator\",\n    \"DivisionByZeroError\",\n    \"DomainException\",\n    \"EmptyIterator\",\n    \"ErrorException\",\n    \"Exception\",\n    \"FilesystemIterator\",\n    \"FilterIterator\",\n    \"GlobIterator\",\n    \"InfiniteIterator\",\n    \"InvalidArgumentException\",\n    \"IteratorIterator\",\n    \"LengthException\",\n    \"LimitIterator\",\n    \"LogicException\",\n    \"MultipleIterator\",\n    \"NoRewindIterator\",\n    \"OutOfBoundsException\",\n    \"OutOfRangeException\",\n    \"OuterIterator\",\n    \"OverflowException\",\n    \"ParentIterator\",\n    \"ParseError\",\n    \"RangeException\",\n    \"RecursiveArrayIterator\",\n    \"RecursiveCachingIterator\",\n    \"RecursiveCallbackFilterIterator\",\n    \"RecursiveDirectoryIterator\",\n    \"RecursiveFilterIterator\",\n    \"RecursiveIterator\",\n    \"RecursiveIteratorIterator\",\n    \"RecursiveRegexIterator\",\n    \"RecursiveTreeIterator\",\n    \"RegexIterator\",\n    \"RuntimeException\",\n    \"SeekableIterator\",\n    \"SplDoublyLinkedList\",\n    \"SplFileInfo\",\n    \"SplFileObject\",\n    \"SplFixedArray\",\n    \"SplHeap\",\n    \"SplMaxHeap\",\n    \"SplMinHeap\",\n    \"SplObjectStorage\",\n    \"SplObserver\",\n    \"SplPriorityQueue\",\n    \"SplQueue\",\n    \"SplStack\",\n    \"SplSubject\",\n    \"SplTempFileObject\",\n    \"TypeError\",\n    \"UnderflowException\",\n    \"UnexpectedValueException\",\n    \"UnhandledMatchError\",\n    // Reserved interfaces:\n    // <https://www.php.net/manual/en/reserved.interfaces.php>\n    \"ArrayAccess\",\n    \"BackedEnum\",\n    \"Closure\",\n    \"Fiber\",\n    \"Generator\",\n    \"Iterator\",\n    \"IteratorAggregate\",\n    \"Serializable\",\n    \"Stringable\",\n    \"Throwable\",\n    \"Traversable\",\n    \"UnitEnum\",\n    \"WeakReference\",\n    \"WeakMap\",\n    // Reserved classes:\n    // <https://www.php.net/manual/en/reserved.classes.php>\n    \"Directory\",\n    \"__PHP_Incomplete_Class\",\n    \"parent\",\n    \"php_user_filter\",\n    \"self\",\n    \"static\",\n    \"stdClass\"\n  ];\n\n  /** Dual-case keywords\n   *\n   * [\"then\",\"FILE\"] =>\n   *     [\"then\", \"THEN\", \"FILE\", \"file\"]\n   *\n   * @param {string[]} items */\n  const dualCase = (items) => {\n    /** @type string[] */\n    const result = [];\n    items.forEach(item => {\n      result.push(item);\n      if (item.toLowerCase() === item) {\n        result.push(item.toUpperCase());\n      } else {\n        result.push(item.toLowerCase());\n      }\n    });\n    return result;\n  };\n\n  const KEYWORDS = {\n    keyword: KWS,\n    literal: dualCase(LITERALS),\n    built_in: BUILT_INS,\n  };\n\n  /**\n   * @param {string[]} items */\n  const normalizeKeywords = (items) => {\n    return items.map(item => {\n      return item.replace(/\\|\\d+$/, \"\");\n    });\n  };\n\n  const CONSTRUCTOR_CALL = { variants: [\n    {\n      match: [\n        /new/,\n        regex.concat(WHITESPACE, \"+\"),\n        // to prevent built ins from being confused as the class constructor call\n        regex.concat(\"(?!\", normalizeKeywords(BUILT_INS).join(\"\\\\b|\"), \"\\\\b)\"),\n        PASCAL_CASE_CLASS_NAME_RE,\n      ],\n      scope: {\n        1: \"keyword\",\n        4: \"title.class\",\n      },\n    }\n  ] };\n\n  const CONSTANT_REFERENCE = regex.concat(IDENT_RE, \"\\\\b(?!\\\\()\");\n\n  const LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON = { variants: [\n    {\n      match: [\n        regex.concat(\n          /::/,\n          regex.lookahead(/(?!class\\b)/)\n        ),\n        CONSTANT_REFERENCE,\n      ],\n      scope: { 2: \"variable.constant\", },\n    },\n    {\n      match: [\n        /::/,\n        /class/,\n      ],\n      scope: { 2: \"variable.language\", },\n    },\n    {\n      match: [\n        PASCAL_CASE_CLASS_NAME_RE,\n        regex.concat(\n          /::/,\n          regex.lookahead(/(?!class\\b)/)\n        ),\n        CONSTANT_REFERENCE,\n      ],\n      scope: {\n        1: \"title.class\",\n        3: \"variable.constant\",\n      },\n    },\n    {\n      match: [\n        PASCAL_CASE_CLASS_NAME_RE,\n        regex.concat(\n          \"::\",\n          regex.lookahead(/(?!class\\b)/)\n        ),\n      ],\n      scope: { 1: \"title.class\", },\n    },\n    {\n      match: [\n        PASCAL_CASE_CLASS_NAME_RE,\n        /::/,\n        /class/,\n      ],\n      scope: {\n        1: \"title.class\",\n        3: \"variable.language\",\n      },\n    }\n  ] };\n\n  const NAMED_ARGUMENT = {\n    scope: 'attr',\n    match: regex.concat(IDENT_RE, regex.lookahead(':'), regex.lookahead(/(?!::)/)),\n  };\n  const PARAMS_MODE = {\n    relevance: 0,\n    begin: /\\(/,\n    end: /\\)/,\n    keywords: KEYWORDS,\n    contains: [\n      NAMED_ARGUMENT,\n      VARIABLE,\n      LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON,\n      hljs.C_BLOCK_COMMENT_MODE,\n      STRING,\n      NUMBER,\n      CONSTRUCTOR_CALL,\n    ],\n  };\n  const FUNCTION_INVOKE = {\n    relevance: 0,\n    match: [\n      /\\b/,\n      // to prevent keywords from being confused as the function title\n      regex.concat(\"(?!fn\\\\b|function\\\\b|\", normalizeKeywords(KWS).join(\"\\\\b|\"), \"|\", normalizeKeywords(BUILT_INS).join(\"\\\\b|\"), \"\\\\b)\"),\n      IDENT_RE,\n      regex.concat(WHITESPACE, \"*\"),\n      regex.lookahead(/(?=\\()/)\n    ],\n    scope: { 3: \"title.function.invoke\", },\n    contains: [ PARAMS_MODE ]\n  };\n  PARAMS_MODE.contains.push(FUNCTION_INVOKE);\n\n  const ATTRIBUTE_CONTAINS = [\n    NAMED_ARGUMENT,\n    LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON,\n    hljs.C_BLOCK_COMMENT_MODE,\n    STRING,\n    NUMBER,\n    CONSTRUCTOR_CALL,\n  ];\n\n  const ATTRIBUTES = {\n    begin: regex.concat(/#\\[\\s*/, PASCAL_CASE_CLASS_NAME_RE),\n    beginScope: \"meta\",\n    end: /]/,\n    endScope: \"meta\",\n    keywords: {\n      literal: LITERALS,\n      keyword: [\n        'new',\n        'array',\n      ]\n    },\n    contains: [\n      {\n        begin: /\\[/,\n        end: /]/,\n        keywords: {\n          literal: LITERALS,\n          keyword: [\n            'new',\n            'array',\n          ]\n        },\n        contains: [\n          'self',\n          ...ATTRIBUTE_CONTAINS,\n        ]\n      },\n      ...ATTRIBUTE_CONTAINS,\n      {\n        scope: 'meta',\n        match: PASCAL_CASE_CLASS_NAME_RE\n      }\n    ]\n  };\n\n  return {\n    case_insensitive: false,\n    keywords: KEYWORDS,\n    contains: [\n      ATTRIBUTES,\n      hljs.HASH_COMMENT_MODE,\n      hljs.COMMENT('//', '$'),\n      hljs.COMMENT(\n        '/\\\\*',\n        '\\\\*/',\n        { contains: [\n          {\n            scope: 'doctag',\n            match: '@[A-Za-z]+'\n          }\n        ] }\n      ),\n      {\n        match: /__halt_compiler\\(\\);/,\n        keywords: '__halt_compiler',\n        starts: {\n          scope: \"comment\",\n          end: hljs.MATCH_NOTHING_RE,\n          contains: [\n            {\n              match: /\\?>/,\n              scope: \"meta\",\n              endsParent: true\n            }\n          ]\n        }\n      },\n      PREPROCESSOR,\n      {\n        scope: 'variable.language',\n        match: /\\$this\\b/\n      },\n      VARIABLE,\n      FUNCTION_INVOKE,\n      LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON,\n      {\n        match: [\n          /const/,\n          /\\s/,\n          IDENT_RE,\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"variable.constant\",\n        },\n      },\n      CONSTRUCTOR_CALL,\n      {\n        scope: 'function',\n        relevance: 0,\n        beginKeywords: 'fn function',\n        end: /[;{]/,\n        excludeEnd: true,\n        illegal: '[$%\\\\[]',\n        contains: [\n          { beginKeywords: 'use', },\n          hljs.UNDERSCORE_TITLE_MODE,\n          {\n            begin: '=>', // No markup, just a relevance booster\n            endsParent: true\n          },\n          {\n            scope: 'params',\n            begin: '\\\\(',\n            end: '\\\\)',\n            excludeBegin: true,\n            excludeEnd: true,\n            keywords: KEYWORDS,\n            contains: [\n              'self',\n              VARIABLE,\n              LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON,\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRING,\n              NUMBER\n            ]\n          },\n        ]\n      },\n      {\n        scope: 'class',\n        variants: [\n          {\n            beginKeywords: \"enum\",\n            illegal: /[($\"]/\n          },\n          {\n            beginKeywords: \"class interface trait\",\n            illegal: /[:($\"]/\n          }\n        ],\n        relevance: 0,\n        end: /\\{/,\n        excludeEnd: true,\n        contains: [\n          { beginKeywords: 'extends implements' },\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      // both use and namespace still use \"old style\" rules (vs multi-match)\n      // because the namespace name can include `\\` and we still want each\n      // element to be treated as its own *individual* title\n      {\n        beginKeywords: 'namespace',\n        relevance: 0,\n        end: ';',\n        illegal: /[.']/,\n        contains: [ hljs.inherit(hljs.UNDERSCORE_TITLE_MODE, { scope: \"title.class\" }) ]\n      },\n      {\n        beginKeywords: 'use',\n        relevance: 0,\n        end: ';',\n        contains: [\n          // TODO: title.function vs title.class\n          {\n            match: /\\b(as|const|function)\\b/,\n            scope: \"keyword\"\n          },\n          // TODO: could be title.class or title.function\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      STRING,\n      NUMBER,\n    ]\n  };\n}\n\nexport { php as default };\n", "/*\nLanguage: PHP Template\nRequires: xml.js, php.js\nAuthor: Josh Goebel <hello@joshgoebel.com>\nWebsite: https://www.php.net\nCategory: common\n*/\n\nfunction phpTemplate(hljs) {\n  return {\n    name: \"PHP template\",\n    subLanguage: 'xml',\n    contains: [\n      {\n        begin: /<\\?(php|=)?/,\n        end: /\\?>/,\n        subLanguage: 'php',\n        contains: [\n          // We don't want the php closing tag ?> to close the PHP block when\n          // inside any of the following blocks:\n          {\n            begin: '/\\\\*',\n            end: '\\\\*/',\n            skip: true\n          },\n          {\n            begin: 'b\"',\n            end: '\"',\n            skip: true\n          },\n          {\n            begin: 'b\\'',\n            end: '\\'',\n            skip: true\n          },\n          hljs.inherit(hljs.APOS_STRING_MODE, {\n            illegal: null,\n            className: null,\n            contains: null,\n            skip: true\n          }),\n          hljs.inherit(hljs.QUOTE_STRING_MODE, {\n            illegal: null,\n            className: null,\n            contains: null,\n            skip: true\n          })\n        ]\n      }\n    ]\n  };\n}\n\nexport { phpTemplate as default };\n", "/*\nLanguage: Plain text\nAuthor: Egor Rogov (e.rogov@postgrespro.ru)\nDescription: Plain text without any highlighting.\nCategory: common\n*/\n\nfunction plaintext(hljs) {\n  return {\n    name: 'Plain text',\n    aliases: [\n      'text',\n      'txt'\n    ],\n    disableAutodetect: true\n  };\n}\n\nexport { plaintext as default };\n", "/*\nLanguage: Python\nDescription: Python is an interpreted, object-oriented, high-level programming language with dynamic semantics.\nWebsite: https://www.python.org\nCategory: common\n*/\n\nfunction python(hljs) {\n  const regex = hljs.regex;\n  const IDENT_RE = /[\\p{XID_Start}_]\\p{XID_Continue}*/u;\n  const RESERVED_WORDS = [\n    'and',\n    'as',\n    'assert',\n    'async',\n    'await',\n    'break',\n    'case',\n    'class',\n    'continue',\n    'def',\n    'del',\n    'elif',\n    'else',\n    'except',\n    'finally',\n    'for',\n    'from',\n    'global',\n    'if',\n    'import',\n    'in',\n    'is',\n    'lambda',\n    'match',\n    'nonlocal|10',\n    'not',\n    'or',\n    'pass',\n    'raise',\n    'return',\n    'try',\n    'while',\n    'with',\n    'yield'\n  ];\n\n  const BUILT_INS = [\n    '__import__',\n    'abs',\n    'all',\n    'any',\n    'ascii',\n    'bin',\n    'bool',\n    'breakpoint',\n    'bytearray',\n    'bytes',\n    'callable',\n    'chr',\n    'classmethod',\n    'compile',\n    'complex',\n    'delattr',\n    'dict',\n    'dir',\n    'divmod',\n    'enumerate',\n    'eval',\n    'exec',\n    'filter',\n    'float',\n    'format',\n    'frozenset',\n    'getattr',\n    'globals',\n    'hasattr',\n    'hash',\n    'help',\n    'hex',\n    'id',\n    'input',\n    'int',\n    'isinstance',\n    'issubclass',\n    'iter',\n    'len',\n    'list',\n    'locals',\n    'map',\n    'max',\n    'memoryview',\n    'min',\n    'next',\n    'object',\n    'oct',\n    'open',\n    'ord',\n    'pow',\n    'print',\n    'property',\n    'range',\n    'repr',\n    'reversed',\n    'round',\n    'set',\n    'setattr',\n    'slice',\n    'sorted',\n    'staticmethod',\n    'str',\n    'sum',\n    'super',\n    'tuple',\n    'type',\n    'vars',\n    'zip'\n  ];\n\n  const LITERALS = [\n    '__debug__',\n    'Ellipsis',\n    'False',\n    'None',\n    'NotImplemented',\n    'True'\n  ];\n\n  // https://docs.python.org/3/library/typing.html\n  // TODO: Could these be supplemented by a CamelCase matcher in certain\n  // contexts, leaving these remaining only for relevance hinting?\n  const TYPES = [\n    \"Any\",\n    \"Callable\",\n    \"Coroutine\",\n    \"Dict\",\n    \"List\",\n    \"Literal\",\n    \"Generic\",\n    \"Optional\",\n    \"Sequence\",\n    \"Set\",\n    \"Tuple\",\n    \"Type\",\n    \"Union\"\n  ];\n\n  const KEYWORDS = {\n    $pattern: /[A-Za-z]\\w+|__\\w+__/,\n    keyword: RESERVED_WORDS,\n    built_in: BUILT_INS,\n    literal: LITERALS,\n    type: TYPES\n  };\n\n  const PROMPT = {\n    className: 'meta',\n    begin: /^(>>>|\\.\\.\\.) /\n  };\n\n  const SUBST = {\n    className: 'subst',\n    begin: /\\{/,\n    end: /\\}/,\n    keywords: KEYWORDS,\n    illegal: /#/\n  };\n\n  const LITERAL_BRACKET = {\n    begin: /\\{\\{/,\n    relevance: 0\n  };\n\n  const STRING = {\n    className: 'string',\n    contains: [ hljs.BACKSLASH_ESCAPE ],\n    variants: [\n      {\n        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?'''/,\n        end: /'''/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT\n        ],\n        relevance: 10\n      },\n      {\n        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?\"\"\"/,\n        end: /\"\"\"/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT\n        ],\n        relevance: 10\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])'''/,\n        end: /'''/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])\"\"\"/,\n        end: /\"\"\"/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      {\n        begin: /([uU]|[rR])'/,\n        end: /'/,\n        relevance: 10\n      },\n      {\n        begin: /([uU]|[rR])\"/,\n        end: /\"/,\n        relevance: 10\n      },\n      {\n        begin: /([bB]|[bB][rR]|[rR][bB])'/,\n        end: /'/\n      },\n      {\n        begin: /([bB]|[bB][rR]|[rR][bB])\"/,\n        end: /\"/\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])'/,\n        end: /'/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])\"/,\n        end: /\"/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE\n    ]\n  };\n\n  // https://docs.python.org/3.9/reference/lexical_analysis.html#numeric-literals\n  const digitpart = '[0-9](_?[0-9])*';\n  const pointfloat = `(\\\\b(${digitpart}))?\\\\.(${digitpart})|\\\\b(${digitpart})\\\\.`;\n  // Whitespace after a number (or any lexical token) is needed only if its absence\n  // would change the tokenization\n  // https://docs.python.org/3.9/reference/lexical_analysis.html#whitespace-between-tokens\n  // We deviate slightly, requiring a word boundary or a keyword\n  // to avoid accidentally recognizing *prefixes* (e.g., `0` in `0x41` or `08` or `0__1`)\n  const lookahead = `\\\\b|${RESERVED_WORDS.join('|')}`;\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      // exponentfloat, pointfloat\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#floating-point-literals\n      // optionally imaginary\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n      // Note: no leading \\b because floats can start with a decimal point\n      // and we don't want to mishandle e.g. `fn(.5)`,\n      // no trailing \\b for pointfloat because it can end with a decimal point\n      // and we don't want to mishandle e.g. `0..hex()`; this should be safe\n      // because both MUST contain a decimal point and so cannot be confused with\n      // the interior part of an identifier\n      {\n        begin: `(\\\\b(${digitpart})|(${pointfloat}))[eE][+-]?(${digitpart})[jJ]?(?=${lookahead})`\n      },\n      {\n        begin: `(${pointfloat})[jJ]?`\n      },\n\n      // decinteger, bininteger, octinteger, hexinteger\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#integer-literals\n      // optionally \"long\" in Python 2\n      // https://docs.python.org/2.7/reference/lexical_analysis.html#integer-and-long-integer-literals\n      // decinteger is optionally imaginary\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n      {\n        begin: `\\\\b([1-9](_?[0-9])*|0+(_?0)*)[lLjJ]?(?=${lookahead})`\n      },\n      {\n        begin: `\\\\b0[bB](_?[01])+[lL]?(?=${lookahead})`\n      },\n      {\n        begin: `\\\\b0[oO](_?[0-7])+[lL]?(?=${lookahead})`\n      },\n      {\n        begin: `\\\\b0[xX](_?[0-9a-fA-F])+[lL]?(?=${lookahead})`\n      },\n\n      // imagnumber (digitpart-based)\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n      {\n        begin: `\\\\b(${digitpart})[jJ](?=${lookahead})`\n      }\n    ]\n  };\n  const COMMENT_TYPE = {\n    className: \"comment\",\n    begin: regex.lookahead(/# type:/),\n    end: /$/,\n    keywords: KEYWORDS,\n    contains: [\n      { // prevent keywords from coloring `type`\n        begin: /# type:/\n      },\n      // comment within a datatype comment includes no keywords\n      {\n        begin: /#/,\n        end: /\\b\\B/,\n        endsWithParent: true\n      }\n    ]\n  };\n  const PARAMS = {\n    className: 'params',\n    variants: [\n      // Exclude params in functions without params\n      {\n        className: \"\",\n        begin: /\\(\\s*\\)/,\n        skip: true\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        excludeBegin: true,\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        contains: [\n          'self',\n          PROMPT,\n          NUMBER,\n          STRING,\n          hljs.HASH_COMMENT_MODE\n        ]\n      }\n    ]\n  };\n  SUBST.contains = [\n    STRING,\n    NUMBER,\n    PROMPT\n  ];\n\n  return {\n    name: 'Python',\n    aliases: [\n      'py',\n      'gyp',\n      'ipython'\n    ],\n    unicodeRegex: true,\n    keywords: KEYWORDS,\n    illegal: /(<\\/|->|\\?)|=>/,\n    contains: [\n      PROMPT,\n      NUMBER,\n      {\n        // very common convention\n        begin: /\\bself\\b/\n      },\n      {\n        // eat \"if\" prior to string so that it won't accidentally be\n        // labeled as an f-string\n        beginKeywords: \"if\",\n        relevance: 0\n      },\n      STRING,\n      COMMENT_TYPE,\n      hljs.HASH_COMMENT_MODE,\n      {\n        match: [\n          /\\bdef/, /\\s+/,\n          IDENT_RE,\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.function\"\n        },\n        contains: [ PARAMS ]\n      },\n      {\n        variants: [\n          {\n            match: [\n              /\\bclass/, /\\s+/,\n              IDENT_RE, /\\s*/,\n              /\\(\\s*/, IDENT_RE,/\\s*\\)/\n            ],\n          },\n          {\n            match: [\n              /\\bclass/, /\\s+/,\n              IDENT_RE\n            ],\n          }\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.class\",\n          6: \"title.class.inherited\",\n        }\n      },\n      {\n        className: 'meta',\n        begin: /^[\\t ]*@/,\n        end: /(?=#)|$/,\n        contains: [\n          NUMBER,\n          PARAMS,\n          STRING\n        ]\n      }\n    ]\n  };\n}\n\nexport { python as default };\n", "/*\nLanguage: Python REPL\nRequires: python.js\nAuthor: Josh Goebel <hello@joshgoebel.com>\nCategory: common\n*/\n\nfunction pythonRepl(hljs) {\n  return {\n    aliases: [ 'pycon' ],\n    contains: [\n      {\n        className: 'meta.prompt',\n        starts: {\n          // a space separates the REPL prefix from the actual code\n          // this is purely for cleaner HTML output\n          end: / |$/,\n          starts: {\n            end: '$',\n            subLanguage: 'python'\n          }\n        },\n        variants: [\n          { begin: /^>>>(?=[ ]|$)/ },\n          { begin: /^\\.\\.\\.(?=[ ]|$)/ }\n        ]\n      }\n    ]\n  };\n}\n\nexport { pythonRepl as default };\n", "/*\nLanguage: R\nDescription: R is a free software environment for statistical computing and graphics.\nAuthor: Joe Cheng <joe@rstudio.org>\nContributors: Konrad Rudolph <konrad.rudolph@gmail.com>\nWebsite: https://www.r-project.org\nCategory: common,scientific\n*/\n\n/** @type LanguageFn */\nfunction r(hljs) {\n  const regex = hljs.regex;\n  // Identifiers in R cannot start with `_`, but they can start with `.` if it\n  // is not immediately followed by a digit.\n  // R also supports quoted identifiers, which are near-arbitrary sequences\n  // delimited by backticks (`\u2026`), which may contain escape sequences. These are\n  // handled in a separate mode. See `test/markup/r/names.txt` for examples.\n  // FIXME: Support Unicode identifiers.\n  const IDENT_RE = /(?:(?:[a-zA-Z]|\\.[._a-zA-Z])[._a-zA-Z0-9]*)|\\.(?!\\d)/;\n  const NUMBER_TYPES_RE = regex.either(\n    // Special case: only hexadecimal binary powers can contain fractions\n    /0[xX][0-9a-fA-F]+\\.[0-9a-fA-F]*[pP][+-]?\\d+i?/,\n    // Hexadecimal numbers without fraction and optional binary power\n    /0[xX][0-9a-fA-F]+(?:[pP][+-]?\\d+)?[Li]?/,\n    // Decimal numbers\n    /(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?[Li]?/\n  );\n  const OPERATORS_RE = /[=!<>:]=|\\|\\||&&|:::?|<-|<<-|->>|->|\\|>|[-+*\\/?!$&|:<=>@^~]|\\*\\*/;\n  const PUNCTUATION_RE = regex.either(\n    /[()]/,\n    /[{}]/,\n    /\\[\\[/,\n    /[[\\]]/,\n    /\\\\/,\n    /,/\n  );\n\n  return {\n    name: 'R',\n\n    keywords: {\n      $pattern: IDENT_RE,\n      keyword:\n        'function if in break next repeat else for while',\n      literal:\n        'NULL NA TRUE FALSE Inf NaN NA_integer_|10 NA_real_|10 '\n        + 'NA_character_|10 NA_complex_|10',\n      built_in:\n        // Builtin constants\n        'LETTERS letters month.abb month.name pi T F '\n        // Primitive functions\n        // These are all the functions in `base` that are implemented as a\n        // `.Primitive`, minus those functions that are also keywords.\n        + 'abs acos acosh all any anyNA Arg as.call as.character '\n        + 'as.complex as.double as.environment as.integer as.logical '\n        + 'as.null.default as.numeric as.raw asin asinh atan atanh attr '\n        + 'attributes baseenv browser c call ceiling class Conj cos cosh '\n        + 'cospi cummax cummin cumprod cumsum digamma dim dimnames '\n        + 'emptyenv exp expression floor forceAndCall gamma gc.time '\n        + 'globalenv Im interactive invisible is.array is.atomic is.call '\n        + 'is.character is.complex is.double is.environment is.expression '\n        + 'is.finite is.function is.infinite is.integer is.language '\n        + 'is.list is.logical is.matrix is.na is.name is.nan is.null '\n        + 'is.numeric is.object is.pairlist is.raw is.recursive is.single '\n        + 'is.symbol lazyLoadDBfetch length lgamma list log max min '\n        + 'missing Mod names nargs nzchar oldClass on.exit pos.to.env '\n        + 'proc.time prod quote range Re rep retracemem return round '\n        + 'seq_along seq_len seq.int sign signif sin sinh sinpi sqrt '\n        + 'standardGeneric substitute sum switch tan tanh tanpi tracemem '\n        + 'trigamma trunc unclass untracemem UseMethod xtfrm',\n    },\n\n    contains: [\n      // Roxygen comments\n      hljs.COMMENT(\n        /#'/,\n        /$/,\n        { contains: [\n          {\n            // Handle `@examples` separately to cause all subsequent code\n            // until the next `@`-tag on its own line to be kept as-is,\n            // preventing highlighting. This code is example R code, so nested\n            // doctags shouldn\u2019t be treated as such. See\n            // `test/markup/r/roxygen.txt` for an example.\n            scope: 'doctag',\n            match: /@examples/,\n            starts: {\n              end: regex.lookahead(regex.either(\n                // end if another doc comment\n                /\\n^#'\\s*(?=@[a-zA-Z]+)/,\n                // or a line with no comment\n                /\\n^(?!#')/\n              )),\n              endsParent: true\n            }\n          },\n          {\n            // Handle `@param` to highlight the parameter name following\n            // after.\n            scope: 'doctag',\n            begin: '@param',\n            end: /$/,\n            contains: [\n              {\n                scope: 'variable',\n                variants: [\n                  { match: IDENT_RE },\n                  { match: /`(?:\\\\.|[^`\\\\])+`/ }\n                ],\n                endsParent: true\n              }\n            ]\n          },\n          {\n            scope: 'doctag',\n            match: /@[a-zA-Z]+/\n          },\n          {\n            scope: 'keyword',\n            match: /\\\\[a-zA-Z]+/\n          }\n        ] }\n      ),\n\n      hljs.HASH_COMMENT_MODE,\n\n      {\n        scope: 'string',\n        contains: [ hljs.BACKSLASH_ESCAPE ],\n        variants: [\n          hljs.END_SAME_AS_BEGIN({\n            begin: /[rR]\"(-*)\\(/,\n            end: /\\)(-*)\"/\n          }),\n          hljs.END_SAME_AS_BEGIN({\n            begin: /[rR]\"(-*)\\{/,\n            end: /\\}(-*)\"/\n          }),\n          hljs.END_SAME_AS_BEGIN({\n            begin: /[rR]\"(-*)\\[/,\n            end: /\\](-*)\"/\n          }),\n          hljs.END_SAME_AS_BEGIN({\n            begin: /[rR]'(-*)\\(/,\n            end: /\\)(-*)'/\n          }),\n          hljs.END_SAME_AS_BEGIN({\n            begin: /[rR]'(-*)\\{/,\n            end: /\\}(-*)'/\n          }),\n          hljs.END_SAME_AS_BEGIN({\n            begin: /[rR]'(-*)\\[/,\n            end: /\\](-*)'/\n          }),\n          {\n            begin: '\"',\n            end: '\"',\n            relevance: 0\n          },\n          {\n            begin: \"'\",\n            end: \"'\",\n            relevance: 0\n          }\n        ],\n      },\n\n      // Matching numbers immediately following punctuation and operators is\n      // tricky since we need to look at the character ahead of a number to\n      // ensure the number is not part of an identifier, and we cannot use\n      // negative look-behind assertions. So instead we explicitly handle all\n      // possible combinations of (operator|punctuation), number.\n      // TODO: replace with negative look-behind when available\n      // { begin: /(?<![a-zA-Z0-9._])0[xX][0-9a-fA-F]+\\.[0-9a-fA-F]*[pP][+-]?\\d+i?/ },\n      // { begin: /(?<![a-zA-Z0-9._])0[xX][0-9a-fA-F]+([pP][+-]?\\d+)?[Li]?/ },\n      // { begin: /(?<![a-zA-Z0-9._])(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?[Li]?/ }\n      {\n        relevance: 0,\n        variants: [\n          {\n            scope: {\n              1: 'operator',\n              2: 'number'\n            },\n            match: [\n              OPERATORS_RE,\n              NUMBER_TYPES_RE\n            ]\n          },\n          {\n            scope: {\n              1: 'operator',\n              2: 'number'\n            },\n            match: [\n              /%[^%]*%/,\n              NUMBER_TYPES_RE\n            ]\n          },\n          {\n            scope: {\n              1: 'punctuation',\n              2: 'number'\n            },\n            match: [\n              PUNCTUATION_RE,\n              NUMBER_TYPES_RE\n            ]\n          },\n          {\n            scope: { 2: 'number' },\n            match: [\n              /[^a-zA-Z0-9._]|^/, // not part of an identifier, or start of document\n              NUMBER_TYPES_RE\n            ]\n          }\n        ]\n      },\n\n      // Operators/punctuation when they're not directly followed by numbers\n      {\n        // Relevance boost for the most common assignment form.\n        scope: { 3: 'operator' },\n        match: [\n          IDENT_RE,\n          /\\s+/,\n          /<-/,\n          /\\s+/\n        ]\n      },\n\n      {\n        scope: 'operator',\n        relevance: 0,\n        variants: [\n          { match: OPERATORS_RE },\n          { match: /%[^%]*%/ }\n        ]\n      },\n\n      {\n        scope: 'punctuation',\n        relevance: 0,\n        match: PUNCTUATION_RE\n      },\n\n      {\n        // Escaped identifier\n        begin: '`',\n        end: '`',\n        contains: [ { begin: /\\\\./ } ]\n      }\n    ]\n  };\n}\n\nexport { r as default };\n", "/*\nLanguage: Ruby\nDescription: Ruby is a dynamic, open source programming language with a focus on simplicity and productivity.\nWebsite: https://www.ruby-lang.org/\nAuthor: Anton Kovalyov <anton@kovalyov.net>\nContributors: Peter Leonov <gojpeg@yandex.ru>, Vasily Polovnyov <vast@whiteants.net>, Loren Segal <lsegal@soen.ca>, Pascal Hurni <phi@ruby-reactive.org>, Cedric Sohrauer <sohrauer@googlemail.com>\nCategory: common\n*/\n\nfunction ruby(hljs) {\n  const regex = hljs.regex;\n  const RUBY_METHOD_RE = '([a-zA-Z_]\\\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?)';\n  // TODO: move concepts like CAMEL_CASE into `modes.js`\n  const CLASS_NAME_RE = regex.either(\n    /\\b([A-Z]+[a-z0-9]+)+/,\n    // ends in caps\n    /\\b([A-Z]+[a-z0-9]+)+[A-Z]+/,\n  )\n  ;\n  const CLASS_NAME_WITH_NAMESPACE_RE = regex.concat(CLASS_NAME_RE, /(::\\w+)*/);\n  // very popular ruby built-ins that one might even assume\n  // are actual keywords (despite that not being the case)\n  const PSEUDO_KWS = [\n    \"include\",\n    \"extend\",\n    \"prepend\",\n    \"public\",\n    \"private\",\n    \"protected\",\n    \"raise\",\n    \"throw\"\n  ];\n  const RUBY_KEYWORDS = {\n    \"variable.constant\": [\n      \"__FILE__\",\n      \"__LINE__\",\n      \"__ENCODING__\"\n    ],\n    \"variable.language\": [\n      \"self\",\n      \"super\",\n    ],\n    keyword: [\n      \"alias\",\n      \"and\",\n      \"begin\",\n      \"BEGIN\",\n      \"break\",\n      \"case\",\n      \"class\",\n      \"defined\",\n      \"do\",\n      \"else\",\n      \"elsif\",\n      \"end\",\n      \"END\",\n      \"ensure\",\n      \"for\",\n      \"if\",\n      \"in\",\n      \"module\",\n      \"next\",\n      \"not\",\n      \"or\",\n      \"redo\",\n      \"require\",\n      \"rescue\",\n      \"retry\",\n      \"return\",\n      \"then\",\n      \"undef\",\n      \"unless\",\n      \"until\",\n      \"when\",\n      \"while\",\n      \"yield\",\n      ...PSEUDO_KWS\n    ],\n    built_in: [\n      \"proc\",\n      \"lambda\",\n      \"attr_accessor\",\n      \"attr_reader\",\n      \"attr_writer\",\n      \"define_method\",\n      \"private_constant\",\n      \"module_function\"\n    ],\n    literal: [\n      \"true\",\n      \"false\",\n      \"nil\"\n    ]\n  };\n  const YARDOCTAG = {\n    className: 'doctag',\n    begin: '@[A-Za-z]+'\n  };\n  const IRB_OBJECT = {\n    begin: '#<',\n    end: '>'\n  };\n  const COMMENT_MODES = [\n    hljs.COMMENT(\n      '#',\n      '$',\n      { contains: [ YARDOCTAG ] }\n    ),\n    hljs.COMMENT(\n      '^=begin',\n      '^=end',\n      {\n        contains: [ YARDOCTAG ],\n        relevance: 10\n      }\n    ),\n    hljs.COMMENT('^__END__', hljs.MATCH_NOTHING_RE)\n  ];\n  const SUBST = {\n    className: 'subst',\n    begin: /#\\{/,\n    end: /\\}/,\n    keywords: RUBY_KEYWORDS\n  };\n  const STRING = {\n    className: 'string',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ],\n    variants: [\n      {\n        begin: /'/,\n        end: /'/\n      },\n      {\n        begin: /\"/,\n        end: /\"/\n      },\n      {\n        begin: /`/,\n        end: /`/\n      },\n      {\n        begin: /%[qQwWx]?\\(/,\n        end: /\\)/\n      },\n      {\n        begin: /%[qQwWx]?\\[/,\n        end: /\\]/\n      },\n      {\n        begin: /%[qQwWx]?\\{/,\n        end: /\\}/\n      },\n      {\n        begin: /%[qQwWx]?</,\n        end: />/\n      },\n      {\n        begin: /%[qQwWx]?\\//,\n        end: /\\//\n      },\n      {\n        begin: /%[qQwWx]?%/,\n        end: /%/\n      },\n      {\n        begin: /%[qQwWx]?-/,\n        end: /-/\n      },\n      {\n        begin: /%[qQwWx]?\\|/,\n        end: /\\|/\n      },\n      // in the following expressions, \\B in the beginning suppresses recognition of ?-sequences\n      // where ? is the last character of a preceding identifier, as in: `func?4`\n      { begin: /\\B\\?(\\\\\\d{1,3})/ },\n      { begin: /\\B\\?(\\\\x[A-Fa-f0-9]{1,2})/ },\n      { begin: /\\B\\?(\\\\u\\{?[A-Fa-f0-9]{1,6}\\}?)/ },\n      { begin: /\\B\\?(\\\\M-\\\\C-|\\\\M-\\\\c|\\\\c\\\\M-|\\\\M-|\\\\C-\\\\M-)[\\x20-\\x7e]/ },\n      { begin: /\\B\\?\\\\(c|C-)[\\x20-\\x7e]/ },\n      { begin: /\\B\\?\\\\?\\S/ },\n      // heredocs\n      {\n        // this guard makes sure that we have an entire heredoc and not a false\n        // positive (auto-detect, etc.)\n        begin: regex.concat(\n          /<<[-~]?'?/,\n          regex.lookahead(/(\\w+)(?=\\W)[^\\n]*\\n(?:[^\\n]*\\n)*?\\s*\\1\\b/)\n        ),\n        contains: [\n          hljs.END_SAME_AS_BEGIN({\n            begin: /(\\w+)/,\n            end: /(\\w+)/,\n            contains: [\n              hljs.BACKSLASH_ESCAPE,\n              SUBST\n            ]\n          })\n        ]\n      }\n    ]\n  };\n\n  // Ruby syntax is underdocumented, but this grammar seems to be accurate\n  // as of version 2.7.2 (confirmed with (irb and `Ripper.sexp(...)`)\n  // https://docs.ruby-lang.org/en/2.7.0/doc/syntax/literals_rdoc.html#label-Numbers\n  const decimal = '[1-9](_?[0-9])*|0';\n  const digits = '[0-9](_?[0-9])*';\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      // decimal integer/float, optionally exponential or rational, optionally imaginary\n      { begin: `\\\\b(${decimal})(\\\\.(${digits}))?([eE][+-]?(${digits})|r)?i?\\\\b` },\n\n      // explicit decimal/binary/octal/hexadecimal integer,\n      // optionally rational and/or imaginary\n      { begin: \"\\\\b0[dD][0-9](_?[0-9])*r?i?\\\\b\" },\n      { begin: \"\\\\b0[bB][0-1](_?[0-1])*r?i?\\\\b\" },\n      { begin: \"\\\\b0[oO][0-7](_?[0-7])*r?i?\\\\b\" },\n      { begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*r?i?\\\\b\" },\n\n      // 0-prefixed implicit octal integer, optionally rational and/or imaginary\n      { begin: \"\\\\b0(_?[0-7])+r?i?\\\\b\" }\n    ]\n  };\n\n  const PARAMS = {\n    variants: [\n      {\n        match: /\\(\\)/,\n      },\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /(?=\\))/,\n        excludeBegin: true,\n        endsParent: true,\n        keywords: RUBY_KEYWORDS,\n      }\n    ]\n  };\n\n  const INCLUDE_EXTEND = {\n    match: [\n      /(include|extend)\\s+/,\n      CLASS_NAME_WITH_NAMESPACE_RE\n    ],\n    scope: {\n      2: \"title.class\"\n    },\n    keywords: RUBY_KEYWORDS\n  };\n\n  const CLASS_DEFINITION = {\n    variants: [\n      {\n        match: [\n          /class\\s+/,\n          CLASS_NAME_WITH_NAMESPACE_RE,\n          /\\s+<\\s+/,\n          CLASS_NAME_WITH_NAMESPACE_RE\n        ]\n      },\n      {\n        match: [\n          /\\b(class|module)\\s+/,\n          CLASS_NAME_WITH_NAMESPACE_RE\n        ]\n      }\n    ],\n    scope: {\n      2: \"title.class\",\n      4: \"title.class.inherited\"\n    },\n    keywords: RUBY_KEYWORDS\n  };\n\n  const UPPER_CASE_CONSTANT = {\n    relevance: 0,\n    match: /\\b[A-Z][A-Z_0-9]+\\b/,\n    className: \"variable.constant\"\n  };\n\n  const METHOD_DEFINITION = {\n    match: [\n      /def/, /\\s+/,\n      RUBY_METHOD_RE\n    ],\n    scope: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [\n      PARAMS\n    ]\n  };\n\n  const OBJECT_CREATION = {\n    relevance: 0,\n    match: [\n      CLASS_NAME_WITH_NAMESPACE_RE,\n      /\\.new[. (]/\n    ],\n    scope: {\n      1: \"title.class\"\n    }\n  };\n\n  // CamelCase\n  const CLASS_REFERENCE = {\n    relevance: 0,\n    match: CLASS_NAME_RE,\n    scope: \"title.class\"\n  };\n\n  const RUBY_DEFAULT_CONTAINS = [\n    STRING,\n    CLASS_DEFINITION,\n    INCLUDE_EXTEND,\n    OBJECT_CREATION,\n    UPPER_CASE_CONSTANT,\n    CLASS_REFERENCE,\n    METHOD_DEFINITION,\n    {\n      // swallow namespace qualifiers before symbols\n      begin: hljs.IDENT_RE + '::' },\n    {\n      className: 'symbol',\n      begin: hljs.UNDERSCORE_IDENT_RE + '(!|\\\\?)?:',\n      relevance: 0\n    },\n    {\n      className: 'symbol',\n      begin: ':(?!\\\\s)',\n      contains: [\n        STRING,\n        { begin: RUBY_METHOD_RE }\n      ],\n      relevance: 0\n    },\n    NUMBER,\n    {\n      // negative-look forward attempts to prevent false matches like:\n      // @ident@ or $ident$ that might indicate this is not ruby at all\n      className: \"variable\",\n      begin: '(\\\\$\\\\W)|((\\\\$|@@?)(\\\\w+))(?=[^@$?])' + `(?![A-Za-z])(?![@$?'])`\n    },\n    {\n      className: 'params',\n      begin: /\\|/,\n      end: /\\|/,\n      excludeBegin: true,\n      excludeEnd: true,\n      relevance: 0, // this could be a lot of things (in other languages) other than params\n      keywords: RUBY_KEYWORDS\n    },\n    { // regexp container\n      begin: '(' + hljs.RE_STARTERS_RE + '|unless)\\\\s*',\n      keywords: 'unless',\n      contains: [\n        {\n          className: 'regexp',\n          contains: [\n            hljs.BACKSLASH_ESCAPE,\n            SUBST\n          ],\n          illegal: /\\n/,\n          variants: [\n            {\n              begin: '/',\n              end: '/[a-z]*'\n            },\n            {\n              begin: /%r\\{/,\n              end: /\\}[a-z]*/\n            },\n            {\n              begin: '%r\\\\(',\n              end: '\\\\)[a-z]*'\n            },\n            {\n              begin: '%r!',\n              end: '![a-z]*'\n            },\n            {\n              begin: '%r\\\\[',\n              end: '\\\\][a-z]*'\n            }\n          ]\n        }\n      ].concat(IRB_OBJECT, COMMENT_MODES),\n      relevance: 0\n    }\n  ].concat(IRB_OBJECT, COMMENT_MODES);\n\n  SUBST.contains = RUBY_DEFAULT_CONTAINS;\n  PARAMS.contains = RUBY_DEFAULT_CONTAINS;\n\n  // >>\n  // ?>\n  const SIMPLE_PROMPT = \"[>?]>\";\n  // irb(main):001:0>\n  const DEFAULT_PROMPT = \"[\\\\w#]+\\\\(\\\\w+\\\\):\\\\d+:\\\\d+[>*]\";\n  const RVM_PROMPT = \"(\\\\w+-)?\\\\d+\\\\.\\\\d+\\\\.\\\\d+(p\\\\d+)?[^\\\\d][^>]+>\";\n\n  const IRB_DEFAULT = [\n    {\n      begin: /^\\s*=>/,\n      starts: {\n        end: '$',\n        contains: RUBY_DEFAULT_CONTAINS\n      }\n    },\n    {\n      className: 'meta.prompt',\n      begin: '^(' + SIMPLE_PROMPT + \"|\" + DEFAULT_PROMPT + '|' + RVM_PROMPT + ')(?=[ ])',\n      starts: {\n        end: '$',\n        keywords: RUBY_KEYWORDS,\n        contains: RUBY_DEFAULT_CONTAINS\n      }\n    }\n  ];\n\n  COMMENT_MODES.unshift(IRB_OBJECT);\n\n  return {\n    name: 'Ruby',\n    aliases: [\n      'rb',\n      'gemspec',\n      'podspec',\n      'thor',\n      'irb'\n    ],\n    keywords: RUBY_KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: [ hljs.SHEBANG({ binary: \"ruby\" }) ]\n      .concat(IRB_DEFAULT)\n      .concat(COMMENT_MODES)\n      .concat(RUBY_DEFAULT_CONTAINS)\n  };\n}\n\nexport { ruby as default };\n", "/*\nLanguage: Rust\nAuthor: Andrey Vlasovskikh <andrey.vlasovskikh@gmail.com>\nContributors: Roman Shmatov <romanshmatov@gmail.com>, Kasper Andersen <kma_untrusted@protonmail.com>\nWebsite: https://www.rust-lang.org\nCategory: common, system\n*/\n\n/** @type LanguageFn */\nfunction rust(hljs) {\n  const regex = hljs.regex;\n  const FUNCTION_INVOKE = {\n    className: \"title.function.invoke\",\n    relevance: 0,\n    begin: regex.concat(\n      /\\b/,\n      /(?!let\\b)/,\n      hljs.IDENT_RE,\n      regex.lookahead(/\\s*\\(/))\n  };\n  const NUMBER_SUFFIX = '([ui](8|16|32|64|128|size)|f(32|64))\\?';\n  const KEYWORDS = [\n    \"abstract\",\n    \"as\",\n    \"async\",\n    \"await\",\n    \"become\",\n    \"box\",\n    \"break\",\n    \"const\",\n    \"continue\",\n    \"crate\",\n    \"do\",\n    \"dyn\",\n    \"else\",\n    \"enum\",\n    \"extern\",\n    \"false\",\n    \"final\",\n    \"fn\",\n    \"for\",\n    \"if\",\n    \"impl\",\n    \"in\",\n    \"let\",\n    \"loop\",\n    \"macro\",\n    \"match\",\n    \"mod\",\n    \"move\",\n    \"mut\",\n    \"override\",\n    \"priv\",\n    \"pub\",\n    \"ref\",\n    \"return\",\n    \"self\",\n    \"Self\",\n    \"static\",\n    \"struct\",\n    \"super\",\n    \"trait\",\n    \"true\",\n    \"try\",\n    \"type\",\n    \"typeof\",\n    \"unsafe\",\n    \"unsized\",\n    \"use\",\n    \"virtual\",\n    \"where\",\n    \"while\",\n    \"yield\"\n  ];\n  const LITERALS = [\n    \"true\",\n    \"false\",\n    \"Some\",\n    \"None\",\n    \"Ok\",\n    \"Err\"\n  ];\n  const BUILTINS = [\n    // functions\n    'drop ',\n    // traits\n    \"Copy\",\n    \"Send\",\n    \"Sized\",\n    \"Sync\",\n    \"Drop\",\n    \"Fn\",\n    \"FnMut\",\n    \"FnOnce\",\n    \"ToOwned\",\n    \"Clone\",\n    \"Debug\",\n    \"PartialEq\",\n    \"PartialOrd\",\n    \"Eq\",\n    \"Ord\",\n    \"AsRef\",\n    \"AsMut\",\n    \"Into\",\n    \"From\",\n    \"Default\",\n    \"Iterator\",\n    \"Extend\",\n    \"IntoIterator\",\n    \"DoubleEndedIterator\",\n    \"ExactSizeIterator\",\n    \"SliceConcatExt\",\n    \"ToString\",\n    // macros\n    \"assert!\",\n    \"assert_eq!\",\n    \"bitflags!\",\n    \"bytes!\",\n    \"cfg!\",\n    \"col!\",\n    \"concat!\",\n    \"concat_idents!\",\n    \"debug_assert!\",\n    \"debug_assert_eq!\",\n    \"env!\",\n    \"panic!\",\n    \"file!\",\n    \"format!\",\n    \"format_args!\",\n    \"include_bytes!\",\n    \"include_str!\",\n    \"line!\",\n    \"local_data_key!\",\n    \"module_path!\",\n    \"option_env!\",\n    \"print!\",\n    \"println!\",\n    \"select!\",\n    \"stringify!\",\n    \"try!\",\n    \"unimplemented!\",\n    \"unreachable!\",\n    \"vec!\",\n    \"write!\",\n    \"writeln!\",\n    \"macro_rules!\",\n    \"assert_ne!\",\n    \"debug_assert_ne!\"\n  ];\n  const TYPES = [\n    \"i8\",\n    \"i16\",\n    \"i32\",\n    \"i64\",\n    \"i128\",\n    \"isize\",\n    \"u8\",\n    \"u16\",\n    \"u32\",\n    \"u64\",\n    \"u128\",\n    \"usize\",\n    \"f32\",\n    \"f64\",\n    \"str\",\n    \"char\",\n    \"bool\",\n    \"Box\",\n    \"Option\",\n    \"Result\",\n    \"String\",\n    \"Vec\"\n  ];\n  return {\n    name: 'Rust',\n    aliases: [ 'rs' ],\n    keywords: {\n      $pattern: hljs.IDENT_RE + '!?',\n      type: TYPES,\n      keyword: KEYWORDS,\n      literal: LITERALS,\n      built_in: BUILTINS\n    },\n    illegal: '</',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.COMMENT('/\\\\*', '\\\\*/', { contains: [ 'self' ] }),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {\n        begin: /b?\"/,\n        illegal: null\n      }),\n      {\n        className: 'string',\n        variants: [\n          { begin: /b?r(#*)\"(.|\\n)*?\"\\1(?!#)/ },\n          { begin: /b?'\\\\?(x\\w{2}|u\\w{4}|U\\w{8}|.)'/ }\n        ]\n      },\n      {\n        className: 'symbol',\n        begin: /'[a-zA-Z_][a-zA-Z0-9_]*/\n      },\n      {\n        className: 'number',\n        variants: [\n          { begin: '\\\\b0b([01_]+)' + NUMBER_SUFFIX },\n          { begin: '\\\\b0o([0-7_]+)' + NUMBER_SUFFIX },\n          { begin: '\\\\b0x([A-Fa-f0-9_]+)' + NUMBER_SUFFIX },\n          { begin: '\\\\b(\\\\d[\\\\d_]*(\\\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)'\n                   + NUMBER_SUFFIX }\n        ],\n        relevance: 0\n      },\n      {\n        begin: [\n          /fn/,\n          /\\s+/,\n          hljs.UNDERSCORE_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"title.function\"\n        }\n      },\n      {\n        className: 'meta',\n        begin: '#!?\\\\[',\n        end: '\\\\]',\n        contains: [\n          {\n            className: 'string',\n            begin: /\"/,\n            end: /\"/\n          }\n        ]\n      },\n      {\n        begin: [\n          /let/,\n          /\\s+/,\n          /(?:mut\\s+)?/,\n          hljs.UNDERSCORE_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"keyword\",\n          4: \"variable\"\n        }\n      },\n      // must come before impl/for rule later\n      {\n        begin: [\n          /for/,\n          /\\s+/,\n          hljs.UNDERSCORE_IDENT_RE,\n          /\\s+/,\n          /in/\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"variable\",\n          5: \"keyword\"\n        }\n      },\n      {\n        begin: [\n          /type/,\n          /\\s+/,\n          hljs.UNDERSCORE_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"title.class\"\n        }\n      },\n      {\n        begin: [\n          /(?:trait|enum|struct|union|impl|for)/,\n          /\\s+/,\n          hljs.UNDERSCORE_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"title.class\"\n        }\n      },\n      {\n        begin: hljs.IDENT_RE + '::',\n        keywords: {\n          keyword: \"Self\",\n          built_in: BUILTINS,\n          type: TYPES\n        }\n      },\n      {\n        className: \"punctuation\",\n        begin: '->'\n      },\n      FUNCTION_INVOKE\n    ]\n  };\n}\n\nexport { rust as default };\n", "const MODES = (hljs) => {\n  return {\n    IMPORTANT: {\n      scope: 'meta',\n      begin: '!important'\n    },\n    BLOCK_COMMENT: hljs.C_BLOCK_COMMENT_MODE,\n    HEXCOLOR: {\n      scope: 'number',\n      begin: /#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\\b/\n    },\n    FUNCTION_DISPATCH: {\n      className: \"built_in\",\n      begin: /[\\w-]+(?=\\()/\n    },\n    ATTRIBUTE_SELECTOR_MODE: {\n      scope: 'selector-attr',\n      begin: /\\[/,\n      end: /\\]/,\n      illegal: '$',\n      contains: [\n        hljs.APOS_STRING_MODE,\n        hljs.QUOTE_STRING_MODE\n      ]\n    },\n    CSS_NUMBER_MODE: {\n      scope: 'number',\n      begin: hljs.NUMBER_RE + '(' +\n        '%|em|ex|ch|rem' +\n        '|vw|vh|vmin|vmax' +\n        '|cm|mm|in|pt|pc|px' +\n        '|deg|grad|rad|turn' +\n        '|s|ms' +\n        '|Hz|kHz' +\n        '|dpi|dpcm|dppx' +\n        ')?',\n      relevance: 0\n    },\n    CSS_VARIABLE: {\n      className: \"attr\",\n      begin: /--[A-Za-z][A-Za-z0-9_-]*/\n    }\n  };\n};\n\nconst TAGS = [\n  'a',\n  'abbr',\n  'address',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'blockquote',\n  'body',\n  'button',\n  'canvas',\n  'caption',\n  'cite',\n  'code',\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'div',\n  'dl',\n  'dt',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'header',\n  'hgroup',\n  'html',\n  'i',\n  'iframe',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'mark',\n  'menu',\n  'nav',\n  'object',\n  'ol',\n  'p',\n  'q',\n  'quote',\n  'samp',\n  'section',\n  'span',\n  'strong',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'ul',\n  'var',\n  'video'\n];\n\nconst MEDIA_FEATURES = [\n  'any-hover',\n  'any-pointer',\n  'aspect-ratio',\n  'color',\n  'color-gamut',\n  'color-index',\n  'device-aspect-ratio',\n  'device-height',\n  'device-width',\n  'display-mode',\n  'forced-colors',\n  'grid',\n  'height',\n  'hover',\n  'inverted-colors',\n  'monochrome',\n  'orientation',\n  'overflow-block',\n  'overflow-inline',\n  'pointer',\n  'prefers-color-scheme',\n  'prefers-contrast',\n  'prefers-reduced-motion',\n  'prefers-reduced-transparency',\n  'resolution',\n  'scan',\n  'scripting',\n  'update',\n  'width',\n  // TODO: find a better solution?\n  'min-width',\n  'max-width',\n  'min-height',\n  'max-height'\n];\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes\nconst PSEUDO_CLASSES = [\n  'active',\n  'any-link',\n  'blank',\n  'checked',\n  'current',\n  'default',\n  'defined',\n  'dir', // dir()\n  'disabled',\n  'drop',\n  'empty',\n  'enabled',\n  'first',\n  'first-child',\n  'first-of-type',\n  'fullscreen',\n  'future',\n  'focus',\n  'focus-visible',\n  'focus-within',\n  'has', // has()\n  'host', // host or host()\n  'host-context', // host-context()\n  'hover',\n  'indeterminate',\n  'in-range',\n  'invalid',\n  'is', // is()\n  'lang', // lang()\n  'last-child',\n  'last-of-type',\n  'left',\n  'link',\n  'local-link',\n  'not', // not()\n  'nth-child', // nth-child()\n  'nth-col', // nth-col()\n  'nth-last-child', // nth-last-child()\n  'nth-last-col', // nth-last-col()\n  'nth-last-of-type', //nth-last-of-type()\n  'nth-of-type', //nth-of-type()\n  'only-child',\n  'only-of-type',\n  'optional',\n  'out-of-range',\n  'past',\n  'placeholder-shown',\n  'read-only',\n  'read-write',\n  'required',\n  'right',\n  'root',\n  'scope',\n  'target',\n  'target-within',\n  'user-invalid',\n  'valid',\n  'visited',\n  'where' // where()\n];\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements\nconst PSEUDO_ELEMENTS = [\n  'after',\n  'backdrop',\n  'before',\n  'cue',\n  'cue-region',\n  'first-letter',\n  'first-line',\n  'grammar-error',\n  'marker',\n  'part',\n  'placeholder',\n  'selection',\n  'slotted',\n  'spelling-error'\n];\n\nconst ATTRIBUTES = [\n  'align-content',\n  'align-items',\n  'align-self',\n  'all',\n  'animation',\n  'animation-delay',\n  'animation-direction',\n  'animation-duration',\n  'animation-fill-mode',\n  'animation-iteration-count',\n  'animation-name',\n  'animation-play-state',\n  'animation-timing-function',\n  'backface-visibility',\n  'background',\n  'background-attachment',\n  'background-blend-mode',\n  'background-clip',\n  'background-color',\n  'background-image',\n  'background-origin',\n  'background-position',\n  'background-repeat',\n  'background-size',\n  'block-size',\n  'border',\n  'border-block',\n  'border-block-color',\n  'border-block-end',\n  'border-block-end-color',\n  'border-block-end-style',\n  'border-block-end-width',\n  'border-block-start',\n  'border-block-start-color',\n  'border-block-start-style',\n  'border-block-start-width',\n  'border-block-style',\n  'border-block-width',\n  'border-bottom',\n  'border-bottom-color',\n  'border-bottom-left-radius',\n  'border-bottom-right-radius',\n  'border-bottom-style',\n  'border-bottom-width',\n  'border-collapse',\n  'border-color',\n  'border-image',\n  'border-image-outset',\n  'border-image-repeat',\n  'border-image-slice',\n  'border-image-source',\n  'border-image-width',\n  'border-inline',\n  'border-inline-color',\n  'border-inline-end',\n  'border-inline-end-color',\n  'border-inline-end-style',\n  'border-inline-end-width',\n  'border-inline-start',\n  'border-inline-start-color',\n  'border-inline-start-style',\n  'border-inline-start-width',\n  'border-inline-style',\n  'border-inline-width',\n  'border-left',\n  'border-left-color',\n  'border-left-style',\n  'border-left-width',\n  'border-radius',\n  'border-right',\n  'border-right-color',\n  'border-right-style',\n  'border-right-width',\n  'border-spacing',\n  'border-style',\n  'border-top',\n  'border-top-color',\n  'border-top-left-radius',\n  'border-top-right-radius',\n  'border-top-style',\n  'border-top-width',\n  'border-width',\n  'bottom',\n  'box-decoration-break',\n  'box-shadow',\n  'box-sizing',\n  'break-after',\n  'break-before',\n  'break-inside',\n  'caption-side',\n  'caret-color',\n  'clear',\n  'clip',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'column-count',\n  'column-fill',\n  'column-gap',\n  'column-rule',\n  'column-rule-color',\n  'column-rule-style',\n  'column-rule-width',\n  'column-span',\n  'column-width',\n  'columns',\n  'contain',\n  'content',\n  'content-visibility',\n  'counter-increment',\n  'counter-reset',\n  'cue',\n  'cue-after',\n  'cue-before',\n  'cursor',\n  'direction',\n  'display',\n  'empty-cells',\n  'filter',\n  'flex',\n  'flex-basis',\n  'flex-direction',\n  'flex-flow',\n  'flex-grow',\n  'flex-shrink',\n  'flex-wrap',\n  'float',\n  'flow',\n  'font',\n  'font-display',\n  'font-family',\n  'font-feature-settings',\n  'font-kerning',\n  'font-language-override',\n  'font-size',\n  'font-size-adjust',\n  'font-smoothing',\n  'font-stretch',\n  'font-style',\n  'font-synthesis',\n  'font-variant',\n  'font-variant-caps',\n  'font-variant-east-asian',\n  'font-variant-ligatures',\n  'font-variant-numeric',\n  'font-variant-position',\n  'font-variation-settings',\n  'font-weight',\n  'gap',\n  'glyph-orientation-vertical',\n  'grid',\n  'grid-area',\n  'grid-auto-columns',\n  'grid-auto-flow',\n  'grid-auto-rows',\n  'grid-column',\n  'grid-column-end',\n  'grid-column-start',\n  'grid-gap',\n  'grid-row',\n  'grid-row-end',\n  'grid-row-start',\n  'grid-template',\n  'grid-template-areas',\n  'grid-template-columns',\n  'grid-template-rows',\n  'hanging-punctuation',\n  'height',\n  'hyphens',\n  'icon',\n  'image-orientation',\n  'image-rendering',\n  'image-resolution',\n  'ime-mode',\n  'inline-size',\n  'isolation',\n  'justify-content',\n  'left',\n  'letter-spacing',\n  'line-break',\n  'line-height',\n  'list-style',\n  'list-style-image',\n  'list-style-position',\n  'list-style-type',\n  'margin',\n  'margin-block',\n  'margin-block-end',\n  'margin-block-start',\n  'margin-bottom',\n  'margin-inline',\n  'margin-inline-end',\n  'margin-inline-start',\n  'margin-left',\n  'margin-right',\n  'margin-top',\n  'marks',\n  'mask',\n  'mask-border',\n  'mask-border-mode',\n  'mask-border-outset',\n  'mask-border-repeat',\n  'mask-border-slice',\n  'mask-border-source',\n  'mask-border-width',\n  'mask-clip',\n  'mask-composite',\n  'mask-image',\n  'mask-mode',\n  'mask-origin',\n  'mask-position',\n  'mask-repeat',\n  'mask-size',\n  'mask-type',\n  'max-block-size',\n  'max-height',\n  'max-inline-size',\n  'max-width',\n  'min-block-size',\n  'min-height',\n  'min-inline-size',\n  'min-width',\n  'mix-blend-mode',\n  'nav-down',\n  'nav-index',\n  'nav-left',\n  'nav-right',\n  'nav-up',\n  'none',\n  'normal',\n  'object-fit',\n  'object-position',\n  'opacity',\n  'order',\n  'orphans',\n  'outline',\n  'outline-color',\n  'outline-offset',\n  'outline-style',\n  'outline-width',\n  'overflow',\n  'overflow-wrap',\n  'overflow-x',\n  'overflow-y',\n  'padding',\n  'padding-block',\n  'padding-block-end',\n  'padding-block-start',\n  'padding-bottom',\n  'padding-inline',\n  'padding-inline-end',\n  'padding-inline-start',\n  'padding-left',\n  'padding-right',\n  'padding-top',\n  'page-break-after',\n  'page-break-before',\n  'page-break-inside',\n  'pause',\n  'pause-after',\n  'pause-before',\n  'perspective',\n  'perspective-origin',\n  'pointer-events',\n  'position',\n  'quotes',\n  'resize',\n  'rest',\n  'rest-after',\n  'rest-before',\n  'right',\n  'row-gap',\n  'scroll-margin',\n  'scroll-margin-block',\n  'scroll-margin-block-end',\n  'scroll-margin-block-start',\n  'scroll-margin-bottom',\n  'scroll-margin-inline',\n  'scroll-margin-inline-end',\n  'scroll-margin-inline-start',\n  'scroll-margin-left',\n  'scroll-margin-right',\n  'scroll-margin-top',\n  'scroll-padding',\n  'scroll-padding-block',\n  'scroll-padding-block-end',\n  'scroll-padding-block-start',\n  'scroll-padding-bottom',\n  'scroll-padding-inline',\n  'scroll-padding-inline-end',\n  'scroll-padding-inline-start',\n  'scroll-padding-left',\n  'scroll-padding-right',\n  'scroll-padding-top',\n  'scroll-snap-align',\n  'scroll-snap-stop',\n  'scroll-snap-type',\n  'scrollbar-color',\n  'scrollbar-gutter',\n  'scrollbar-width',\n  'shape-image-threshold',\n  'shape-margin',\n  'shape-outside',\n  'speak',\n  'speak-as',\n  'src', // @font-face\n  'tab-size',\n  'table-layout',\n  'text-align',\n  'text-align-all',\n  'text-align-last',\n  'text-combine-upright',\n  'text-decoration',\n  'text-decoration-color',\n  'text-decoration-line',\n  'text-decoration-style',\n  'text-emphasis',\n  'text-emphasis-color',\n  'text-emphasis-position',\n  'text-emphasis-style',\n  'text-indent',\n  'text-justify',\n  'text-orientation',\n  'text-overflow',\n  'text-rendering',\n  'text-shadow',\n  'text-transform',\n  'text-underline-position',\n  'top',\n  'transform',\n  'transform-box',\n  'transform-origin',\n  'transform-style',\n  'transition',\n  'transition-delay',\n  'transition-duration',\n  'transition-property',\n  'transition-timing-function',\n  'unicode-bidi',\n  'vertical-align',\n  'visibility',\n  'voice-balance',\n  'voice-duration',\n  'voice-family',\n  'voice-pitch',\n  'voice-range',\n  'voice-rate',\n  'voice-stress',\n  'voice-volume',\n  'white-space',\n  'widows',\n  'width',\n  'will-change',\n  'word-break',\n  'word-spacing',\n  'word-wrap',\n  'writing-mode',\n  'z-index'\n  // reverse makes sure longer attributes `font-weight` are matched fully\n  // instead of getting false positives on say `font`\n].reverse();\n\n/*\nLanguage: SCSS\nDescription: Scss is an extension of the syntax of CSS.\nAuthor: Kurt Emch <kurt@kurtemch.com>\nWebsite: https://sass-lang.com\nCategory: common, css, web\n*/\n\n/** @type LanguageFn */\nfunction scss(hljs) {\n  const modes = MODES(hljs);\n  const PSEUDO_ELEMENTS$1 = PSEUDO_ELEMENTS;\n  const PSEUDO_CLASSES$1 = PSEUDO_CLASSES;\n\n  const AT_IDENTIFIER = '@[a-z-]+'; // @font-face\n  const AT_MODIFIERS = \"and or not only\";\n  const IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';\n  const VARIABLE = {\n    className: 'variable',\n    begin: '(\\\\$' + IDENT_RE + ')\\\\b',\n    relevance: 0\n  };\n\n  return {\n    name: 'SCSS',\n    case_insensitive: true,\n    illegal: '[=/|\\']',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      // to recognize keyframe 40% etc which are outside the scope of our\n      // attribute value mode\n      modes.CSS_NUMBER_MODE,\n      {\n        className: 'selector-id',\n        begin: '#[A-Za-z0-9_-]+',\n        relevance: 0\n      },\n      {\n        className: 'selector-class',\n        begin: '\\\\.[A-Za-z0-9_-]+',\n        relevance: 0\n      },\n      modes.ATTRIBUTE_SELECTOR_MODE,\n      {\n        className: 'selector-tag',\n        begin: '\\\\b(' + TAGS.join('|') + ')\\\\b',\n        // was there, before, but why?\n        relevance: 0\n      },\n      {\n        className: 'selector-pseudo',\n        begin: ':(' + PSEUDO_CLASSES$1.join('|') + ')'\n      },\n      {\n        className: 'selector-pseudo',\n        begin: ':(:)?(' + PSEUDO_ELEMENTS$1.join('|') + ')'\n      },\n      VARIABLE,\n      { // pseudo-selector params\n        begin: /\\(/,\n        end: /\\)/,\n        contains: [ modes.CSS_NUMBER_MODE ]\n      },\n      modes.CSS_VARIABLE,\n      {\n        className: 'attribute',\n        begin: '\\\\b(' + ATTRIBUTES.join('|') + ')\\\\b'\n      },\n      { begin: '\\\\b(whitespace|wait|w-resize|visible|vertical-text|vertical-ideographic|uppercase|upper-roman|upper-alpha|underline|transparent|top|thin|thick|text|text-top|text-bottom|tb-rl|table-header-group|table-footer-group|sw-resize|super|strict|static|square|solid|small-caps|separate|se-resize|scroll|s-resize|rtl|row-resize|ridge|right|repeat|repeat-y|repeat-x|relative|progress|pointer|overline|outside|outset|oblique|nowrap|not-allowed|normal|none|nw-resize|no-repeat|no-drop|newspaper|ne-resize|n-resize|move|middle|medium|ltr|lr-tb|lowercase|lower-roman|lower-alpha|loose|list-item|line|line-through|line-edge|lighter|left|keep-all|justify|italic|inter-word|inter-ideograph|inside|inset|inline|inline-block|inherit|inactive|ideograph-space|ideograph-parenthesis|ideograph-numeric|ideograph-alpha|horizontal|hidden|help|hand|groove|fixed|ellipsis|e-resize|double|dotted|distribute|distribute-space|distribute-letter|distribute-all-lines|disc|disabled|default|decimal|dashed|crosshair|collapse|col-resize|circle|char|center|capitalize|break-word|break-all|bottom|both|bolder|bold|block|bidi-override|below|baseline|auto|always|all-scroll|absolute|table|table-cell)\\\\b' },\n      {\n        begin: /:/,\n        end: /[;}{]/,\n        relevance: 0,\n        contains: [\n          modes.BLOCK_COMMENT,\n          VARIABLE,\n          modes.HEXCOLOR,\n          modes.CSS_NUMBER_MODE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.APOS_STRING_MODE,\n          modes.IMPORTANT,\n          modes.FUNCTION_DISPATCH\n        ]\n      },\n      // matching these here allows us to treat them more like regular CSS\n      // rules so everything between the {} gets regular rule highlighting,\n      // which is what we want for page and font-face\n      {\n        begin: '@(page|font-face)',\n        keywords: {\n          $pattern: AT_IDENTIFIER,\n          keyword: '@page @font-face'\n        }\n      },\n      {\n        begin: '@',\n        end: '[{;]',\n        returnBegin: true,\n        keywords: {\n          $pattern: /[a-z-]+/,\n          keyword: AT_MODIFIERS,\n          attribute: MEDIA_FEATURES.join(\" \")\n        },\n        contains: [\n          {\n            begin: AT_IDENTIFIER,\n            className: \"keyword\"\n          },\n          {\n            begin: /[a-z-]+(?=:)/,\n            className: \"attribute\"\n          },\n          VARIABLE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.APOS_STRING_MODE,\n          modes.HEXCOLOR,\n          modes.CSS_NUMBER_MODE\n        ]\n      },\n      modes.FUNCTION_DISPATCH\n    ]\n  };\n}\n\nexport { scss as default };\n", "/*\nLanguage: Shell Session\nRequires: bash.js\nAuthor: TSUYUSATO Kitsune <make.just.on@gmail.com>\nCategory: common\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction shell(hljs) {\n  return {\n    name: 'Shell Session',\n    aliases: [\n      'console',\n      'shellsession'\n    ],\n    contains: [\n      {\n        className: 'meta.prompt',\n        // We cannot add \\s (spaces) in the regular expression otherwise it will be too broad and produce unexpected result.\n        // For instance, in the following example, it would match \"echo /path/to/home >\" as a prompt:\n        // echo /path/to/home > t.exe\n        begin: /^\\s{0,3}[/~\\w\\d[\\]()@-]*[>%$#][ ]?/,\n        starts: {\n          end: /[^\\\\](?=\\s*$)/,\n          subLanguage: 'bash'\n        }\n      }\n    ]\n  };\n}\n\nexport { shell as default };\n", "/*\n Language: SQL\n Website: https://en.wikipedia.org/wiki/SQL\n Category: common, database\n */\n\n/*\n\nGoals:\n\nSQL is intended to highlight basic/common SQL keywords and expressions\n\n- If pretty much every single SQL server includes supports, then it's a canidate.\n- It is NOT intended to include tons of vendor specific keywords (Oracle, MySQL,\n  PostgreSQL) although the list of data types is purposely a bit more expansive.\n- For more specific SQL grammars please see:\n  - PostgreSQL and PL/pgSQL - core\n  - T-SQL - https://github.com/highlightjs/highlightjs-tsql\n  - sql_more (core)\n\n */\n\nfunction sql(hljs) {\n  const regex = hljs.regex;\n  const COMMENT_MODE = hljs.COMMENT('--', '$');\n  const STRING = {\n    className: 'string',\n    variants: [\n      {\n        begin: /'/,\n        end: /'/,\n        contains: [ { begin: /''/ } ]\n      }\n    ]\n  };\n  const QUOTED_IDENTIFIER = {\n    begin: /\"/,\n    end: /\"/,\n    contains: [ { begin: /\"\"/ } ]\n  };\n\n  const LITERALS = [\n    \"true\",\n    \"false\",\n    // Not sure it's correct to call NULL literal, and clauses like IS [NOT] NULL look strange that way.\n    // \"null\",\n    \"unknown\"\n  ];\n\n  const MULTI_WORD_TYPES = [\n    \"double precision\",\n    \"large object\",\n    \"with timezone\",\n    \"without timezone\"\n  ];\n\n  const TYPES = [\n    'bigint',\n    'binary',\n    'blob',\n    'boolean',\n    'char',\n    'character',\n    'clob',\n    'date',\n    'dec',\n    'decfloat',\n    'decimal',\n    'float',\n    'int',\n    'integer',\n    'interval',\n    'nchar',\n    'nclob',\n    'national',\n    'numeric',\n    'real',\n    'row',\n    'smallint',\n    'time',\n    'timestamp',\n    'varchar',\n    'varying', // modifier (character varying)\n    'varbinary'\n  ];\n\n  const NON_RESERVED_WORDS = [\n    \"add\",\n    \"asc\",\n    \"collation\",\n    \"desc\",\n    \"final\",\n    \"first\",\n    \"last\",\n    \"view\"\n  ];\n\n  // https://jakewheat.github.io/sql-overview/sql-2016-foundation-grammar.html#reserved-word\n  const RESERVED_WORDS = [\n    \"abs\",\n    \"acos\",\n    \"all\",\n    \"allocate\",\n    \"alter\",\n    \"and\",\n    \"any\",\n    \"are\",\n    \"array\",\n    \"array_agg\",\n    \"array_max_cardinality\",\n    \"as\",\n    \"asensitive\",\n    \"asin\",\n    \"asymmetric\",\n    \"at\",\n    \"atan\",\n    \"atomic\",\n    \"authorization\",\n    \"avg\",\n    \"begin\",\n    \"begin_frame\",\n    \"begin_partition\",\n    \"between\",\n    \"bigint\",\n    \"binary\",\n    \"blob\",\n    \"boolean\",\n    \"both\",\n    \"by\",\n    \"call\",\n    \"called\",\n    \"cardinality\",\n    \"cascaded\",\n    \"case\",\n    \"cast\",\n    \"ceil\",\n    \"ceiling\",\n    \"char\",\n    \"char_length\",\n    \"character\",\n    \"character_length\",\n    \"check\",\n    \"classifier\",\n    \"clob\",\n    \"close\",\n    \"coalesce\",\n    \"collate\",\n    \"collect\",\n    \"column\",\n    \"commit\",\n    \"condition\",\n    \"connect\",\n    \"constraint\",\n    \"contains\",\n    \"convert\",\n    \"copy\",\n    \"corr\",\n    \"corresponding\",\n    \"cos\",\n    \"cosh\",\n    \"count\",\n    \"covar_pop\",\n    \"covar_samp\",\n    \"create\",\n    \"cross\",\n    \"cube\",\n    \"cume_dist\",\n    \"current\",\n    \"current_catalog\",\n    \"current_date\",\n    \"current_default_transform_group\",\n    \"current_path\",\n    \"current_role\",\n    \"current_row\",\n    \"current_schema\",\n    \"current_time\",\n    \"current_timestamp\",\n    \"current_path\",\n    \"current_role\",\n    \"current_transform_group_for_type\",\n    \"current_user\",\n    \"cursor\",\n    \"cycle\",\n    \"date\",\n    \"day\",\n    \"deallocate\",\n    \"dec\",\n    \"decimal\",\n    \"decfloat\",\n    \"declare\",\n    \"default\",\n    \"define\",\n    \"delete\",\n    \"dense_rank\",\n    \"deref\",\n    \"describe\",\n    \"deterministic\",\n    \"disconnect\",\n    \"distinct\",\n    \"double\",\n    \"drop\",\n    \"dynamic\",\n    \"each\",\n    \"element\",\n    \"else\",\n    \"empty\",\n    \"end\",\n    \"end_frame\",\n    \"end_partition\",\n    \"end-exec\",\n    \"equals\",\n    \"escape\",\n    \"every\",\n    \"except\",\n    \"exec\",\n    \"execute\",\n    \"exists\",\n    \"exp\",\n    \"external\",\n    \"extract\",\n    \"false\",\n    \"fetch\",\n    \"filter\",\n    \"first_value\",\n    \"float\",\n    \"floor\",\n    \"for\",\n    \"foreign\",\n    \"frame_row\",\n    \"free\",\n    \"from\",\n    \"full\",\n    \"function\",\n    \"fusion\",\n    \"get\",\n    \"global\",\n    \"grant\",\n    \"group\",\n    \"grouping\",\n    \"groups\",\n    \"having\",\n    \"hold\",\n    \"hour\",\n    \"identity\",\n    \"in\",\n    \"indicator\",\n    \"initial\",\n    \"inner\",\n    \"inout\",\n    \"insensitive\",\n    \"insert\",\n    \"int\",\n    \"integer\",\n    \"intersect\",\n    \"intersection\",\n    \"interval\",\n    \"into\",\n    \"is\",\n    \"join\",\n    \"json_array\",\n    \"json_arrayagg\",\n    \"json_exists\",\n    \"json_object\",\n    \"json_objectagg\",\n    \"json_query\",\n    \"json_table\",\n    \"json_table_primitive\",\n    \"json_value\",\n    \"lag\",\n    \"language\",\n    \"large\",\n    \"last_value\",\n    \"lateral\",\n    \"lead\",\n    \"leading\",\n    \"left\",\n    \"like\",\n    \"like_regex\",\n    \"listagg\",\n    \"ln\",\n    \"local\",\n    \"localtime\",\n    \"localtimestamp\",\n    \"log\",\n    \"log10\",\n    \"lower\",\n    \"match\",\n    \"match_number\",\n    \"match_recognize\",\n    \"matches\",\n    \"max\",\n    \"member\",\n    \"merge\",\n    \"method\",\n    \"min\",\n    \"minute\",\n    \"mod\",\n    \"modifies\",\n    \"module\",\n    \"month\",\n    \"multiset\",\n    \"national\",\n    \"natural\",\n    \"nchar\",\n    \"nclob\",\n    \"new\",\n    \"no\",\n    \"none\",\n    \"normalize\",\n    \"not\",\n    \"nth_value\",\n    \"ntile\",\n    \"null\",\n    \"nullif\",\n    \"numeric\",\n    \"octet_length\",\n    \"occurrences_regex\",\n    \"of\",\n    \"offset\",\n    \"old\",\n    \"omit\",\n    \"on\",\n    \"one\",\n    \"only\",\n    \"open\",\n    \"or\",\n    \"order\",\n    \"out\",\n    \"outer\",\n    \"over\",\n    \"overlaps\",\n    \"overlay\",\n    \"parameter\",\n    \"partition\",\n    \"pattern\",\n    \"per\",\n    \"percent\",\n    \"percent_rank\",\n    \"percentile_cont\",\n    \"percentile_disc\",\n    \"period\",\n    \"portion\",\n    \"position\",\n    \"position_regex\",\n    \"power\",\n    \"precedes\",\n    \"precision\",\n    \"prepare\",\n    \"primary\",\n    \"procedure\",\n    \"ptf\",\n    \"range\",\n    \"rank\",\n    \"reads\",\n    \"real\",\n    \"recursive\",\n    \"ref\",\n    \"references\",\n    \"referencing\",\n    \"regr_avgx\",\n    \"regr_avgy\",\n    \"regr_count\",\n    \"regr_intercept\",\n    \"regr_r2\",\n    \"regr_slope\",\n    \"regr_sxx\",\n    \"regr_sxy\",\n    \"regr_syy\",\n    \"release\",\n    \"result\",\n    \"return\",\n    \"returns\",\n    \"revoke\",\n    \"right\",\n    \"rollback\",\n    \"rollup\",\n    \"row\",\n    \"row_number\",\n    \"rows\",\n    \"running\",\n    \"savepoint\",\n    \"scope\",\n    \"scroll\",\n    \"search\",\n    \"second\",\n    \"seek\",\n    \"select\",\n    \"sensitive\",\n    \"session_user\",\n    \"set\",\n    \"show\",\n    \"similar\",\n    \"sin\",\n    \"sinh\",\n    \"skip\",\n    \"smallint\",\n    \"some\",\n    \"specific\",\n    \"specifictype\",\n    \"sql\",\n    \"sqlexception\",\n    \"sqlstate\",\n    \"sqlwarning\",\n    \"sqrt\",\n    \"start\",\n    \"static\",\n    \"stddev_pop\",\n    \"stddev_samp\",\n    \"submultiset\",\n    \"subset\",\n    \"substring\",\n    \"substring_regex\",\n    \"succeeds\",\n    \"sum\",\n    \"symmetric\",\n    \"system\",\n    \"system_time\",\n    \"system_user\",\n    \"table\",\n    \"tablesample\",\n    \"tan\",\n    \"tanh\",\n    \"then\",\n    \"time\",\n    \"timestamp\",\n    \"timezone_hour\",\n    \"timezone_minute\",\n    \"to\",\n    \"trailing\",\n    \"translate\",\n    \"translate_regex\",\n    \"translation\",\n    \"treat\",\n    \"trigger\",\n    \"trim\",\n    \"trim_array\",\n    \"true\",\n    \"truncate\",\n    \"uescape\",\n    \"union\",\n    \"unique\",\n    \"unknown\",\n    \"unnest\",\n    \"update\",\n    \"upper\",\n    \"user\",\n    \"using\",\n    \"value\",\n    \"values\",\n    \"value_of\",\n    \"var_pop\",\n    \"var_samp\",\n    \"varbinary\",\n    \"varchar\",\n    \"varying\",\n    \"versioning\",\n    \"when\",\n    \"whenever\",\n    \"where\",\n    \"width_bucket\",\n    \"window\",\n    \"with\",\n    \"within\",\n    \"without\",\n    \"year\",\n  ];\n\n  // these are reserved words we have identified to be functions\n  // and should only be highlighted in a dispatch-like context\n  // ie, array_agg(...), etc.\n  const RESERVED_FUNCTIONS = [\n    \"abs\",\n    \"acos\",\n    \"array_agg\",\n    \"asin\",\n    \"atan\",\n    \"avg\",\n    \"cast\",\n    \"ceil\",\n    \"ceiling\",\n    \"coalesce\",\n    \"corr\",\n    \"cos\",\n    \"cosh\",\n    \"count\",\n    \"covar_pop\",\n    \"covar_samp\",\n    \"cume_dist\",\n    \"dense_rank\",\n    \"deref\",\n    \"element\",\n    \"exp\",\n    \"extract\",\n    \"first_value\",\n    \"floor\",\n    \"json_array\",\n    \"json_arrayagg\",\n    \"json_exists\",\n    \"json_object\",\n    \"json_objectagg\",\n    \"json_query\",\n    \"json_table\",\n    \"json_table_primitive\",\n    \"json_value\",\n    \"lag\",\n    \"last_value\",\n    \"lead\",\n    \"listagg\",\n    \"ln\",\n    \"log\",\n    \"log10\",\n    \"lower\",\n    \"max\",\n    \"min\",\n    \"mod\",\n    \"nth_value\",\n    \"ntile\",\n    \"nullif\",\n    \"percent_rank\",\n    \"percentile_cont\",\n    \"percentile_disc\",\n    \"position\",\n    \"position_regex\",\n    \"power\",\n    \"rank\",\n    \"regr_avgx\",\n    \"regr_avgy\",\n    \"regr_count\",\n    \"regr_intercept\",\n    \"regr_r2\",\n    \"regr_slope\",\n    \"regr_sxx\",\n    \"regr_sxy\",\n    \"regr_syy\",\n    \"row_number\",\n    \"sin\",\n    \"sinh\",\n    \"sqrt\",\n    \"stddev_pop\",\n    \"stddev_samp\",\n    \"substring\",\n    \"substring_regex\",\n    \"sum\",\n    \"tan\",\n    \"tanh\",\n    \"translate\",\n    \"translate_regex\",\n    \"treat\",\n    \"trim\",\n    \"trim_array\",\n    \"unnest\",\n    \"upper\",\n    \"value_of\",\n    \"var_pop\",\n    \"var_samp\",\n    \"width_bucket\",\n  ];\n\n  // these functions can\n  const POSSIBLE_WITHOUT_PARENS = [\n    \"current_catalog\",\n    \"current_date\",\n    \"current_default_transform_group\",\n    \"current_path\",\n    \"current_role\",\n    \"current_schema\",\n    \"current_transform_group_for_type\",\n    \"current_user\",\n    \"session_user\",\n    \"system_time\",\n    \"system_user\",\n    \"current_time\",\n    \"localtime\",\n    \"current_timestamp\",\n    \"localtimestamp\"\n  ];\n\n  // those exist to boost relevance making these very\n  // \"SQL like\" keyword combos worth +1 extra relevance\n  const COMBOS = [\n    \"create table\",\n    \"insert into\",\n    \"primary key\",\n    \"foreign key\",\n    \"not null\",\n    \"alter table\",\n    \"add constraint\",\n    \"grouping sets\",\n    \"on overflow\",\n    \"character set\",\n    \"respect nulls\",\n    \"ignore nulls\",\n    \"nulls first\",\n    \"nulls last\",\n    \"depth first\",\n    \"breadth first\"\n  ];\n\n  const FUNCTIONS = RESERVED_FUNCTIONS;\n\n  const KEYWORDS = [\n    ...RESERVED_WORDS,\n    ...NON_RESERVED_WORDS\n  ].filter((keyword) => {\n    return !RESERVED_FUNCTIONS.includes(keyword);\n  });\n\n  const VARIABLE = {\n    className: \"variable\",\n    begin: /@[a-z0-9]+/,\n  };\n\n  const OPERATOR = {\n    className: \"operator\",\n    begin: /[-+*/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?/,\n    relevance: 0,\n  };\n\n  const FUNCTION_CALL = {\n    begin: regex.concat(/\\b/, regex.either(...FUNCTIONS), /\\s*\\(/),\n    relevance: 0,\n    keywords: { built_in: FUNCTIONS }\n  };\n\n  // keywords with less than 3 letters are reduced in relevancy\n  function reduceRelevancy(list, {\n    exceptions, when\n  } = {}) {\n    const qualifyFn = when;\n    exceptions = exceptions || [];\n    return list.map((item) => {\n      if (item.match(/\\|\\d+$/) || exceptions.includes(item)) {\n        return item;\n      } else if (qualifyFn(item)) {\n        return `${item}|0`;\n      } else {\n        return item;\n      }\n    });\n  }\n\n  return {\n    name: 'SQL',\n    case_insensitive: true,\n    // does not include {} or HTML tags `</`\n    illegal: /[{}]|<\\//,\n    keywords: {\n      $pattern: /\\b[\\w\\.]+/,\n      keyword:\n        reduceRelevancy(KEYWORDS, { when: (x) => x.length < 3 }),\n      literal: LITERALS,\n      type: TYPES,\n      built_in: POSSIBLE_WITHOUT_PARENS\n    },\n    contains: [\n      {\n        begin: regex.either(...COMBOS),\n        relevance: 0,\n        keywords: {\n          $pattern: /[\\w\\.]+/,\n          keyword: KEYWORDS.concat(COMBOS),\n          literal: LITERALS,\n          type: TYPES\n        },\n      },\n      {\n        className: \"type\",\n        begin: regex.either(...MULTI_WORD_TYPES)\n      },\n      FUNCTION_CALL,\n      VARIABLE,\n      STRING,\n      QUOTED_IDENTIFIER,\n      hljs.C_NUMBER_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      COMMENT_MODE,\n      OPERATOR\n    ]\n  };\n}\n\nexport { sql as default };\n", "/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/**\n * @param { Array<string | RegExp | Object> } args\n * @returns {object}\n */\nfunction stripOptionsFromArgs(args) {\n  const opts = args[args.length - 1];\n\n  if (typeof opts === 'object' && opts.constructor === Object) {\n    args.splice(args.length - 1, 1);\n    return opts;\n  } else {\n    return {};\n  }\n}\n\n/** @typedef { {capture?: boolean} } RegexEitherOptions */\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] | [...(RegExp | string)[], RegexEitherOptions]} args\n * @returns {string}\n */\nfunction either(...args) {\n  /** @type { object & {capture?: boolean} }  */\n  const opts = stripOptionsFromArgs(args);\n  const joined = '('\n    + (opts.capture ? \"\" : \"?:\")\n    + args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\nconst keywordWrapper = keyword => concat(\n  /\\b/,\n  keyword,\n  /\\w$/.test(keyword) ? /\\b/ : /\\B/\n);\n\n// Keywords that require a leading dot.\nconst dotKeywords = [\n  'Protocol', // contextual\n  'Type' // contextual\n].map(keywordWrapper);\n\n// Keywords that may have a leading dot.\nconst optionalDotKeywords = [\n  'init',\n  'self'\n].map(keywordWrapper);\n\n// should register as keyword, not type\nconst keywordTypes = [\n  'Any',\n  'Self'\n];\n\n// Regular keywords and literals.\nconst keywords = [\n  // strings below will be fed into the regular `keywords` engine while regex\n  // will result in additional modes being created to scan for those keywords to\n  // avoid conflicts with other rules\n  'actor',\n  'any', // contextual\n  'associatedtype',\n  'async',\n  'await',\n  /as\\?/, // operator\n  /as!/, // operator\n  'as', // operator\n  'break',\n  'case',\n  'catch',\n  'class',\n  'continue',\n  'convenience', // contextual\n  'default',\n  'defer',\n  'deinit',\n  'didSet', // contextual\n  'distributed',\n  'do',\n  'dynamic', // contextual\n  'else',\n  'enum',\n  'extension',\n  'fallthrough',\n  /fileprivate\\(set\\)/,\n  'fileprivate',\n  'final', // contextual\n  'for',\n  'func',\n  'get', // contextual\n  'guard',\n  'if',\n  'import',\n  'indirect', // contextual\n  'infix', // contextual\n  /init\\?/,\n  /init!/,\n  'inout',\n  /internal\\(set\\)/,\n  'internal',\n  'in',\n  'is', // operator\n  'isolated', // contextual\n  'nonisolated', // contextual\n  'lazy', // contextual\n  'let',\n  'mutating', // contextual\n  'nonmutating', // contextual\n  /open\\(set\\)/, // contextual\n  'open', // contextual\n  'operator',\n  'optional', // contextual\n  'override', // contextual\n  'postfix', // contextual\n  'precedencegroup',\n  'prefix', // contextual\n  /private\\(set\\)/,\n  'private',\n  'protocol',\n  /public\\(set\\)/,\n  'public',\n  'repeat',\n  'required', // contextual\n  'rethrows',\n  'return',\n  'set', // contextual\n  'some', // contextual\n  'static',\n  'struct',\n  'subscript',\n  'super',\n  'switch',\n  'throws',\n  'throw',\n  /try\\?/, // operator\n  /try!/, // operator\n  'try', // operator\n  'typealias',\n  /unowned\\(safe\\)/, // contextual\n  /unowned\\(unsafe\\)/, // contextual\n  'unowned', // contextual\n  'var',\n  'weak', // contextual\n  'where',\n  'while',\n  'willSet' // contextual\n];\n\n// NOTE: Contextual keywords are reserved only in specific contexts.\n// Ideally, these should be matched using modes to avoid false positives.\n\n// Literals.\nconst literals = [\n  'false',\n  'nil',\n  'true'\n];\n\n// Keywords used in precedence groups.\nconst precedencegroupKeywords = [\n  'assignment',\n  'associativity',\n  'higherThan',\n  'left',\n  'lowerThan',\n  'none',\n  'right'\n];\n\n// Keywords that start with a number sign (#).\n// #(un)available is handled separately.\nconst numberSignKeywords = [\n  '#colorLiteral',\n  '#column',\n  '#dsohandle',\n  '#else',\n  '#elseif',\n  '#endif',\n  '#error',\n  '#file',\n  '#fileID',\n  '#fileLiteral',\n  '#filePath',\n  '#function',\n  '#if',\n  '#imageLiteral',\n  '#keyPath',\n  '#line',\n  '#selector',\n  '#sourceLocation',\n  '#warn_unqualified_access',\n  '#warning'\n];\n\n// Global functions in the Standard Library.\nconst builtIns = [\n  'abs',\n  'all',\n  'any',\n  'assert',\n  'assertionFailure',\n  'debugPrint',\n  'dump',\n  'fatalError',\n  'getVaList',\n  'isKnownUniquelyReferenced',\n  'max',\n  'min',\n  'numericCast',\n  'pointwiseMax',\n  'pointwiseMin',\n  'precondition',\n  'preconditionFailure',\n  'print',\n  'readLine',\n  'repeatElement',\n  'sequence',\n  'stride',\n  'swap',\n  'swift_unboxFromSwiftValueWithType',\n  'transcode',\n  'type',\n  'unsafeBitCast',\n  'unsafeDowncast',\n  'withExtendedLifetime',\n  'withUnsafeMutablePointer',\n  'withUnsafePointer',\n  'withVaList',\n  'withoutActuallyEscaping',\n  'zip'\n];\n\n// Valid first characters for operators.\nconst operatorHead = either(\n  /[/=\\-+!*%<>&|^~?]/,\n  /[\\u00A1-\\u00A7]/,\n  /[\\u00A9\\u00AB]/,\n  /[\\u00AC\\u00AE]/,\n  /[\\u00B0\\u00B1]/,\n  /[\\u00B6\\u00BB\\u00BF\\u00D7\\u00F7]/,\n  /[\\u2016-\\u2017]/,\n  /[\\u2020-\\u2027]/,\n  /[\\u2030-\\u203E]/,\n  /[\\u2041-\\u2053]/,\n  /[\\u2055-\\u205E]/,\n  /[\\u2190-\\u23FF]/,\n  /[\\u2500-\\u2775]/,\n  /[\\u2794-\\u2BFF]/,\n  /[\\u2E00-\\u2E7F]/,\n  /[\\u3001-\\u3003]/,\n  /[\\u3008-\\u3020]/,\n  /[\\u3030]/\n);\n\n// Valid characters for operators.\nconst operatorCharacter = either(\n  operatorHead,\n  /[\\u0300-\\u036F]/,\n  /[\\u1DC0-\\u1DFF]/,\n  /[\\u20D0-\\u20FF]/,\n  /[\\uFE00-\\uFE0F]/,\n  /[\\uFE20-\\uFE2F]/\n  // TODO: The following characters are also allowed, but the regex isn't supported yet.\n  // /[\\u{E0100}-\\u{E01EF}]/u\n);\n\n// Valid operator.\nconst operator = concat(operatorHead, operatorCharacter, '*');\n\n// Valid first characters for identifiers.\nconst identifierHead = either(\n  /[a-zA-Z_]/,\n  /[\\u00A8\\u00AA\\u00AD\\u00AF\\u00B2-\\u00B5\\u00B7-\\u00BA]/,\n  /[\\u00BC-\\u00BE\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF]/,\n  /[\\u0100-\\u02FF\\u0370-\\u167F\\u1681-\\u180D\\u180F-\\u1DBF]/,\n  /[\\u1E00-\\u1FFF]/,\n  /[\\u200B-\\u200D\\u202A-\\u202E\\u203F-\\u2040\\u2054\\u2060-\\u206F]/,\n  /[\\u2070-\\u20CF\\u2100-\\u218F\\u2460-\\u24FF\\u2776-\\u2793]/,\n  /[\\u2C00-\\u2DFF\\u2E80-\\u2FFF]/,\n  /[\\u3004-\\u3007\\u3021-\\u302F\\u3031-\\u303F\\u3040-\\uD7FF]/,\n  /[\\uF900-\\uFD3D\\uFD40-\\uFDCF\\uFDF0-\\uFE1F\\uFE30-\\uFE44]/,\n  /[\\uFE47-\\uFEFE\\uFF00-\\uFFFD]/ // Should be /[\\uFE47-\\uFFFD]/, but we have to exclude FEFF.\n  // The following characters are also allowed, but the regexes aren't supported yet.\n  // /[\\u{10000}-\\u{1FFFD}\\u{20000-\\u{2FFFD}\\u{30000}-\\u{3FFFD}\\u{40000}-\\u{4FFFD}]/u,\n  // /[\\u{50000}-\\u{5FFFD}\\u{60000-\\u{6FFFD}\\u{70000}-\\u{7FFFD}\\u{80000}-\\u{8FFFD}]/u,\n  // /[\\u{90000}-\\u{9FFFD}\\u{A0000-\\u{AFFFD}\\u{B0000}-\\u{BFFFD}\\u{C0000}-\\u{CFFFD}]/u,\n  // /[\\u{D0000}-\\u{DFFFD}\\u{E0000-\\u{EFFFD}]/u\n);\n\n// Valid characters for identifiers.\nconst identifierCharacter = either(\n  identifierHead,\n  /\\d/,\n  /[\\u0300-\\u036F\\u1DC0-\\u1DFF\\u20D0-\\u20FF\\uFE20-\\uFE2F]/\n);\n\n// Valid identifier.\nconst identifier = concat(identifierHead, identifierCharacter, '*');\n\n// Valid type identifier.\nconst typeIdentifier = concat(/[A-Z]/, identifierCharacter, '*');\n\n// Built-in attributes, which are highlighted as keywords.\n// @available is handled separately.\nconst keywordAttributes = [\n  'autoclosure',\n  concat(/convention\\(/, either('swift', 'block', 'c'), /\\)/),\n  'discardableResult',\n  'dynamicCallable',\n  'dynamicMemberLookup',\n  'escaping',\n  'frozen',\n  'GKInspectable',\n  'IBAction',\n  'IBDesignable',\n  'IBInspectable',\n  'IBOutlet',\n  'IBSegueAction',\n  'inlinable',\n  'main',\n  'nonobjc',\n  'NSApplicationMain',\n  'NSCopying',\n  'NSManaged',\n  concat(/objc\\(/, identifier, /\\)/),\n  'objc',\n  'objcMembers',\n  'propertyWrapper',\n  'requires_stored_property_inits',\n  'resultBuilder',\n  'testable',\n  'UIApplicationMain',\n  'unknown',\n  'usableFromInline'\n];\n\n// Contextual keywords used in @available and #(un)available.\nconst availabilityKeywords = [\n  'iOS',\n  'iOSApplicationExtension',\n  'macOS',\n  'macOSApplicationExtension',\n  'macCatalyst',\n  'macCatalystApplicationExtension',\n  'watchOS',\n  'watchOSApplicationExtension',\n  'tvOS',\n  'tvOSApplicationExtension',\n  'swift'\n];\n\n/*\nLanguage: Swift\nDescription: Swift is a general-purpose programming language built using a modern approach to safety, performance, and software design patterns.\nAuthor: Steven Van Impe <steven.vanimpe@icloud.com>\nContributors: Chris Eidhof <chris@eidhof.nl>, Nate Cook <natecook@gmail.com>, Alexander Lichter <manniL@gmx.net>, Richard Gibson <gibson042@github>\nWebsite: https://swift.org\nCategory: common, system\n*/\n\n/** @type LanguageFn */\nfunction swift(hljs) {\n  const WHITESPACE = {\n    match: /\\s+/,\n    relevance: 0\n  };\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#ID411\n  const BLOCK_COMMENT = hljs.COMMENT(\n    '/\\\\*',\n    '\\\\*/',\n    { contains: [ 'self' ] }\n  );\n  const COMMENTS = [\n    hljs.C_LINE_COMMENT_MODE,\n    BLOCK_COMMENT\n  ];\n\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#ID413\n  // https://docs.swift.org/swift-book/ReferenceManual/zzSummaryOfTheGrammar.html\n  const DOT_KEYWORD = {\n    match: [\n      /\\./,\n      either(...dotKeywords, ...optionalDotKeywords)\n    ],\n    className: { 2: \"keyword\" }\n  };\n  const KEYWORD_GUARD = {\n    // Consume .keyword to prevent highlighting properties and methods as keywords.\n    match: concat(/\\./, either(...keywords)),\n    relevance: 0\n  };\n  const PLAIN_KEYWORDS = keywords\n    .filter(kw => typeof kw === 'string')\n    .concat([ \"_|0\" ]); // seems common, so 0 relevance\n  const REGEX_KEYWORDS = keywords\n    .filter(kw => typeof kw !== 'string') // find regex\n    .concat(keywordTypes)\n    .map(keywordWrapper);\n  const KEYWORD = { variants: [\n    {\n      className: 'keyword',\n      match: either(...REGEX_KEYWORDS, ...optionalDotKeywords)\n    }\n  ] };\n  // find all the regular keywords\n  const KEYWORDS = {\n    $pattern: either(\n      /\\b\\w+/, // regular keywords\n      /#\\w+/ // number keywords\n    ),\n    keyword: PLAIN_KEYWORDS\n      .concat(numberSignKeywords),\n    literal: literals\n  };\n  const KEYWORD_MODES = [\n    DOT_KEYWORD,\n    KEYWORD_GUARD,\n    KEYWORD\n  ];\n\n  // https://github.com/apple/swift/tree/main/stdlib/public/core\n  const BUILT_IN_GUARD = {\n    // Consume .built_in to prevent highlighting properties and methods.\n    match: concat(/\\./, either(...builtIns)),\n    relevance: 0\n  };\n  const BUILT_IN = {\n    className: 'built_in',\n    match: concat(/\\b/, either(...builtIns), /(?=\\()/)\n  };\n  const BUILT_INS = [\n    BUILT_IN_GUARD,\n    BUILT_IN\n  ];\n\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#ID418\n  const OPERATOR_GUARD = {\n    // Prevent -> from being highlighting as an operator.\n    match: /->/,\n    relevance: 0\n  };\n  const OPERATOR = {\n    className: 'operator',\n    relevance: 0,\n    variants: [\n      { match: operator },\n      {\n        // dot-operator: only operators that start with a dot are allowed to use dots as\n        // characters (..., ...<, .*, etc). So there rule here is: a dot followed by one or more\n        // characters that may also include dots.\n        match: `\\\\.(\\\\.|${operatorCharacter})+` }\n    ]\n  };\n  const OPERATORS = [\n    OPERATOR_GUARD,\n    OPERATOR\n  ];\n\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#grammar_numeric-literal\n  // TODO: Update for leading `-` after lookbehind is supported everywhere\n  const decimalDigits = '([0-9]_*)+';\n  const hexDigits = '([0-9a-fA-F]_*)+';\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      // decimal floating-point-literal (subsumes decimal-literal)\n      { match: `\\\\b(${decimalDigits})(\\\\.(${decimalDigits}))?` + `([eE][+-]?(${decimalDigits}))?\\\\b` },\n      // hexadecimal floating-point-literal (subsumes hexadecimal-literal)\n      { match: `\\\\b0x(${hexDigits})(\\\\.(${hexDigits}))?` + `([pP][+-]?(${decimalDigits}))?\\\\b` },\n      // octal-literal\n      { match: /\\b0o([0-7]_*)+\\b/ },\n      // binary-literal\n      { match: /\\b0b([01]_*)+\\b/ }\n    ]\n  };\n\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#grammar_string-literal\n  const ESCAPED_CHARACTER = (rawDelimiter = \"\") => ({\n    className: 'subst',\n    variants: [\n      { match: concat(/\\\\/, rawDelimiter, /[0\\\\tnr\"']/) },\n      { match: concat(/\\\\/, rawDelimiter, /u\\{[0-9a-fA-F]{1,8}\\}/) }\n    ]\n  });\n  const ESCAPED_NEWLINE = (rawDelimiter = \"\") => ({\n    className: 'subst',\n    match: concat(/\\\\/, rawDelimiter, /[\\t ]*(?:[\\r\\n]|\\r\\n)/)\n  });\n  const INTERPOLATION = (rawDelimiter = \"\") => ({\n    className: 'subst',\n    label: \"interpol\",\n    begin: concat(/\\\\/, rawDelimiter, /\\(/),\n    end: /\\)/\n  });\n  const MULTILINE_STRING = (rawDelimiter = \"\") => ({\n    begin: concat(rawDelimiter, /\"\"\"/),\n    end: concat(/\"\"\"/, rawDelimiter),\n    contains: [\n      ESCAPED_CHARACTER(rawDelimiter),\n      ESCAPED_NEWLINE(rawDelimiter),\n      INTERPOLATION(rawDelimiter)\n    ]\n  });\n  const SINGLE_LINE_STRING = (rawDelimiter = \"\") => ({\n    begin: concat(rawDelimiter, /\"/),\n    end: concat(/\"/, rawDelimiter),\n    contains: [\n      ESCAPED_CHARACTER(rawDelimiter),\n      INTERPOLATION(rawDelimiter)\n    ]\n  });\n  const STRING = {\n    className: 'string',\n    variants: [\n      MULTILINE_STRING(),\n      MULTILINE_STRING(\"#\"),\n      MULTILINE_STRING(\"##\"),\n      MULTILINE_STRING(\"###\"),\n      SINGLE_LINE_STRING(),\n      SINGLE_LINE_STRING(\"#\"),\n      SINGLE_LINE_STRING(\"##\"),\n      SINGLE_LINE_STRING(\"###\")\n    ]\n  };\n\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#ID412\n  const QUOTED_IDENTIFIER = { match: concat(/`/, identifier, /`/) };\n  const IMPLICIT_PARAMETER = {\n    className: 'variable',\n    match: /\\$\\d+/\n  };\n  const PROPERTY_WRAPPER_PROJECTION = {\n    className: 'variable',\n    match: `\\\\$${identifierCharacter}+`\n  };\n  const IDENTIFIERS = [\n    QUOTED_IDENTIFIER,\n    IMPLICIT_PARAMETER,\n    PROPERTY_WRAPPER_PROJECTION\n  ];\n\n  // https://docs.swift.org/swift-book/ReferenceManual/Attributes.html\n  const AVAILABLE_ATTRIBUTE = {\n    match: /(@|#(un)?)available/,\n    className: \"keyword\",\n    starts: { contains: [\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: availabilityKeywords,\n        contains: [\n          ...OPERATORS,\n          NUMBER,\n          STRING\n        ]\n      }\n    ] }\n  };\n  const KEYWORD_ATTRIBUTE = {\n    className: 'keyword',\n    match: concat(/@/, either(...keywordAttributes))\n  };\n  const USER_DEFINED_ATTRIBUTE = {\n    className: 'meta',\n    match: concat(/@/, identifier)\n  };\n  const ATTRIBUTES = [\n    AVAILABLE_ATTRIBUTE,\n    KEYWORD_ATTRIBUTE,\n    USER_DEFINED_ATTRIBUTE\n  ];\n\n  // https://docs.swift.org/swift-book/ReferenceManual/Types.html\n  const TYPE = {\n    match: lookahead(/\\b[A-Z]/),\n    relevance: 0,\n    contains: [\n      { // Common Apple frameworks, for relevance boost\n        className: 'type',\n        match: concat(/(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)/, identifierCharacter, '+')\n      },\n      { // Type identifier\n        className: 'type',\n        match: typeIdentifier,\n        relevance: 0\n      },\n      { // Optional type\n        match: /[?!]+/,\n        relevance: 0\n      },\n      { // Variadic parameter\n        match: /\\.\\.\\./,\n        relevance: 0\n      },\n      { // Protocol composition\n        match: concat(/\\s+&\\s+/, lookahead(typeIdentifier)),\n        relevance: 0\n      }\n    ]\n  };\n  const GENERIC_ARGUMENTS = {\n    begin: /</,\n    end: />/,\n    keywords: KEYWORDS,\n    contains: [\n      ...COMMENTS,\n      ...KEYWORD_MODES,\n      ...ATTRIBUTES,\n      OPERATOR_GUARD,\n      TYPE\n    ]\n  };\n  TYPE.contains.push(GENERIC_ARGUMENTS);\n\n  // https://docs.swift.org/swift-book/ReferenceManual/Expressions.html#ID552\n  // Prevents element names from being highlighted as keywords.\n  const TUPLE_ELEMENT_NAME = {\n    match: concat(identifier, /\\s*:/),\n    keywords: \"_|0\",\n    relevance: 0\n  };\n  // Matches tuples as well as the parameter list of a function type.\n  const TUPLE = {\n    begin: /\\(/,\n    end: /\\)/,\n    relevance: 0,\n    keywords: KEYWORDS,\n    contains: [\n      'self',\n      TUPLE_ELEMENT_NAME,\n      ...COMMENTS,\n      ...KEYWORD_MODES,\n      ...BUILT_INS,\n      ...OPERATORS,\n      NUMBER,\n      STRING,\n      ...IDENTIFIERS,\n      ...ATTRIBUTES,\n      TYPE\n    ]\n  };\n\n  const GENERIC_PARAMETERS = {\n    begin: /</,\n    end: />/,\n    contains: [\n      ...COMMENTS,\n      TYPE\n    ]\n  };\n  const FUNCTION_PARAMETER_NAME = {\n    begin: either(\n      lookahead(concat(identifier, /\\s*:/)),\n      lookahead(concat(identifier, /\\s+/, identifier, /\\s*:/))\n    ),\n    end: /:/,\n    relevance: 0,\n    contains: [\n      {\n        className: 'keyword',\n        match: /\\b_\\b/\n      },\n      {\n        className: 'params',\n        match: identifier\n      }\n    ]\n  };\n  const FUNCTION_PARAMETERS = {\n    begin: /\\(/,\n    end: /\\)/,\n    keywords: KEYWORDS,\n    contains: [\n      FUNCTION_PARAMETER_NAME,\n      ...COMMENTS,\n      ...KEYWORD_MODES,\n      ...OPERATORS,\n      NUMBER,\n      STRING,\n      ...ATTRIBUTES,\n      TYPE,\n      TUPLE\n    ],\n    endsParent: true,\n    illegal: /[\"']/\n  };\n  // https://docs.swift.org/swift-book/ReferenceManual/Declarations.html#ID362\n  const FUNCTION = {\n    match: [\n      /func/,\n      /\\s+/,\n      either(QUOTED_IDENTIFIER.match, identifier, operator)\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [\n      GENERIC_PARAMETERS,\n      FUNCTION_PARAMETERS,\n      WHITESPACE\n    ],\n    illegal: [\n      /\\[/,\n      /%/\n    ]\n  };\n\n  // https://docs.swift.org/swift-book/ReferenceManual/Declarations.html#ID375\n  // https://docs.swift.org/swift-book/ReferenceManual/Declarations.html#ID379\n  const INIT_SUBSCRIPT = {\n    match: [\n      /\\b(?:subscript|init[?!]?)/,\n      /\\s*(?=[<(])/,\n    ],\n    className: { 1: \"keyword\" },\n    contains: [\n      GENERIC_PARAMETERS,\n      FUNCTION_PARAMETERS,\n      WHITESPACE\n    ],\n    illegal: /\\[|%/\n  };\n  // https://docs.swift.org/swift-book/ReferenceManual/Declarations.html#ID380\n  const OPERATOR_DECLARATION = {\n    match: [\n      /operator/,\n      /\\s+/,\n      operator\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title\"\n    }\n  };\n\n  // https://docs.swift.org/swift-book/ReferenceManual/Declarations.html#ID550\n  const PRECEDENCEGROUP = {\n    begin: [\n      /precedencegroup/,\n      /\\s+/,\n      typeIdentifier\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title\"\n    },\n    contains: [ TYPE ],\n    keywords: [\n      ...precedencegroupKeywords,\n      ...literals\n    ],\n    end: /}/\n  };\n\n  // Add supported submodes to string interpolation.\n  for (const variant of STRING.variants) {\n    const interpolation = variant.contains.find(mode => mode.label === \"interpol\");\n    // TODO: Interpolation can contain any expression, so there's room for improvement here.\n    interpolation.keywords = KEYWORDS;\n    const submodes = [\n      ...KEYWORD_MODES,\n      ...BUILT_INS,\n      ...OPERATORS,\n      NUMBER,\n      STRING,\n      ...IDENTIFIERS\n    ];\n    interpolation.contains = [\n      ...submodes,\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        contains: [\n          'self',\n          ...submodes\n        ]\n      }\n    ];\n  }\n\n  return {\n    name: 'Swift',\n    keywords: KEYWORDS,\n    contains: [\n      ...COMMENTS,\n      FUNCTION,\n      INIT_SUBSCRIPT,\n      {\n        beginKeywords: 'struct protocol class extension enum actor',\n        end: '\\\\{',\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {\n            className: \"title.class\",\n            begin: /[A-Za-z$_][\\u00C0-\\u02B80-9A-Za-z$_]*/\n          }),\n          ...KEYWORD_MODES\n        ]\n      },\n      OPERATOR_DECLARATION,\n      PRECEDENCEGROUP,\n      {\n        beginKeywords: 'import',\n        end: /$/,\n        contains: [ ...COMMENTS ],\n        relevance: 0\n      },\n      ...KEYWORD_MODES,\n      ...BUILT_INS,\n      ...OPERATORS,\n      NUMBER,\n      STRING,\n      ...IDENTIFIERS,\n      ...ATTRIBUTES,\n      TYPE,\n      TUPLE\n    ]\n  };\n}\n\nexport { swift as default };\n", "const IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\nconst KEYWORDS = [\n  \"as\", // for exports\n  \"in\",\n  \"of\",\n  \"if\",\n  \"for\",\n  \"while\",\n  \"finally\",\n  \"var\",\n  \"new\",\n  \"function\",\n  \"do\",\n  \"return\",\n  \"void\",\n  \"else\",\n  \"break\",\n  \"catch\",\n  \"instanceof\",\n  \"with\",\n  \"throw\",\n  \"case\",\n  \"default\",\n  \"try\",\n  \"switch\",\n  \"continue\",\n  \"typeof\",\n  \"delete\",\n  \"let\",\n  \"yield\",\n  \"const\",\n  \"class\",\n  // JS handles these with a special rule\n  // \"get\",\n  // \"set\",\n  \"debugger\",\n  \"async\",\n  \"await\",\n  \"static\",\n  \"import\",\n  \"from\",\n  \"export\",\n  \"extends\"\n];\nconst LITERALS = [\n  \"true\",\n  \"false\",\n  \"null\",\n  \"undefined\",\n  \"NaN\",\n  \"Infinity\"\n];\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\nconst TYPES = [\n  // Fundamental objects\n  \"Object\",\n  \"Function\",\n  \"Boolean\",\n  \"Symbol\",\n  // numbers and dates\n  \"Math\",\n  \"Date\",\n  \"Number\",\n  \"BigInt\",\n  // text\n  \"String\",\n  \"RegExp\",\n  // Indexed collections\n  \"Array\",\n  \"Float32Array\",\n  \"Float64Array\",\n  \"Int8Array\",\n  \"Uint8Array\",\n  \"Uint8ClampedArray\",\n  \"Int16Array\",\n  \"Int32Array\",\n  \"Uint16Array\",\n  \"Uint32Array\",\n  \"BigInt64Array\",\n  \"BigUint64Array\",\n  // Keyed collections\n  \"Set\",\n  \"Map\",\n  \"WeakSet\",\n  \"WeakMap\",\n  // Structured data\n  \"ArrayBuffer\",\n  \"SharedArrayBuffer\",\n  \"Atomics\",\n  \"DataView\",\n  \"JSON\",\n  // Control abstraction objects\n  \"Promise\",\n  \"Generator\",\n  \"GeneratorFunction\",\n  \"AsyncFunction\",\n  // Reflection\n  \"Reflect\",\n  \"Proxy\",\n  // Internationalization\n  \"Intl\",\n  // WebAssembly\n  \"WebAssembly\"\n];\n\nconst ERROR_TYPES = [\n  \"Error\",\n  \"EvalError\",\n  \"InternalError\",\n  \"RangeError\",\n  \"ReferenceError\",\n  \"SyntaxError\",\n  \"TypeError\",\n  \"URIError\"\n];\n\nconst BUILT_IN_GLOBALS = [\n  \"setInterval\",\n  \"setTimeout\",\n  \"clearInterval\",\n  \"clearTimeout\",\n\n  \"require\",\n  \"exports\",\n\n  \"eval\",\n  \"isFinite\",\n  \"isNaN\",\n  \"parseFloat\",\n  \"parseInt\",\n  \"decodeURI\",\n  \"decodeURIComponent\",\n  \"encodeURI\",\n  \"encodeURIComponent\",\n  \"escape\",\n  \"unescape\"\n];\n\nconst BUILT_IN_VARIABLES = [\n  \"arguments\",\n  \"this\",\n  \"super\",\n  \"console\",\n  \"window\",\n  \"document\",\n  \"localStorage\",\n  \"module\",\n  \"global\" // Node.js\n];\n\nconst BUILT_INS = [].concat(\n  BUILT_IN_GLOBALS,\n  TYPES,\n  ERROR_TYPES\n);\n\n/*\nLanguage: JavaScript\nDescription: JavaScript (JS) is a lightweight, interpreted, or just-in-time compiled programming language with first-class functions.\nCategory: common, scripting, web\nWebsite: https://developer.mozilla.org/en-US/docs/Web/JavaScript\n*/\n\n/** @type LanguageFn */\nfunction javascript(hljs) {\n  const regex = hljs.regex;\n  /**\n   * Takes a string like \"<Booger\" and checks to see\n   * if we can find a matching \"</Booger\" later in the\n   * content.\n   * @param {RegExpMatchArray} match\n   * @param {{after:number}} param1\n   */\n  const hasClosingTag = (match, { after }) => {\n    const tag = \"</\" + match[0].slice(1);\n    const pos = match.input.indexOf(tag, after);\n    return pos !== -1;\n  };\n\n  const IDENT_RE$1 = IDENT_RE;\n  const FRAGMENT = {\n    begin: '<>',\n    end: '</>'\n  };\n  // to avoid some special cases inside isTrulyOpeningTag\n  const XML_SELF_CLOSING = /<[A-Za-z0-9\\\\._:-]+\\s*\\/>/;\n  const XML_TAG = {\n    begin: /<[A-Za-z0-9\\\\._:-]+/,\n    end: /\\/[A-Za-z0-9\\\\._:-]+>|\\/>/,\n    /**\n     * @param {RegExpMatchArray} match\n     * @param {CallbackResponse} response\n     */\n    isTrulyOpeningTag: (match, response) => {\n      const afterMatchIndex = match[0].length + match.index;\n      const nextChar = match.input[afterMatchIndex];\n      if (\n        // HTML should not include another raw `<` inside a tag\n        // nested type?\n        // `<Array<Array<number>>`, etc.\n        nextChar === \"<\" ||\n        // the , gives away that this is not HTML\n        // `<T, A extends keyof T, V>`\n        nextChar === \",\"\n        ) {\n        response.ignoreMatch();\n        return;\n      }\n\n      // `<something>`\n      // Quite possibly a tag, lets look for a matching closing tag...\n      if (nextChar === \">\") {\n        // if we cannot find a matching closing tag, then we\n        // will ignore it\n        if (!hasClosingTag(match, { after: afterMatchIndex })) {\n          response.ignoreMatch();\n        }\n      }\n\n      // `<blah />` (self-closing)\n      // handled by simpleSelfClosing rule\n\n      let m;\n      const afterMatch = match.input.substring(afterMatchIndex);\n\n      // some more template typing stuff\n      //  <T = any>(key?: string) => Modify<\n      if ((m = afterMatch.match(/^\\s*=/))) {\n        response.ignoreMatch();\n        return;\n      }\n\n      // `<From extends string>`\n      // technically this could be HTML, but it smells like a type\n      // NOTE: This is ugh, but added specifically for https://github.com/highlightjs/highlight.js/issues/3276\n      if ((m = afterMatch.match(/^\\s+extends\\s+/))) {\n        if (m.index === 0) {\n          response.ignoreMatch();\n          // eslint-disable-next-line no-useless-return\n          return;\n        }\n      }\n    }\n  };\n  const KEYWORDS$1 = {\n    $pattern: IDENT_RE,\n    keyword: KEYWORDS,\n    literal: LITERALS,\n    built_in: BUILT_INS,\n    \"variable.language\": BUILT_IN_VARIABLES\n  };\n\n  // https://tc39.es/ecma262/#sec-literals-numeric-literals\n  const decimalDigits = '[0-9](_?[0-9])*';\n  const frac = `\\\\.(${decimalDigits})`;\n  // DecimalIntegerLiteral, including Annex B NonOctalDecimalIntegerLiteral\n  // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\n  const decimalInteger = `0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*`;\n  const NUMBER = {\n    className: 'number',\n    variants: [\n      // DecimalLiteral\n      { begin: `(\\\\b(${decimalInteger})((${frac})|\\\\.)?|(${frac}))` +\n        `[eE][+-]?(${decimalDigits})\\\\b` },\n      { begin: `\\\\b(${decimalInteger})\\\\b((${frac})\\\\b|\\\\.)?|(${frac})\\\\b` },\n\n      // DecimalBigIntegerLiteral\n      { begin: `\\\\b(0|[1-9](_?[0-9])*)n\\\\b` },\n\n      // NonDecimalIntegerLiteral\n      { begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\\\b\" },\n      { begin: \"\\\\b0[bB][0-1](_?[0-1])*n?\\\\b\" },\n      { begin: \"\\\\b0[oO][0-7](_?[0-7])*n?\\\\b\" },\n\n      // LegacyOctalIntegerLiteral (does not include underscore separators)\n      // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\n      { begin: \"\\\\b0[0-7]+n?\\\\b\" },\n    ],\n    relevance: 0\n  };\n\n  const SUBST = {\n    className: 'subst',\n    begin: '\\\\$\\\\{',\n    end: '\\\\}',\n    keywords: KEYWORDS$1,\n    contains: [] // defined later\n  };\n  const HTML_TEMPLATE = {\n    begin: 'html`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'xml'\n    }\n  };\n  const CSS_TEMPLATE = {\n    begin: 'css`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'css'\n    }\n  };\n  const TEMPLATE_STRING = {\n    className: 'string',\n    begin: '`',\n    end: '`',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ]\n  };\n  const JSDOC_COMMENT = hljs.COMMENT(\n    /\\/\\*\\*(?!\\/)/,\n    '\\\\*/',\n    {\n      relevance: 0,\n      contains: [\n        {\n          begin: '(?=@[A-Za-z]+)',\n          relevance: 0,\n          contains: [\n            {\n              className: 'doctag',\n              begin: '@[A-Za-z]+'\n            },\n            {\n              className: 'type',\n              begin: '\\\\{',\n              end: '\\\\}',\n              excludeEnd: true,\n              excludeBegin: true,\n              relevance: 0\n            },\n            {\n              className: 'variable',\n              begin: IDENT_RE$1 + '(?=\\\\s*(-)|$)',\n              endsParent: true,\n              relevance: 0\n            },\n            // eat spaces (not newlines) so we can find\n            // types or variables\n            {\n              begin: /(?=[^\\n])\\s/,\n              relevance: 0\n            }\n          ]\n        }\n      ]\n    }\n  );\n  const COMMENT = {\n    className: \"comment\",\n    variants: [\n      JSDOC_COMMENT,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_LINE_COMMENT_MODE\n    ]\n  };\n  const SUBST_INTERNALS = [\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    HTML_TEMPLATE,\n    CSS_TEMPLATE,\n    TEMPLATE_STRING,\n    // Skip numbers when they are part of a variable name\n    { match: /\\$\\d+/ },\n    NUMBER,\n    // This is intentional:\n    // See https://github.com/highlightjs/highlight.js/issues/3288\n    // hljs.REGEXP_MODE\n  ];\n  SUBST.contains = SUBST_INTERNALS\n    .concat({\n      // we need to pair up {} inside our subst to prevent\n      // it from ending too early by matching another }\n      begin: /\\{/,\n      end: /\\}/,\n      keywords: KEYWORDS$1,\n      contains: [\n        \"self\"\n      ].concat(SUBST_INTERNALS)\n    });\n  const SUBST_AND_COMMENTS = [].concat(COMMENT, SUBST.contains);\n  const PARAMS_CONTAINS = SUBST_AND_COMMENTS.concat([\n    // eat recursive parens in sub expressions\n    {\n      begin: /\\(/,\n      end: /\\)/,\n      keywords: KEYWORDS$1,\n      contains: [\"self\"].concat(SUBST_AND_COMMENTS)\n    }\n  ]);\n  const PARAMS = {\n    className: 'params',\n    begin: /\\(/,\n    end: /\\)/,\n    excludeBegin: true,\n    excludeEnd: true,\n    keywords: KEYWORDS$1,\n    contains: PARAMS_CONTAINS\n  };\n\n  // ES6 classes\n  const CLASS_OR_EXTENDS = {\n    variants: [\n      // class Car extends vehicle\n      {\n        match: [\n          /class/,\n          /\\s+/,\n          IDENT_RE$1,\n          /\\s+/,\n          /extends/,\n          /\\s+/,\n          regex.concat(IDENT_RE$1, \"(\", regex.concat(/\\./, IDENT_RE$1), \")*\")\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.class\",\n          5: \"keyword\",\n          7: \"title.class.inherited\"\n        }\n      },\n      // class Car\n      {\n        match: [\n          /class/,\n          /\\s+/,\n          IDENT_RE$1\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.class\"\n        }\n      },\n\n    ]\n  };\n\n  const CLASS_REFERENCE = {\n    relevance: 0,\n    match:\n    regex.either(\n      // Hard coded exceptions\n      /\\bJSON/,\n      // Float32Array, OutT\n      /\\b[A-Z][a-z]+([A-Z][a-z]*|\\d)*/,\n      // CSSFactory, CSSFactoryT\n      /\\b[A-Z]{2,}([A-Z][a-z]+|\\d)+([A-Z][a-z]*)*/,\n      // FPs, FPsT\n      /\\b[A-Z]{2,}[a-z]+([A-Z][a-z]+|\\d)*([A-Z][a-z]*)*/,\n      // P\n      // single letters are not highlighted\n      // BLAH\n      // this will be flagged as a UPPER_CASE_CONSTANT instead\n    ),\n    className: \"title.class\",\n    keywords: {\n      _: [\n        // se we still get relevance credit for JS library classes\n        ...TYPES,\n        ...ERROR_TYPES\n      ]\n    }\n  };\n\n  const USE_STRICT = {\n    label: \"use_strict\",\n    className: 'meta',\n    relevance: 10,\n    begin: /^\\s*['\"]use (strict|asm)['\"]/\n  };\n\n  const FUNCTION_DEFINITION = {\n    variants: [\n      {\n        match: [\n          /function/,\n          /\\s+/,\n          IDENT_RE$1,\n          /(?=\\s*\\()/\n        ]\n      },\n      // anonymous function\n      {\n        match: [\n          /function/,\n          /\\s*(?=\\()/\n        ]\n      }\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    label: \"func.def\",\n    contains: [ PARAMS ],\n    illegal: /%/\n  };\n\n  const UPPER_CASE_CONSTANT = {\n    relevance: 0,\n    match: /\\b[A-Z][A-Z_0-9]+\\b/,\n    className: \"variable.constant\"\n  };\n\n  function noneOf(list) {\n    return regex.concat(\"(?!\", list.join(\"|\"), \")\");\n  }\n\n  const FUNCTION_CALL = {\n    match: regex.concat(\n      /\\b/,\n      noneOf([\n        ...BUILT_IN_GLOBALS,\n        \"super\",\n        \"import\"\n      ]),\n      IDENT_RE$1, regex.lookahead(/\\(/)),\n    className: \"title.function\",\n    relevance: 0\n  };\n\n  const PROPERTY_ACCESS = {\n    begin: regex.concat(/\\./, regex.lookahead(\n      regex.concat(IDENT_RE$1, /(?![0-9A-Za-z$_(])/)\n    )),\n    end: IDENT_RE$1,\n    excludeBegin: true,\n    keywords: \"prototype\",\n    className: \"property\",\n    relevance: 0\n  };\n\n  const GETTER_OR_SETTER = {\n    match: [\n      /get|set/,\n      /\\s+/,\n      IDENT_RE$1,\n      /(?=\\()/\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [\n      { // eat to avoid empty params\n        begin: /\\(\\)/\n      },\n      PARAMS\n    ]\n  };\n\n  const FUNC_LEAD_IN_RE = '(\\\\(' +\n    '[^()]*(\\\\(' +\n    '[^()]*(\\\\(' +\n    '[^()]*' +\n    '\\\\)[^()]*)*' +\n    '\\\\)[^()]*)*' +\n    '\\\\)|' + hljs.UNDERSCORE_IDENT_RE + ')\\\\s*=>';\n\n  const FUNCTION_VARIABLE = {\n    match: [\n      /const|var|let/, /\\s+/,\n      IDENT_RE$1, /\\s*/,\n      /=\\s*/,\n      /(async\\s*)?/, // async is optional\n      regex.lookahead(FUNC_LEAD_IN_RE)\n    ],\n    keywords: \"async\",\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [\n      PARAMS\n    ]\n  };\n\n  return {\n    name: 'Javascript',\n    aliases: ['js', 'jsx', 'mjs', 'cjs'],\n    keywords: KEYWORDS$1,\n    // this will be extended by TypeScript\n    exports: { PARAMS_CONTAINS, CLASS_REFERENCE },\n    illegal: /#(?![$_A-z])/,\n    contains: [\n      hljs.SHEBANG({\n        label: \"shebang\",\n        binary: \"node\",\n        relevance: 5\n      }),\n      USE_STRICT,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      HTML_TEMPLATE,\n      CSS_TEMPLATE,\n      TEMPLATE_STRING,\n      COMMENT,\n      // Skip numbers when they are part of a variable name\n      { match: /\\$\\d+/ },\n      NUMBER,\n      CLASS_REFERENCE,\n      {\n        className: 'attr',\n        begin: IDENT_RE$1 + regex.lookahead(':'),\n        relevance: 0\n      },\n      FUNCTION_VARIABLE,\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n        keywords: 'return throw case',\n        relevance: 0,\n        contains: [\n          COMMENT,\n          hljs.REGEXP_MODE,\n          {\n            className: 'function',\n            // we have to count the parens to make sure we actually have the\n            // correct bounding ( ) before the =>.  There could be any number of\n            // sub-expressions inside also surrounded by parens.\n            begin: FUNC_LEAD_IN_RE,\n            returnBegin: true,\n            end: '\\\\s*=>',\n            contains: [\n              {\n                className: 'params',\n                variants: [\n                  {\n                    begin: hljs.UNDERSCORE_IDENT_RE,\n                    relevance: 0\n                  },\n                  {\n                    className: null,\n                    begin: /\\(\\s*\\)/,\n                    skip: true\n                  },\n                  {\n                    begin: /\\(/,\n                    end: /\\)/,\n                    excludeBegin: true,\n                    excludeEnd: true,\n                    keywords: KEYWORDS$1,\n                    contains: PARAMS_CONTAINS\n                  }\n                ]\n              }\n            ]\n          },\n          { // could be a comma delimited list of params to a function call\n            begin: /,/,\n            relevance: 0\n          },\n          {\n            match: /\\s+/,\n            relevance: 0\n          },\n          { // JSX\n            variants: [\n              { begin: FRAGMENT.begin, end: FRAGMENT.end },\n              { match: XML_SELF_CLOSING },\n              {\n                begin: XML_TAG.begin,\n                // we carefully check the opening tag to see if it truly\n                // is a tag and not a false positive\n                'on:begin': XML_TAG.isTrulyOpeningTag,\n                end: XML_TAG.end\n              }\n            ],\n            subLanguage: 'xml',\n            contains: [\n              {\n                begin: XML_TAG.begin,\n                end: XML_TAG.end,\n                skip: true,\n                contains: ['self']\n              }\n            ]\n          }\n        ],\n      },\n      FUNCTION_DEFINITION,\n      {\n        // prevent this from getting swallowed up by function\n        // since they appear \"function like\"\n        beginKeywords: \"while if switch catch for\"\n      },\n      {\n        // we have to count the parens to make sure we actually have the correct\n        // bounding ( ).  There could be any number of sub-expressions inside\n        // also surrounded by parens.\n        begin: '\\\\b(?!function)' + hljs.UNDERSCORE_IDENT_RE +\n          '\\\\(' + // first parens\n          '[^()]*(\\\\(' +\n            '[^()]*(\\\\(' +\n              '[^()]*' +\n            '\\\\)[^()]*)*' +\n          '\\\\)[^()]*)*' +\n          '\\\\)\\\\s*\\\\{', // end parens\n        returnBegin:true,\n        label: \"func.def\",\n        contains: [\n          PARAMS,\n          hljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE$1, className: \"title.function\" })\n        ]\n      },\n      // catch ... so it won't trigger the property rule below\n      {\n        match: /\\.\\.\\./,\n        relevance: 0\n      },\n      PROPERTY_ACCESS,\n      // hack: prevents detection of keywords in some circumstances\n      // .keyword()\n      // $keyword = x\n      {\n        match: '\\\\$' + IDENT_RE$1,\n        relevance: 0\n      },\n      {\n        match: [ /\\bconstructor(?=\\s*\\()/ ],\n        className: { 1: \"title.function\" },\n        contains: [ PARAMS ]\n      },\n      FUNCTION_CALL,\n      UPPER_CASE_CONSTANT,\n      CLASS_OR_EXTENDS,\n      GETTER_OR_SETTER,\n      {\n        match: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n      }\n    ]\n  };\n}\n\n/*\nLanguage: TypeScript\nAuthor: Panu Horsmalahti <panu.horsmalahti@iki.fi>\nContributors: Ike Ku <dempfi@yahoo.com>\nDescription: TypeScript is a strict superset of JavaScript\nWebsite: https://www.typescriptlang.org\nCategory: common, scripting\n*/\n\n/** @type LanguageFn */\nfunction typescript(hljs) {\n  const tsLanguage = javascript(hljs);\n\n  const IDENT_RE$1 = IDENT_RE;\n  const TYPES = [\n    \"any\",\n    \"void\",\n    \"number\",\n    \"boolean\",\n    \"string\",\n    \"object\",\n    \"never\",\n    \"symbol\",\n    \"bigint\",\n    \"unknown\"\n  ];\n  const NAMESPACE = {\n    beginKeywords: 'namespace',\n    end: /\\{/,\n    excludeEnd: true,\n    contains: [ tsLanguage.exports.CLASS_REFERENCE ]\n  };\n  const INTERFACE = {\n    beginKeywords: 'interface',\n    end: /\\{/,\n    excludeEnd: true,\n    keywords: {\n      keyword: 'interface extends',\n      built_in: TYPES\n    },\n    contains: [ tsLanguage.exports.CLASS_REFERENCE ]\n  };\n  const USE_STRICT = {\n    className: 'meta',\n    relevance: 10,\n    begin: /^\\s*['\"]use strict['\"]/\n  };\n  const TS_SPECIFIC_KEYWORDS = [\n    \"type\",\n    \"namespace\",\n    \"interface\",\n    \"public\",\n    \"private\",\n    \"protected\",\n    \"implements\",\n    \"declare\",\n    \"abstract\",\n    \"readonly\",\n    \"enum\",\n    \"override\"\n  ];\n  const KEYWORDS$1 = {\n    $pattern: IDENT_RE,\n    keyword: KEYWORDS.concat(TS_SPECIFIC_KEYWORDS),\n    literal: LITERALS,\n    built_in: BUILT_INS.concat(TYPES),\n    \"variable.language\": BUILT_IN_VARIABLES\n  };\n  const DECORATOR = {\n    className: 'meta',\n    begin: '@' + IDENT_RE$1,\n  };\n\n  const swapMode = (mode, label, replacement) => {\n    const indx = mode.contains.findIndex(m => m.label === label);\n    if (indx === -1) { throw new Error(\"can not find mode to replace\"); }\n\n    mode.contains.splice(indx, 1, replacement);\n  };\n\n\n  // this should update anywhere keywords is used since\n  // it will be the same actual JS object\n  Object.assign(tsLanguage.keywords, KEYWORDS$1);\n\n  tsLanguage.exports.PARAMS_CONTAINS.push(DECORATOR);\n  tsLanguage.contains = tsLanguage.contains.concat([\n    DECORATOR,\n    NAMESPACE,\n    INTERFACE,\n  ]);\n\n  // TS gets a simpler shebang rule than JS\n  swapMode(tsLanguage, \"shebang\", hljs.SHEBANG());\n  // JS use strict rule purposely excludes `asm` which makes no sense\n  swapMode(tsLanguage, \"use_strict\", USE_STRICT);\n\n  const functionDeclaration = tsLanguage.contains.find(m => m.label === \"func.def\");\n  functionDeclaration.relevance = 0; // () => {} is more typical in TypeScript\n\n  Object.assign(tsLanguage, {\n    name: 'TypeScript',\n    aliases: [\n      'ts',\n      'tsx'\n    ]\n  });\n\n  return tsLanguage;\n}\n\nexport { typescript as default };\n", "/*\nLanguage: Visual Basic .NET\nDescription: Visual Basic .NET (VB.NET) is a multi-paradigm, object-oriented programming language, implemented on the .NET Framework.\nAuthors: Poren Chiang <ren.chiang@gmail.com>, Jan Pilzer\nWebsite: https://docs.microsoft.com/dotnet/visual-basic/getting-started\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction vbnet(hljs) {\n  const regex = hljs.regex;\n  /**\n   * Character Literal\n   * Either a single character (\"a\"C) or an escaped double quote (\"\"\"\"C).\n   */\n  const CHARACTER = {\n    className: 'string',\n    begin: /\"(\"\"|[^/n])\"C\\b/\n  };\n\n  const STRING = {\n    className: 'string',\n    begin: /\"/,\n    end: /\"/,\n    illegal: /\\n/,\n    contains: [\n      {\n        // double quote escape\n        begin: /\"\"/ }\n    ]\n  };\n\n  /** Date Literals consist of a date, a time, or both separated by whitespace, surrounded by # */\n  const MM_DD_YYYY = /\\d{1,2}\\/\\d{1,2}\\/\\d{4}/;\n  const YYYY_MM_DD = /\\d{4}-\\d{1,2}-\\d{1,2}/;\n  const TIME_12H = /(\\d|1[012])(:\\d+){0,2} *(AM|PM)/;\n  const TIME_24H = /\\d{1,2}(:\\d{1,2}){1,2}/;\n  const DATE = {\n    className: 'literal',\n    variants: [\n      {\n        // #YYYY-MM-DD# (ISO-Date) or #M/D/YYYY# (US-Date)\n        begin: regex.concat(/# */, regex.either(YYYY_MM_DD, MM_DD_YYYY), / *#/) },\n      {\n        // #H:mm[:ss]# (24h Time)\n        begin: regex.concat(/# */, TIME_24H, / *#/) },\n      {\n        // #h[:mm[:ss]] A# (12h Time)\n        begin: regex.concat(/# */, TIME_12H, / *#/) },\n      {\n        // date plus time\n        begin: regex.concat(\n          /# */,\n          regex.either(YYYY_MM_DD, MM_DD_YYYY),\n          / +/,\n          regex.either(TIME_12H, TIME_24H),\n          / *#/\n        ) }\n    ]\n  };\n\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      {\n        // Float\n        begin: /\\b\\d[\\d_]*((\\.[\\d_]+(E[+-]?[\\d_]+)?)|(E[+-]?[\\d_]+))[RFD@!#]?/ },\n      {\n        // Integer (base 10)\n        begin: /\\b\\d[\\d_]*((U?[SIL])|[%&])?/ },\n      {\n        // Integer (base 16)\n        begin: /&H[\\dA-F_]+((U?[SIL])|[%&])?/ },\n      {\n        // Integer (base 8)\n        begin: /&O[0-7_]+((U?[SIL])|[%&])?/ },\n      {\n        // Integer (base 2)\n        begin: /&B[01_]+((U?[SIL])|[%&])?/ }\n    ]\n  };\n\n  const LABEL = {\n    className: 'label',\n    begin: /^\\w+:/\n  };\n\n  const DOC_COMMENT = hljs.COMMENT(/'''/, /$/, { contains: [\n    {\n      className: 'doctag',\n      begin: /<\\/?/,\n      end: />/\n    }\n  ] });\n\n  const COMMENT = hljs.COMMENT(null, /$/, { variants: [\n    { begin: /'/ },\n    {\n      // TODO: Use multi-class for leading spaces\n      begin: /([\\t ]|^)REM(?=\\s)/ }\n  ] });\n\n  const DIRECTIVES = {\n    className: 'meta',\n    // TODO: Use multi-class for indentation once available\n    begin: /[\\t ]*#(const|disable|else|elseif|enable|end|externalsource|if|region)\\b/,\n    end: /$/,\n    keywords: { keyword:\n        'const disable else elseif enable end externalsource if region then' },\n    contains: [ COMMENT ]\n  };\n\n  return {\n    name: 'Visual Basic .NET',\n    aliases: [ 'vb' ],\n    case_insensitive: true,\n    classNameAliases: { label: 'symbol' },\n    keywords: {\n      keyword:\n        'addhandler alias aggregate ansi as async assembly auto binary by byref byval ' /* a-b */\n        + 'call case catch class compare const continue custom declare default delegate dim distinct do ' /* c-d */\n        + 'each equals else elseif end enum erase error event exit explicit finally for friend from function ' /* e-f */\n        + 'get global goto group handles if implements imports in inherits interface into iterator ' /* g-i */\n        + 'join key let lib loop me mid module mustinherit mustoverride mybase myclass ' /* j-m */\n        + 'namespace narrowing new next notinheritable notoverridable ' /* n */\n        + 'of off on operator option optional order overloads overridable overrides ' /* o */\n        + 'paramarray partial preserve private property protected public ' /* p */\n        + 'raiseevent readonly redim removehandler resume return ' /* r */\n        + 'select set shadows shared skip static step stop structure strict sub synclock ' /* s */\n        + 'take text then throw to try unicode until using when where while widening with withevents writeonly yield' /* t-y */,\n      built_in:\n        // Operators https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators\n        'addressof and andalso await directcast gettype getxmlnamespace is isfalse isnot istrue like mod nameof new not or orelse trycast typeof xor '\n        // Type Conversion Functions https://docs.microsoft.com/dotnet/visual-basic/language-reference/functions/type-conversion-functions\n        + 'cbool cbyte cchar cdate cdbl cdec cint clng cobj csbyte cshort csng cstr cuint culng cushort',\n      type:\n        // Data types https://docs.microsoft.com/dotnet/visual-basic/language-reference/data-types\n        'boolean byte char date decimal double integer long object sbyte short single string uinteger ulong ushort',\n      literal: 'true false nothing'\n    },\n    illegal:\n      '//|\\\\{|\\\\}|endif|gosub|variant|wend|^\\\\$ ' /* reserved deprecated keywords */,\n    contains: [\n      CHARACTER,\n      STRING,\n      DATE,\n      NUMBER,\n      LABEL,\n      DOC_COMMENT,\n      COMMENT,\n      DIRECTIVES\n    ]\n  };\n}\n\nexport { vbnet as default };\n", "/*\nLanguage: WebAssembly\nWebsite: https://webassembly.org\nDescription:  Wasm is designed as a portable compilation target for programming languages, enabling deployment on the web for client and server applications.\nCategory: web, common\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction wasm(hljs) {\n  hljs.regex;\n  const BLOCK_COMMENT = hljs.COMMENT(/\\(;/, /;\\)/);\n  BLOCK_COMMENT.contains.push(\"self\");\n  const LINE_COMMENT = hljs.COMMENT(/;;/, /$/);\n\n  const KWS = [\n    \"anyfunc\",\n    \"block\",\n    \"br\",\n    \"br_if\",\n    \"br_table\",\n    \"call\",\n    \"call_indirect\",\n    \"data\",\n    \"drop\",\n    \"elem\",\n    \"else\",\n    \"end\",\n    \"export\",\n    \"func\",\n    \"global.get\",\n    \"global.set\",\n    \"local.get\",\n    \"local.set\",\n    \"local.tee\",\n    \"get_global\",\n    \"get_local\",\n    \"global\",\n    \"if\",\n    \"import\",\n    \"local\",\n    \"loop\",\n    \"memory\",\n    \"memory.grow\",\n    \"memory.size\",\n    \"module\",\n    \"mut\",\n    \"nop\",\n    \"offset\",\n    \"param\",\n    \"result\",\n    \"return\",\n    \"select\",\n    \"set_global\",\n    \"set_local\",\n    \"start\",\n    \"table\",\n    \"tee_local\",\n    \"then\",\n    \"type\",\n    \"unreachable\"\n  ];\n\n  const FUNCTION_REFERENCE = {\n    begin: [\n      /(?:func|call|call_indirect)/,\n      /\\s+/,\n      /\\$[^\\s)]+/\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    }\n  };\n\n  const ARGUMENT = {\n    className: \"variable\",\n    begin: /\\$[\\w_]+/\n  };\n\n  const PARENS = {\n    match: /(\\((?!;)|\\))+/,\n    className: \"punctuation\",\n    relevance: 0\n  };\n\n  const NUMBER = {\n    className: \"number\",\n    relevance: 0,\n    // borrowed from Prism, TODO: split out into variants\n    match: /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/\n  };\n\n  const TYPE = {\n    // look-ahead prevents us from gobbling up opcodes\n    match: /(i32|i64|f32|f64)(?!\\.)/,\n    className: \"type\"\n  };\n\n  const MATH_OPERATIONS = {\n    className: \"keyword\",\n    // borrowed from Prism, TODO: split out into variants\n    match: /\\b(f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))\\b/\n  };\n\n  const OFFSET_ALIGN = {\n    match: [\n      /(?:offset|align)/,\n      /\\s*/,\n      /=/\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"operator\"\n    }\n  };\n\n  return {\n    name: 'WebAssembly',\n    keywords: {\n      $pattern: /[\\w.]+/,\n      keyword: KWS\n    },\n    contains: [\n      LINE_COMMENT,\n      BLOCK_COMMENT,\n      OFFSET_ALIGN,\n      ARGUMENT,\n      PARENS,\n      FUNCTION_REFERENCE,\n      hljs.QUOTE_STRING_MODE,\n      TYPE,\n      MATH_OPERATIONS,\n      NUMBER\n    ]\n  };\n}\n\nexport { wasm as default };\n", "/*\nLanguage: HTML, XML\nWebsite: https://www.w3.org/XML/\nCategory: common, web\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction xml(hljs) {\n  const regex = hljs.regex;\n  // XML names can have the following additional letters: https://www.w3.org/TR/xml/#NT-NameChar\n  // OTHER_NAME_CHARS = /[:\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]/;\n  // Element names start with NAME_START_CHAR followed by optional other Unicode letters, ASCII digits, hyphens, underscores, and periods\n  // const TAG_NAME_RE = regex.concat(/[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/, regex.optional(/[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*:/), /[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*/);;\n  // const XML_IDENT_RE = /[A-Z_a-z:\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]+/;\n  // const TAG_NAME_RE = regex.concat(/[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/, regex.optional(/[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*:/), /[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*/);\n  // however, to cater for performance and more Unicode support rely simply on the Unicode letter class\n  const TAG_NAME_RE = regex.concat(/[\\p{L}_]/u, regex.optional(/[\\p{L}0-9_.-]*:/u), /[\\p{L}0-9_.-]*/u);\n  const XML_IDENT_RE = /[\\p{L}0-9._:-]+/u;\n  const XML_ENTITIES = {\n    className: 'symbol',\n    begin: /&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/\n  };\n  const XML_META_KEYWORDS = {\n    begin: /\\s/,\n    contains: [\n      {\n        className: 'keyword',\n        begin: /#?[a-z_][a-z1-9_-]+/,\n        illegal: /\\n/\n      }\n    ]\n  };\n  const XML_META_PAR_KEYWORDS = hljs.inherit(XML_META_KEYWORDS, {\n    begin: /\\(/,\n    end: /\\)/\n  });\n  const APOS_META_STRING_MODE = hljs.inherit(hljs.APOS_STRING_MODE, { className: 'string' });\n  const QUOTE_META_STRING_MODE = hljs.inherit(hljs.QUOTE_STRING_MODE, { className: 'string' });\n  const TAG_INTERNALS = {\n    endsWithParent: true,\n    illegal: /</,\n    relevance: 0,\n    contains: [\n      {\n        className: 'attr',\n        begin: XML_IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: /=\\s*/,\n        relevance: 0,\n        contains: [\n          {\n            className: 'string',\n            endsParent: true,\n            variants: [\n              {\n                begin: /\"/,\n                end: /\"/,\n                contains: [ XML_ENTITIES ]\n              },\n              {\n                begin: /'/,\n                end: /'/,\n                contains: [ XML_ENTITIES ]\n              },\n              { begin: /[^\\s\"'=<>`]+/ }\n            ]\n          }\n        ]\n      }\n    ]\n  };\n  return {\n    name: 'HTML, XML',\n    aliases: [\n      'html',\n      'xhtml',\n      'rss',\n      'atom',\n      'xjb',\n      'xsd',\n      'xsl',\n      'plist',\n      'wsf',\n      'svg'\n    ],\n    case_insensitive: true,\n    unicodeRegex: true,\n    contains: [\n      {\n        className: 'meta',\n        begin: /<![a-z]/,\n        end: />/,\n        relevance: 10,\n        contains: [\n          XML_META_KEYWORDS,\n          QUOTE_META_STRING_MODE,\n          APOS_META_STRING_MODE,\n          XML_META_PAR_KEYWORDS,\n          {\n            begin: /\\[/,\n            end: /\\]/,\n            contains: [\n              {\n                className: 'meta',\n                begin: /<![a-z]/,\n                end: />/,\n                contains: [\n                  XML_META_KEYWORDS,\n                  XML_META_PAR_KEYWORDS,\n                  QUOTE_META_STRING_MODE,\n                  APOS_META_STRING_MODE\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      hljs.COMMENT(\n        /<!--/,\n        /-->/,\n        { relevance: 10 }\n      ),\n      {\n        begin: /<!\\[CDATA\\[/,\n        end: /\\]\\]>/,\n        relevance: 10\n      },\n      XML_ENTITIES,\n      // xml processing instructions\n      {\n        className: 'meta',\n        end: /\\?>/,\n        variants: [\n          {\n            begin: /<\\?xml/,\n            relevance: 10,\n            contains: [\n              QUOTE_META_STRING_MODE\n            ]\n          },\n          {\n            begin: /<\\?[a-z][a-z0-9]+/,\n          }\n        ]\n\n      },\n      {\n        className: 'tag',\n        /*\n        The lookahead pattern (?=...) ensures that 'begin' only matches\n        '<style' as a single word, followed by a whitespace or an\n        ending bracket.\n        */\n        begin: /<style(?=\\s|>)/,\n        end: />/,\n        keywords: { name: 'style' },\n        contains: [ TAG_INTERNALS ],\n        starts: {\n          end: /<\\/style>/,\n          returnEnd: true,\n          subLanguage: [\n            'css',\n            'xml'\n          ]\n        }\n      },\n      {\n        className: 'tag',\n        // See the comment in the <style tag about the lookahead pattern\n        begin: /<script(?=\\s|>)/,\n        end: />/,\n        keywords: { name: 'script' },\n        contains: [ TAG_INTERNALS ],\n        starts: {\n          end: /<\\/script>/,\n          returnEnd: true,\n          subLanguage: [\n            'javascript',\n            'handlebars',\n            'xml'\n          ]\n        }\n      },\n      // we need this for now for jSX\n      {\n        className: 'tag',\n        begin: /<>|<\\/>/\n      },\n      // open tag\n      {\n        className: 'tag',\n        begin: regex.concat(\n          /</,\n          regex.lookahead(regex.concat(\n            TAG_NAME_RE,\n            // <tag/>\n            // <tag>\n            // <tag ...\n            regex.either(/\\/>/, />/, /\\s/)\n          ))\n        ),\n        end: /\\/?>/,\n        contains: [\n          {\n            className: 'name',\n            begin: TAG_NAME_RE,\n            relevance: 0,\n            starts: TAG_INTERNALS\n          }\n        ]\n      },\n      // close tag\n      {\n        className: 'tag',\n        begin: regex.concat(\n          /<\\//,\n          regex.lookahead(regex.concat(\n            TAG_NAME_RE, />/\n          ))\n        ),\n        contains: [\n          {\n            className: 'name',\n            begin: TAG_NAME_RE,\n            relevance: 0\n          },\n          {\n            begin: />/,\n            relevance: 0,\n            endsParent: true\n          }\n        ]\n      }\n    ]\n  };\n}\n\nexport { xml as default };\n", "/*\nLanguage: YAML\nDescription: Yet Another Markdown Language\nAuthor: Stefan Wienert <stwienert@gmail.com>\nContributors: Carl Baxter <carl@cbax.tech>\nRequires: ruby.js\nWebsite: https://yaml.org\nCategory: common, config\n*/\nfunction yaml(hljs) {\n  const LITERALS = 'true false yes no null';\n\n  // YAML spec allows non-reserved URI characters in tags.\n  const URI_CHARACTERS = '[\\\\w#;/?:@&=+$,.~*\\'()[\\\\]]+';\n\n  // Define keys as starting with a word character\n  // ...containing word chars, spaces, colons, forward-slashes, hyphens and periods\n  // ...and ending with a colon followed immediately by a space, tab or newline.\n  // The YAML spec allows for much more than this, but this covers most use-cases.\n  const KEY = {\n    className: 'attr',\n    variants: [\n      { begin: '\\\\w[\\\\w :\\\\/.-]*:(?=[ \\t]|$)' },\n      { // double quoted keys\n        begin: '\"\\\\w[\\\\w :\\\\/.-]*\":(?=[ \\t]|$)' },\n      { // single quoted keys\n        begin: '\\'\\\\w[\\\\w :\\\\/.-]*\\':(?=[ \\t]|$)' }\n    ]\n  };\n\n  const TEMPLATE_VARIABLES = {\n    className: 'template-variable',\n    variants: [\n      { // jinja templates Ansible\n        begin: /\\{\\{/,\n        end: /\\}\\}/\n      },\n      { // Ruby i18n\n        begin: /%\\{/,\n        end: /\\}/\n      }\n    ]\n  };\n  const STRING = {\n    className: 'string',\n    relevance: 0,\n    variants: [\n      {\n        begin: /'/,\n        end: /'/\n      },\n      {\n        begin: /\"/,\n        end: /\"/\n      },\n      { begin: /\\S+/ }\n    ],\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      TEMPLATE_VARIABLES\n    ]\n  };\n\n  // Strings inside of value containers (objects) can't contain braces,\n  // brackets, or commas\n  const CONTAINER_STRING = hljs.inherit(STRING, { variants: [\n    {\n      begin: /'/,\n      end: /'/\n    },\n    {\n      begin: /\"/,\n      end: /\"/\n    },\n    { begin: /[^\\s,{}[\\]]+/ }\n  ] });\n\n  const DATE_RE = '[0-9]{4}(-[0-9][0-9]){0,2}';\n  const TIME_RE = '([Tt \\\\t][0-9][0-9]?(:[0-9][0-9]){2})?';\n  const FRACTION_RE = '(\\\\.[0-9]*)?';\n  const ZONE_RE = '([ \\\\t])*(Z|[-+][0-9][0-9]?(:[0-9][0-9])?)?';\n  const TIMESTAMP = {\n    className: 'number',\n    begin: '\\\\b' + DATE_RE + TIME_RE + FRACTION_RE + ZONE_RE + '\\\\b'\n  };\n\n  const VALUE_CONTAINER = {\n    end: ',',\n    endsWithParent: true,\n    excludeEnd: true,\n    keywords: LITERALS,\n    relevance: 0\n  };\n  const OBJECT = {\n    begin: /\\{/,\n    end: /\\}/,\n    contains: [ VALUE_CONTAINER ],\n    illegal: '\\\\n',\n    relevance: 0\n  };\n  const ARRAY = {\n    begin: '\\\\[',\n    end: '\\\\]',\n    contains: [ VALUE_CONTAINER ],\n    illegal: '\\\\n',\n    relevance: 0\n  };\n\n  const MODES = [\n    KEY,\n    {\n      className: 'meta',\n      begin: '^---\\\\s*$',\n      relevance: 10\n    },\n    { // multi line string\n      // Blocks start with a | or > followed by a newline\n      //\n      // Indentation of subsequent lines must be the same to\n      // be considered part of the block\n      className: 'string',\n      begin: '[\\\\|>]([1-9]?[+-])?[ ]*\\\\n( +)[^ ][^\\\\n]*\\\\n(\\\\2[^\\\\n]+\\\\n?)*'\n    },\n    { // Ruby/Rails erb\n      begin: '<%[%=-]?',\n      end: '[%-]?%>',\n      subLanguage: 'ruby',\n      excludeBegin: true,\n      excludeEnd: true,\n      relevance: 0\n    },\n    { // named tags\n      className: 'type',\n      begin: '!\\\\w+!' + URI_CHARACTERS\n    },\n    // https://yaml.org/spec/1.2/spec.html#id2784064\n    { // verbatim tags\n      className: 'type',\n      begin: '!<' + URI_CHARACTERS + \">\"\n    },\n    { // primary tags\n      className: 'type',\n      begin: '!' + URI_CHARACTERS\n    },\n    { // secondary tags\n      className: 'type',\n      begin: '!!' + URI_CHARACTERS\n    },\n    { // fragment id &ref\n      className: 'meta',\n      begin: '&' + hljs.UNDERSCORE_IDENT_RE + '$'\n    },\n    { // fragment reference *ref\n      className: 'meta',\n      begin: '\\\\*' + hljs.UNDERSCORE_IDENT_RE + '$'\n    },\n    { // array listing\n      className: 'bullet',\n      // TODO: remove |$ hack when we have proper look-ahead support\n      begin: '-(?=[ ]|$)',\n      relevance: 0\n    },\n    hljs.HASH_COMMENT_MODE,\n    {\n      beginKeywords: LITERALS,\n      keywords: { literal: LITERALS }\n    },\n    TIMESTAMP,\n    // numbers are any valid C-style number that\n    // sit isolated from other words\n    {\n      className: 'number',\n      begin: hljs.C_NUMBER_RE + '\\\\b',\n      relevance: 0\n    },\n    OBJECT,\n    ARRAY,\n    STRING\n  ];\n\n  const VALUE_MODES = [ ...MODES ];\n  VALUE_MODES.pop();\n  VALUE_MODES.push(CONTAINER_STRING);\n  VALUE_CONTAINER.contains = VALUE_MODES;\n\n  return {\n    name: 'YAML',\n    case_insensitive: true,\n    aliases: [ 'yml' ],\n    contains: MODES\n  };\n}\n\nexport { yaml as default };\n", "// https://nodejs.org/api/packages.html#packages_writing_dual_packages_while_avoiding_or_minimizing_hazards\nimport HighlightJS from '../lib/core.js';\nexport { HighlightJS };\nexport default HighlightJS;\n", "// @ts-expect-error\nimport formatter from 'format'\n\nexport const fault = Object.assign(create(Error), {\n  eval: create(EvalError),\n  range: create(RangeError),\n  reference: create(ReferenceError),\n  syntax: create(SyntaxError),\n  type: create(TypeError),\n  uri: create(URIError)\n})\n\n/**\n * Create a new `EConstructor`, with the formatted `format` as a first argument.\n *\n * @template {Error} Fault\n * @template {new (reason: string) => Fault} Class\n * @param {Class} Constructor\n */\nexport function create(Constructor) {\n  /** @type {string} */\n  // @ts-expect-error\n  FormattedError.displayName = Constructor.displayName || Constructor.name\n\n  return FormattedError\n\n  /**\n   * Create an error with a printf-like formatted message.\n   *\n   * @param {string|null} [format]\n   *   Template string.\n   * @param {...unknown} values\n   *   Values to render in `format`.\n   * @returns {Fault}\n   */\n  function FormattedError(format, ...values) {\n    /** @type {string} */\n    const reason = format ? formatter(format, ...values) : format\n    return new Constructor(reason)\n  }\n}\n", "/**\n * @typedef {import('hast').Text} Text\n * @typedef {import('highlight.js').HighlightResult} HighlightResult\n * @typedef {import('highlight.js').HLJSOptions} HighlightOptions\n * @typedef {import('highlight.js').LanguageFn} HighlightSyntax\n * @typedef {import('highlight.js').Emitter} HighlightEmitter\n *\n * @typedef {{type: 'element', tagName: 'span', properties: {className: Array<string>}, children: Array<Span|Text>}} Span\n * @typedef {{type: 'root', data: {language: string|null, relevance: number}, children: Array<Span|Text>}} Root\n *\n * @typedef {Object} ExtraOptions\n * @property {Array<string>} [subset]\n *   List of allowed languages, defaults to all registered languages.\n *\n * @typedef {Object} Options\n *   Configuration.\n * @property {string} [prefix='hljs-']\n *   Class prefix.\n *\n * @typedef {Options & ExtraOptions} AutoOptions\n */\n\nimport high from 'highlight.js/lib/core'\nimport {fault} from 'fault'\n\nconst own = {}.hasOwnProperty\n\nconst defaultPrefix = 'hljs-'\n\n/**\n * Highlight `value` (code) as `language` (name).\n *\n * @param {string} language\n *   Programming language name.\n * @param {string} value\n *   Code to highlight.\n * @param {Options} [options={}]\n *   Configuration.\n * @returns {Root}\n *   A hast `Root` node.\n */\nfunction highlight(language, value, options = {}) {\n  let prefix = options.prefix\n\n  if (typeof language !== 'string') {\n    throw fault('Expected `string` for name, got `%s`', language)\n  }\n\n  if (!high.getLanguage(language)) {\n    throw fault('Unknown language: `%s` is not registered', language)\n  }\n\n  if (typeof value !== 'string') {\n    throw fault('Expected `string` for value, got `%s`', value)\n  }\n\n  if (prefix === null || prefix === undefined) {\n    prefix = defaultPrefix\n  }\n\n  high.configure({__emitter: HastEmitter, classPrefix: prefix})\n\n  const result = /** @type {HighlightResult & {_emitter: HastEmitter}} */ (\n    high.highlight(value, {language, ignoreIllegals: true})\n  )\n\n  high.configure({})\n\n  // `highlight.js` seems to use this (currently) for broken grammars, so let\u2019s\n  // keep it in there just to be sure.\n  /* c8 ignore next 3 */\n  if (result.errorRaised) {\n    throw result.errorRaised\n  }\n\n  // @ts-expect-error: `language` is always defined in `highlight`.\n  result._emitter.root.data.language = result.language\n  result._emitter.root.data.relevance = result.relevance\n\n  return result._emitter.root\n}\n\n/**\n * Highlight `value` (code) and guess its programming language.\n *\n * @param {string} value\n *   Code to highlight.\n * @param {AutoOptions} [options={}]\n *   Configuration.\n * @returns {Root}\n *   A hast `Root` node.\n */\nfunction highlightAuto(value, options = {}) {\n  const subset = options.subset || high.listLanguages()\n  let prefix = options.prefix\n  let index = -1\n  /** @type {Root} */\n  let result = {\n    type: 'root',\n    data: {language: null, relevance: 0},\n    children: []\n  }\n\n  if (prefix === null || prefix === undefined) {\n    prefix = defaultPrefix\n  }\n\n  if (typeof value !== 'string') {\n    throw fault('Expected `string` for value, got `%s`', value)\n  }\n\n  while (++index < subset.length) {\n    const name = subset[index]\n\n    if (!high.getLanguage(name)) continue\n\n    const current = highlight(name, value, options)\n\n    if (current.data.relevance > result.data.relevance) result = current\n  }\n\n  return result\n}\n\n/**\n * Register a language.\n *\n * @param {string} language\n *   Programming language name.\n * @param {HighlightSyntax} syntax\n *   `highlight.js` language syntax.\n * @returns {void}\n */\nfunction registerLanguage(language, syntax) {\n  high.registerLanguage(language, syntax)\n}\n\n/**\n * Register aliases for already registered languages.\n *\n * @param {string|Record<string, string|Array<string>>} language\n *   Programming language name or a map of `language`s to `alias`es or `list`s\n * @param {string|Array<string>} [alias]\n *   New aliases for the programming language.\n * @returns {void}\n */\nconst registerAlias =\n  /**\n   * @type {(\n   *   ((language: string, alias: string|Array<string>) => void) &\n   *   ((aliases: Record<string, string|Array<string>>) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {string|Record<string, string|Array<string>>} language\n     * @param {string|Array<string>} [alias]\n     * @returns {void}\n     */\n    function (language, alias) {\n      if (typeof language === 'string') {\n        // @ts-expect-error: should be a string in this overload.\n        high.registerAliases(alias, {languageName: language})\n      } else {\n        /** @type {string} */\n        let key\n\n        for (key in language) {\n          if (own.call(language, key)) {\n            high.registerAliases(language[key], {languageName: key})\n          }\n        }\n      }\n    }\n  )\n\n/**\n * Check whether an `alias` or `language` is registered.\n *\n * @param {string} aliasOrLanguage\n *   Name of a registered language or alias.\n * @returns {boolean}\n *   Whether `aliasOrlanguage` is registered.\n */\nfunction registered(aliasOrLanguage) {\n  return Boolean(high.getLanguage(aliasOrLanguage))\n}\n\n/**\n * List registered languages.\n *\n * @returns {Array<string>}\n *   Names of registered language.\n */\nfunction listLanguages() {\n  return high.listLanguages()\n}\n\n/** @type {HighlightEmitter} */\nclass HastEmitter {\n  /**\n   * @param {HighlightOptions} options\n   */\n  constructor(options) {\n    /** @type {HighlightOptions} */\n    this.options = options\n    /** @type {Root} */\n    this.root = {\n      type: 'root',\n      data: {language: null, relevance: 0},\n      children: []\n    }\n    /** @type {[Root, ...Array<Span>]} */\n    this.stack = [this.root]\n  }\n\n  /**\n   * @param {string} value\n   */\n  addText(value) {\n    if (value === '') return\n\n    const current = this.stack[this.stack.length - 1]\n    const tail = current.children[current.children.length - 1]\n\n    if (tail && tail.type === 'text') {\n      tail.value += value\n    } else {\n      current.children.push({type: 'text', value})\n    }\n  }\n\n  /**\n   * @param {string} value\n   * @param {string} name\n   */\n  addKeyword(value, name) {\n    this.openNode(name)\n    this.addText(value)\n    this.closeNode()\n  }\n\n  /**\n   * @param {HastEmitter} other\n   * @param {string} name\n   */\n  addSublanguage(other, name) {\n    const current = this.stack[this.stack.length - 1]\n    const results = other.root.children\n\n    if (name) {\n      current.children.push({\n        type: 'element',\n        tagName: 'span',\n        properties: {className: [name]},\n        children: results\n      })\n    } else {\n      current.children.push(...results)\n    }\n  }\n\n  /**\n   * @param {string} name\n   */\n  openNode(name) {\n    // First \u201Cclass\u201D gets the prefix. Rest gets a repeated underscore suffix.\n    // See: <https://github.com/highlightjs/highlight.js/commit/51806aa>\n    // See: <https://github.com/wooorm/lowlight/issues/43>\n    const className = name\n      .split('.')\n      .map((d, i) => (i ? d + '_'.repeat(i) : this.options.classPrefix + d))\n    const current = this.stack[this.stack.length - 1]\n    /** @type {Span} */\n    const child = {\n      type: 'element',\n      tagName: 'span',\n      properties: {className},\n      children: []\n    }\n\n    current.children.push(child)\n    this.stack.push(child)\n  }\n\n  /**\n   */\n  closeNode() {\n    this.stack.pop()\n  }\n\n  /**\n   */\n  closeAllNodes() {}\n\n  /**\n   */\n  finalize() {}\n\n  /**\n   */\n  toHTML() {\n    return ''\n  }\n}\n\nexport const lowlight = {\n  highlight,\n  highlightAuto,\n  registerLanguage,\n  registered,\n  listLanguages,\n  registerAlias\n}\n", "// @ts-expect-error: this registers types for the language files.\n/** @typedef {import('highlight.js/types/index.js')} DoNotTochItRegistersLanguageFiles */\n\nimport arduino from 'highlight.js/lib/languages/arduino'\nimport bash from 'highlight.js/lib/languages/bash'\nimport c from 'highlight.js/lib/languages/c'\nimport cpp from 'highlight.js/lib/languages/cpp'\nimport csharp from 'highlight.js/lib/languages/csharp'\nimport css from 'highlight.js/lib/languages/css'\nimport diff from 'highlight.js/lib/languages/diff'\nimport go from 'highlight.js/lib/languages/go'\nimport graphql from 'highlight.js/lib/languages/graphql'\nimport ini from 'highlight.js/lib/languages/ini'\nimport java from 'highlight.js/lib/languages/java'\nimport javascript from 'highlight.js/lib/languages/javascript'\nimport json from 'highlight.js/lib/languages/json'\nimport kotlin from 'highlight.js/lib/languages/kotlin'\nimport less from 'highlight.js/lib/languages/less'\nimport lua from 'highlight.js/lib/languages/lua'\nimport makefile from 'highlight.js/lib/languages/makefile'\nimport markdown from 'highlight.js/lib/languages/markdown'\nimport objectivec from 'highlight.js/lib/languages/objectivec'\nimport perl from 'highlight.js/lib/languages/perl'\nimport php from 'highlight.js/lib/languages/php'\nimport phpTemplate from 'highlight.js/lib/languages/php-template'\nimport plaintext from 'highlight.js/lib/languages/plaintext'\nimport python from 'highlight.js/lib/languages/python'\nimport pythonRepl from 'highlight.js/lib/languages/python-repl'\nimport r from 'highlight.js/lib/languages/r'\nimport ruby from 'highlight.js/lib/languages/ruby'\nimport rust from 'highlight.js/lib/languages/rust'\nimport scss from 'highlight.js/lib/languages/scss'\nimport shell from 'highlight.js/lib/languages/shell'\nimport sql from 'highlight.js/lib/languages/sql'\nimport swift from 'highlight.js/lib/languages/swift'\nimport typescript from 'highlight.js/lib/languages/typescript'\nimport vbnet from 'highlight.js/lib/languages/vbnet'\nimport wasm from 'highlight.js/lib/languages/wasm'\nimport xml from 'highlight.js/lib/languages/xml'\nimport yaml from 'highlight.js/lib/languages/yaml'\nimport {lowlight} from './core.js'\n\nlowlight.registerLanguage('arduino', arduino)\nlowlight.registerLanguage('bash', bash)\nlowlight.registerLanguage('c', c)\nlowlight.registerLanguage('cpp', cpp)\nlowlight.registerLanguage('csharp', csharp)\nlowlight.registerLanguage('css', css)\nlowlight.registerLanguage('diff', diff)\nlowlight.registerLanguage('go', go)\nlowlight.registerLanguage('graphql', graphql)\nlowlight.registerLanguage('ini', ini)\nlowlight.registerLanguage('java', java)\nlowlight.registerLanguage('javascript', javascript)\nlowlight.registerLanguage('json', json)\nlowlight.registerLanguage('kotlin', kotlin)\nlowlight.registerLanguage('less', less)\nlowlight.registerLanguage('lua', lua)\nlowlight.registerLanguage('makefile', makefile)\nlowlight.registerLanguage('markdown', markdown)\nlowlight.registerLanguage('objectivec', objectivec)\nlowlight.registerLanguage('perl', perl)\nlowlight.registerLanguage('php', php)\nlowlight.registerLanguage('php-template', phpTemplate)\nlowlight.registerLanguage('plaintext', plaintext)\nlowlight.registerLanguage('python', python)\nlowlight.registerLanguage('python-repl', pythonRepl)\nlowlight.registerLanguage('r', r)\nlowlight.registerLanguage('ruby', ruby)\nlowlight.registerLanguage('rust', rust)\nlowlight.registerLanguage('scss', scss)\nlowlight.registerLanguage('shell', shell)\nlowlight.registerLanguage('sql', sql)\nlowlight.registerLanguage('swift', swift)\nlowlight.registerLanguage('typescript', typescript)\nlowlight.registerLanguage('vbnet', vbnet)\nlowlight.registerLanguage('wasm', wasm)\nlowlight.registerLanguage('xml', xml)\nlowlight.registerLanguage('yaml', yaml)\n\nexport {lowlight} from './core.js'\n", "// ::- Persistent data structure representing an ordered mapping from\n// strings to values, with some convenient update methods.\nfunction OrderedMap(content) {\n  this.content = content;\n}\n\nOrderedMap.prototype = {\n  constructor: OrderedMap,\n\n  find: function(key) {\n    for (var i = 0; i < this.content.length; i += 2)\n      if (this.content[i] === key) return i\n    return -1\n  },\n\n  // :: (string) \u2192 ?any\n  // Retrieve the value stored under `key`, or return undefined when\n  // no such key exists.\n  get: function(key) {\n    var found = this.find(key);\n    return found == -1 ? undefined : this.content[found + 1]\n  },\n\n  // :: (string, any, ?string) \u2192 OrderedMap\n  // Create a new map by replacing the value of `key` with a new\n  // value, or adding a binding to the end of the map. If `newKey` is\n  // given, the key of the binding will be replaced with that key.\n  update: function(key, value, newKey) {\n    var self = newKey && newKey != key ? this.remove(newKey) : this;\n    var found = self.find(key), content = self.content.slice();\n    if (found == -1) {\n      content.push(newKey || key, value);\n    } else {\n      content[found + 1] = value;\n      if (newKey) content[found] = newKey;\n    }\n    return new OrderedMap(content)\n  },\n\n  // :: (string) \u2192 OrderedMap\n  // Return a map with the given key removed, if it existed.\n  remove: function(key) {\n    var found = this.find(key);\n    if (found == -1) return this\n    var content = this.content.slice();\n    content.splice(found, 2);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, any) \u2192 OrderedMap\n  // Add a new key to the start of the map.\n  addToStart: function(key, value) {\n    return new OrderedMap([key, value].concat(this.remove(key).content))\n  },\n\n  // :: (string, any) \u2192 OrderedMap\n  // Add a new key to the end of the map.\n  addToEnd: function(key, value) {\n    var content = this.remove(key).content.slice();\n    content.push(key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, string, any) \u2192 OrderedMap\n  // Add a key after the given key. If `place` is not found, the new\n  // key is added to the end.\n  addBefore: function(place, key, value) {\n    var without = this.remove(key), content = without.content.slice();\n    var found = without.find(place);\n    content.splice(found == -1 ? content.length : found, 0, key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: ((key: string, value: any))\n  // Call the given function for each key/value pair in the map, in\n  // order.\n  forEach: function(f) {\n    for (var i = 0; i < this.content.length; i += 2)\n      f(this.content[i], this.content[i + 1]);\n  },\n\n  // :: (union<Object, OrderedMap>) \u2192 OrderedMap\n  // Create a new map by prepending the keys in this map that don't\n  // appear in `map` before the keys in `map`.\n  prepend: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(map.content.concat(this.subtract(map).content))\n  },\n\n  // :: (union<Object, OrderedMap>) \u2192 OrderedMap\n  // Create a new map by appending the keys in this map that don't\n  // appear in `map` after the keys in `map`.\n  append: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(this.subtract(map).content.concat(map.content))\n  },\n\n  // :: (union<Object, OrderedMap>) \u2192 OrderedMap\n  // Create a map containing all the keys in this map that don't\n  // appear in `map`.\n  subtract: function(map) {\n    var result = this;\n    map = OrderedMap.from(map);\n    for (var i = 0; i < map.content.length; i += 2)\n      result = result.remove(map.content[i]);\n    return result\n  },\n\n  // :: () \u2192 Object\n  // Turn ordered map into a plain object.\n  toObject: function() {\n    var result = {};\n    this.forEach(function(key, value) { result[key] = value; });\n    return result\n  },\n\n  // :: number\n  // The amount of keys in this map.\n  get size() {\n    return this.content.length >> 1\n  }\n};\n\n// :: (?union<Object, OrderedMap>) \u2192 OrderedMap\n// Return a map with the given content. If null, create an empty\n// map. If given an ordered map, return that map itself. If given an\n// object, create a map from the object's properties.\nOrderedMap.from = function(value) {\n  if (value instanceof OrderedMap) return value\n  var content = [];\n  if (value) for (var prop in value) content.push(prop, value[prop]);\n  return new OrderedMap(content)\n};\n\nexport default OrderedMap;\n", "import OrderedMap from 'orderedmap';\n\nfunction findDiffStart(a, b, pos) {\n    for (let i = 0;; i++) {\n        if (i == a.childCount || i == b.childCount)\n            return a.childCount == b.childCount ? null : pos;\n        let childA = a.child(i), childB = b.child(i);\n        if (childA == childB) {\n            pos += childA.nodeSize;\n            continue;\n        }\n        if (!childA.sameMarkup(childB))\n            return pos;\n        if (childA.isText && childA.text != childB.text) {\n            for (let j = 0; childA.text[j] == childB.text[j]; j++)\n                pos++;\n            return pos;\n        }\n        if (childA.content.size || childB.content.size) {\n            let inner = findDiffStart(childA.content, childB.content, pos + 1);\n            if (inner != null)\n                return inner;\n        }\n        pos += childA.nodeSize;\n    }\n}\nfunction findDiffEnd(a, b, posA, posB) {\n    for (let iA = a.childCount, iB = b.childCount;;) {\n        if (iA == 0 || iB == 0)\n            return iA == iB ? null : { a: posA, b: posB };\n        let childA = a.child(--iA), childB = b.child(--iB), size = childA.nodeSize;\n        if (childA == childB) {\n            posA -= size;\n            posB -= size;\n            continue;\n        }\n        if (!childA.sameMarkup(childB))\n            return { a: posA, b: posB };\n        if (childA.isText && childA.text != childB.text) {\n            let same = 0, minSize = Math.min(childA.text.length, childB.text.length);\n            while (same < minSize && childA.text[childA.text.length - same - 1] == childB.text[childB.text.length - same - 1]) {\n                same++;\n                posA--;\n                posB--;\n            }\n            return { a: posA, b: posB };\n        }\n        if (childA.content.size || childB.content.size) {\n            let inner = findDiffEnd(childA.content, childB.content, posA - 1, posB - 1);\n            if (inner)\n                return inner;\n        }\n        posA -= size;\n        posB -= size;\n    }\n}\n\n/**\nA fragment represents a node's collection of child nodes.\n\nLike nodes, fragments are persistent data structures, and you\nshould not mutate them or their content. Rather, you create new\ninstances whenever needed. The API tries to make this easy.\n*/\nclass Fragment {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    content, size) {\n        this.content = content;\n        this.size = size || 0;\n        if (size == null)\n            for (let i = 0; i < content.length; i++)\n                this.size += content[i].nodeSize;\n    }\n    /**\n    Invoke a callback for all descendant nodes between the given two\n    positions (relative to start of this fragment). Doesn't descend\n    into a node when the callback returns `false`.\n    */\n    nodesBetween(from, to, f, nodeStart = 0, parent) {\n        for (let i = 0, pos = 0; pos < to; i++) {\n            let child = this.content[i], end = pos + child.nodeSize;\n            if (end > from && f(child, nodeStart + pos, parent || null, i) !== false && child.content.size) {\n                let start = pos + 1;\n                child.nodesBetween(Math.max(0, from - start), Math.min(child.content.size, to - start), f, nodeStart + start);\n            }\n            pos = end;\n        }\n    }\n    /**\n    Call the given callback for every descendant node. `pos` will be\n    relative to the start of the fragment. The callback may return\n    `false` to prevent traversal of a given node's children.\n    */\n    descendants(f) {\n        this.nodesBetween(0, this.size, f);\n    }\n    /**\n    Extract the text between `from` and `to`. See the same method on\n    [`Node`](https://prosemirror.net/docs/ref/#model.Node.textBetween).\n    */\n    textBetween(from, to, blockSeparator, leafText) {\n        let text = \"\", separated = true;\n        this.nodesBetween(from, to, (node, pos) => {\n            if (node.isText) {\n                text += node.text.slice(Math.max(from, pos) - pos, to - pos);\n                separated = !blockSeparator;\n            }\n            else if (node.isLeaf) {\n                if (leafText) {\n                    text += typeof leafText === \"function\" ? leafText(node) : leafText;\n                }\n                else if (node.type.spec.leafText) {\n                    text += node.type.spec.leafText(node);\n                }\n                separated = !blockSeparator;\n            }\n            else if (!separated && node.isBlock) {\n                text += blockSeparator;\n                separated = true;\n            }\n        }, 0);\n        return text;\n    }\n    /**\n    Create a new fragment containing the combined content of this\n    fragment and the other.\n    */\n    append(other) {\n        if (!other.size)\n            return this;\n        if (!this.size)\n            return other;\n        let last = this.lastChild, first = other.firstChild, content = this.content.slice(), i = 0;\n        if (last.isText && last.sameMarkup(first)) {\n            content[content.length - 1] = last.withText(last.text + first.text);\n            i = 1;\n        }\n        for (; i < other.content.length; i++)\n            content.push(other.content[i]);\n        return new Fragment(content, this.size + other.size);\n    }\n    /**\n    Cut out the sub-fragment between the two given positions.\n    */\n    cut(from, to = this.size) {\n        if (from == 0 && to == this.size)\n            return this;\n        let result = [], size = 0;\n        if (to > from)\n            for (let i = 0, pos = 0; pos < to; i++) {\n                let child = this.content[i], end = pos + child.nodeSize;\n                if (end > from) {\n                    if (pos < from || end > to) {\n                        if (child.isText)\n                            child = child.cut(Math.max(0, from - pos), Math.min(child.text.length, to - pos));\n                        else\n                            child = child.cut(Math.max(0, from - pos - 1), Math.min(child.content.size, to - pos - 1));\n                    }\n                    result.push(child);\n                    size += child.nodeSize;\n                }\n                pos = end;\n            }\n        return new Fragment(result, size);\n    }\n    /**\n    @internal\n    */\n    cutByIndex(from, to) {\n        if (from == to)\n            return Fragment.empty;\n        if (from == 0 && to == this.content.length)\n            return this;\n        return new Fragment(this.content.slice(from, to));\n    }\n    /**\n    Create a new fragment in which the node at the given index is\n    replaced by the given node.\n    */\n    replaceChild(index, node) {\n        let current = this.content[index];\n        if (current == node)\n            return this;\n        let copy = this.content.slice();\n        let size = this.size + node.nodeSize - current.nodeSize;\n        copy[index] = node;\n        return new Fragment(copy, size);\n    }\n    /**\n    Create a new fragment by prepending the given node to this\n    fragment.\n    */\n    addToStart(node) {\n        return new Fragment([node].concat(this.content), this.size + node.nodeSize);\n    }\n    /**\n    Create a new fragment by appending the given node to this\n    fragment.\n    */\n    addToEnd(node) {\n        return new Fragment(this.content.concat(node), this.size + node.nodeSize);\n    }\n    /**\n    Compare this fragment to another one.\n    */\n    eq(other) {\n        if (this.content.length != other.content.length)\n            return false;\n        for (let i = 0; i < this.content.length; i++)\n            if (!this.content[i].eq(other.content[i]))\n                return false;\n        return true;\n    }\n    /**\n    The first child of the fragment, or `null` if it is empty.\n    */\n    get firstChild() { return this.content.length ? this.content[0] : null; }\n    /**\n    The last child of the fragment, or `null` if it is empty.\n    */\n    get lastChild() { return this.content.length ? this.content[this.content.length - 1] : null; }\n    /**\n    The number of child nodes in this fragment.\n    */\n    get childCount() { return this.content.length; }\n    /**\n    Get the child node at the given index. Raise an error when the\n    index is out of range.\n    */\n    child(index) {\n        let found = this.content[index];\n        if (!found)\n            throw new RangeError(\"Index \" + index + \" out of range for \" + this);\n        return found;\n    }\n    /**\n    Get the child node at the given index, if it exists.\n    */\n    maybeChild(index) {\n        return this.content[index] || null;\n    }\n    /**\n    Call `f` for every child node, passing the node, its offset\n    into this parent node, and its index.\n    */\n    forEach(f) {\n        for (let i = 0, p = 0; i < this.content.length; i++) {\n            let child = this.content[i];\n            f(child, p, i);\n            p += child.nodeSize;\n        }\n    }\n    /**\n    Find the first position at which this fragment and another\n    fragment differ, or `null` if they are the same.\n    */\n    findDiffStart(other, pos = 0) {\n        return findDiffStart(this, other, pos);\n    }\n    /**\n    Find the first position, searching from the end, at which this\n    fragment and the given fragment differ, or `null` if they are\n    the same. Since this position will not be the same in both\n    nodes, an object with two separate positions is returned.\n    */\n    findDiffEnd(other, pos = this.size, otherPos = other.size) {\n        return findDiffEnd(this, other, pos, otherPos);\n    }\n    /**\n    Find the index and inner offset corresponding to a given relative\n    position in this fragment. The result object will be reused\n    (overwritten) the next time the function is called. (Not public.)\n    */\n    findIndex(pos, round = -1) {\n        if (pos == 0)\n            return retIndex(0, pos);\n        if (pos == this.size)\n            return retIndex(this.content.length, pos);\n        if (pos > this.size || pos < 0)\n            throw new RangeError(`Position ${pos} outside of fragment (${this})`);\n        for (let i = 0, curPos = 0;; i++) {\n            let cur = this.child(i), end = curPos + cur.nodeSize;\n            if (end >= pos) {\n                if (end == pos || round > 0)\n                    return retIndex(i + 1, end);\n                return retIndex(i, curPos);\n            }\n            curPos = end;\n        }\n    }\n    /**\n    Return a debugging string that describes this fragment.\n    */\n    toString() { return \"<\" + this.toStringInner() + \">\"; }\n    /**\n    @internal\n    */\n    toStringInner() { return this.content.join(\", \"); }\n    /**\n    Create a JSON-serializeable representation of this fragment.\n    */\n    toJSON() {\n        return this.content.length ? this.content.map(n => n.toJSON()) : null;\n    }\n    /**\n    Deserialize a fragment from its JSON representation.\n    */\n    static fromJSON(schema, value) {\n        if (!value)\n            return Fragment.empty;\n        if (!Array.isArray(value))\n            throw new RangeError(\"Invalid input for Fragment.fromJSON\");\n        return new Fragment(value.map(schema.nodeFromJSON));\n    }\n    /**\n    Build a fragment from an array of nodes. Ensures that adjacent\n    text nodes with the same marks are joined together.\n    */\n    static fromArray(array) {\n        if (!array.length)\n            return Fragment.empty;\n        let joined, size = 0;\n        for (let i = 0; i < array.length; i++) {\n            let node = array[i];\n            size += node.nodeSize;\n            if (i && node.isText && array[i - 1].sameMarkup(node)) {\n                if (!joined)\n                    joined = array.slice(0, i);\n                joined[joined.length - 1] = node\n                    .withText(joined[joined.length - 1].text + node.text);\n            }\n            else if (joined) {\n                joined.push(node);\n            }\n        }\n        return new Fragment(joined || array, size);\n    }\n    /**\n    Create a fragment from something that can be interpreted as a\n    set of nodes. For `null`, it returns the empty fragment. For a\n    fragment, the fragment itself. For a node or array of nodes, a\n    fragment containing those nodes.\n    */\n    static from(nodes) {\n        if (!nodes)\n            return Fragment.empty;\n        if (nodes instanceof Fragment)\n            return nodes;\n        if (Array.isArray(nodes))\n            return this.fromArray(nodes);\n        if (nodes.attrs)\n            return new Fragment([nodes], nodes.nodeSize);\n        throw new RangeError(\"Can not convert \" + nodes + \" to a Fragment\" +\n            (nodes.nodesBetween ? \" (looks like multiple versions of prosemirror-model were loaded)\" : \"\"));\n    }\n}\n/**\nAn empty fragment. Intended to be reused whenever a node doesn't\ncontain anything (rather than allocating a new empty fragment for\neach leaf node).\n*/\nFragment.empty = new Fragment([], 0);\nconst found = { index: 0, offset: 0 };\nfunction retIndex(index, offset) {\n    found.index = index;\n    found.offset = offset;\n    return found;\n}\n\nfunction compareDeep(a, b) {\n    if (a === b)\n        return true;\n    if (!(a && typeof a == \"object\") ||\n        !(b && typeof b == \"object\"))\n        return false;\n    let array = Array.isArray(a);\n    if (Array.isArray(b) != array)\n        return false;\n    if (array) {\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++)\n            if (!compareDeep(a[i], b[i]))\n                return false;\n    }\n    else {\n        for (let p in a)\n            if (!(p in b) || !compareDeep(a[p], b[p]))\n                return false;\n        for (let p in b)\n            if (!(p in a))\n                return false;\n    }\n    return true;\n}\n\n/**\nA mark is a piece of information that can be attached to a node,\nsuch as it being emphasized, in code font, or a link. It has a\ntype and optionally a set of attributes that provide further\ninformation (such as the target of the link). Marks are created\nthrough a `Schema`, which controls which types exist and which\nattributes they have.\n*/\nclass Mark {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The type of this mark.\n    */\n    type, \n    /**\n    The attributes associated with this mark.\n    */\n    attrs) {\n        this.type = type;\n        this.attrs = attrs;\n    }\n    /**\n    Given a set of marks, create a new set which contains this one as\n    well, in the right position. If this mark is already in the set,\n    the set itself is returned. If any marks that are set to be\n    [exclusive](https://prosemirror.net/docs/ref/#model.MarkSpec.excludes) with this mark are present,\n    those are replaced by this one.\n    */\n    addToSet(set) {\n        let copy, placed = false;\n        for (let i = 0; i < set.length; i++) {\n            let other = set[i];\n            if (this.eq(other))\n                return set;\n            if (this.type.excludes(other.type)) {\n                if (!copy)\n                    copy = set.slice(0, i);\n            }\n            else if (other.type.excludes(this.type)) {\n                return set;\n            }\n            else {\n                if (!placed && other.type.rank > this.type.rank) {\n                    if (!copy)\n                        copy = set.slice(0, i);\n                    copy.push(this);\n                    placed = true;\n                }\n                if (copy)\n                    copy.push(other);\n            }\n        }\n        if (!copy)\n            copy = set.slice();\n        if (!placed)\n            copy.push(this);\n        return copy;\n    }\n    /**\n    Remove this mark from the given set, returning a new set. If this\n    mark is not in the set, the set itself is returned.\n    */\n    removeFromSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (this.eq(set[i]))\n                return set.slice(0, i).concat(set.slice(i + 1));\n        return set;\n    }\n    /**\n    Test whether this mark is in the given set of marks.\n    */\n    isInSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (this.eq(set[i]))\n                return true;\n        return false;\n    }\n    /**\n    Test whether this mark has the same type and attributes as\n    another mark.\n    */\n    eq(other) {\n        return this == other ||\n            (this.type == other.type && compareDeep(this.attrs, other.attrs));\n    }\n    /**\n    Convert this mark to a JSON-serializeable representation.\n    */\n    toJSON() {\n        let obj = { type: this.type.name };\n        for (let _ in this.attrs) {\n            obj.attrs = this.attrs;\n            break;\n        }\n        return obj;\n    }\n    /**\n    Deserialize a mark from JSON.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            throw new RangeError(\"Invalid input for Mark.fromJSON\");\n        let type = schema.marks[json.type];\n        if (!type)\n            throw new RangeError(`There is no mark type ${json.type} in this schema`);\n        return type.create(json.attrs);\n    }\n    /**\n    Test whether two sets of marks are identical.\n    */\n    static sameSet(a, b) {\n        if (a == b)\n            return true;\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++)\n            if (!a[i].eq(b[i]))\n                return false;\n        return true;\n    }\n    /**\n    Create a properly sorted mark set from null, a single mark, or an\n    unsorted array of marks.\n    */\n    static setFrom(marks) {\n        if (!marks || Array.isArray(marks) && marks.length == 0)\n            return Mark.none;\n        if (marks instanceof Mark)\n            return [marks];\n        let copy = marks.slice();\n        copy.sort((a, b) => a.type.rank - b.type.rank);\n        return copy;\n    }\n}\n/**\nThe empty set of marks.\n*/\nMark.none = [];\n\n/**\nError type raised by [`Node.replace`](https://prosemirror.net/docs/ref/#model.Node.replace) when\ngiven an invalid replacement.\n*/\nclass ReplaceError extends Error {\n}\n/*\nReplaceError = function(this: any, message: string) {\n  let err = Error.call(this, message)\n  ;(err as any).__proto__ = ReplaceError.prototype\n  return err\n} as any\n\nReplaceError.prototype = Object.create(Error.prototype)\nReplaceError.prototype.constructor = ReplaceError\nReplaceError.prototype.name = \"ReplaceError\"\n*/\n/**\nA slice represents a piece cut out of a larger document. It\nstores not only a fragment, but also the depth up to which nodes on\nboth side are \u2018open\u2019 (cut through).\n*/\nclass Slice {\n    /**\n    Create a slice. When specifying a non-zero open depth, you must\n    make sure that there are nodes of at least that depth at the\n    appropriate side of the fragment\u2014i.e. if the fragment is an\n    empty paragraph node, `openStart` and `openEnd` can't be greater\n    than 1.\n    \n    It is not necessary for the content of open nodes to conform to\n    the schema's content constraints, though it should be a valid\n    start/end/middle for such a node, depending on which sides are\n    open.\n    */\n    constructor(\n    /**\n    The slice's content.\n    */\n    content, \n    /**\n    The open depth at the start of the fragment.\n    */\n    openStart, \n    /**\n    The open depth at the end.\n    */\n    openEnd) {\n        this.content = content;\n        this.openStart = openStart;\n        this.openEnd = openEnd;\n    }\n    /**\n    The size this slice would add when inserted into a document.\n    */\n    get size() {\n        return this.content.size - this.openStart - this.openEnd;\n    }\n    /**\n    @internal\n    */\n    insertAt(pos, fragment) {\n        let content = insertInto(this.content, pos + this.openStart, fragment);\n        return content && new Slice(content, this.openStart, this.openEnd);\n    }\n    /**\n    @internal\n    */\n    removeBetween(from, to) {\n        return new Slice(removeRange(this.content, from + this.openStart, to + this.openStart), this.openStart, this.openEnd);\n    }\n    /**\n    Tests whether this slice is equal to another slice.\n    */\n    eq(other) {\n        return this.content.eq(other.content) && this.openStart == other.openStart && this.openEnd == other.openEnd;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return this.content + \"(\" + this.openStart + \",\" + this.openEnd + \")\";\n    }\n    /**\n    Convert a slice to a JSON-serializable representation.\n    */\n    toJSON() {\n        if (!this.content.size)\n            return null;\n        let json = { content: this.content.toJSON() };\n        if (this.openStart > 0)\n            json.openStart = this.openStart;\n        if (this.openEnd > 0)\n            json.openEnd = this.openEnd;\n        return json;\n    }\n    /**\n    Deserialize a slice from its JSON representation.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            return Slice.empty;\n        let openStart = json.openStart || 0, openEnd = json.openEnd || 0;\n        if (typeof openStart != \"number\" || typeof openEnd != \"number\")\n            throw new RangeError(\"Invalid input for Slice.fromJSON\");\n        return new Slice(Fragment.fromJSON(schema, json.content), openStart, openEnd);\n    }\n    /**\n    Create a slice from a fragment by taking the maximum possible\n    open value on both side of the fragment.\n    */\n    static maxOpen(fragment, openIsolating = true) {\n        let openStart = 0, openEnd = 0;\n        for (let n = fragment.firstChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.firstChild)\n            openStart++;\n        for (let n = fragment.lastChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.lastChild)\n            openEnd++;\n        return new Slice(fragment, openStart, openEnd);\n    }\n}\n/**\nThe empty slice.\n*/\nSlice.empty = new Slice(Fragment.empty, 0, 0);\nfunction removeRange(content, from, to) {\n    let { index, offset } = content.findIndex(from), child = content.maybeChild(index);\n    let { index: indexTo, offset: offsetTo } = content.findIndex(to);\n    if (offset == from || child.isText) {\n        if (offsetTo != to && !content.child(indexTo).isText)\n            throw new RangeError(\"Removing non-flat range\");\n        return content.cut(0, from).append(content.cut(to));\n    }\n    if (index != indexTo)\n        throw new RangeError(\"Removing non-flat range\");\n    return content.replaceChild(index, child.copy(removeRange(child.content, from - offset - 1, to - offset - 1)));\n}\nfunction insertInto(content, dist, insert, parent) {\n    let { index, offset } = content.findIndex(dist), child = content.maybeChild(index);\n    if (offset == dist || child.isText) {\n        if (parent && !parent.canReplace(index, index, insert))\n            return null;\n        return content.cut(0, dist).append(insert).append(content.cut(dist));\n    }\n    let inner = insertInto(child.content, dist - offset - 1, insert);\n    return inner && content.replaceChild(index, child.copy(inner));\n}\nfunction replace($from, $to, slice) {\n    if (slice.openStart > $from.depth)\n        throw new ReplaceError(\"Inserted content deeper than insertion position\");\n    if ($from.depth - slice.openStart != $to.depth - slice.openEnd)\n        throw new ReplaceError(\"Inconsistent open depths\");\n    return replaceOuter($from, $to, slice, 0);\n}\nfunction replaceOuter($from, $to, slice, depth) {\n    let index = $from.index(depth), node = $from.node(depth);\n    if (index == $to.index(depth) && depth < $from.depth - slice.openStart) {\n        let inner = replaceOuter($from, $to, slice, depth + 1);\n        return node.copy(node.content.replaceChild(index, inner));\n    }\n    else if (!slice.content.size) {\n        return close(node, replaceTwoWay($from, $to, depth));\n    }\n    else if (!slice.openStart && !slice.openEnd && $from.depth == depth && $to.depth == depth) { // Simple, flat case\n        let parent = $from.parent, content = parent.content;\n        return close(parent, content.cut(0, $from.parentOffset).append(slice.content).append(content.cut($to.parentOffset)));\n    }\n    else {\n        let { start, end } = prepareSliceForReplace(slice, $from);\n        return close(node, replaceThreeWay($from, start, end, $to, depth));\n    }\n}\nfunction checkJoin(main, sub) {\n    if (!sub.type.compatibleContent(main.type))\n        throw new ReplaceError(\"Cannot join \" + sub.type.name + \" onto \" + main.type.name);\n}\nfunction joinable($before, $after, depth) {\n    let node = $before.node(depth);\n    checkJoin(node, $after.node(depth));\n    return node;\n}\nfunction addNode(child, target) {\n    let last = target.length - 1;\n    if (last >= 0 && child.isText && child.sameMarkup(target[last]))\n        target[last] = child.withText(target[last].text + child.text);\n    else\n        target.push(child);\n}\nfunction addRange($start, $end, depth, target) {\n    let node = ($end || $start).node(depth);\n    let startIndex = 0, endIndex = $end ? $end.index(depth) : node.childCount;\n    if ($start) {\n        startIndex = $start.index(depth);\n        if ($start.depth > depth) {\n            startIndex++;\n        }\n        else if ($start.textOffset) {\n            addNode($start.nodeAfter, target);\n            startIndex++;\n        }\n    }\n    for (let i = startIndex; i < endIndex; i++)\n        addNode(node.child(i), target);\n    if ($end && $end.depth == depth && $end.textOffset)\n        addNode($end.nodeBefore, target);\n}\nfunction close(node, content) {\n    node.type.checkContent(content);\n    return node.copy(content);\n}\nfunction replaceThreeWay($from, $start, $end, $to, depth) {\n    let openStart = $from.depth > depth && joinable($from, $start, depth + 1);\n    let openEnd = $to.depth > depth && joinable($end, $to, depth + 1);\n    let content = [];\n    addRange(null, $from, depth, content);\n    if (openStart && openEnd && $start.index(depth) == $end.index(depth)) {\n        checkJoin(openStart, openEnd);\n        addNode(close(openStart, replaceThreeWay($from, $start, $end, $to, depth + 1)), content);\n    }\n    else {\n        if (openStart)\n            addNode(close(openStart, replaceTwoWay($from, $start, depth + 1)), content);\n        addRange($start, $end, depth, content);\n        if (openEnd)\n            addNode(close(openEnd, replaceTwoWay($end, $to, depth + 1)), content);\n    }\n    addRange($to, null, depth, content);\n    return new Fragment(content);\n}\nfunction replaceTwoWay($from, $to, depth) {\n    let content = [];\n    addRange(null, $from, depth, content);\n    if ($from.depth > depth) {\n        let type = joinable($from, $to, depth + 1);\n        addNode(close(type, replaceTwoWay($from, $to, depth + 1)), content);\n    }\n    addRange($to, null, depth, content);\n    return new Fragment(content);\n}\nfunction prepareSliceForReplace(slice, $along) {\n    let extra = $along.depth - slice.openStart, parent = $along.node(extra);\n    let node = parent.copy(slice.content);\n    for (let i = extra - 1; i >= 0; i--)\n        node = $along.node(i).copy(Fragment.from(node));\n    return { start: node.resolveNoCache(slice.openStart + extra),\n        end: node.resolveNoCache(node.content.size - slice.openEnd - extra) };\n}\n\n/**\nYou can [_resolve_](https://prosemirror.net/docs/ref/#model.Node.resolve) a position to get more\ninformation about it. Objects of this class represent such a\nresolved position, providing various pieces of context\ninformation, and some helper methods.\n\nThroughout this interface, methods that take an optional `depth`\nparameter will interpret undefined as `this.depth` and negative\nnumbers as `this.depth + value`.\n*/\nclass ResolvedPos {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The position that was resolved.\n    */\n    pos, \n    /**\n    @internal\n    */\n    path, \n    /**\n    The offset this position has into its parent node.\n    */\n    parentOffset) {\n        this.pos = pos;\n        this.path = path;\n        this.parentOffset = parentOffset;\n        this.depth = path.length / 3 - 1;\n    }\n    /**\n    @internal\n    */\n    resolveDepth(val) {\n        if (val == null)\n            return this.depth;\n        if (val < 0)\n            return this.depth + val;\n        return val;\n    }\n    /**\n    The parent node that the position points into. Note that even if\n    a position points into a text node, that node is not considered\n    the parent\u2014text nodes are \u2018flat\u2019 in this model, and have no content.\n    */\n    get parent() { return this.node(this.depth); }\n    /**\n    The root node in which the position was resolved.\n    */\n    get doc() { return this.node(0); }\n    /**\n    The ancestor node at the given level. `p.node(p.depth)` is the\n    same as `p.parent`.\n    */\n    node(depth) { return this.path[this.resolveDepth(depth) * 3]; }\n    /**\n    The index into the ancestor at the given level. If this points\n    at the 3rd node in the 2nd paragraph on the top level, for\n    example, `p.index(0)` is 1 and `p.index(1)` is 2.\n    */\n    index(depth) { return this.path[this.resolveDepth(depth) * 3 + 1]; }\n    /**\n    The index pointing after this position into the ancestor at the\n    given level.\n    */\n    indexAfter(depth) {\n        depth = this.resolveDepth(depth);\n        return this.index(depth) + (depth == this.depth && !this.textOffset ? 0 : 1);\n    }\n    /**\n    The (absolute) position at the start of the node at the given\n    level.\n    */\n    start(depth) {\n        depth = this.resolveDepth(depth);\n        return depth == 0 ? 0 : this.path[depth * 3 - 1] + 1;\n    }\n    /**\n    The (absolute) position at the end of the node at the given\n    level.\n    */\n    end(depth) {\n        depth = this.resolveDepth(depth);\n        return this.start(depth) + this.node(depth).content.size;\n    }\n    /**\n    The (absolute) position directly before the wrapping node at the\n    given level, or, when `depth` is `this.depth + 1`, the original\n    position.\n    */\n    before(depth) {\n        depth = this.resolveDepth(depth);\n        if (!depth)\n            throw new RangeError(\"There is no position before the top-level node\");\n        return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1];\n    }\n    /**\n    The (absolute) position directly after the wrapping node at the\n    given level, or the original position when `depth` is `this.depth + 1`.\n    */\n    after(depth) {\n        depth = this.resolveDepth(depth);\n        if (!depth)\n            throw new RangeError(\"There is no position after the top-level node\");\n        return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1] + this.path[depth * 3].nodeSize;\n    }\n    /**\n    When this position points into a text node, this returns the\n    distance between the position and the start of the text node.\n    Will be zero for positions that point between nodes.\n    */\n    get textOffset() { return this.pos - this.path[this.path.length - 1]; }\n    /**\n    Get the node directly after the position, if any. If the position\n    points into a text node, only the part of that node after the\n    position is returned.\n    */\n    get nodeAfter() {\n        let parent = this.parent, index = this.index(this.depth);\n        if (index == parent.childCount)\n            return null;\n        let dOff = this.pos - this.path[this.path.length - 1], child = parent.child(index);\n        return dOff ? parent.child(index).cut(dOff) : child;\n    }\n    /**\n    Get the node directly before the position, if any. If the\n    position points into a text node, only the part of that node\n    before the position is returned.\n    */\n    get nodeBefore() {\n        let index = this.index(this.depth);\n        let dOff = this.pos - this.path[this.path.length - 1];\n        if (dOff)\n            return this.parent.child(index).cut(0, dOff);\n        return index == 0 ? null : this.parent.child(index - 1);\n    }\n    /**\n    Get the position at the given index in the parent node at the\n    given depth (which defaults to `this.depth`).\n    */\n    posAtIndex(index, depth) {\n        depth = this.resolveDepth(depth);\n        let node = this.path[depth * 3], pos = depth == 0 ? 0 : this.path[depth * 3 - 1] + 1;\n        for (let i = 0; i < index; i++)\n            pos += node.child(i).nodeSize;\n        return pos;\n    }\n    /**\n    Get the marks at this position, factoring in the surrounding\n    marks' [`inclusive`](https://prosemirror.net/docs/ref/#model.MarkSpec.inclusive) property. If the\n    position is at the start of a non-empty node, the marks of the\n    node after it (if any) are returned.\n    */\n    marks() {\n        let parent = this.parent, index = this.index();\n        // In an empty parent, return the empty array\n        if (parent.content.size == 0)\n            return Mark.none;\n        // When inside a text node, just return the text node's marks\n        if (this.textOffset)\n            return parent.child(index).marks;\n        let main = parent.maybeChild(index - 1), other = parent.maybeChild(index);\n        // If the `after` flag is true of there is no node before, make\n        // the node after this position the main reference.\n        if (!main) {\n            let tmp = main;\n            main = other;\n            other = tmp;\n        }\n        // Use all marks in the main node, except those that have\n        // `inclusive` set to false and are not present in the other node.\n        let marks = main.marks;\n        for (var i = 0; i < marks.length; i++)\n            if (marks[i].type.spec.inclusive === false && (!other || !marks[i].isInSet(other.marks)))\n                marks = marks[i--].removeFromSet(marks);\n        return marks;\n    }\n    /**\n    Get the marks after the current position, if any, except those\n    that are non-inclusive and not present at position `$end`. This\n    is mostly useful for getting the set of marks to preserve after a\n    deletion. Will return `null` if this position is at the end of\n    its parent node or its parent node isn't a textblock (in which\n    case no marks should be preserved).\n    */\n    marksAcross($end) {\n        let after = this.parent.maybeChild(this.index());\n        if (!after || !after.isInline)\n            return null;\n        let marks = after.marks, next = $end.parent.maybeChild($end.index());\n        for (var i = 0; i < marks.length; i++)\n            if (marks[i].type.spec.inclusive === false && (!next || !marks[i].isInSet(next.marks)))\n                marks = marks[i--].removeFromSet(marks);\n        return marks;\n    }\n    /**\n    The depth up to which this position and the given (non-resolved)\n    position share the same parent nodes.\n    */\n    sharedDepth(pos) {\n        for (let depth = this.depth; depth > 0; depth--)\n            if (this.start(depth) <= pos && this.end(depth) >= pos)\n                return depth;\n        return 0;\n    }\n    /**\n    Returns a range based on the place where this position and the\n    given position diverge around block content. If both point into\n    the same textblock, for example, a range around that textblock\n    will be returned. If they point into different blocks, the range\n    around those blocks in their shared ancestor is returned. You can\n    pass in an optional predicate that will be called with a parent\n    node to see if a range into that parent is acceptable.\n    */\n    blockRange(other = this, pred) {\n        if (other.pos < this.pos)\n            return other.blockRange(this);\n        for (let d = this.depth - (this.parent.inlineContent || this.pos == other.pos ? 1 : 0); d >= 0; d--)\n            if (other.pos <= this.end(d) && (!pred || pred(this.node(d))))\n                return new NodeRange(this, other, d);\n        return null;\n    }\n    /**\n    Query whether the given position shares the same parent node.\n    */\n    sameParent(other) {\n        return this.pos - this.parentOffset == other.pos - other.parentOffset;\n    }\n    /**\n    Return the greater of this and the given position.\n    */\n    max(other) {\n        return other.pos > this.pos ? other : this;\n    }\n    /**\n    Return the smaller of this and the given position.\n    */\n    min(other) {\n        return other.pos < this.pos ? other : this;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let str = \"\";\n        for (let i = 1; i <= this.depth; i++)\n            str += (str ? \"/\" : \"\") + this.node(i).type.name + \"_\" + this.index(i - 1);\n        return str + \":\" + this.parentOffset;\n    }\n    /**\n    @internal\n    */\n    static resolve(doc, pos) {\n        if (!(pos >= 0 && pos <= doc.content.size))\n            throw new RangeError(\"Position \" + pos + \" out of range\");\n        let path = [];\n        let start = 0, parentOffset = pos;\n        for (let node = doc;;) {\n            let { index, offset } = node.content.findIndex(parentOffset);\n            let rem = parentOffset - offset;\n            path.push(node, index, start + offset);\n            if (!rem)\n                break;\n            node = node.child(index);\n            if (node.isText)\n                break;\n            parentOffset = rem - 1;\n            start += offset + 1;\n        }\n        return new ResolvedPos(pos, path, parentOffset);\n    }\n    /**\n    @internal\n    */\n    static resolveCached(doc, pos) {\n        for (let i = 0; i < resolveCache.length; i++) {\n            let cached = resolveCache[i];\n            if (cached.pos == pos && cached.doc == doc)\n                return cached;\n        }\n        let result = resolveCache[resolveCachePos] = ResolvedPos.resolve(doc, pos);\n        resolveCachePos = (resolveCachePos + 1) % resolveCacheSize;\n        return result;\n    }\n}\nlet resolveCache = [], resolveCachePos = 0, resolveCacheSize = 12;\n/**\nRepresents a flat range of content, i.e. one that starts and\nends in the same node.\n*/\nclass NodeRange {\n    /**\n    Construct a node range. `$from` and `$to` should point into the\n    same node until at least the given `depth`, since a node range\n    denotes an adjacent set of nodes in a single parent node.\n    */\n    constructor(\n    /**\n    A resolved position along the start of the content. May have a\n    `depth` greater than this object's `depth` property, since\n    these are the positions that were used to compute the range,\n    not re-resolved positions directly at its boundaries.\n    */\n    $from, \n    /**\n    A position along the end of the content. See\n    caveat for [`$from`](https://prosemirror.net/docs/ref/#model.NodeRange.$from).\n    */\n    $to, \n    /**\n    The depth of the node that this range points into.\n    */\n    depth) {\n        this.$from = $from;\n        this.$to = $to;\n        this.depth = depth;\n    }\n    /**\n    The position at the start of the range.\n    */\n    get start() { return this.$from.before(this.depth + 1); }\n    /**\n    The position at the end of the range.\n    */\n    get end() { return this.$to.after(this.depth + 1); }\n    /**\n    The parent node that the range points into.\n    */\n    get parent() { return this.$from.node(this.depth); }\n    /**\n    The start index of the range in the parent node.\n    */\n    get startIndex() { return this.$from.index(this.depth); }\n    /**\n    The end index of the range in the parent node.\n    */\n    get endIndex() { return this.$to.indexAfter(this.depth); }\n}\n\nconst emptyAttrs = Object.create(null);\n/**\nThis class represents a node in the tree that makes up a\nProseMirror document. So a document is an instance of `Node`, with\nchildren that are also instances of `Node`.\n\nNodes are persistent data structures. Instead of changing them, you\ncreate new ones with the content you want. Old ones keep pointing\nat the old document shape. This is made cheaper by sharing\nstructure between the old and new data as much as possible, which a\ntree shape like this (without back pointers) makes easy.\n\n**Do not** directly mutate the properties of a `Node` object. See\n[the guide](/docs/guide/#doc) for more information.\n*/\nclass Node {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The type of node that this is.\n    */\n    type, \n    /**\n    An object mapping attribute names to values. The kind of\n    attributes allowed and required are\n    [determined](https://prosemirror.net/docs/ref/#model.NodeSpec.attrs) by the node type.\n    */\n    attrs, \n    // A fragment holding the node's children.\n    content, \n    /**\n    The marks (things like whether it is emphasized or part of a\n    link) applied to this node.\n    */\n    marks = Mark.none) {\n        this.type = type;\n        this.attrs = attrs;\n        this.marks = marks;\n        this.content = content || Fragment.empty;\n    }\n    /**\n    The size of this node, as defined by the integer-based [indexing\n    scheme](/docs/guide/#doc.indexing). For text nodes, this is the\n    amount of characters. For other leaf nodes, it is one. For\n    non-leaf nodes, it is the size of the content plus two (the\n    start and end token).\n    */\n    get nodeSize() { return this.isLeaf ? 1 : 2 + this.content.size; }\n    /**\n    The number of children that the node has.\n    */\n    get childCount() { return this.content.childCount; }\n    /**\n    Get the child node at the given index. Raises an error when the\n    index is out of range.\n    */\n    child(index) { return this.content.child(index); }\n    /**\n    Get the child node at the given index, if it exists.\n    */\n    maybeChild(index) { return this.content.maybeChild(index); }\n    /**\n    Call `f` for every child node, passing the node, its offset\n    into this parent node, and its index.\n    */\n    forEach(f) { this.content.forEach(f); }\n    /**\n    Invoke a callback for all descendant nodes recursively between\n    the given two positions that are relative to start of this\n    node's content. The callback is invoked with the node, its\n    parent-relative position, its parent node, and its child index.\n    When the callback returns false for a given node, that node's\n    children will not be recursed over. The last parameter can be\n    used to specify a starting position to count from.\n    */\n    nodesBetween(from, to, f, startPos = 0) {\n        this.content.nodesBetween(from, to, f, startPos, this);\n    }\n    /**\n    Call the given callback for every descendant node. Doesn't\n    descend into a node when the callback returns `false`.\n    */\n    descendants(f) {\n        this.nodesBetween(0, this.content.size, f);\n    }\n    /**\n    Concatenates all the text nodes found in this fragment and its\n    children.\n    */\n    get textContent() {\n        return (this.isLeaf && this.type.spec.leafText)\n            ? this.type.spec.leafText(this)\n            : this.textBetween(0, this.content.size, \"\");\n    }\n    /**\n    Get all text between positions `from` and `to`. When\n    `blockSeparator` is given, it will be inserted to separate text\n    from different block nodes. If `leafText` is given, it'll be\n    inserted for every non-text leaf node encountered, otherwise\n    [`leafText`](https://prosemirror.net/docs/ref/#model.NodeSpec^leafText) will be used.\n    */\n    textBetween(from, to, blockSeparator, leafText) {\n        return this.content.textBetween(from, to, blockSeparator, leafText);\n    }\n    /**\n    Returns this node's first child, or `null` if there are no\n    children.\n    */\n    get firstChild() { return this.content.firstChild; }\n    /**\n    Returns this node's last child, or `null` if there are no\n    children.\n    */\n    get lastChild() { return this.content.lastChild; }\n    /**\n    Test whether two nodes represent the same piece of document.\n    */\n    eq(other) {\n        return this == other || (this.sameMarkup(other) && this.content.eq(other.content));\n    }\n    /**\n    Compare the markup (type, attributes, and marks) of this node to\n    those of another. Returns `true` if both have the same markup.\n    */\n    sameMarkup(other) {\n        return this.hasMarkup(other.type, other.attrs, other.marks);\n    }\n    /**\n    Check whether this node's markup correspond to the given type,\n    attributes, and marks.\n    */\n    hasMarkup(type, attrs, marks) {\n        return this.type == type &&\n            compareDeep(this.attrs, attrs || type.defaultAttrs || emptyAttrs) &&\n            Mark.sameSet(this.marks, marks || Mark.none);\n    }\n    /**\n    Create a new node with the same markup as this node, containing\n    the given content (or empty, if no content is given).\n    */\n    copy(content = null) {\n        if (content == this.content)\n            return this;\n        return new Node(this.type, this.attrs, content, this.marks);\n    }\n    /**\n    Create a copy of this node, with the given set of marks instead\n    of the node's own marks.\n    */\n    mark(marks) {\n        return marks == this.marks ? this : new Node(this.type, this.attrs, this.content, marks);\n    }\n    /**\n    Create a copy of this node with only the content between the\n    given positions. If `to` is not given, it defaults to the end of\n    the node.\n    */\n    cut(from, to = this.content.size) {\n        if (from == 0 && to == this.content.size)\n            return this;\n        return this.copy(this.content.cut(from, to));\n    }\n    /**\n    Cut out the part of the document between the given positions, and\n    return it as a `Slice` object.\n    */\n    slice(from, to = this.content.size, includeParents = false) {\n        if (from == to)\n            return Slice.empty;\n        let $from = this.resolve(from), $to = this.resolve(to);\n        let depth = includeParents ? 0 : $from.sharedDepth(to);\n        let start = $from.start(depth), node = $from.node(depth);\n        let content = node.content.cut($from.pos - start, $to.pos - start);\n        return new Slice(content, $from.depth - depth, $to.depth - depth);\n    }\n    /**\n    Replace the part of the document between the given positions with\n    the given slice. The slice must 'fit', meaning its open sides\n    must be able to connect to the surrounding content, and its\n    content nodes must be valid children for the node they are placed\n    into. If any of this is violated, an error of type\n    [`ReplaceError`](https://prosemirror.net/docs/ref/#model.ReplaceError) is thrown.\n    */\n    replace(from, to, slice) {\n        return replace(this.resolve(from), this.resolve(to), slice);\n    }\n    /**\n    Find the node directly after the given position.\n    */\n    nodeAt(pos) {\n        for (let node = this;;) {\n            let { index, offset } = node.content.findIndex(pos);\n            node = node.maybeChild(index);\n            if (!node)\n                return null;\n            if (offset == pos || node.isText)\n                return node;\n            pos -= offset + 1;\n        }\n    }\n    /**\n    Find the (direct) child node after the given offset, if any,\n    and return it along with its index and offset relative to this\n    node.\n    */\n    childAfter(pos) {\n        let { index, offset } = this.content.findIndex(pos);\n        return { node: this.content.maybeChild(index), index, offset };\n    }\n    /**\n    Find the (direct) child node before the given offset, if any,\n    and return it along with its index and offset relative to this\n    node.\n    */\n    childBefore(pos) {\n        if (pos == 0)\n            return { node: null, index: 0, offset: 0 };\n        let { index, offset } = this.content.findIndex(pos);\n        if (offset < pos)\n            return { node: this.content.child(index), index, offset };\n        let node = this.content.child(index - 1);\n        return { node, index: index - 1, offset: offset - node.nodeSize };\n    }\n    /**\n    Resolve the given position in the document, returning an\n    [object](https://prosemirror.net/docs/ref/#model.ResolvedPos) with information about its context.\n    */\n    resolve(pos) { return ResolvedPos.resolveCached(this, pos); }\n    /**\n    @internal\n    */\n    resolveNoCache(pos) { return ResolvedPos.resolve(this, pos); }\n    /**\n    Test whether a given mark or mark type occurs in this document\n    between the two given positions.\n    */\n    rangeHasMark(from, to, type) {\n        let found = false;\n        if (to > from)\n            this.nodesBetween(from, to, node => {\n                if (type.isInSet(node.marks))\n                    found = true;\n                return !found;\n            });\n        return found;\n    }\n    /**\n    True when this is a block (non-inline node)\n    */\n    get isBlock() { return this.type.isBlock; }\n    /**\n    True when this is a textblock node, a block node with inline\n    content.\n    */\n    get isTextblock() { return this.type.isTextblock; }\n    /**\n    True when this node allows inline content.\n    */\n    get inlineContent() { return this.type.inlineContent; }\n    /**\n    True when this is an inline node (a text node or a node that can\n    appear among text).\n    */\n    get isInline() { return this.type.isInline; }\n    /**\n    True when this is a text node.\n    */\n    get isText() { return this.type.isText; }\n    /**\n    True when this is a leaf node.\n    */\n    get isLeaf() { return this.type.isLeaf; }\n    /**\n    True when this is an atom, i.e. when it does not have directly\n    editable content. This is usually the same as `isLeaf`, but can\n    be configured with the [`atom` property](https://prosemirror.net/docs/ref/#model.NodeSpec.atom)\n    on a node's spec (typically used when the node is displayed as\n    an uneditable [node view](https://prosemirror.net/docs/ref/#view.NodeView)).\n    */\n    get isAtom() { return this.type.isAtom; }\n    /**\n    Return a string representation of this node for debugging\n    purposes.\n    */\n    toString() {\n        if (this.type.spec.toDebugString)\n            return this.type.spec.toDebugString(this);\n        let name = this.type.name;\n        if (this.content.size)\n            name += \"(\" + this.content.toStringInner() + \")\";\n        return wrapMarks(this.marks, name);\n    }\n    /**\n    Get the content match in this node at the given index.\n    */\n    contentMatchAt(index) {\n        let match = this.type.contentMatch.matchFragment(this.content, 0, index);\n        if (!match)\n            throw new Error(\"Called contentMatchAt on a node with invalid content\");\n        return match;\n    }\n    /**\n    Test whether replacing the range between `from` and `to` (by\n    child index) with the given replacement fragment (which defaults\n    to the empty fragment) would leave the node's content valid. You\n    can optionally pass `start` and `end` indices into the\n    replacement fragment.\n    */\n    canReplace(from, to, replacement = Fragment.empty, start = 0, end = replacement.childCount) {\n        let one = this.contentMatchAt(from).matchFragment(replacement, start, end);\n        let two = one && one.matchFragment(this.content, to);\n        if (!two || !two.validEnd)\n            return false;\n        for (let i = start; i < end; i++)\n            if (!this.type.allowsMarks(replacement.child(i).marks))\n                return false;\n        return true;\n    }\n    /**\n    Test whether replacing the range `from` to `to` (by index) with\n    a node of the given type would leave the node's content valid.\n    */\n    canReplaceWith(from, to, type, marks) {\n        if (marks && !this.type.allowsMarks(marks))\n            return false;\n        let start = this.contentMatchAt(from).matchType(type);\n        let end = start && start.matchFragment(this.content, to);\n        return end ? end.validEnd : false;\n    }\n    /**\n    Test whether the given node's content could be appended to this\n    node. If that node is empty, this will only return true if there\n    is at least one node type that can appear in both nodes (to avoid\n    merging completely incompatible nodes).\n    */\n    canAppend(other) {\n        if (other.content.size)\n            return this.canReplace(this.childCount, this.childCount, other.content);\n        else\n            return this.type.compatibleContent(other.type);\n    }\n    /**\n    Check whether this node and its descendants conform to the\n    schema, and raise error when they do not.\n    */\n    check() {\n        this.type.checkContent(this.content);\n        let copy = Mark.none;\n        for (let i = 0; i < this.marks.length; i++)\n            copy = this.marks[i].addToSet(copy);\n        if (!Mark.sameSet(copy, this.marks))\n            throw new RangeError(`Invalid collection of marks for node ${this.type.name}: ${this.marks.map(m => m.type.name)}`);\n        this.content.forEach(node => node.check());\n    }\n    /**\n    Return a JSON-serializeable representation of this node.\n    */\n    toJSON() {\n        let obj = { type: this.type.name };\n        for (let _ in this.attrs) {\n            obj.attrs = this.attrs;\n            break;\n        }\n        if (this.content.size)\n            obj.content = this.content.toJSON();\n        if (this.marks.length)\n            obj.marks = this.marks.map(n => n.toJSON());\n        return obj;\n    }\n    /**\n    Deserialize a node from its JSON representation.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            throw new RangeError(\"Invalid input for Node.fromJSON\");\n        let marks = null;\n        if (json.marks) {\n            if (!Array.isArray(json.marks))\n                throw new RangeError(\"Invalid mark data for Node.fromJSON\");\n            marks = json.marks.map(schema.markFromJSON);\n        }\n        if (json.type == \"text\") {\n            if (typeof json.text != \"string\")\n                throw new RangeError(\"Invalid text node in JSON\");\n            return schema.text(json.text, marks);\n        }\n        let content = Fragment.fromJSON(schema, json.content);\n        return schema.nodeType(json.type).create(json.attrs, content, marks);\n    }\n}\nNode.prototype.text = undefined;\nclass TextNode extends Node {\n    /**\n    @internal\n    */\n    constructor(type, attrs, content, marks) {\n        super(type, attrs, null, marks);\n        if (!content)\n            throw new RangeError(\"Empty text nodes are not allowed\");\n        this.text = content;\n    }\n    toString() {\n        if (this.type.spec.toDebugString)\n            return this.type.spec.toDebugString(this);\n        return wrapMarks(this.marks, JSON.stringify(this.text));\n    }\n    get textContent() { return this.text; }\n    textBetween(from, to) { return this.text.slice(from, to); }\n    get nodeSize() { return this.text.length; }\n    mark(marks) {\n        return marks == this.marks ? this : new TextNode(this.type, this.attrs, this.text, marks);\n    }\n    withText(text) {\n        if (text == this.text)\n            return this;\n        return new TextNode(this.type, this.attrs, text, this.marks);\n    }\n    cut(from = 0, to = this.text.length) {\n        if (from == 0 && to == this.text.length)\n            return this;\n        return this.withText(this.text.slice(from, to));\n    }\n    eq(other) {\n        return this.sameMarkup(other) && this.text == other.text;\n    }\n    toJSON() {\n        let base = super.toJSON();\n        base.text = this.text;\n        return base;\n    }\n}\nfunction wrapMarks(marks, str) {\n    for (let i = marks.length - 1; i >= 0; i--)\n        str = marks[i].type.name + \"(\" + str + \")\";\n    return str;\n}\n\n/**\nInstances of this class represent a match state of a node type's\n[content expression](https://prosemirror.net/docs/ref/#model.NodeSpec.content), and can be used to\nfind out whether further content matches here, and whether a given\nposition is a valid end of the node.\n*/\nclass ContentMatch {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    True when this match state represents a valid end of the node.\n    */\n    validEnd) {\n        this.validEnd = validEnd;\n        /**\n        @internal\n        */\n        this.next = [];\n        /**\n        @internal\n        */\n        this.wrapCache = [];\n    }\n    /**\n    @internal\n    */\n    static parse(string, nodeTypes) {\n        let stream = new TokenStream(string, nodeTypes);\n        if (stream.next == null)\n            return ContentMatch.empty;\n        let expr = parseExpr(stream);\n        if (stream.next)\n            stream.err(\"Unexpected trailing text\");\n        let match = dfa(nfa(expr));\n        checkForDeadEnds(match, stream);\n        return match;\n    }\n    /**\n    Match a node type, returning a match after that node if\n    successful.\n    */\n    matchType(type) {\n        for (let i = 0; i < this.next.length; i++)\n            if (this.next[i].type == type)\n                return this.next[i].next;\n        return null;\n    }\n    /**\n    Try to match a fragment. Returns the resulting match when\n    successful.\n    */\n    matchFragment(frag, start = 0, end = frag.childCount) {\n        let cur = this;\n        for (let i = start; cur && i < end; i++)\n            cur = cur.matchType(frag.child(i).type);\n        return cur;\n    }\n    /**\n    @internal\n    */\n    get inlineContent() {\n        return this.next.length != 0 && this.next[0].type.isInline;\n    }\n    /**\n    Get the first matching node type at this match position that can\n    be generated.\n    */\n    get defaultType() {\n        for (let i = 0; i < this.next.length; i++) {\n            let { type } = this.next[i];\n            if (!(type.isText || type.hasRequiredAttrs()))\n                return type;\n        }\n        return null;\n    }\n    /**\n    @internal\n    */\n    compatible(other) {\n        for (let i = 0; i < this.next.length; i++)\n            for (let j = 0; j < other.next.length; j++)\n                if (this.next[i].type == other.next[j].type)\n                    return true;\n        return false;\n    }\n    /**\n    Try to match the given fragment, and if that fails, see if it can\n    be made to match by inserting nodes in front of it. When\n    successful, return a fragment of inserted nodes (which may be\n    empty if nothing had to be inserted). When `toEnd` is true, only\n    return a fragment if the resulting match goes to the end of the\n    content expression.\n    */\n    fillBefore(after, toEnd = false, startIndex = 0) {\n        let seen = [this];\n        function search(match, types) {\n            let finished = match.matchFragment(after, startIndex);\n            if (finished && (!toEnd || finished.validEnd))\n                return Fragment.from(types.map(tp => tp.createAndFill()));\n            for (let i = 0; i < match.next.length; i++) {\n                let { type, next } = match.next[i];\n                if (!(type.isText || type.hasRequiredAttrs()) && seen.indexOf(next) == -1) {\n                    seen.push(next);\n                    let found = search(next, types.concat(type));\n                    if (found)\n                        return found;\n                }\n            }\n            return null;\n        }\n        return search(this, []);\n    }\n    /**\n    Find a set of wrapping node types that would allow a node of the\n    given type to appear at this position. The result may be empty\n    (when it fits directly) and will be null when no such wrapping\n    exists.\n    */\n    findWrapping(target) {\n        for (let i = 0; i < this.wrapCache.length; i += 2)\n            if (this.wrapCache[i] == target)\n                return this.wrapCache[i + 1];\n        let computed = this.computeWrapping(target);\n        this.wrapCache.push(target, computed);\n        return computed;\n    }\n    /**\n    @internal\n    */\n    computeWrapping(target) {\n        let seen = Object.create(null), active = [{ match: this, type: null, via: null }];\n        while (active.length) {\n            let current = active.shift(), match = current.match;\n            if (match.matchType(target)) {\n                let result = [];\n                for (let obj = current; obj.type; obj = obj.via)\n                    result.push(obj.type);\n                return result.reverse();\n            }\n            for (let i = 0; i < match.next.length; i++) {\n                let { type, next } = match.next[i];\n                if (!type.isLeaf && !type.hasRequiredAttrs() && !(type.name in seen) && (!current.type || next.validEnd)) {\n                    active.push({ match: type.contentMatch, type, via: current });\n                    seen[type.name] = true;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n    The number of outgoing edges this node has in the finite\n    automaton that describes the content expression.\n    */\n    get edgeCount() {\n        return this.next.length;\n    }\n    /**\n    Get the _n_\u200Bth outgoing edge from this node in the finite\n    automaton that describes the content expression.\n    */\n    edge(n) {\n        if (n >= this.next.length)\n            throw new RangeError(`There's no ${n}th edge in this content match`);\n        return this.next[n];\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let seen = [];\n        function scan(m) {\n            seen.push(m);\n            for (let i = 0; i < m.next.length; i++)\n                if (seen.indexOf(m.next[i].next) == -1)\n                    scan(m.next[i].next);\n        }\n        scan(this);\n        return seen.map((m, i) => {\n            let out = i + (m.validEnd ? \"*\" : \" \") + \" \";\n            for (let i = 0; i < m.next.length; i++)\n                out += (i ? \", \" : \"\") + m.next[i].type.name + \"->\" + seen.indexOf(m.next[i].next);\n            return out;\n        }).join(\"\\n\");\n    }\n}\n/**\n@internal\n*/\nContentMatch.empty = new ContentMatch(true);\nclass TokenStream {\n    constructor(string, nodeTypes) {\n        this.string = string;\n        this.nodeTypes = nodeTypes;\n        this.inline = null;\n        this.pos = 0;\n        this.tokens = string.split(/\\s*(?=\\b|\\W|$)/);\n        if (this.tokens[this.tokens.length - 1] == \"\")\n            this.tokens.pop();\n        if (this.tokens[0] == \"\")\n            this.tokens.shift();\n    }\n    get next() { return this.tokens[this.pos]; }\n    eat(tok) { return this.next == tok && (this.pos++ || true); }\n    err(str) { throw new SyntaxError(str + \" (in content expression '\" + this.string + \"')\"); }\n}\nfunction parseExpr(stream) {\n    let exprs = [];\n    do {\n        exprs.push(parseExprSeq(stream));\n    } while (stream.eat(\"|\"));\n    return exprs.length == 1 ? exprs[0] : { type: \"choice\", exprs };\n}\nfunction parseExprSeq(stream) {\n    let exprs = [];\n    do {\n        exprs.push(parseExprSubscript(stream));\n    } while (stream.next && stream.next != \")\" && stream.next != \"|\");\n    return exprs.length == 1 ? exprs[0] : { type: \"seq\", exprs };\n}\nfunction parseExprSubscript(stream) {\n    let expr = parseExprAtom(stream);\n    for (;;) {\n        if (stream.eat(\"+\"))\n            expr = { type: \"plus\", expr };\n        else if (stream.eat(\"*\"))\n            expr = { type: \"star\", expr };\n        else if (stream.eat(\"?\"))\n            expr = { type: \"opt\", expr };\n        else if (stream.eat(\"{\"))\n            expr = parseExprRange(stream, expr);\n        else\n            break;\n    }\n    return expr;\n}\nfunction parseNum(stream) {\n    if (/\\D/.test(stream.next))\n        stream.err(\"Expected number, got '\" + stream.next + \"'\");\n    let result = Number(stream.next);\n    stream.pos++;\n    return result;\n}\nfunction parseExprRange(stream, expr) {\n    let min = parseNum(stream), max = min;\n    if (stream.eat(\",\")) {\n        if (stream.next != \"}\")\n            max = parseNum(stream);\n        else\n            max = -1;\n    }\n    if (!stream.eat(\"}\"))\n        stream.err(\"Unclosed braced range\");\n    return { type: \"range\", min, max, expr };\n}\nfunction resolveName(stream, name) {\n    let types = stream.nodeTypes, type = types[name];\n    if (type)\n        return [type];\n    let result = [];\n    for (let typeName in types) {\n        let type = types[typeName];\n        if (type.groups.indexOf(name) > -1)\n            result.push(type);\n    }\n    if (result.length == 0)\n        stream.err(\"No node type or group '\" + name + \"' found\");\n    return result;\n}\nfunction parseExprAtom(stream) {\n    if (stream.eat(\"(\")) {\n        let expr = parseExpr(stream);\n        if (!stream.eat(\")\"))\n            stream.err(\"Missing closing paren\");\n        return expr;\n    }\n    else if (!/\\W/.test(stream.next)) {\n        let exprs = resolveName(stream, stream.next).map(type => {\n            if (stream.inline == null)\n                stream.inline = type.isInline;\n            else if (stream.inline != type.isInline)\n                stream.err(\"Mixing inline and block content\");\n            return { type: \"name\", value: type };\n        });\n        stream.pos++;\n        return exprs.length == 1 ? exprs[0] : { type: \"choice\", exprs };\n    }\n    else {\n        stream.err(\"Unexpected token '\" + stream.next + \"'\");\n    }\n}\n/**\nConstruct an NFA from an expression as returned by the parser. The\nNFA is represented as an array of states, which are themselves\narrays of edges, which are `{term, to}` objects. The first state is\nthe entry state and the last node is the success state.\n\nNote that unlike typical NFAs, the edge ordering in this one is\nsignificant, in that it is used to contruct filler content when\nnecessary.\n*/\nfunction nfa(expr) {\n    let nfa = [[]];\n    connect(compile(expr, 0), node());\n    return nfa;\n    function node() { return nfa.push([]) - 1; }\n    function edge(from, to, term) {\n        let edge = { term, to };\n        nfa[from].push(edge);\n        return edge;\n    }\n    function connect(edges, to) {\n        edges.forEach(edge => edge.to = to);\n    }\n    function compile(expr, from) {\n        if (expr.type == \"choice\") {\n            return expr.exprs.reduce((out, expr) => out.concat(compile(expr, from)), []);\n        }\n        else if (expr.type == \"seq\") {\n            for (let i = 0;; i++) {\n                let next = compile(expr.exprs[i], from);\n                if (i == expr.exprs.length - 1)\n                    return next;\n                connect(next, from = node());\n            }\n        }\n        else if (expr.type == \"star\") {\n            let loop = node();\n            edge(from, loop);\n            connect(compile(expr.expr, loop), loop);\n            return [edge(loop)];\n        }\n        else if (expr.type == \"plus\") {\n            let loop = node();\n            connect(compile(expr.expr, from), loop);\n            connect(compile(expr.expr, loop), loop);\n            return [edge(loop)];\n        }\n        else if (expr.type == \"opt\") {\n            return [edge(from)].concat(compile(expr.expr, from));\n        }\n        else if (expr.type == \"range\") {\n            let cur = from;\n            for (let i = 0; i < expr.min; i++) {\n                let next = node();\n                connect(compile(expr.expr, cur), next);\n                cur = next;\n            }\n            if (expr.max == -1) {\n                connect(compile(expr.expr, cur), cur);\n            }\n            else {\n                for (let i = expr.min; i < expr.max; i++) {\n                    let next = node();\n                    edge(cur, next);\n                    connect(compile(expr.expr, cur), next);\n                    cur = next;\n                }\n            }\n            return [edge(cur)];\n        }\n        else if (expr.type == \"name\") {\n            return [edge(from, undefined, expr.value)];\n        }\n        else {\n            throw new Error(\"Unknown expr type\");\n        }\n    }\n}\nfunction cmp(a, b) { return b - a; }\n// Get the set of nodes reachable by null edges from `node`. Omit\n// nodes with only a single null-out-edge, since they may lead to\n// needless duplicated nodes.\nfunction nullFrom(nfa, node) {\n    let result = [];\n    scan(node);\n    return result.sort(cmp);\n    function scan(node) {\n        let edges = nfa[node];\n        if (edges.length == 1 && !edges[0].term)\n            return scan(edges[0].to);\n        result.push(node);\n        for (let i = 0; i < edges.length; i++) {\n            let { term, to } = edges[i];\n            if (!term && result.indexOf(to) == -1)\n                scan(to);\n        }\n    }\n}\n// Compiles an NFA as produced by `nfa` into a DFA, modeled as a set\n// of state objects (`ContentMatch` instances) with transitions\n// between them.\nfunction dfa(nfa) {\n    let labeled = Object.create(null);\n    return explore(nullFrom(nfa, 0));\n    function explore(states) {\n        let out = [];\n        states.forEach(node => {\n            nfa[node].forEach(({ term, to }) => {\n                if (!term)\n                    return;\n                let set;\n                for (let i = 0; i < out.length; i++)\n                    if (out[i][0] == term)\n                        set = out[i][1];\n                nullFrom(nfa, to).forEach(node => {\n                    if (!set)\n                        out.push([term, set = []]);\n                    if (set.indexOf(node) == -1)\n                        set.push(node);\n                });\n            });\n        });\n        let state = labeled[states.join(\",\")] = new ContentMatch(states.indexOf(nfa.length - 1) > -1);\n        for (let i = 0; i < out.length; i++) {\n            let states = out[i][1].sort(cmp);\n            state.next.push({ type: out[i][0], next: labeled[states.join(\",\")] || explore(states) });\n        }\n        return state;\n    }\n}\nfunction checkForDeadEnds(match, stream) {\n    for (let i = 0, work = [match]; i < work.length; i++) {\n        let state = work[i], dead = !state.validEnd, nodes = [];\n        for (let j = 0; j < state.next.length; j++) {\n            let { type, next } = state.next[j];\n            nodes.push(type.name);\n            if (dead && !(type.isText || type.hasRequiredAttrs()))\n                dead = false;\n            if (work.indexOf(next) == -1)\n                work.push(next);\n        }\n        if (dead)\n            stream.err(\"Only non-generatable nodes (\" + nodes.join(\", \") + \") in a required position (see https://prosemirror.net/docs/guide/#generatable)\");\n    }\n}\n\n// For node types where all attrs have a default value (or which don't\n// have any attributes), build up a single reusable default attribute\n// object, and use it for all nodes that don't specify specific\n// attributes.\nfunction defaultAttrs(attrs) {\n    let defaults = Object.create(null);\n    for (let attrName in attrs) {\n        let attr = attrs[attrName];\n        if (!attr.hasDefault)\n            return null;\n        defaults[attrName] = attr.default;\n    }\n    return defaults;\n}\nfunction computeAttrs(attrs, value) {\n    let built = Object.create(null);\n    for (let name in attrs) {\n        let given = value && value[name];\n        if (given === undefined) {\n            let attr = attrs[name];\n            if (attr.hasDefault)\n                given = attr.default;\n            else\n                throw new RangeError(\"No value supplied for attribute \" + name);\n        }\n        built[name] = given;\n    }\n    return built;\n}\nfunction initAttrs(attrs) {\n    let result = Object.create(null);\n    if (attrs)\n        for (let name in attrs)\n            result[name] = new Attribute(attrs[name]);\n    return result;\n}\n/**\nNode types are objects allocated once per `Schema` and used to\n[tag](https://prosemirror.net/docs/ref/#model.Node.type) `Node` instances. They contain information\nabout the node type, such as its name and what kind of node it\nrepresents.\n*/\nclass NodeType {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The name the node type has in this schema.\n    */\n    name, \n    /**\n    A link back to the `Schema` the node type belongs to.\n    */\n    schema, \n    /**\n    The spec that this type is based on\n    */\n    spec) {\n        this.name = name;\n        this.schema = schema;\n        this.spec = spec;\n        /**\n        The set of marks allowed in this node. `null` means all marks\n        are allowed.\n        */\n        this.markSet = null;\n        this.groups = spec.group ? spec.group.split(\" \") : [];\n        this.attrs = initAttrs(spec.attrs);\n        this.defaultAttrs = defaultAttrs(this.attrs);\n        this.contentMatch = null;\n        this.inlineContent = null;\n        this.isBlock = !(spec.inline || name == \"text\");\n        this.isText = name == \"text\";\n    }\n    /**\n    True if this is an inline type.\n    */\n    get isInline() { return !this.isBlock; }\n    /**\n    True if this is a textblock type, a block that contains inline\n    content.\n    */\n    get isTextblock() { return this.isBlock && this.inlineContent; }\n    /**\n    True for node types that allow no content.\n    */\n    get isLeaf() { return this.contentMatch == ContentMatch.empty; }\n    /**\n    True when this node is an atom, i.e. when it does not have\n    directly editable content.\n    */\n    get isAtom() { return this.isLeaf || !!this.spec.atom; }\n    /**\n    The node type's [whitespace](https://prosemirror.net/docs/ref/#model.NodeSpec.whitespace) option.\n    */\n    get whitespace() {\n        return this.spec.whitespace || (this.spec.code ? \"pre\" : \"normal\");\n    }\n    /**\n    Tells you whether this node type has any required attributes.\n    */\n    hasRequiredAttrs() {\n        for (let n in this.attrs)\n            if (this.attrs[n].isRequired)\n                return true;\n        return false;\n    }\n    /**\n    Indicates whether this node allows some of the same content as\n    the given node type.\n    */\n    compatibleContent(other) {\n        return this == other || this.contentMatch.compatible(other.contentMatch);\n    }\n    /**\n    @internal\n    */\n    computeAttrs(attrs) {\n        if (!attrs && this.defaultAttrs)\n            return this.defaultAttrs;\n        else\n            return computeAttrs(this.attrs, attrs);\n    }\n    /**\n    Create a `Node` of this type. The given attributes are\n    checked and defaulted (you can pass `null` to use the type's\n    defaults entirely, if no required attributes exist). `content`\n    may be a `Fragment`, a node, an array of nodes, or\n    `null`. Similarly `marks` may be `null` to default to the empty\n    set of marks.\n    */\n    create(attrs = null, content, marks) {\n        if (this.isText)\n            throw new Error(\"NodeType.create can't construct text nodes\");\n        return new Node(this, this.computeAttrs(attrs), Fragment.from(content), Mark.setFrom(marks));\n    }\n    /**\n    Like [`create`](https://prosemirror.net/docs/ref/#model.NodeType.create), but check the given content\n    against the node type's content restrictions, and throw an error\n    if it doesn't match.\n    */\n    createChecked(attrs = null, content, marks) {\n        content = Fragment.from(content);\n        this.checkContent(content);\n        return new Node(this, this.computeAttrs(attrs), content, Mark.setFrom(marks));\n    }\n    /**\n    Like [`create`](https://prosemirror.net/docs/ref/#model.NodeType.create), but see if it is\n    necessary to add nodes to the start or end of the given fragment\n    to make it fit the node. If no fitting wrapping can be found,\n    return null. Note that, due to the fact that required nodes can\n    always be created, this will always succeed if you pass null or\n    `Fragment.empty` as content.\n    */\n    createAndFill(attrs = null, content, marks) {\n        attrs = this.computeAttrs(attrs);\n        content = Fragment.from(content);\n        if (content.size) {\n            let before = this.contentMatch.fillBefore(content);\n            if (!before)\n                return null;\n            content = before.append(content);\n        }\n        let matched = this.contentMatch.matchFragment(content);\n        let after = matched && matched.fillBefore(Fragment.empty, true);\n        if (!after)\n            return null;\n        return new Node(this, attrs, content.append(after), Mark.setFrom(marks));\n    }\n    /**\n    Returns true if the given fragment is valid content for this node\n    type with the given attributes.\n    */\n    validContent(content) {\n        let result = this.contentMatch.matchFragment(content);\n        if (!result || !result.validEnd)\n            return false;\n        for (let i = 0; i < content.childCount; i++)\n            if (!this.allowsMarks(content.child(i).marks))\n                return false;\n        return true;\n    }\n    /**\n    Throws a RangeError if the given fragment is not valid content for this\n    node type.\n    @internal\n    */\n    checkContent(content) {\n        if (!this.validContent(content))\n            throw new RangeError(`Invalid content for node ${this.name}: ${content.toString().slice(0, 50)}`);\n    }\n    /**\n    Check whether the given mark type is allowed in this node.\n    */\n    allowsMarkType(markType) {\n        return this.markSet == null || this.markSet.indexOf(markType) > -1;\n    }\n    /**\n    Test whether the given set of marks are allowed in this node.\n    */\n    allowsMarks(marks) {\n        if (this.markSet == null)\n            return true;\n        for (let i = 0; i < marks.length; i++)\n            if (!this.allowsMarkType(marks[i].type))\n                return false;\n        return true;\n    }\n    /**\n    Removes the marks that are not allowed in this node from the given set.\n    */\n    allowedMarks(marks) {\n        if (this.markSet == null)\n            return marks;\n        let copy;\n        for (let i = 0; i < marks.length; i++) {\n            if (!this.allowsMarkType(marks[i].type)) {\n                if (!copy)\n                    copy = marks.slice(0, i);\n            }\n            else if (copy) {\n                copy.push(marks[i]);\n            }\n        }\n        return !copy ? marks : copy.length ? copy : Mark.none;\n    }\n    /**\n    @internal\n    */\n    static compile(nodes, schema) {\n        let result = Object.create(null);\n        nodes.forEach((name, spec) => result[name] = new NodeType(name, schema, spec));\n        let topType = schema.spec.topNode || \"doc\";\n        if (!result[topType])\n            throw new RangeError(\"Schema is missing its top node type ('\" + topType + \"')\");\n        if (!result.text)\n            throw new RangeError(\"Every schema needs a 'text' type\");\n        for (let _ in result.text.attrs)\n            throw new RangeError(\"The text node type should not have attributes\");\n        return result;\n    }\n}\n// Attribute descriptors\nclass Attribute {\n    constructor(options) {\n        this.hasDefault = Object.prototype.hasOwnProperty.call(options, \"default\");\n        this.default = options.default;\n    }\n    get isRequired() {\n        return !this.hasDefault;\n    }\n}\n// Marks\n/**\nLike nodes, marks (which are associated with nodes to signify\nthings like emphasis or being part of a link) are\n[tagged](https://prosemirror.net/docs/ref/#model.Mark.type) with type objects, which are\ninstantiated once per `Schema`.\n*/\nclass MarkType {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The name of the mark type.\n    */\n    name, \n    /**\n    @internal\n    */\n    rank, \n    /**\n    The schema that this mark type instance is part of.\n    */\n    schema, \n    /**\n    The spec on which the type is based.\n    */\n    spec) {\n        this.name = name;\n        this.rank = rank;\n        this.schema = schema;\n        this.spec = spec;\n        this.attrs = initAttrs(spec.attrs);\n        this.excluded = null;\n        let defaults = defaultAttrs(this.attrs);\n        this.instance = defaults ? new Mark(this, defaults) : null;\n    }\n    /**\n    Create a mark of this type. `attrs` may be `null` or an object\n    containing only some of the mark's attributes. The others, if\n    they have defaults, will be added.\n    */\n    create(attrs = null) {\n        if (!attrs && this.instance)\n            return this.instance;\n        return new Mark(this, computeAttrs(this.attrs, attrs));\n    }\n    /**\n    @internal\n    */\n    static compile(marks, schema) {\n        let result = Object.create(null), rank = 0;\n        marks.forEach((name, spec) => result[name] = new MarkType(name, rank++, schema, spec));\n        return result;\n    }\n    /**\n    When there is a mark of this type in the given set, a new set\n    without it is returned. Otherwise, the input set is returned.\n    */\n    removeFromSet(set) {\n        for (var i = 0; i < set.length; i++)\n            if (set[i].type == this) {\n                set = set.slice(0, i).concat(set.slice(i + 1));\n                i--;\n            }\n        return set;\n    }\n    /**\n    Tests whether there is a mark of this type in the given set.\n    */\n    isInSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (set[i].type == this)\n                return set[i];\n    }\n    /**\n    Queries whether a given mark type is\n    [excluded](https://prosemirror.net/docs/ref/#model.MarkSpec.excludes) by this one.\n    */\n    excludes(other) {\n        return this.excluded.indexOf(other) > -1;\n    }\n}\n/**\nA document schema. Holds [node](https://prosemirror.net/docs/ref/#model.NodeType) and [mark\ntype](https://prosemirror.net/docs/ref/#model.MarkType) objects for the nodes and marks that may\noccur in conforming documents, and provides functionality for\ncreating and deserializing such documents.\n\nWhen given, the type parameters provide the names of the nodes and\nmarks in this schema.\n*/\nclass Schema {\n    /**\n    Construct a schema from a schema [specification](https://prosemirror.net/docs/ref/#model.SchemaSpec).\n    */\n    constructor(spec) {\n        /**\n        An object for storing whatever values modules may want to\n        compute and cache per schema. (If you want to store something\n        in it, try to use property names unlikely to clash.)\n        */\n        this.cached = Object.create(null);\n        let instanceSpec = this.spec = {};\n        for (let prop in spec)\n            instanceSpec[prop] = spec[prop];\n        instanceSpec.nodes = OrderedMap.from(spec.nodes),\n            instanceSpec.marks = OrderedMap.from(spec.marks || {}),\n            this.nodes = NodeType.compile(this.spec.nodes, this);\n        this.marks = MarkType.compile(this.spec.marks, this);\n        let contentExprCache = Object.create(null);\n        for (let prop in this.nodes) {\n            if (prop in this.marks)\n                throw new RangeError(prop + \" can not be both a node and a mark\");\n            let type = this.nodes[prop], contentExpr = type.spec.content || \"\", markExpr = type.spec.marks;\n            type.contentMatch = contentExprCache[contentExpr] ||\n                (contentExprCache[contentExpr] = ContentMatch.parse(contentExpr, this.nodes));\n            type.inlineContent = type.contentMatch.inlineContent;\n            type.markSet = markExpr == \"_\" ? null :\n                markExpr ? gatherMarks(this, markExpr.split(\" \")) :\n                    markExpr == \"\" || !type.inlineContent ? [] : null;\n        }\n        for (let prop in this.marks) {\n            let type = this.marks[prop], excl = type.spec.excludes;\n            type.excluded = excl == null ? [type] : excl == \"\" ? [] : gatherMarks(this, excl.split(\" \"));\n        }\n        this.nodeFromJSON = this.nodeFromJSON.bind(this);\n        this.markFromJSON = this.markFromJSON.bind(this);\n        this.topNodeType = this.nodes[this.spec.topNode || \"doc\"];\n        this.cached.wrappings = Object.create(null);\n    }\n    /**\n    Create a node in this schema. The `type` may be a string or a\n    `NodeType` instance. Attributes will be extended with defaults,\n    `content` may be a `Fragment`, `null`, a `Node`, or an array of\n    nodes.\n    */\n    node(type, attrs = null, content, marks) {\n        if (typeof type == \"string\")\n            type = this.nodeType(type);\n        else if (!(type instanceof NodeType))\n            throw new RangeError(\"Invalid node type: \" + type);\n        else if (type.schema != this)\n            throw new RangeError(\"Node type from different schema used (\" + type.name + \")\");\n        return type.createChecked(attrs, content, marks);\n    }\n    /**\n    Create a text node in the schema. Empty text nodes are not\n    allowed.\n    */\n    text(text, marks) {\n        let type = this.nodes.text;\n        return new TextNode(type, type.defaultAttrs, text, Mark.setFrom(marks));\n    }\n    /**\n    Create a mark with the given type and attributes.\n    */\n    mark(type, attrs) {\n        if (typeof type == \"string\")\n            type = this.marks[type];\n        return type.create(attrs);\n    }\n    /**\n    Deserialize a node from its JSON representation. This method is\n    bound.\n    */\n    nodeFromJSON(json) {\n        return Node.fromJSON(this, json);\n    }\n    /**\n    Deserialize a mark from its JSON representation. This method is\n    bound.\n    */\n    markFromJSON(json) {\n        return Mark.fromJSON(this, json);\n    }\n    /**\n    @internal\n    */\n    nodeType(name) {\n        let found = this.nodes[name];\n        if (!found)\n            throw new RangeError(\"Unknown node type: \" + name);\n        return found;\n    }\n}\nfunction gatherMarks(schema, marks) {\n    let found = [];\n    for (let i = 0; i < marks.length; i++) {\n        let name = marks[i], mark = schema.marks[name], ok = mark;\n        if (mark) {\n            found.push(mark);\n        }\n        else {\n            for (let prop in schema.marks) {\n                let mark = schema.marks[prop];\n                if (name == \"_\" || (mark.spec.group && mark.spec.group.split(\" \").indexOf(name) > -1))\n                    found.push(ok = mark);\n            }\n        }\n        if (!ok)\n            throw new SyntaxError(\"Unknown mark type: '\" + marks[i] + \"'\");\n    }\n    return found;\n}\n\n/**\nA DOM parser represents a strategy for parsing DOM content into a\nProseMirror document conforming to a given schema. Its behavior is\ndefined by an array of [rules](https://prosemirror.net/docs/ref/#model.ParseRule).\n*/\nclass DOMParser {\n    /**\n    Create a parser that targets the given schema, using the given\n    parsing rules.\n    */\n    constructor(\n    /**\n    The schema into which the parser parses.\n    */\n    schema, \n    /**\n    The set of [parse rules](https://prosemirror.net/docs/ref/#model.ParseRule) that the parser\n    uses, in order of precedence.\n    */\n    rules) {\n        this.schema = schema;\n        this.rules = rules;\n        /**\n        @internal\n        */\n        this.tags = [];\n        /**\n        @internal\n        */\n        this.styles = [];\n        rules.forEach(rule => {\n            if (rule.tag)\n                this.tags.push(rule);\n            else if (rule.style)\n                this.styles.push(rule);\n        });\n        // Only normalize list elements when lists in the schema can't directly contain themselves\n        this.normalizeLists = !this.tags.some(r => {\n            if (!/^(ul|ol)\\b/.test(r.tag) || !r.node)\n                return false;\n            let node = schema.nodes[r.node];\n            return node.contentMatch.matchType(node);\n        });\n    }\n    /**\n    Parse a document from the content of a DOM node.\n    */\n    parse(dom, options = {}) {\n        let context = new ParseContext(this, options, false);\n        context.addAll(dom, options.from, options.to);\n        return context.finish();\n    }\n    /**\n    Parses the content of the given DOM node, like\n    [`parse`](https://prosemirror.net/docs/ref/#model.DOMParser.parse), and takes the same set of\n    options. But unlike that method, which produces a whole node,\n    this one returns a slice that is open at the sides, meaning that\n    the schema constraints aren't applied to the start of nodes to\n    the left of the input and the end of nodes at the end.\n    */\n    parseSlice(dom, options = {}) {\n        let context = new ParseContext(this, options, true);\n        context.addAll(dom, options.from, options.to);\n        return Slice.maxOpen(context.finish());\n    }\n    /**\n    @internal\n    */\n    matchTag(dom, context, after) {\n        for (let i = after ? this.tags.indexOf(after) + 1 : 0; i < this.tags.length; i++) {\n            let rule = this.tags[i];\n            if (matches(dom, rule.tag) &&\n                (rule.namespace === undefined || dom.namespaceURI == rule.namespace) &&\n                (!rule.context || context.matchesContext(rule.context))) {\n                if (rule.getAttrs) {\n                    let result = rule.getAttrs(dom);\n                    if (result === false)\n                        continue;\n                    rule.attrs = result || undefined;\n                }\n                return rule;\n            }\n        }\n    }\n    /**\n    @internal\n    */\n    matchStyle(prop, value, context, after) {\n        for (let i = after ? this.styles.indexOf(after) + 1 : 0; i < this.styles.length; i++) {\n            let rule = this.styles[i], style = rule.style;\n            if (style.indexOf(prop) != 0 ||\n                rule.context && !context.matchesContext(rule.context) ||\n                // Test that the style string either precisely matches the prop,\n                // or has an '=' sign after the prop, followed by the given\n                // value.\n                style.length > prop.length &&\n                    (style.charCodeAt(prop.length) != 61 || style.slice(prop.length + 1) != value))\n                continue;\n            if (rule.getAttrs) {\n                let result = rule.getAttrs(value);\n                if (result === false)\n                    continue;\n                rule.attrs = result || undefined;\n            }\n            return rule;\n        }\n    }\n    /**\n    @internal\n    */\n    static schemaRules(schema) {\n        let result = [];\n        function insert(rule) {\n            let priority = rule.priority == null ? 50 : rule.priority, i = 0;\n            for (; i < result.length; i++) {\n                let next = result[i], nextPriority = next.priority == null ? 50 : next.priority;\n                if (nextPriority < priority)\n                    break;\n            }\n            result.splice(i, 0, rule);\n        }\n        for (let name in schema.marks) {\n            let rules = schema.marks[name].spec.parseDOM;\n            if (rules)\n                rules.forEach(rule => {\n                    insert(rule = copy(rule));\n                    if (!(rule.mark || rule.ignore || rule.clearMark))\n                        rule.mark = name;\n                });\n        }\n        for (let name in schema.nodes) {\n            let rules = schema.nodes[name].spec.parseDOM;\n            if (rules)\n                rules.forEach(rule => {\n                    insert(rule = copy(rule));\n                    if (!(rule.node || rule.ignore || rule.mark))\n                        rule.node = name;\n                });\n        }\n        return result;\n    }\n    /**\n    Construct a DOM parser using the parsing rules listed in a\n    schema's [node specs](https://prosemirror.net/docs/ref/#model.NodeSpec.parseDOM), reordered by\n    [priority](https://prosemirror.net/docs/ref/#model.ParseRule.priority).\n    */\n    static fromSchema(schema) {\n        return schema.cached.domParser ||\n            (schema.cached.domParser = new DOMParser(schema, DOMParser.schemaRules(schema)));\n    }\n}\nconst blockTags = {\n    address: true, article: true, aside: true, blockquote: true, canvas: true,\n    dd: true, div: true, dl: true, fieldset: true, figcaption: true, figure: true,\n    footer: true, form: true, h1: true, h2: true, h3: true, h4: true, h5: true,\n    h6: true, header: true, hgroup: true, hr: true, li: true, noscript: true, ol: true,\n    output: true, p: true, pre: true, section: true, table: true, tfoot: true, ul: true\n};\nconst ignoreTags = {\n    head: true, noscript: true, object: true, script: true, style: true, title: true\n};\nconst listTags = { ol: true, ul: true };\n// Using a bitfield for node context options\nconst OPT_PRESERVE_WS = 1, OPT_PRESERVE_WS_FULL = 2, OPT_OPEN_LEFT = 4;\nfunction wsOptionsFor(type, preserveWhitespace, base) {\n    if (preserveWhitespace != null)\n        return (preserveWhitespace ? OPT_PRESERVE_WS : 0) |\n            (preserveWhitespace === \"full\" ? OPT_PRESERVE_WS_FULL : 0);\n    return type && type.whitespace == \"pre\" ? OPT_PRESERVE_WS | OPT_PRESERVE_WS_FULL : base & ~OPT_OPEN_LEFT;\n}\nclass NodeContext {\n    constructor(type, attrs, \n    // Marks applied to this node itself\n    marks, \n    // Marks that can't apply here, but will be used in children if possible\n    pendingMarks, solid, match, options) {\n        this.type = type;\n        this.attrs = attrs;\n        this.marks = marks;\n        this.pendingMarks = pendingMarks;\n        this.solid = solid;\n        this.options = options;\n        this.content = [];\n        // Marks applied to the node's children\n        this.activeMarks = Mark.none;\n        // Nested Marks with same type\n        this.stashMarks = [];\n        this.match = match || (options & OPT_OPEN_LEFT ? null : type.contentMatch);\n    }\n    findWrapping(node) {\n        if (!this.match) {\n            if (!this.type)\n                return [];\n            let fill = this.type.contentMatch.fillBefore(Fragment.from(node));\n            if (fill) {\n                this.match = this.type.contentMatch.matchFragment(fill);\n            }\n            else {\n                let start = this.type.contentMatch, wrap;\n                if (wrap = start.findWrapping(node.type)) {\n                    this.match = start;\n                    return wrap;\n                }\n                else {\n                    return null;\n                }\n            }\n        }\n        return this.match.findWrapping(node.type);\n    }\n    finish(openEnd) {\n        if (!(this.options & OPT_PRESERVE_WS)) { // Strip trailing whitespace\n            let last = this.content[this.content.length - 1], m;\n            if (last && last.isText && (m = /[ \\t\\r\\n\\u000c]+$/.exec(last.text))) {\n                let text = last;\n                if (last.text.length == m[0].length)\n                    this.content.pop();\n                else\n                    this.content[this.content.length - 1] = text.withText(text.text.slice(0, text.text.length - m[0].length));\n            }\n        }\n        let content = Fragment.from(this.content);\n        if (!openEnd && this.match)\n            content = content.append(this.match.fillBefore(Fragment.empty, true));\n        return this.type ? this.type.create(this.attrs, content, this.marks) : content;\n    }\n    popFromStashMark(mark) {\n        for (let i = this.stashMarks.length - 1; i >= 0; i--)\n            if (mark.eq(this.stashMarks[i]))\n                return this.stashMarks.splice(i, 1)[0];\n    }\n    applyPending(nextType) {\n        for (let i = 0, pending = this.pendingMarks; i < pending.length; i++) {\n            let mark = pending[i];\n            if ((this.type ? this.type.allowsMarkType(mark.type) : markMayApply(mark.type, nextType)) &&\n                !mark.isInSet(this.activeMarks)) {\n                this.activeMarks = mark.addToSet(this.activeMarks);\n                this.pendingMarks = mark.removeFromSet(this.pendingMarks);\n            }\n        }\n    }\n    inlineContext(node) {\n        if (this.type)\n            return this.type.inlineContent;\n        if (this.content.length)\n            return this.content[0].isInline;\n        return node.parentNode && !blockTags.hasOwnProperty(node.parentNode.nodeName.toLowerCase());\n    }\n}\nclass ParseContext {\n    constructor(\n    // The parser we are using.\n    parser, \n    // The options passed to this parse.\n    options, isOpen) {\n        this.parser = parser;\n        this.options = options;\n        this.isOpen = isOpen;\n        this.open = 0;\n        let topNode = options.topNode, topContext;\n        let topOptions = wsOptionsFor(null, options.preserveWhitespace, 0) | (isOpen ? OPT_OPEN_LEFT : 0);\n        if (topNode)\n            topContext = new NodeContext(topNode.type, topNode.attrs, Mark.none, Mark.none, true, options.topMatch || topNode.type.contentMatch, topOptions);\n        else if (isOpen)\n            topContext = new NodeContext(null, null, Mark.none, Mark.none, true, null, topOptions);\n        else\n            topContext = new NodeContext(parser.schema.topNodeType, null, Mark.none, Mark.none, true, null, topOptions);\n        this.nodes = [topContext];\n        this.find = options.findPositions;\n        this.needsBlock = false;\n    }\n    get top() {\n        return this.nodes[this.open];\n    }\n    // Add a DOM node to the content. Text is inserted as text node,\n    // otherwise, the node is passed to `addElement` or, if it has a\n    // `style` attribute, `addElementWithStyles`.\n    addDOM(dom) {\n        if (dom.nodeType == 3) {\n            this.addTextNode(dom);\n        }\n        else if (dom.nodeType == 1) {\n            let style = dom.getAttribute(\"style\");\n            if (!style) {\n                this.addElement(dom);\n            }\n            else {\n                let marks = this.readStyles(parseStyles(style));\n                if (!marks)\n                    return; // A style with ignore: true\n                let [addMarks, removeMarks] = marks, top = this.top;\n                for (let i = 0; i < removeMarks.length; i++)\n                    this.removePendingMark(removeMarks[i], top);\n                for (let i = 0; i < addMarks.length; i++)\n                    this.addPendingMark(addMarks[i]);\n                this.addElement(dom);\n                for (let i = 0; i < addMarks.length; i++)\n                    this.removePendingMark(addMarks[i], top);\n                for (let i = 0; i < removeMarks.length; i++)\n                    this.addPendingMark(removeMarks[i]);\n            }\n        }\n    }\n    addTextNode(dom) {\n        let value = dom.nodeValue;\n        let top = this.top;\n        if (top.options & OPT_PRESERVE_WS_FULL ||\n            top.inlineContext(dom) ||\n            /[^ \\t\\r\\n\\u000c]/.test(value)) {\n            if (!(top.options & OPT_PRESERVE_WS)) {\n                value = value.replace(/[ \\t\\r\\n\\u000c]+/g, \" \");\n                // If this starts with whitespace, and there is no node before it, or\n                // a hard break, or a text node that ends with whitespace, strip the\n                // leading space.\n                if (/^[ \\t\\r\\n\\u000c]/.test(value) && this.open == this.nodes.length - 1) {\n                    let nodeBefore = top.content[top.content.length - 1];\n                    let domNodeBefore = dom.previousSibling;\n                    if (!nodeBefore ||\n                        (domNodeBefore && domNodeBefore.nodeName == 'BR') ||\n                        (nodeBefore.isText && /[ \\t\\r\\n\\u000c]$/.test(nodeBefore.text)))\n                        value = value.slice(1);\n                }\n            }\n            else if (!(top.options & OPT_PRESERVE_WS_FULL)) {\n                value = value.replace(/\\r?\\n|\\r/g, \" \");\n            }\n            else {\n                value = value.replace(/\\r\\n?/g, \"\\n\");\n            }\n            if (value)\n                this.insertNode(this.parser.schema.text(value));\n            this.findInText(dom);\n        }\n        else {\n            this.findInside(dom);\n        }\n    }\n    // Try to find a handler for the given tag and use that to parse. If\n    // none is found, the element's content nodes are added directly.\n    addElement(dom, matchAfter) {\n        let name = dom.nodeName.toLowerCase(), ruleID;\n        if (listTags.hasOwnProperty(name) && this.parser.normalizeLists)\n            normalizeList(dom);\n        let rule = (this.options.ruleFromNode && this.options.ruleFromNode(dom)) ||\n            (ruleID = this.parser.matchTag(dom, this, matchAfter));\n        if (rule ? rule.ignore : ignoreTags.hasOwnProperty(name)) {\n            this.findInside(dom);\n            this.ignoreFallback(dom);\n        }\n        else if (!rule || rule.skip || rule.closeParent) {\n            if (rule && rule.closeParent)\n                this.open = Math.max(0, this.open - 1);\n            else if (rule && rule.skip.nodeType)\n                dom = rule.skip;\n            let sync, top = this.top, oldNeedsBlock = this.needsBlock;\n            if (blockTags.hasOwnProperty(name)) {\n                if (top.content.length && top.content[0].isInline && this.open) {\n                    this.open--;\n                    top = this.top;\n                }\n                sync = true;\n                if (!top.type)\n                    this.needsBlock = true;\n            }\n            else if (!dom.firstChild) {\n                this.leafFallback(dom);\n                return;\n            }\n            this.addAll(dom);\n            if (sync)\n                this.sync(top);\n            this.needsBlock = oldNeedsBlock;\n        }\n        else {\n            this.addElementByRule(dom, rule, rule.consuming === false ? ruleID : undefined);\n        }\n    }\n    // Called for leaf DOM nodes that would otherwise be ignored\n    leafFallback(dom) {\n        if (dom.nodeName == \"BR\" && this.top.type && this.top.type.inlineContent)\n            this.addTextNode(dom.ownerDocument.createTextNode(\"\\n\"));\n    }\n    // Called for ignored nodes\n    ignoreFallback(dom) {\n        // Ignored BR nodes should at least create an inline context\n        if (dom.nodeName == \"BR\" && (!this.top.type || !this.top.type.inlineContent))\n            this.findPlace(this.parser.schema.text(\"-\"));\n    }\n    // Run any style parser associated with the node's styles. Either\n    // return an array of marks, or null to indicate some of the styles\n    // had a rule with `ignore` set.\n    readStyles(styles) {\n        let add = Mark.none, remove = Mark.none;\n        style: for (let i = 0; i < styles.length; i += 2) {\n            for (let after = undefined;;) {\n                let rule = this.parser.matchStyle(styles[i], styles[i + 1], this, after);\n                if (!rule)\n                    continue style;\n                if (rule.ignore)\n                    return null;\n                if (rule.clearMark) {\n                    this.top.pendingMarks.forEach(m => {\n                        if (rule.clearMark(m))\n                            remove = m.addToSet(remove);\n                    });\n                }\n                else {\n                    add = this.parser.schema.marks[rule.mark].create(rule.attrs).addToSet(add);\n                }\n                if (rule.consuming === false)\n                    after = rule;\n                else\n                    break;\n            }\n        }\n        return [add, remove];\n    }\n    // Look up a handler for the given node. If none are found, return\n    // false. Otherwise, apply it, use its return value to drive the way\n    // the node's content is wrapped, and return true.\n    addElementByRule(dom, rule, continueAfter) {\n        let sync, nodeType, mark;\n        if (rule.node) {\n            nodeType = this.parser.schema.nodes[rule.node];\n            if (!nodeType.isLeaf) {\n                sync = this.enter(nodeType, rule.attrs || null, rule.preserveWhitespace);\n            }\n            else if (!this.insertNode(nodeType.create(rule.attrs))) {\n                this.leafFallback(dom);\n            }\n        }\n        else {\n            let markType = this.parser.schema.marks[rule.mark];\n            mark = markType.create(rule.attrs);\n            this.addPendingMark(mark);\n        }\n        let startIn = this.top;\n        if (nodeType && nodeType.isLeaf) {\n            this.findInside(dom);\n        }\n        else if (continueAfter) {\n            this.addElement(dom, continueAfter);\n        }\n        else if (rule.getContent) {\n            this.findInside(dom);\n            rule.getContent(dom, this.parser.schema).forEach(node => this.insertNode(node));\n        }\n        else {\n            let contentDOM = dom;\n            if (typeof rule.contentElement == \"string\")\n                contentDOM = dom.querySelector(rule.contentElement);\n            else if (typeof rule.contentElement == \"function\")\n                contentDOM = rule.contentElement(dom);\n            else if (rule.contentElement)\n                contentDOM = rule.contentElement;\n            this.findAround(dom, contentDOM, true);\n            this.addAll(contentDOM);\n        }\n        if (sync && this.sync(startIn))\n            this.open--;\n        if (mark)\n            this.removePendingMark(mark, startIn);\n    }\n    // Add all child nodes between `startIndex` and `endIndex` (or the\n    // whole node, if not given). If `sync` is passed, use it to\n    // synchronize after every block element.\n    addAll(parent, startIndex, endIndex) {\n        let index = startIndex || 0;\n        for (let dom = startIndex ? parent.childNodes[startIndex] : parent.firstChild, end = endIndex == null ? null : parent.childNodes[endIndex]; dom != end; dom = dom.nextSibling, ++index) {\n            this.findAtPoint(parent, index);\n            this.addDOM(dom);\n        }\n        this.findAtPoint(parent, index);\n    }\n    // Try to find a way to fit the given node type into the current\n    // context. May add intermediate wrappers and/or leave non-solid\n    // nodes that we're in.\n    findPlace(node) {\n        let route, sync;\n        for (let depth = this.open; depth >= 0; depth--) {\n            let cx = this.nodes[depth];\n            let found = cx.findWrapping(node);\n            if (found && (!route || route.length > found.length)) {\n                route = found;\n                sync = cx;\n                if (!found.length)\n                    break;\n            }\n            if (cx.solid)\n                break;\n        }\n        if (!route)\n            return false;\n        this.sync(sync);\n        for (let i = 0; i < route.length; i++)\n            this.enterInner(route[i], null, false);\n        return true;\n    }\n    // Try to insert the given node, adjusting the context when needed.\n    insertNode(node) {\n        if (node.isInline && this.needsBlock && !this.top.type) {\n            let block = this.textblockFromContext();\n            if (block)\n                this.enterInner(block);\n        }\n        if (this.findPlace(node)) {\n            this.closeExtra();\n            let top = this.top;\n            top.applyPending(node.type);\n            if (top.match)\n                top.match = top.match.matchType(node.type);\n            let marks = top.activeMarks;\n            for (let i = 0; i < node.marks.length; i++)\n                if (!top.type || top.type.allowsMarkType(node.marks[i].type))\n                    marks = node.marks[i].addToSet(marks);\n            top.content.push(node.mark(marks));\n            return true;\n        }\n        return false;\n    }\n    // Try to start a node of the given type, adjusting the context when\n    // necessary.\n    enter(type, attrs, preserveWS) {\n        let ok = this.findPlace(type.create(attrs));\n        if (ok)\n            this.enterInner(type, attrs, true, preserveWS);\n        return ok;\n    }\n    // Open a node of the given type\n    enterInner(type, attrs = null, solid = false, preserveWS) {\n        this.closeExtra();\n        let top = this.top;\n        top.applyPending(type);\n        top.match = top.match && top.match.matchType(type);\n        let options = wsOptionsFor(type, preserveWS, top.options);\n        if ((top.options & OPT_OPEN_LEFT) && top.content.length == 0)\n            options |= OPT_OPEN_LEFT;\n        this.nodes.push(new NodeContext(type, attrs, top.activeMarks, top.pendingMarks, solid, null, options));\n        this.open++;\n    }\n    // Make sure all nodes above this.open are finished and added to\n    // their parents\n    closeExtra(openEnd = false) {\n        let i = this.nodes.length - 1;\n        if (i > this.open) {\n            for (; i > this.open; i--)\n                this.nodes[i - 1].content.push(this.nodes[i].finish(openEnd));\n            this.nodes.length = this.open + 1;\n        }\n    }\n    finish() {\n        this.open = 0;\n        this.closeExtra(this.isOpen);\n        return this.nodes[0].finish(this.isOpen || this.options.topOpen);\n    }\n    sync(to) {\n        for (let i = this.open; i >= 0; i--)\n            if (this.nodes[i] == to) {\n                this.open = i;\n                return true;\n            }\n        return false;\n    }\n    get currentPos() {\n        this.closeExtra();\n        let pos = 0;\n        for (let i = this.open; i >= 0; i--) {\n            let content = this.nodes[i].content;\n            for (let j = content.length - 1; j >= 0; j--)\n                pos += content[j].nodeSize;\n            if (i)\n                pos++;\n        }\n        return pos;\n    }\n    findAtPoint(parent, offset) {\n        if (this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].node == parent && this.find[i].offset == offset)\n                    this.find[i].pos = this.currentPos;\n            }\n    }\n    findInside(parent) {\n        if (this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node))\n                    this.find[i].pos = this.currentPos;\n            }\n    }\n    findAround(parent, content, before) {\n        if (parent != content && this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node)) {\n                    let pos = content.compareDocumentPosition(this.find[i].node);\n                    if (pos & (before ? 2 : 4))\n                        this.find[i].pos = this.currentPos;\n                }\n            }\n    }\n    findInText(textNode) {\n        if (this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].node == textNode)\n                    this.find[i].pos = this.currentPos - (textNode.nodeValue.length - this.find[i].offset);\n            }\n    }\n    // Determines whether the given context string matches this context.\n    matchesContext(context) {\n        if (context.indexOf(\"|\") > -1)\n            return context.split(/\\s*\\|\\s*/).some(this.matchesContext, this);\n        let parts = context.split(\"/\");\n        let option = this.options.context;\n        let useRoot = !this.isOpen && (!option || option.parent.type == this.nodes[0].type);\n        let minDepth = -(option ? option.depth + 1 : 0) + (useRoot ? 0 : 1);\n        let match = (i, depth) => {\n            for (; i >= 0; i--) {\n                let part = parts[i];\n                if (part == \"\") {\n                    if (i == parts.length - 1 || i == 0)\n                        continue;\n                    for (; depth >= minDepth; depth--)\n                        if (match(i - 1, depth))\n                            return true;\n                    return false;\n                }\n                else {\n                    let next = depth > 0 || (depth == 0 && useRoot) ? this.nodes[depth].type\n                        : option && depth >= minDepth ? option.node(depth - minDepth).type\n                            : null;\n                    if (!next || (next.name != part && next.groups.indexOf(part) == -1))\n                        return false;\n                    depth--;\n                }\n            }\n            return true;\n        };\n        return match(parts.length - 1, this.open);\n    }\n    textblockFromContext() {\n        let $context = this.options.context;\n        if ($context)\n            for (let d = $context.depth; d >= 0; d--) {\n                let deflt = $context.node(d).contentMatchAt($context.indexAfter(d)).defaultType;\n                if (deflt && deflt.isTextblock && deflt.defaultAttrs)\n                    return deflt;\n            }\n        for (let name in this.parser.schema.nodes) {\n            let type = this.parser.schema.nodes[name];\n            if (type.isTextblock && type.defaultAttrs)\n                return type;\n        }\n    }\n    addPendingMark(mark) {\n        let found = findSameMarkInSet(mark, this.top.pendingMarks);\n        if (found)\n            this.top.stashMarks.push(found);\n        this.top.pendingMarks = mark.addToSet(this.top.pendingMarks);\n    }\n    removePendingMark(mark, upto) {\n        for (let depth = this.open; depth >= 0; depth--) {\n            let level = this.nodes[depth];\n            let found = level.pendingMarks.lastIndexOf(mark);\n            if (found > -1) {\n                level.pendingMarks = mark.removeFromSet(level.pendingMarks);\n            }\n            else {\n                level.activeMarks = mark.removeFromSet(level.activeMarks);\n                let stashMark = level.popFromStashMark(mark);\n                if (stashMark && level.type && level.type.allowsMarkType(stashMark.type))\n                    level.activeMarks = stashMark.addToSet(level.activeMarks);\n            }\n            if (level == upto)\n                break;\n        }\n    }\n}\n// Kludge to work around directly nested list nodes produced by some\n// tools and allowed by browsers to mean that the nested list is\n// actually part of the list item above it.\nfunction normalizeList(dom) {\n    for (let child = dom.firstChild, prevItem = null; child; child = child.nextSibling) {\n        let name = child.nodeType == 1 ? child.nodeName.toLowerCase() : null;\n        if (name && listTags.hasOwnProperty(name) && prevItem) {\n            prevItem.appendChild(child);\n            child = prevItem;\n        }\n        else if (name == \"li\") {\n            prevItem = child;\n        }\n        else if (name) {\n            prevItem = null;\n        }\n    }\n}\n// Apply a CSS selector.\nfunction matches(dom, selector) {\n    return (dom.matches || dom.msMatchesSelector || dom.webkitMatchesSelector || dom.mozMatchesSelector).call(dom, selector);\n}\n// Tokenize a style attribute into property/value pairs.\nfunction parseStyles(style) {\n    let re = /\\s*([\\w-]+)\\s*:\\s*([^;]+)/g, m, result = [];\n    while (m = re.exec(style))\n        result.push(m[1], m[2].trim());\n    return result;\n}\nfunction copy(obj) {\n    let copy = {};\n    for (let prop in obj)\n        copy[prop] = obj[prop];\n    return copy;\n}\n// Used when finding a mark at the top level of a fragment parse.\n// Checks whether it would be reasonable to apply a given mark type to\n// a given node, by looking at the way the mark occurs in the schema.\nfunction markMayApply(markType, nodeType) {\n    let nodes = nodeType.schema.nodes;\n    for (let name in nodes) {\n        let parent = nodes[name];\n        if (!parent.allowsMarkType(markType))\n            continue;\n        let seen = [], scan = (match) => {\n            seen.push(match);\n            for (let i = 0; i < match.edgeCount; i++) {\n                let { type, next } = match.edge(i);\n                if (type == nodeType)\n                    return true;\n                if (seen.indexOf(next) < 0 && scan(next))\n                    return true;\n            }\n        };\n        if (scan(parent.contentMatch))\n            return true;\n    }\n}\nfunction findSameMarkInSet(mark, set) {\n    for (let i = 0; i < set.length; i++) {\n        if (mark.eq(set[i]))\n            return set[i];\n    }\n}\n\n/**\nA DOM serializer knows how to convert ProseMirror nodes and\nmarks of various types to DOM nodes.\n*/\nclass DOMSerializer {\n    /**\n    Create a serializer. `nodes` should map node names to functions\n    that take a node and return a description of the corresponding\n    DOM. `marks` does the same for mark names, but also gets an\n    argument that tells it whether the mark's content is block or\n    inline content (for typical use, it'll always be inline). A mark\n    serializer may be `null` to indicate that marks of that type\n    should not be serialized.\n    */\n    constructor(\n    /**\n    The node serialization functions.\n    */\n    nodes, \n    /**\n    The mark serialization functions.\n    */\n    marks) {\n        this.nodes = nodes;\n        this.marks = marks;\n    }\n    /**\n    Serialize the content of this fragment to a DOM fragment. When\n    not in the browser, the `document` option, containing a DOM\n    document, should be passed so that the serializer can create\n    nodes.\n    */\n    serializeFragment(fragment, options = {}, target) {\n        if (!target)\n            target = doc(options).createDocumentFragment();\n        let top = target, active = [];\n        fragment.forEach(node => {\n            if (active.length || node.marks.length) {\n                let keep = 0, rendered = 0;\n                while (keep < active.length && rendered < node.marks.length) {\n                    let next = node.marks[rendered];\n                    if (!this.marks[next.type.name]) {\n                        rendered++;\n                        continue;\n                    }\n                    if (!next.eq(active[keep][0]) || next.type.spec.spanning === false)\n                        break;\n                    keep++;\n                    rendered++;\n                }\n                while (keep < active.length)\n                    top = active.pop()[1];\n                while (rendered < node.marks.length) {\n                    let add = node.marks[rendered++];\n                    let markDOM = this.serializeMark(add, node.isInline, options);\n                    if (markDOM) {\n                        active.push([add, top]);\n                        top.appendChild(markDOM.dom);\n                        top = markDOM.contentDOM || markDOM.dom;\n                    }\n                }\n            }\n            top.appendChild(this.serializeNodeInner(node, options));\n        });\n        return target;\n    }\n    /**\n    @internal\n    */\n    serializeNodeInner(node, options) {\n        let { dom, contentDOM } = DOMSerializer.renderSpec(doc(options), this.nodes[node.type.name](node));\n        if (contentDOM) {\n            if (node.isLeaf)\n                throw new RangeError(\"Content hole not allowed in a leaf node spec\");\n            this.serializeFragment(node.content, options, contentDOM);\n        }\n        return dom;\n    }\n    /**\n    Serialize this node to a DOM node. This can be useful when you\n    need to serialize a part of a document, as opposed to the whole\n    document. To serialize a whole document, use\n    [`serializeFragment`](https://prosemirror.net/docs/ref/#model.DOMSerializer.serializeFragment) on\n    its [content](https://prosemirror.net/docs/ref/#model.Node.content).\n    */\n    serializeNode(node, options = {}) {\n        let dom = this.serializeNodeInner(node, options);\n        for (let i = node.marks.length - 1; i >= 0; i--) {\n            let wrap = this.serializeMark(node.marks[i], node.isInline, options);\n            if (wrap) {\n                (wrap.contentDOM || wrap.dom).appendChild(dom);\n                dom = wrap.dom;\n            }\n        }\n        return dom;\n    }\n    /**\n    @internal\n    */\n    serializeMark(mark, inline, options = {}) {\n        let toDOM = this.marks[mark.type.name];\n        return toDOM && DOMSerializer.renderSpec(doc(options), toDOM(mark, inline));\n    }\n    /**\n    Render an [output spec](https://prosemirror.net/docs/ref/#model.DOMOutputSpec) to a DOM node. If\n    the spec has a hole (zero) in it, `contentDOM` will point at the\n    node with the hole.\n    */\n    static renderSpec(doc, structure, xmlNS = null) {\n        if (typeof structure == \"string\")\n            return { dom: doc.createTextNode(structure) };\n        if (structure.nodeType != null)\n            return { dom: structure };\n        if (structure.dom && structure.dom.nodeType != null)\n            return structure;\n        let tagName = structure[0], space = tagName.indexOf(\" \");\n        if (space > 0) {\n            xmlNS = tagName.slice(0, space);\n            tagName = tagName.slice(space + 1);\n        }\n        let contentDOM;\n        let dom = (xmlNS ? doc.createElementNS(xmlNS, tagName) : doc.createElement(tagName));\n        let attrs = structure[1], start = 1;\n        if (attrs && typeof attrs == \"object\" && attrs.nodeType == null && !Array.isArray(attrs)) {\n            start = 2;\n            for (let name in attrs)\n                if (attrs[name] != null) {\n                    let space = name.indexOf(\" \");\n                    if (space > 0)\n                        dom.setAttributeNS(name.slice(0, space), name.slice(space + 1), attrs[name]);\n                    else\n                        dom.setAttribute(name, attrs[name]);\n                }\n        }\n        for (let i = start; i < structure.length; i++) {\n            let child = structure[i];\n            if (child === 0) {\n                if (i < structure.length - 1 || i > start)\n                    throw new RangeError(\"Content hole must be the only child of its parent node\");\n                return { dom, contentDOM: dom };\n            }\n            else {\n                let { dom: inner, contentDOM: innerContent } = DOMSerializer.renderSpec(doc, child, xmlNS);\n                dom.appendChild(inner);\n                if (innerContent) {\n                    if (contentDOM)\n                        throw new RangeError(\"Multiple content holes\");\n                    contentDOM = innerContent;\n                }\n            }\n        }\n        return { dom, contentDOM };\n    }\n    /**\n    Build a serializer using the [`toDOM`](https://prosemirror.net/docs/ref/#model.NodeSpec.toDOM)\n    properties in a schema's node and mark specs.\n    */\n    static fromSchema(schema) {\n        return schema.cached.domSerializer ||\n            (schema.cached.domSerializer = new DOMSerializer(this.nodesFromSchema(schema), this.marksFromSchema(schema)));\n    }\n    /**\n    Gather the serializers in a schema's node specs into an object.\n    This can be useful as a base to build a custom serializer from.\n    */\n    static nodesFromSchema(schema) {\n        let result = gatherToDOM(schema.nodes);\n        if (!result.text)\n            result.text = node => node.text;\n        return result;\n    }\n    /**\n    Gather the serializers in a schema's mark specs into an object.\n    */\n    static marksFromSchema(schema) {\n        return gatherToDOM(schema.marks);\n    }\n}\nfunction gatherToDOM(obj) {\n    let result = {};\n    for (let name in obj) {\n        let toDOM = obj[name].spec.toDOM;\n        if (toDOM)\n            result[name] = toDOM;\n    }\n    return result;\n}\nfunction doc(options) {\n    return options.document || window.document;\n}\n\nexport { ContentMatch, DOMParser, DOMSerializer, Fragment, Mark, MarkType, Node, NodeRange, NodeType, ReplaceError, ResolvedPos, Schema, Slice };\n", "import { ReplaceError, Slice, Fragment, MarkType, Mark } from 'prosemirror-model';\n\n// Recovery values encode a range index and an offset. They are\n// represented as numbers, because tons of them will be created when\n// mapping, for example, a large number of decorations. The number's\n// lower 16 bits provide the index, the remaining bits the offset.\n//\n// Note: We intentionally don't use bit shift operators to en- and\n// decode these, since those clip to 32 bits, which we might in rare\n// cases want to overflow. A 64-bit float can represent 48-bit\n// integers precisely.\nconst lower16 = 0xffff;\nconst factor16 = Math.pow(2, 16);\nfunction makeRecover(index, offset) { return index + offset * factor16; }\nfunction recoverIndex(value) { return value & lower16; }\nfunction recoverOffset(value) { return (value - (value & lower16)) / factor16; }\nconst DEL_BEFORE = 1, DEL_AFTER = 2, DEL_ACROSS = 4, DEL_SIDE = 8;\n/**\nAn object representing a mapped position with extra\ninformation.\n*/\nclass MapResult {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The mapped version of the position.\n    */\n    pos, \n    /**\n    @internal\n    */\n    delInfo, \n    /**\n    @internal\n    */\n    recover) {\n        this.pos = pos;\n        this.delInfo = delInfo;\n        this.recover = recover;\n    }\n    /**\n    Tells you whether the position was deleted, that is, whether the\n    step removed the token on the side queried (via the `assoc`)\n    argument from the document.\n    */\n    get deleted() { return (this.delInfo & DEL_SIDE) > 0; }\n    /**\n    Tells you whether the token before the mapped position was deleted.\n    */\n    get deletedBefore() { return (this.delInfo & (DEL_BEFORE | DEL_ACROSS)) > 0; }\n    /**\n    True when the token after the mapped position was deleted.\n    */\n    get deletedAfter() { return (this.delInfo & (DEL_AFTER | DEL_ACROSS)) > 0; }\n    /**\n    Tells whether any of the steps mapped through deletes across the\n    position (including both the token before and after the\n    position).\n    */\n    get deletedAcross() { return (this.delInfo & DEL_ACROSS) > 0; }\n}\n/**\nA map describing the deletions and insertions made by a step, which\ncan be used to find the correspondence between positions in the\npre-step version of a document and the same position in the\npost-step version.\n*/\nclass StepMap {\n    /**\n    Create a position map. The modifications to the document are\n    represented as an array of numbers, in which each group of three\n    represents a modified chunk as `[start, oldSize, newSize]`.\n    */\n    constructor(\n    /**\n    @internal\n    */\n    ranges, \n    /**\n    @internal\n    */\n    inverted = false) {\n        this.ranges = ranges;\n        this.inverted = inverted;\n        if (!ranges.length && StepMap.empty)\n            return StepMap.empty;\n    }\n    /**\n    @internal\n    */\n    recover(value) {\n        let diff = 0, index = recoverIndex(value);\n        if (!this.inverted)\n            for (let i = 0; i < index; i++)\n                diff += this.ranges[i * 3 + 2] - this.ranges[i * 3 + 1];\n        return this.ranges[index * 3] + diff + recoverOffset(value);\n    }\n    mapResult(pos, assoc = 1) { return this._map(pos, assoc, false); }\n    map(pos, assoc = 1) { return this._map(pos, assoc, true); }\n    /**\n    @internal\n    */\n    _map(pos, assoc, simple) {\n        let diff = 0, oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i] - (this.inverted ? diff : 0);\n            if (start > pos)\n                break;\n            let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex], end = start + oldSize;\n            if (pos <= end) {\n                let side = !oldSize ? assoc : pos == start ? -1 : pos == end ? 1 : assoc;\n                let result = start + diff + (side < 0 ? 0 : newSize);\n                if (simple)\n                    return result;\n                let recover = pos == (assoc < 0 ? start : end) ? null : makeRecover(i / 3, pos - start);\n                let del = pos == start ? DEL_AFTER : pos == end ? DEL_BEFORE : DEL_ACROSS;\n                if (assoc < 0 ? pos != start : pos != end)\n                    del |= DEL_SIDE;\n                return new MapResult(result, del, recover);\n            }\n            diff += newSize - oldSize;\n        }\n        return simple ? pos + diff : new MapResult(pos + diff, 0, null);\n    }\n    /**\n    @internal\n    */\n    touches(pos, recover) {\n        let diff = 0, index = recoverIndex(recover);\n        let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i] - (this.inverted ? diff : 0);\n            if (start > pos)\n                break;\n            let oldSize = this.ranges[i + oldIndex], end = start + oldSize;\n            if (pos <= end && i == index * 3)\n                return true;\n            diff += this.ranges[i + newIndex] - oldSize;\n        }\n        return false;\n    }\n    /**\n    Calls the given function on each of the changed ranges included in\n    this map.\n    */\n    forEach(f) {\n        let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0, diff = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i], oldStart = start - (this.inverted ? diff : 0), newStart = start + (this.inverted ? 0 : diff);\n            let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex];\n            f(oldStart, oldStart + oldSize, newStart, newStart + newSize);\n            diff += newSize - oldSize;\n        }\n    }\n    /**\n    Create an inverted version of this map. The result can be used to\n    map positions in the post-step document to the pre-step document.\n    */\n    invert() {\n        return new StepMap(this.ranges, !this.inverted);\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return (this.inverted ? \"-\" : \"\") + JSON.stringify(this.ranges);\n    }\n    /**\n    Create a map that moves all positions by offset `n` (which may be\n    negative). This can be useful when applying steps meant for a\n    sub-document to a larger document, or vice-versa.\n    */\n    static offset(n) {\n        return n == 0 ? StepMap.empty : new StepMap(n < 0 ? [0, -n, 0] : [0, 0, n]);\n    }\n}\n/**\nA StepMap that contains no changed ranges.\n*/\nStepMap.empty = new StepMap([]);\n/**\nA mapping represents a pipeline of zero or more [step\nmaps](https://prosemirror.net/docs/ref/#transform.StepMap). It has special provisions for losslessly\nhandling mapping positions through a series of steps in which some\nsteps are inverted versions of earlier steps. (This comes up when\n\u2018[rebasing](/docs/guide/#transform.rebasing)\u2019 steps for\ncollaboration or history management.)\n*/\nclass Mapping {\n    /**\n    Create a new mapping with the given position maps.\n    */\n    constructor(\n    /**\n    The step maps in this mapping.\n    */\n    maps = [], \n    /**\n    @internal\n    */\n    mirror, \n    /**\n    The starting position in the `maps` array, used when `map` or\n    `mapResult` is called.\n    */\n    from = 0, \n    /**\n    The end position in the `maps` array.\n    */\n    to = maps.length) {\n        this.maps = maps;\n        this.mirror = mirror;\n        this.from = from;\n        this.to = to;\n    }\n    /**\n    Create a mapping that maps only through a part of this one.\n    */\n    slice(from = 0, to = this.maps.length) {\n        return new Mapping(this.maps, this.mirror, from, to);\n    }\n    /**\n    @internal\n    */\n    copy() {\n        return new Mapping(this.maps.slice(), this.mirror && this.mirror.slice(), this.from, this.to);\n    }\n    /**\n    Add a step map to the end of this mapping. If `mirrors` is\n    given, it should be the index of the step map that is the mirror\n    image of this one.\n    */\n    appendMap(map, mirrors) {\n        this.to = this.maps.push(map);\n        if (mirrors != null)\n            this.setMirror(this.maps.length - 1, mirrors);\n    }\n    /**\n    Add all the step maps in a given mapping to this one (preserving\n    mirroring information).\n    */\n    appendMapping(mapping) {\n        for (let i = 0, startSize = this.maps.length; i < mapping.maps.length; i++) {\n            let mirr = mapping.getMirror(i);\n            this.appendMap(mapping.maps[i], mirr != null && mirr < i ? startSize + mirr : undefined);\n        }\n    }\n    /**\n    Finds the offset of the step map that mirrors the map at the\n    given offset, in this mapping (as per the second argument to\n    `appendMap`).\n    */\n    getMirror(n) {\n        if (this.mirror)\n            for (let i = 0; i < this.mirror.length; i++)\n                if (this.mirror[i] == n)\n                    return this.mirror[i + (i % 2 ? -1 : 1)];\n    }\n    /**\n    @internal\n    */\n    setMirror(n, m) {\n        if (!this.mirror)\n            this.mirror = [];\n        this.mirror.push(n, m);\n    }\n    /**\n    Append the inverse of the given mapping to this one.\n    */\n    appendMappingInverted(mapping) {\n        for (let i = mapping.maps.length - 1, totalSize = this.maps.length + mapping.maps.length; i >= 0; i--) {\n            let mirr = mapping.getMirror(i);\n            this.appendMap(mapping.maps[i].invert(), mirr != null && mirr > i ? totalSize - mirr - 1 : undefined);\n        }\n    }\n    /**\n    Create an inverted version of this mapping.\n    */\n    invert() {\n        let inverse = new Mapping;\n        inverse.appendMappingInverted(this);\n        return inverse;\n    }\n    /**\n    Map a position through this mapping.\n    */\n    map(pos, assoc = 1) {\n        if (this.mirror)\n            return this._map(pos, assoc, true);\n        for (let i = this.from; i < this.to; i++)\n            pos = this.maps[i].map(pos, assoc);\n        return pos;\n    }\n    /**\n    Map a position through this mapping, returning a mapping\n    result.\n    */\n    mapResult(pos, assoc = 1) { return this._map(pos, assoc, false); }\n    /**\n    @internal\n    */\n    _map(pos, assoc, simple) {\n        let delInfo = 0;\n        for (let i = this.from; i < this.to; i++) {\n            let map = this.maps[i], result = map.mapResult(pos, assoc);\n            if (result.recover != null) {\n                let corr = this.getMirror(i);\n                if (corr != null && corr > i && corr < this.to) {\n                    i = corr;\n                    pos = this.maps[corr].recover(result.recover);\n                    continue;\n                }\n            }\n            delInfo |= result.delInfo;\n            pos = result.pos;\n        }\n        return simple ? pos : new MapResult(pos, delInfo, null);\n    }\n}\n\nconst stepsByID = Object.create(null);\n/**\nA step object represents an atomic change. It generally applies\nonly to the document it was created for, since the positions\nstored in it will only make sense for that document.\n\nNew steps are defined by creating classes that extend `Step`,\noverriding the `apply`, `invert`, `map`, `getMap` and `fromJSON`\nmethods, and registering your class with a unique\nJSON-serialization identifier using\n[`Step.jsonID`](https://prosemirror.net/docs/ref/#transform.Step^jsonID).\n*/\nclass Step {\n    /**\n    Get the step map that represents the changes made by this step,\n    and which can be used to transform between positions in the old\n    and the new document.\n    */\n    getMap() { return StepMap.empty; }\n    /**\n    Try to merge this step with another one, to be applied directly\n    after it. Returns the merged step when possible, null if the\n    steps can't be merged.\n    */\n    merge(other) { return null; }\n    /**\n    Deserialize a step from its JSON representation. Will call\n    through to the step class' own implementation of this method.\n    */\n    static fromJSON(schema, json) {\n        if (!json || !json.stepType)\n            throw new RangeError(\"Invalid input for Step.fromJSON\");\n        let type = stepsByID[json.stepType];\n        if (!type)\n            throw new RangeError(`No step type ${json.stepType} defined`);\n        return type.fromJSON(schema, json);\n    }\n    /**\n    To be able to serialize steps to JSON, each step needs a string\n    ID to attach to its JSON representation. Use this method to\n    register an ID for your step classes. Try to pick something\n    that's unlikely to clash with steps from other modules.\n    */\n    static jsonID(id, stepClass) {\n        if (id in stepsByID)\n            throw new RangeError(\"Duplicate use of step JSON ID \" + id);\n        stepsByID[id] = stepClass;\n        stepClass.prototype.jsonID = id;\n        return stepClass;\n    }\n}\n/**\nThe result of [applying](https://prosemirror.net/docs/ref/#transform.Step.apply) a step. Contains either a\nnew document or a failure value.\n*/\nclass StepResult {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The transformed document, if successful.\n    */\n    doc, \n    /**\n    The failure message, if unsuccessful.\n    */\n    failed) {\n        this.doc = doc;\n        this.failed = failed;\n    }\n    /**\n    Create a successful step result.\n    */\n    static ok(doc) { return new StepResult(doc, null); }\n    /**\n    Create a failed step result.\n    */\n    static fail(message) { return new StepResult(null, message); }\n    /**\n    Call [`Node.replace`](https://prosemirror.net/docs/ref/#model.Node.replace) with the given\n    arguments. Create a successful result if it succeeds, and a\n    failed one if it throws a `ReplaceError`.\n    */\n    static fromReplace(doc, from, to, slice) {\n        try {\n            return StepResult.ok(doc.replace(from, to, slice));\n        }\n        catch (e) {\n            if (e instanceof ReplaceError)\n                return StepResult.fail(e.message);\n            throw e;\n        }\n    }\n}\n\nfunction mapFragment(fragment, f, parent) {\n    let mapped = [];\n    for (let i = 0; i < fragment.childCount; i++) {\n        let child = fragment.child(i);\n        if (child.content.size)\n            child = child.copy(mapFragment(child.content, f, child));\n        if (child.isInline)\n            child = f(child, parent, i);\n        mapped.push(child);\n    }\n    return Fragment.fromArray(mapped);\n}\n/**\nAdd a mark to all inline content between two positions.\n*/\nclass AddMarkStep extends Step {\n    /**\n    Create a mark step.\n    */\n    constructor(\n    /**\n    The start of the marked range.\n    */\n    from, \n    /**\n    The end of the marked range.\n    */\n    to, \n    /**\n    The mark to add.\n    */\n    mark) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let oldSlice = doc.slice(this.from, this.to), $from = doc.resolve(this.from);\n        let parent = $from.node($from.sharedDepth(this.to));\n        let slice = new Slice(mapFragment(oldSlice.content, (node, parent) => {\n            if (!node.isAtom || !parent.type.allowsMarkType(this.mark.type))\n                return node;\n            return node.mark(this.mark.addToSet(node.marks));\n        }, parent), oldSlice.openStart, oldSlice.openEnd);\n        return StepResult.fromReplace(doc, this.from, this.to, slice);\n    }\n    invert() {\n        return new RemoveMarkStep(this.from, this.to, this.mark);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deleted && to.deleted || from.pos >= to.pos)\n            return null;\n        return new AddMarkStep(from.pos, to.pos, this.mark);\n    }\n    merge(other) {\n        if (other instanceof AddMarkStep &&\n            other.mark.eq(this.mark) &&\n            this.from <= other.to && this.to >= other.from)\n            return new AddMarkStep(Math.min(this.from, other.from), Math.max(this.to, other.to), this.mark);\n        return null;\n    }\n    toJSON() {\n        return { stepType: \"addMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for AddMarkStep.fromJSON\");\n        return new AddMarkStep(json.from, json.to, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"addMark\", AddMarkStep);\n/**\nRemove a mark from all inline content between two positions.\n*/\nclass RemoveMarkStep extends Step {\n    /**\n    Create a mark-removing step.\n    */\n    constructor(\n    /**\n    The start of the unmarked range.\n    */\n    from, \n    /**\n    The end of the unmarked range.\n    */\n    to, \n    /**\n    The mark to remove.\n    */\n    mark) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let oldSlice = doc.slice(this.from, this.to);\n        let slice = new Slice(mapFragment(oldSlice.content, node => {\n            return node.mark(this.mark.removeFromSet(node.marks));\n        }, doc), oldSlice.openStart, oldSlice.openEnd);\n        return StepResult.fromReplace(doc, this.from, this.to, slice);\n    }\n    invert() {\n        return new AddMarkStep(this.from, this.to, this.mark);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deleted && to.deleted || from.pos >= to.pos)\n            return null;\n        return new RemoveMarkStep(from.pos, to.pos, this.mark);\n    }\n    merge(other) {\n        if (other instanceof RemoveMarkStep &&\n            other.mark.eq(this.mark) &&\n            this.from <= other.to && this.to >= other.from)\n            return new RemoveMarkStep(Math.min(this.from, other.from), Math.max(this.to, other.to), this.mark);\n        return null;\n    }\n    toJSON() {\n        return { stepType: \"removeMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for RemoveMarkStep.fromJSON\");\n        return new RemoveMarkStep(json.from, json.to, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"removeMark\", RemoveMarkStep);\n/**\nAdd a mark to a specific node.\n*/\nclass AddNodeMarkStep extends Step {\n    /**\n    Create a node mark step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The mark to add.\n    */\n    mark) {\n        super();\n        this.pos = pos;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at mark step's position\");\n        let updated = node.type.create(node.attrs, null, this.mark.addToSet(node.marks));\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    invert(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (node) {\n            let newSet = this.mark.addToSet(node.marks);\n            if (newSet.length == node.marks.length) {\n                for (let i = 0; i < node.marks.length; i++)\n                    if (!node.marks[i].isInSet(newSet))\n                        return new AddNodeMarkStep(this.pos, node.marks[i]);\n                return new AddNodeMarkStep(this.pos, this.mark);\n            }\n        }\n        return new RemoveNodeMarkStep(this.pos, this.mark);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new AddNodeMarkStep(pos.pos, this.mark);\n    }\n    toJSON() {\n        return { stepType: \"addNodeMark\", pos: this.pos, mark: this.mark.toJSON() };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\")\n            throw new RangeError(\"Invalid input for AddNodeMarkStep.fromJSON\");\n        return new AddNodeMarkStep(json.pos, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"addNodeMark\", AddNodeMarkStep);\n/**\nRemove a mark from a specific node.\n*/\nclass RemoveNodeMarkStep extends Step {\n    /**\n    Create a mark-removing step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The mark to remove.\n    */\n    mark) {\n        super();\n        this.pos = pos;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at mark step's position\");\n        let updated = node.type.create(node.attrs, null, this.mark.removeFromSet(node.marks));\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    invert(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node || !this.mark.isInSet(node.marks))\n            return this;\n        return new AddNodeMarkStep(this.pos, this.mark);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new RemoveNodeMarkStep(pos.pos, this.mark);\n    }\n    toJSON() {\n        return { stepType: \"removeNodeMark\", pos: this.pos, mark: this.mark.toJSON() };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\")\n            throw new RangeError(\"Invalid input for RemoveNodeMarkStep.fromJSON\");\n        return new RemoveNodeMarkStep(json.pos, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"removeNodeMark\", RemoveNodeMarkStep);\n\n/**\nReplace a part of the document with a slice of new content.\n*/\nclass ReplaceStep extends Step {\n    /**\n    The given `slice` should fit the 'gap' between `from` and\n    `to`\u2014the depths must line up, and the surrounding nodes must be\n    able to be joined with the open sides of the slice. When\n    `structure` is true, the step will fail if the content between\n    from and to is not just a sequence of closing and then opening\n    tokens (this is to guard against rebased replace steps\n    overwriting something they weren't supposed to).\n    */\n    constructor(\n    /**\n    The start position of the replaced range.\n    */\n    from, \n    /**\n    The end position of the replaced range.\n    */\n    to, \n    /**\n    The slice to insert.\n    */\n    slice, \n    /**\n    @internal\n    */\n    structure = false) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.slice = slice;\n        this.structure = structure;\n    }\n    apply(doc) {\n        if (this.structure && contentBetween(doc, this.from, this.to))\n            return StepResult.fail(\"Structure replace would overwrite content\");\n        return StepResult.fromReplace(doc, this.from, this.to, this.slice);\n    }\n    getMap() {\n        return new StepMap([this.from, this.to - this.from, this.slice.size]);\n    }\n    invert(doc) {\n        return new ReplaceStep(this.from, this.from + this.slice.size, doc.slice(this.from, this.to));\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deletedAcross && to.deletedAcross)\n            return null;\n        return new ReplaceStep(from.pos, Math.max(from.pos, to.pos), this.slice);\n    }\n    merge(other) {\n        if (!(other instanceof ReplaceStep) || other.structure || this.structure)\n            return null;\n        if (this.from + this.slice.size == other.from && !this.slice.openEnd && !other.slice.openStart) {\n            let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n                : new Slice(this.slice.content.append(other.slice.content), this.slice.openStart, other.slice.openEnd);\n            return new ReplaceStep(this.from, this.to + (other.to - other.from), slice, this.structure);\n        }\n        else if (other.to == this.from && !this.slice.openStart && !other.slice.openEnd) {\n            let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n                : new Slice(other.slice.content.append(this.slice.content), other.slice.openStart, this.slice.openEnd);\n            return new ReplaceStep(other.from, this.to, slice, this.structure);\n        }\n        else {\n            return null;\n        }\n    }\n    toJSON() {\n        let json = { stepType: \"replace\", from: this.from, to: this.to };\n        if (this.slice.size)\n            json.slice = this.slice.toJSON();\n        if (this.structure)\n            json.structure = true;\n        return json;\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for ReplaceStep.fromJSON\");\n        return new ReplaceStep(json.from, json.to, Slice.fromJSON(schema, json.slice), !!json.structure);\n    }\n}\nStep.jsonID(\"replace\", ReplaceStep);\n/**\nReplace a part of the document with a slice of content, but\npreserve a range of the replaced content by moving it into the\nslice.\n*/\nclass ReplaceAroundStep extends Step {\n    /**\n    Create a replace-around step with the given range and gap.\n    `insert` should be the point in the slice into which the content\n    of the gap should be moved. `structure` has the same meaning as\n    it has in the [`ReplaceStep`](https://prosemirror.net/docs/ref/#transform.ReplaceStep) class.\n    */\n    constructor(\n    /**\n    The start position of the replaced range.\n    */\n    from, \n    /**\n    The end position of the replaced range.\n    */\n    to, \n    /**\n    The start of preserved range.\n    */\n    gapFrom, \n    /**\n    The end of preserved range.\n    */\n    gapTo, \n    /**\n    The slice to insert.\n    */\n    slice, \n    /**\n    The position in the slice where the preserved range should be\n    inserted.\n    */\n    insert, \n    /**\n    @internal\n    */\n    structure = false) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.gapFrom = gapFrom;\n        this.gapTo = gapTo;\n        this.slice = slice;\n        this.insert = insert;\n        this.structure = structure;\n    }\n    apply(doc) {\n        if (this.structure && (contentBetween(doc, this.from, this.gapFrom) ||\n            contentBetween(doc, this.gapTo, this.to)))\n            return StepResult.fail(\"Structure gap-replace would overwrite content\");\n        let gap = doc.slice(this.gapFrom, this.gapTo);\n        if (gap.openStart || gap.openEnd)\n            return StepResult.fail(\"Gap is not a flat range\");\n        let inserted = this.slice.insertAt(this.insert, gap.content);\n        if (!inserted)\n            return StepResult.fail(\"Content does not fit in gap\");\n        return StepResult.fromReplace(doc, this.from, this.to, inserted);\n    }\n    getMap() {\n        return new StepMap([this.from, this.gapFrom - this.from, this.insert,\n            this.gapTo, this.to - this.gapTo, this.slice.size - this.insert]);\n    }\n    invert(doc) {\n        let gap = this.gapTo - this.gapFrom;\n        return new ReplaceAroundStep(this.from, this.from + this.slice.size + gap, this.from + this.insert, this.from + this.insert + gap, doc.slice(this.from, this.to).removeBetween(this.gapFrom - this.from, this.gapTo - this.from), this.gapFrom - this.from, this.structure);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        let gapFrom = mapping.map(this.gapFrom, -1), gapTo = mapping.map(this.gapTo, 1);\n        if ((from.deletedAcross && to.deletedAcross) || gapFrom < from.pos || gapTo > to.pos)\n            return null;\n        return new ReplaceAroundStep(from.pos, to.pos, gapFrom, gapTo, this.slice, this.insert, this.structure);\n    }\n    toJSON() {\n        let json = { stepType: \"replaceAround\", from: this.from, to: this.to,\n            gapFrom: this.gapFrom, gapTo: this.gapTo, insert: this.insert };\n        if (this.slice.size)\n            json.slice = this.slice.toJSON();\n        if (this.structure)\n            json.structure = true;\n        return json;\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\" ||\n            typeof json.gapFrom != \"number\" || typeof json.gapTo != \"number\" || typeof json.insert != \"number\")\n            throw new RangeError(\"Invalid input for ReplaceAroundStep.fromJSON\");\n        return new ReplaceAroundStep(json.from, json.to, json.gapFrom, json.gapTo, Slice.fromJSON(schema, json.slice), json.insert, !!json.structure);\n    }\n}\nStep.jsonID(\"replaceAround\", ReplaceAroundStep);\nfunction contentBetween(doc, from, to) {\n    let $from = doc.resolve(from), dist = to - from, depth = $from.depth;\n    while (dist > 0 && depth > 0 && $from.indexAfter(depth) == $from.node(depth).childCount) {\n        depth--;\n        dist--;\n    }\n    if (dist > 0) {\n        let next = $from.node(depth).maybeChild($from.indexAfter(depth));\n        while (dist > 0) {\n            if (!next || next.isLeaf)\n                return true;\n            next = next.firstChild;\n            dist--;\n        }\n    }\n    return false;\n}\n\nfunction addMark(tr, from, to, mark) {\n    let removed = [], added = [];\n    let removing, adding;\n    tr.doc.nodesBetween(from, to, (node, pos, parent) => {\n        if (!node.isInline)\n            return;\n        let marks = node.marks;\n        if (!mark.isInSet(marks) && parent.type.allowsMarkType(mark.type)) {\n            let start = Math.max(pos, from), end = Math.min(pos + node.nodeSize, to);\n            let newSet = mark.addToSet(marks);\n            for (let i = 0; i < marks.length; i++) {\n                if (!marks[i].isInSet(newSet)) {\n                    if (removing && removing.to == start && removing.mark.eq(marks[i]))\n                        removing.to = end;\n                    else\n                        removed.push(removing = new RemoveMarkStep(start, end, marks[i]));\n                }\n            }\n            if (adding && adding.to == start)\n                adding.to = end;\n            else\n                added.push(adding = new AddMarkStep(start, end, mark));\n        }\n    });\n    removed.forEach(s => tr.step(s));\n    added.forEach(s => tr.step(s));\n}\nfunction removeMark(tr, from, to, mark) {\n    let matched = [], step = 0;\n    tr.doc.nodesBetween(from, to, (node, pos) => {\n        if (!node.isInline)\n            return;\n        step++;\n        let toRemove = null;\n        if (mark instanceof MarkType) {\n            let set = node.marks, found;\n            while (found = mark.isInSet(set)) {\n                (toRemove || (toRemove = [])).push(found);\n                set = found.removeFromSet(set);\n            }\n        }\n        else if (mark) {\n            if (mark.isInSet(node.marks))\n                toRemove = [mark];\n        }\n        else {\n            toRemove = node.marks;\n        }\n        if (toRemove && toRemove.length) {\n            let end = Math.min(pos + node.nodeSize, to);\n            for (let i = 0; i < toRemove.length; i++) {\n                let style = toRemove[i], found;\n                for (let j = 0; j < matched.length; j++) {\n                    let m = matched[j];\n                    if (m.step == step - 1 && style.eq(matched[j].style))\n                        found = m;\n                }\n                if (found) {\n                    found.to = end;\n                    found.step = step;\n                }\n                else {\n                    matched.push({ style, from: Math.max(pos, from), to: end, step });\n                }\n            }\n        }\n    });\n    matched.forEach(m => tr.step(new RemoveMarkStep(m.from, m.to, m.style)));\n}\nfunction clearIncompatible(tr, pos, parentType, match = parentType.contentMatch) {\n    let node = tr.doc.nodeAt(pos);\n    let delSteps = [], cur = pos + 1;\n    for (let i = 0; i < node.childCount; i++) {\n        let child = node.child(i), end = cur + child.nodeSize;\n        let allowed = match.matchType(child.type);\n        if (!allowed) {\n            delSteps.push(new ReplaceStep(cur, end, Slice.empty));\n        }\n        else {\n            match = allowed;\n            for (let j = 0; j < child.marks.length; j++)\n                if (!parentType.allowsMarkType(child.marks[j].type))\n                    tr.step(new RemoveMarkStep(cur, end, child.marks[j]));\n        }\n        cur = end;\n    }\n    if (!match.validEnd) {\n        let fill = match.fillBefore(Fragment.empty, true);\n        tr.replace(cur, cur, new Slice(fill, 0, 0));\n    }\n    for (let i = delSteps.length - 1; i >= 0; i--)\n        tr.step(delSteps[i]);\n}\n\nfunction canCut(node, start, end) {\n    return (start == 0 || node.canReplace(start, node.childCount)) &&\n        (end == node.childCount || node.canReplace(0, end));\n}\n/**\nTry to find a target depth to which the content in the given range\ncan be lifted. Will not go across\n[isolating](https://prosemirror.net/docs/ref/#model.NodeSpec.isolating) parent nodes.\n*/\nfunction liftTarget(range) {\n    let parent = range.parent;\n    let content = parent.content.cutByIndex(range.startIndex, range.endIndex);\n    for (let depth = range.depth;; --depth) {\n        let node = range.$from.node(depth);\n        let index = range.$from.index(depth), endIndex = range.$to.indexAfter(depth);\n        if (depth < range.depth && node.canReplace(index, endIndex, content))\n            return depth;\n        if (depth == 0 || node.type.spec.isolating || !canCut(node, index, endIndex))\n            break;\n    }\n    return null;\n}\nfunction lift(tr, range, target) {\n    let { $from, $to, depth } = range;\n    let gapStart = $from.before(depth + 1), gapEnd = $to.after(depth + 1);\n    let start = gapStart, end = gapEnd;\n    let before = Fragment.empty, openStart = 0;\n    for (let d = depth, splitting = false; d > target; d--)\n        if (splitting || $from.index(d) > 0) {\n            splitting = true;\n            before = Fragment.from($from.node(d).copy(before));\n            openStart++;\n        }\n        else {\n            start--;\n        }\n    let after = Fragment.empty, openEnd = 0;\n    for (let d = depth, splitting = false; d > target; d--)\n        if (splitting || $to.after(d + 1) < $to.end(d)) {\n            splitting = true;\n            after = Fragment.from($to.node(d).copy(after));\n            openEnd++;\n        }\n        else {\n            end++;\n        }\n    tr.step(new ReplaceAroundStep(start, end, gapStart, gapEnd, new Slice(before.append(after), openStart, openEnd), before.size - openStart, true));\n}\n/**\nTry to find a valid way to wrap the content in the given range in a\nnode of the given type. May introduce extra nodes around and inside\nthe wrapper node, if necessary. Returns null if no valid wrapping\ncould be found. When `innerRange` is given, that range's content is\nused as the content to fit into the wrapping, instead of the\ncontent of `range`.\n*/\nfunction findWrapping(range, nodeType, attrs = null, innerRange = range) {\n    let around = findWrappingOutside(range, nodeType);\n    let inner = around && findWrappingInside(innerRange, nodeType);\n    if (!inner)\n        return null;\n    return around.map(withAttrs)\n        .concat({ type: nodeType, attrs }).concat(inner.map(withAttrs));\n}\nfunction withAttrs(type) { return { type, attrs: null }; }\nfunction findWrappingOutside(range, type) {\n    let { parent, startIndex, endIndex } = range;\n    let around = parent.contentMatchAt(startIndex).findWrapping(type);\n    if (!around)\n        return null;\n    let outer = around.length ? around[0] : type;\n    return parent.canReplaceWith(startIndex, endIndex, outer) ? around : null;\n}\nfunction findWrappingInside(range, type) {\n    let { parent, startIndex, endIndex } = range;\n    let inner = parent.child(startIndex);\n    let inside = type.contentMatch.findWrapping(inner.type);\n    if (!inside)\n        return null;\n    let lastType = inside.length ? inside[inside.length - 1] : type;\n    let innerMatch = lastType.contentMatch;\n    for (let i = startIndex; innerMatch && i < endIndex; i++)\n        innerMatch = innerMatch.matchType(parent.child(i).type);\n    if (!innerMatch || !innerMatch.validEnd)\n        return null;\n    return inside;\n}\nfunction wrap(tr, range, wrappers) {\n    let content = Fragment.empty;\n    for (let i = wrappers.length - 1; i >= 0; i--) {\n        if (content.size) {\n            let match = wrappers[i].type.contentMatch.matchFragment(content);\n            if (!match || !match.validEnd)\n                throw new RangeError(\"Wrapper type given to Transform.wrap does not form valid content of its parent wrapper\");\n        }\n        content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content));\n    }\n    let start = range.start, end = range.end;\n    tr.step(new ReplaceAroundStep(start, end, start, end, new Slice(content, 0, 0), wrappers.length, true));\n}\nfunction setBlockType(tr, from, to, type, attrs) {\n    if (!type.isTextblock)\n        throw new RangeError(\"Type given to setBlockType should be a textblock\");\n    let mapFrom = tr.steps.length;\n    tr.doc.nodesBetween(from, to, (node, pos) => {\n        if (node.isTextblock && !node.hasMarkup(type, attrs) && canChangeType(tr.doc, tr.mapping.slice(mapFrom).map(pos), type)) {\n            // Ensure all markup that isn't allowed in the new node type is cleared\n            tr.clearIncompatible(tr.mapping.slice(mapFrom).map(pos, 1), type);\n            let mapping = tr.mapping.slice(mapFrom);\n            let startM = mapping.map(pos, 1), endM = mapping.map(pos + node.nodeSize, 1);\n            tr.step(new ReplaceAroundStep(startM, endM, startM + 1, endM - 1, new Slice(Fragment.from(type.create(attrs, null, node.marks)), 0, 0), 1, true));\n            return false;\n        }\n    });\n}\nfunction canChangeType(doc, pos, type) {\n    let $pos = doc.resolve(pos), index = $pos.index();\n    return $pos.parent.canReplaceWith(index, index + 1, type);\n}\n/**\nChange the type, attributes, and/or marks of the node at `pos`.\nWhen `type` isn't given, the existing node type is preserved,\n*/\nfunction setNodeMarkup(tr, pos, type, attrs, marks) {\n    let node = tr.doc.nodeAt(pos);\n    if (!node)\n        throw new RangeError(\"No node at given position\");\n    if (!type)\n        type = node.type;\n    let newNode = type.create(attrs, null, marks || node.marks);\n    if (node.isLeaf)\n        return tr.replaceWith(pos, pos + node.nodeSize, newNode);\n    if (!type.validContent(node.content))\n        throw new RangeError(\"Invalid content for node type \" + type.name);\n    tr.step(new ReplaceAroundStep(pos, pos + node.nodeSize, pos + 1, pos + node.nodeSize - 1, new Slice(Fragment.from(newNode), 0, 0), 1, true));\n}\n/**\nCheck whether splitting at the given position is allowed.\n*/\nfunction canSplit(doc, pos, depth = 1, typesAfter) {\n    let $pos = doc.resolve(pos), base = $pos.depth - depth;\n    let innerType = (typesAfter && typesAfter[typesAfter.length - 1]) || $pos.parent;\n    if (base < 0 || $pos.parent.type.spec.isolating ||\n        !$pos.parent.canReplace($pos.index(), $pos.parent.childCount) ||\n        !innerType.type.validContent($pos.parent.content.cutByIndex($pos.index(), $pos.parent.childCount)))\n        return false;\n    for (let d = $pos.depth - 1, i = depth - 2; d > base; d--, i--) {\n        let node = $pos.node(d), index = $pos.index(d);\n        if (node.type.spec.isolating)\n            return false;\n        let rest = node.content.cutByIndex(index, node.childCount);\n        let after = (typesAfter && typesAfter[i]) || node;\n        if (after != node)\n            rest = rest.replaceChild(0, after.type.create(after.attrs));\n        if (!node.canReplace(index + 1, node.childCount) || !after.type.validContent(rest))\n            return false;\n    }\n    let index = $pos.indexAfter(base);\n    let baseType = typesAfter && typesAfter[0];\n    return $pos.node(base).canReplaceWith(index, index, baseType ? baseType.type : $pos.node(base + 1).type);\n}\nfunction split(tr, pos, depth = 1, typesAfter) {\n    let $pos = tr.doc.resolve(pos), before = Fragment.empty, after = Fragment.empty;\n    for (let d = $pos.depth, e = $pos.depth - depth, i = depth - 1; d > e; d--, i--) {\n        before = Fragment.from($pos.node(d).copy(before));\n        let typeAfter = typesAfter && typesAfter[i];\n        after = Fragment.from(typeAfter ? typeAfter.type.create(typeAfter.attrs, after) : $pos.node(d).copy(after));\n    }\n    tr.step(new ReplaceStep(pos, pos, new Slice(before.append(after), depth, depth), true));\n}\n/**\nTest whether the blocks before and after a given position can be\njoined.\n*/\nfunction canJoin(doc, pos) {\n    let $pos = doc.resolve(pos), index = $pos.index();\n    return joinable($pos.nodeBefore, $pos.nodeAfter) &&\n        $pos.parent.canReplace(index, index + 1);\n}\nfunction joinable(a, b) {\n    return !!(a && b && !a.isLeaf && a.canAppend(b));\n}\n/**\nFind an ancestor of the given position that can be joined to the\nblock before (or after if `dir` is positive). Returns the joinable\npoint, if any.\n*/\nfunction joinPoint(doc, pos, dir = -1) {\n    let $pos = doc.resolve(pos);\n    for (let d = $pos.depth;; d--) {\n        let before, after, index = $pos.index(d);\n        if (d == $pos.depth) {\n            before = $pos.nodeBefore;\n            after = $pos.nodeAfter;\n        }\n        else if (dir > 0) {\n            before = $pos.node(d + 1);\n            index++;\n            after = $pos.node(d).maybeChild(index);\n        }\n        else {\n            before = $pos.node(d).maybeChild(index - 1);\n            after = $pos.node(d + 1);\n        }\n        if (before && !before.isTextblock && joinable(before, after) &&\n            $pos.node(d).canReplace(index, index + 1))\n            return pos;\n        if (d == 0)\n            break;\n        pos = dir < 0 ? $pos.before(d) : $pos.after(d);\n    }\n}\nfunction join(tr, pos, depth) {\n    let step = new ReplaceStep(pos - depth, pos + depth, Slice.empty, true);\n    tr.step(step);\n}\n/**\nTry to find a point where a node of the given type can be inserted\nnear `pos`, by searching up the node hierarchy when `pos` itself\nisn't a valid place but is at the start or end of a node. Return\nnull if no position was found.\n*/\nfunction insertPoint(doc, pos, nodeType) {\n    let $pos = doc.resolve(pos);\n    if ($pos.parent.canReplaceWith($pos.index(), $pos.index(), nodeType))\n        return pos;\n    if ($pos.parentOffset == 0)\n        for (let d = $pos.depth - 1; d >= 0; d--) {\n            let index = $pos.index(d);\n            if ($pos.node(d).canReplaceWith(index, index, nodeType))\n                return $pos.before(d + 1);\n            if (index > 0)\n                return null;\n        }\n    if ($pos.parentOffset == $pos.parent.content.size)\n        for (let d = $pos.depth - 1; d >= 0; d--) {\n            let index = $pos.indexAfter(d);\n            if ($pos.node(d).canReplaceWith(index, index, nodeType))\n                return $pos.after(d + 1);\n            if (index < $pos.node(d).childCount)\n                return null;\n        }\n    return null;\n}\n/**\nFinds a position at or around the given position where the given\nslice can be inserted. Will look at parent nodes' nearest boundary\nand try there, even if the original position wasn't directly at the\nstart or end of that node. Returns null when no position was found.\n*/\nfunction dropPoint(doc, pos, slice) {\n    let $pos = doc.resolve(pos);\n    if (!slice.content.size)\n        return pos;\n    let content = slice.content;\n    for (let i = 0; i < slice.openStart; i++)\n        content = content.firstChild.content;\n    for (let pass = 1; pass <= (slice.openStart == 0 && slice.size ? 2 : 1); pass++) {\n        for (let d = $pos.depth; d >= 0; d--) {\n            let bias = d == $pos.depth ? 0 : $pos.pos <= ($pos.start(d + 1) + $pos.end(d + 1)) / 2 ? -1 : 1;\n            let insertPos = $pos.index(d) + (bias > 0 ? 1 : 0);\n            let parent = $pos.node(d), fits = false;\n            if (pass == 1) {\n                fits = parent.canReplace(insertPos, insertPos, content);\n            }\n            else {\n                let wrapping = parent.contentMatchAt(insertPos).findWrapping(content.firstChild.type);\n                fits = wrapping && parent.canReplaceWith(insertPos, insertPos, wrapping[0]);\n            }\n            if (fits)\n                return bias == 0 ? $pos.pos : bias < 0 ? $pos.before(d + 1) : $pos.after(d + 1);\n        }\n    }\n    return null;\n}\n\n/**\n\u2018Fit\u2019 a slice into a given position in the document, producing a\n[step](https://prosemirror.net/docs/ref/#transform.Step) that inserts it. Will return null if\nthere's no meaningful way to insert the slice here, or inserting it\nwould be a no-op (an empty slice over an empty range).\n*/\nfunction replaceStep(doc, from, to = from, slice = Slice.empty) {\n    if (from == to && !slice.size)\n        return null;\n    let $from = doc.resolve(from), $to = doc.resolve(to);\n    // Optimization -- avoid work if it's obvious that it's not needed.\n    if (fitsTrivially($from, $to, slice))\n        return new ReplaceStep(from, to, slice);\n    return new Fitter($from, $to, slice).fit();\n}\nfunction fitsTrivially($from, $to, slice) {\n    return !slice.openStart && !slice.openEnd && $from.start() == $to.start() &&\n        $from.parent.canReplace($from.index(), $to.index(), slice.content);\n}\n// Algorithm for 'placing' the elements of a slice into a gap:\n//\n// We consider the content of each node that is open to the left to be\n// independently placeable. I.e. in <p(\"foo\"), p(\"bar\")>, when the\n// paragraph on the left is open, \"foo\" can be placed (somewhere on\n// the left side of the replacement gap) independently from p(\"bar\").\n//\n// This class tracks the state of the placement progress in the\n// following properties:\n//\n//  - `frontier` holds a stack of `{type, match}` objects that\n//    represent the open side of the replacement. It starts at\n//    `$from`, then moves forward as content is placed, and is finally\n//    reconciled with `$to`.\n//\n//  - `unplaced` is a slice that represents the content that hasn't\n//    been placed yet.\n//\n//  - `placed` is a fragment of placed content. Its open-start value\n//    is implicit in `$from`, and its open-end value in `frontier`.\nclass Fitter {\n    constructor($from, $to, unplaced) {\n        this.$from = $from;\n        this.$to = $to;\n        this.unplaced = unplaced;\n        this.frontier = [];\n        this.placed = Fragment.empty;\n        for (let i = 0; i <= $from.depth; i++) {\n            let node = $from.node(i);\n            this.frontier.push({\n                type: node.type,\n                match: node.contentMatchAt($from.indexAfter(i))\n            });\n        }\n        for (let i = $from.depth; i > 0; i--)\n            this.placed = Fragment.from($from.node(i).copy(this.placed));\n    }\n    get depth() { return this.frontier.length - 1; }\n    fit() {\n        // As long as there's unplaced content, try to place some of it.\n        // If that fails, either increase the open score of the unplaced\n        // slice, or drop nodes from it, and then try again.\n        while (this.unplaced.size) {\n            let fit = this.findFittable();\n            if (fit)\n                this.placeNodes(fit);\n            else\n                this.openMore() || this.dropNode();\n        }\n        // When there's inline content directly after the frontier _and_\n        // directly after `this.$to`, we must generate a `ReplaceAround`\n        // step that pulls that content into the node after the frontier.\n        // That means the fitting must be done to the end of the textblock\n        // node after `this.$to`, not `this.$to` itself.\n        let moveInline = this.mustMoveInline(), placedSize = this.placed.size - this.depth - this.$from.depth;\n        let $from = this.$from, $to = this.close(moveInline < 0 ? this.$to : $from.doc.resolve(moveInline));\n        if (!$to)\n            return null;\n        // If closing to `$to` succeeded, create a step\n        let content = this.placed, openStart = $from.depth, openEnd = $to.depth;\n        while (openStart && openEnd && content.childCount == 1) { // Normalize by dropping open parent nodes\n            content = content.firstChild.content;\n            openStart--;\n            openEnd--;\n        }\n        let slice = new Slice(content, openStart, openEnd);\n        if (moveInline > -1)\n            return new ReplaceAroundStep($from.pos, moveInline, this.$to.pos, this.$to.end(), slice, placedSize);\n        if (slice.size || $from.pos != this.$to.pos) // Don't generate no-op steps\n            return new ReplaceStep($from.pos, $to.pos, slice);\n        return null;\n    }\n    // Find a position on the start spine of `this.unplaced` that has\n    // content that can be moved somewhere on the frontier. Returns two\n    // depths, one for the slice and one for the frontier.\n    findFittable() {\n        let startDepth = this.unplaced.openStart;\n        for (let cur = this.unplaced.content, d = 0, openEnd = this.unplaced.openEnd; d < startDepth; d++) {\n            let node = cur.firstChild;\n            if (cur.childCount > 1)\n                openEnd = 0;\n            if (node.type.spec.isolating && openEnd <= d) {\n                startDepth = d;\n                break;\n            }\n            cur = node.content;\n        }\n        // Only try wrapping nodes (pass 2) after finding a place without\n        // wrapping failed.\n        for (let pass = 1; pass <= 2; pass++) {\n            for (let sliceDepth = pass == 1 ? startDepth : this.unplaced.openStart; sliceDepth >= 0; sliceDepth--) {\n                let fragment, parent = null;\n                if (sliceDepth) {\n                    parent = contentAt(this.unplaced.content, sliceDepth - 1).firstChild;\n                    fragment = parent.content;\n                }\n                else {\n                    fragment = this.unplaced.content;\n                }\n                let first = fragment.firstChild;\n                for (let frontierDepth = this.depth; frontierDepth >= 0; frontierDepth--) {\n                    let { type, match } = this.frontier[frontierDepth], wrap, inject = null;\n                    // In pass 1, if the next node matches, or there is no next\n                    // node but the parents look compatible, we've found a\n                    // place.\n                    if (pass == 1 && (first ? match.matchType(first.type) || (inject = match.fillBefore(Fragment.from(first), false))\n                        : parent && type.compatibleContent(parent.type)))\n                        return { sliceDepth, frontierDepth, parent, inject };\n                    // In pass 2, look for a set of wrapping nodes that make\n                    // `first` fit here.\n                    else if (pass == 2 && first && (wrap = match.findWrapping(first.type)))\n                        return { sliceDepth, frontierDepth, parent, wrap };\n                    // Don't continue looking further up if the parent node\n                    // would fit here.\n                    if (parent && match.matchType(parent.type))\n                        break;\n                }\n            }\n        }\n    }\n    openMore() {\n        let { content, openStart, openEnd } = this.unplaced;\n        let inner = contentAt(content, openStart);\n        if (!inner.childCount || inner.firstChild.isLeaf)\n            return false;\n        this.unplaced = new Slice(content, openStart + 1, Math.max(openEnd, inner.size + openStart >= content.size - openEnd ? openStart + 1 : 0));\n        return true;\n    }\n    dropNode() {\n        let { content, openStart, openEnd } = this.unplaced;\n        let inner = contentAt(content, openStart);\n        if (inner.childCount <= 1 && openStart > 0) {\n            let openAtEnd = content.size - openStart <= openStart + inner.size;\n            this.unplaced = new Slice(dropFromFragment(content, openStart - 1, 1), openStart - 1, openAtEnd ? openStart - 1 : openEnd);\n        }\n        else {\n            this.unplaced = new Slice(dropFromFragment(content, openStart, 1), openStart, openEnd);\n        }\n    }\n    // Move content from the unplaced slice at `sliceDepth` to the\n    // frontier node at `frontierDepth`. Close that frontier node when\n    // applicable.\n    placeNodes({ sliceDepth, frontierDepth, parent, inject, wrap }) {\n        while (this.depth > frontierDepth)\n            this.closeFrontierNode();\n        if (wrap)\n            for (let i = 0; i < wrap.length; i++)\n                this.openFrontierNode(wrap[i]);\n        let slice = this.unplaced, fragment = parent ? parent.content : slice.content;\n        let openStart = slice.openStart - sliceDepth;\n        let taken = 0, add = [];\n        let { match, type } = this.frontier[frontierDepth];\n        if (inject) {\n            for (let i = 0; i < inject.childCount; i++)\n                add.push(inject.child(i));\n            match = match.matchFragment(inject);\n        }\n        // Computes the amount of (end) open nodes at the end of the\n        // fragment. When 0, the parent is open, but no more. When\n        // negative, nothing is open.\n        let openEndCount = (fragment.size + sliceDepth) - (slice.content.size - slice.openEnd);\n        // Scan over the fragment, fitting as many child nodes as\n        // possible.\n        while (taken < fragment.childCount) {\n            let next = fragment.child(taken), matches = match.matchType(next.type);\n            if (!matches)\n                break;\n            taken++;\n            if (taken > 1 || openStart == 0 || next.content.size) { // Drop empty open nodes\n                match = matches;\n                add.push(closeNodeStart(next.mark(type.allowedMarks(next.marks)), taken == 1 ? openStart : 0, taken == fragment.childCount ? openEndCount : -1));\n            }\n        }\n        let toEnd = taken == fragment.childCount;\n        if (!toEnd)\n            openEndCount = -1;\n        this.placed = addToFragment(this.placed, frontierDepth, Fragment.from(add));\n        this.frontier[frontierDepth].match = match;\n        // If the parent types match, and the entire node was moved, and\n        // it's not open, close this frontier node right away.\n        if (toEnd && openEndCount < 0 && parent && parent.type == this.frontier[this.depth].type && this.frontier.length > 1)\n            this.closeFrontierNode();\n        // Add new frontier nodes for any open nodes at the end.\n        for (let i = 0, cur = fragment; i < openEndCount; i++) {\n            let node = cur.lastChild;\n            this.frontier.push({ type: node.type, match: node.contentMatchAt(node.childCount) });\n            cur = node.content;\n        }\n        // Update `this.unplaced`. Drop the entire node from which we\n        // placed it we got to its end, otherwise just drop the placed\n        // nodes.\n        this.unplaced = !toEnd ? new Slice(dropFromFragment(slice.content, sliceDepth, taken), slice.openStart, slice.openEnd)\n            : sliceDepth == 0 ? Slice.empty\n                : new Slice(dropFromFragment(slice.content, sliceDepth - 1, 1), sliceDepth - 1, openEndCount < 0 ? slice.openEnd : sliceDepth - 1);\n    }\n    mustMoveInline() {\n        if (!this.$to.parent.isTextblock)\n            return -1;\n        let top = this.frontier[this.depth], level;\n        if (!top.type.isTextblock || !contentAfterFits(this.$to, this.$to.depth, top.type, top.match, false) ||\n            (this.$to.depth == this.depth && (level = this.findCloseLevel(this.$to)) && level.depth == this.depth))\n            return -1;\n        let { depth } = this.$to, after = this.$to.after(depth);\n        while (depth > 1 && after == this.$to.end(--depth))\n            ++after;\n        return after;\n    }\n    findCloseLevel($to) {\n        scan: for (let i = Math.min(this.depth, $to.depth); i >= 0; i--) {\n            let { match, type } = this.frontier[i];\n            let dropInner = i < $to.depth && $to.end(i + 1) == $to.pos + ($to.depth - (i + 1));\n            let fit = contentAfterFits($to, i, type, match, dropInner);\n            if (!fit)\n                continue;\n            for (let d = i - 1; d >= 0; d--) {\n                let { match, type } = this.frontier[d];\n                let matches = contentAfterFits($to, d, type, match, true);\n                if (!matches || matches.childCount)\n                    continue scan;\n            }\n            return { depth: i, fit, move: dropInner ? $to.doc.resolve($to.after(i + 1)) : $to };\n        }\n    }\n    close($to) {\n        let close = this.findCloseLevel($to);\n        if (!close)\n            return null;\n        while (this.depth > close.depth)\n            this.closeFrontierNode();\n        if (close.fit.childCount)\n            this.placed = addToFragment(this.placed, close.depth, close.fit);\n        $to = close.move;\n        for (let d = close.depth + 1; d <= $to.depth; d++) {\n            let node = $to.node(d), add = node.type.contentMatch.fillBefore(node.content, true, $to.index(d));\n            this.openFrontierNode(node.type, node.attrs, add);\n        }\n        return $to;\n    }\n    openFrontierNode(type, attrs = null, content) {\n        let top = this.frontier[this.depth];\n        top.match = top.match.matchType(type);\n        this.placed = addToFragment(this.placed, this.depth, Fragment.from(type.create(attrs, content)));\n        this.frontier.push({ type, match: type.contentMatch });\n    }\n    closeFrontierNode() {\n        let open = this.frontier.pop();\n        let add = open.match.fillBefore(Fragment.empty, true);\n        if (add.childCount)\n            this.placed = addToFragment(this.placed, this.frontier.length, add);\n    }\n}\nfunction dropFromFragment(fragment, depth, count) {\n    if (depth == 0)\n        return fragment.cutByIndex(count, fragment.childCount);\n    return fragment.replaceChild(0, fragment.firstChild.copy(dropFromFragment(fragment.firstChild.content, depth - 1, count)));\n}\nfunction addToFragment(fragment, depth, content) {\n    if (depth == 0)\n        return fragment.append(content);\n    return fragment.replaceChild(fragment.childCount - 1, fragment.lastChild.copy(addToFragment(fragment.lastChild.content, depth - 1, content)));\n}\nfunction contentAt(fragment, depth) {\n    for (let i = 0; i < depth; i++)\n        fragment = fragment.firstChild.content;\n    return fragment;\n}\nfunction closeNodeStart(node, openStart, openEnd) {\n    if (openStart <= 0)\n        return node;\n    let frag = node.content;\n    if (openStart > 1)\n        frag = frag.replaceChild(0, closeNodeStart(frag.firstChild, openStart - 1, frag.childCount == 1 ? openEnd - 1 : 0));\n    if (openStart > 0) {\n        frag = node.type.contentMatch.fillBefore(frag).append(frag);\n        if (openEnd <= 0)\n            frag = frag.append(node.type.contentMatch.matchFragment(frag).fillBefore(Fragment.empty, true));\n    }\n    return node.copy(frag);\n}\nfunction contentAfterFits($to, depth, type, match, open) {\n    let node = $to.node(depth), index = open ? $to.indexAfter(depth) : $to.index(depth);\n    if (index == node.childCount && !type.compatibleContent(node.type))\n        return null;\n    let fit = match.fillBefore(node.content, true, index);\n    return fit && !invalidMarks(type, node.content, index) ? fit : null;\n}\nfunction invalidMarks(type, fragment, start) {\n    for (let i = start; i < fragment.childCount; i++)\n        if (!type.allowsMarks(fragment.child(i).marks))\n            return true;\n    return false;\n}\nfunction definesContent(type) {\n    return type.spec.defining || type.spec.definingForContent;\n}\nfunction replaceRange(tr, from, to, slice) {\n    if (!slice.size)\n        return tr.deleteRange(from, to);\n    let $from = tr.doc.resolve(from), $to = tr.doc.resolve(to);\n    if (fitsTrivially($from, $to, slice))\n        return tr.step(new ReplaceStep(from, to, slice));\n    let targetDepths = coveredDepths($from, tr.doc.resolve(to));\n    // Can't replace the whole document, so remove 0 if it's present\n    if (targetDepths[targetDepths.length - 1] == 0)\n        targetDepths.pop();\n    // Negative numbers represent not expansion over the whole node at\n    // that depth, but replacing from $from.before(-D) to $to.pos.\n    let preferredTarget = -($from.depth + 1);\n    targetDepths.unshift(preferredTarget);\n    // This loop picks a preferred target depth, if one of the covering\n    // depths is not outside of a defining node, and adds negative\n    // depths for any depth that has $from at its start and does not\n    // cross a defining node.\n    for (let d = $from.depth, pos = $from.pos - 1; d > 0; d--, pos--) {\n        let spec = $from.node(d).type.spec;\n        if (spec.defining || spec.definingAsContext || spec.isolating)\n            break;\n        if (targetDepths.indexOf(d) > -1)\n            preferredTarget = d;\n        else if ($from.before(d) == pos)\n            targetDepths.splice(1, 0, -d);\n    }\n    // Try to fit each possible depth of the slice into each possible\n    // target depth, starting with the preferred depths.\n    let preferredTargetIndex = targetDepths.indexOf(preferredTarget);\n    let leftNodes = [], preferredDepth = slice.openStart;\n    for (let content = slice.content, i = 0;; i++) {\n        let node = content.firstChild;\n        leftNodes.push(node);\n        if (i == slice.openStart)\n            break;\n        content = node.content;\n    }\n    // Back up preferredDepth to cover defining textblocks directly\n    // above it, possibly skipping a non-defining textblock.\n    for (let d = preferredDepth - 1; d >= 0; d--) {\n        let type = leftNodes[d].type, def = definesContent(type);\n        if (def && $from.node(preferredTargetIndex).type != type)\n            preferredDepth = d;\n        else if (def || !type.isTextblock)\n            break;\n    }\n    for (let j = slice.openStart; j >= 0; j--) {\n        let openDepth = (j + preferredDepth + 1) % (slice.openStart + 1);\n        let insert = leftNodes[openDepth];\n        if (!insert)\n            continue;\n        for (let i = 0; i < targetDepths.length; i++) {\n            // Loop over possible expansion levels, starting with the\n            // preferred one\n            let targetDepth = targetDepths[(i + preferredTargetIndex) % targetDepths.length], expand = true;\n            if (targetDepth < 0) {\n                expand = false;\n                targetDepth = -targetDepth;\n            }\n            let parent = $from.node(targetDepth - 1), index = $from.index(targetDepth - 1);\n            if (parent.canReplaceWith(index, index, insert.type, insert.marks))\n                return tr.replace($from.before(targetDepth), expand ? $to.after(targetDepth) : to, new Slice(closeFragment(slice.content, 0, slice.openStart, openDepth), openDepth, slice.openEnd));\n        }\n    }\n    let startSteps = tr.steps.length;\n    for (let i = targetDepths.length - 1; i >= 0; i--) {\n        tr.replace(from, to, slice);\n        if (tr.steps.length > startSteps)\n            break;\n        let depth = targetDepths[i];\n        if (depth < 0)\n            continue;\n        from = $from.before(depth);\n        to = $to.after(depth);\n    }\n}\nfunction closeFragment(fragment, depth, oldOpen, newOpen, parent) {\n    if (depth < oldOpen) {\n        let first = fragment.firstChild;\n        fragment = fragment.replaceChild(0, first.copy(closeFragment(first.content, depth + 1, oldOpen, newOpen, first)));\n    }\n    if (depth > newOpen) {\n        let match = parent.contentMatchAt(0);\n        let start = match.fillBefore(fragment).append(fragment);\n        fragment = start.append(match.matchFragment(start).fillBefore(Fragment.empty, true));\n    }\n    return fragment;\n}\nfunction replaceRangeWith(tr, from, to, node) {\n    if (!node.isInline && from == to && tr.doc.resolve(from).parent.content.size) {\n        let point = insertPoint(tr.doc, from, node.type);\n        if (point != null)\n            from = to = point;\n    }\n    tr.replaceRange(from, to, new Slice(Fragment.from(node), 0, 0));\n}\nfunction deleteRange(tr, from, to) {\n    let $from = tr.doc.resolve(from), $to = tr.doc.resolve(to);\n    let covered = coveredDepths($from, $to);\n    for (let i = 0; i < covered.length; i++) {\n        let depth = covered[i], last = i == covered.length - 1;\n        if ((last && depth == 0) || $from.node(depth).type.contentMatch.validEnd)\n            return tr.delete($from.start(depth), $to.end(depth));\n        if (depth > 0 && (last || $from.node(depth - 1).canReplace($from.index(depth - 1), $to.indexAfter(depth - 1))))\n            return tr.delete($from.before(depth), $to.after(depth));\n    }\n    for (let d = 1; d <= $from.depth && d <= $to.depth; d++) {\n        if (from - $from.start(d) == $from.depth - d && to > $from.end(d) && $to.end(d) - to != $to.depth - d)\n            return tr.delete($from.before(d), to);\n    }\n    tr.delete(from, to);\n}\n// Returns an array of all depths for which $from - $to spans the\n// whole content of the nodes at that depth.\nfunction coveredDepths($from, $to) {\n    let result = [], minDepth = Math.min($from.depth, $to.depth);\n    for (let d = minDepth; d >= 0; d--) {\n        let start = $from.start(d);\n        if (start < $from.pos - ($from.depth - d) ||\n            $to.end(d) > $to.pos + ($to.depth - d) ||\n            $from.node(d).type.spec.isolating ||\n            $to.node(d).type.spec.isolating)\n            break;\n        if (start == $to.start(d) ||\n            (d == $from.depth && d == $to.depth && $from.parent.inlineContent && $to.parent.inlineContent &&\n                d && $to.start(d - 1) == start - 1))\n            result.push(d);\n    }\n    return result;\n}\n\n/**\nUpdate an attribute in a specific node.\n*/\nclass AttrStep extends Step {\n    /**\n    Construct an attribute step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The attribute to set.\n    */\n    attr, \n    // The attribute's new value.\n    value) {\n        super();\n        this.pos = pos;\n        this.attr = attr;\n        this.value = value;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at attribute step's position\");\n        let attrs = Object.create(null);\n        for (let name in node.attrs)\n            attrs[name] = node.attrs[name];\n        attrs[this.attr] = this.value;\n        let updated = node.type.create(attrs, null, node.marks);\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    getMap() {\n        return StepMap.empty;\n    }\n    invert(doc) {\n        return new AttrStep(this.pos, this.attr, doc.nodeAt(this.pos).attrs[this.attr]);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new AttrStep(pos.pos, this.attr, this.value);\n    }\n    toJSON() {\n        return { stepType: \"attr\", pos: this.pos, attr: this.attr, value: this.value };\n    }\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\" || typeof json.attr != \"string\")\n            throw new RangeError(\"Invalid input for AttrStep.fromJSON\");\n        return new AttrStep(json.pos, json.attr, json.value);\n    }\n}\nStep.jsonID(\"attr\", AttrStep);\n\n/**\n@internal\n*/\nlet TransformError = class extends Error {\n};\nTransformError = function TransformError(message) {\n    let err = Error.call(this, message);\n    err.__proto__ = TransformError.prototype;\n    return err;\n};\nTransformError.prototype = Object.create(Error.prototype);\nTransformError.prototype.constructor = TransformError;\nTransformError.prototype.name = \"TransformError\";\n/**\nAbstraction to build up and track an array of\n[steps](https://prosemirror.net/docs/ref/#transform.Step) representing a document transformation.\n\nMost transforming methods return the `Transform` object itself, so\nthat they can be chained.\n*/\nclass Transform {\n    /**\n    Create a transform that starts with the given document.\n    */\n    constructor(\n    /**\n    The current document (the result of applying the steps in the\n    transform).\n    */\n    doc) {\n        this.doc = doc;\n        /**\n        The steps in this transform.\n        */\n        this.steps = [];\n        /**\n        The documents before each of the steps.\n        */\n        this.docs = [];\n        /**\n        A mapping with the maps for each of the steps in this transform.\n        */\n        this.mapping = new Mapping;\n    }\n    /**\n    The starting document.\n    */\n    get before() { return this.docs.length ? this.docs[0] : this.doc; }\n    /**\n    Apply a new step in this transform, saving the result. Throws an\n    error when the step fails.\n    */\n    step(step) {\n        let result = this.maybeStep(step);\n        if (result.failed)\n            throw new TransformError(result.failed);\n        return this;\n    }\n    /**\n    Try to apply a step in this transformation, ignoring it if it\n    fails. Returns the step result.\n    */\n    maybeStep(step) {\n        let result = step.apply(this.doc);\n        if (!result.failed)\n            this.addStep(step, result.doc);\n        return result;\n    }\n    /**\n    True when the document has been changed (when there are any\n    steps).\n    */\n    get docChanged() {\n        return this.steps.length > 0;\n    }\n    /**\n    @internal\n    */\n    addStep(step, doc) {\n        this.docs.push(this.doc);\n        this.steps.push(step);\n        this.mapping.appendMap(step.getMap());\n        this.doc = doc;\n    }\n    /**\n    Replace the part of the document between `from` and `to` with the\n    given `slice`.\n    */\n    replace(from, to = from, slice = Slice.empty) {\n        let step = replaceStep(this.doc, from, to, slice);\n        if (step)\n            this.step(step);\n        return this;\n    }\n    /**\n    Replace the given range with the given content, which may be a\n    fragment, node, or array of nodes.\n    */\n    replaceWith(from, to, content) {\n        return this.replace(from, to, new Slice(Fragment.from(content), 0, 0));\n    }\n    /**\n    Delete the content between the given positions.\n    */\n    delete(from, to) {\n        return this.replace(from, to, Slice.empty);\n    }\n    /**\n    Insert the given content at the given position.\n    */\n    insert(pos, content) {\n        return this.replaceWith(pos, pos, content);\n    }\n    /**\n    Replace a range of the document with a given slice, using\n    `from`, `to`, and the slice's\n    [`openStart`](https://prosemirror.net/docs/ref/#model.Slice.openStart) property as hints, rather\n    than fixed start and end points. This method may grow the\n    replaced area or close open nodes in the slice in order to get a\n    fit that is more in line with WYSIWYG expectations, by dropping\n    fully covered parent nodes of the replaced region when they are\n    marked [non-defining as\n    context](https://prosemirror.net/docs/ref/#model.NodeSpec.definingAsContext), or including an\n    open parent node from the slice that _is_ marked as [defining\n    its content](https://prosemirror.net/docs/ref/#model.NodeSpec.definingForContent).\n    \n    This is the method, for example, to handle paste. The similar\n    [`replace`](https://prosemirror.net/docs/ref/#transform.Transform.replace) method is a more\n    primitive tool which will _not_ move the start and end of its given\n    range, and is useful in situations where you need more precise\n    control over what happens.\n    */\n    replaceRange(from, to, slice) {\n        replaceRange(this, from, to, slice);\n        return this;\n    }\n    /**\n    Replace the given range with a node, but use `from` and `to` as\n    hints, rather than precise positions. When from and to are the same\n    and are at the start or end of a parent node in which the given\n    node doesn't fit, this method may _move_ them out towards a parent\n    that does allow the given node to be placed. When the given range\n    completely covers a parent node, this method may completely replace\n    that parent node.\n    */\n    replaceRangeWith(from, to, node) {\n        replaceRangeWith(this, from, to, node);\n        return this;\n    }\n    /**\n    Delete the given range, expanding it to cover fully covered\n    parent nodes until a valid replace is found.\n    */\n    deleteRange(from, to) {\n        deleteRange(this, from, to);\n        return this;\n    }\n    /**\n    Split the content in the given range off from its parent, if there\n    is sibling content before or after it, and move it up the tree to\n    the depth specified by `target`. You'll probably want to use\n    [`liftTarget`](https://prosemirror.net/docs/ref/#transform.liftTarget) to compute `target`, to make\n    sure the lift is valid.\n    */\n    lift(range, target) {\n        lift(this, range, target);\n        return this;\n    }\n    /**\n    Join the blocks around the given position. If depth is 2, their\n    last and first siblings are also joined, and so on.\n    */\n    join(pos, depth = 1) {\n        join(this, pos, depth);\n        return this;\n    }\n    /**\n    Wrap the given [range](https://prosemirror.net/docs/ref/#model.NodeRange) in the given set of wrappers.\n    The wrappers are assumed to be valid in this position, and should\n    probably be computed with [`findWrapping`](https://prosemirror.net/docs/ref/#transform.findWrapping).\n    */\n    wrap(range, wrappers) {\n        wrap(this, range, wrappers);\n        return this;\n    }\n    /**\n    Set the type of all textblocks (partly) between `from` and `to` to\n    the given node type with the given attributes.\n    */\n    setBlockType(from, to = from, type, attrs = null) {\n        setBlockType(this, from, to, type, attrs);\n        return this;\n    }\n    /**\n    Change the type, attributes, and/or marks of the node at `pos`.\n    When `type` isn't given, the existing node type is preserved,\n    */\n    setNodeMarkup(pos, type, attrs = null, marks) {\n        setNodeMarkup(this, pos, type, attrs, marks);\n        return this;\n    }\n    /**\n    Set a single attribute on a given node to a new value.\n    */\n    setNodeAttribute(pos, attr, value) {\n        this.step(new AttrStep(pos, attr, value));\n        return this;\n    }\n    /**\n    Add a mark to the node at position `pos`.\n    */\n    addNodeMark(pos, mark) {\n        this.step(new AddNodeMarkStep(pos, mark));\n        return this;\n    }\n    /**\n    Remove a mark (or a mark of the given type) from the node at\n    position `pos`.\n    */\n    removeNodeMark(pos, mark) {\n        if (!(mark instanceof Mark)) {\n            let node = this.doc.nodeAt(pos);\n            if (!node)\n                throw new RangeError(\"No node at position \" + pos);\n            mark = mark.isInSet(node.marks);\n            if (!mark)\n                return this;\n        }\n        this.step(new RemoveNodeMarkStep(pos, mark));\n        return this;\n    }\n    /**\n    Split the node at the given position, and optionally, if `depth` is\n    greater than one, any number of nodes above that. By default, the\n    parts split off will inherit the node type of the original node.\n    This can be changed by passing an array of types and attributes to\n    use after the split.\n    */\n    split(pos, depth = 1, typesAfter) {\n        split(this, pos, depth, typesAfter);\n        return this;\n    }\n    /**\n    Add the given mark to the inline content between `from` and `to`.\n    */\n    addMark(from, to, mark) {\n        addMark(this, from, to, mark);\n        return this;\n    }\n    /**\n    Remove marks from inline nodes between `from` and `to`. When\n    `mark` is a single mark, remove precisely that mark. When it is\n    a mark type, remove all marks of that type. When it is null,\n    remove all marks of any type.\n    */\n    removeMark(from, to, mark) {\n        removeMark(this, from, to, mark);\n        return this;\n    }\n    /**\n    Removes all marks and nodes from the content of the node at\n    `pos` that don't match the given new parent node type. Accepts\n    an optional starting [content match](https://prosemirror.net/docs/ref/#model.ContentMatch) as\n    third argument.\n    */\n    clearIncompatible(pos, parentType, match) {\n        clearIncompatible(this, pos, parentType, match);\n        return this;\n    }\n}\n\nexport { AddMarkStep, AddNodeMarkStep, AttrStep, MapResult, Mapping, RemoveMarkStep, RemoveNodeMarkStep, ReplaceAroundStep, ReplaceStep, Step, StepMap, StepResult, Transform, TransformError, canJoin, canSplit, dropPoint, findWrapping, insertPoint, joinPoint, liftTarget, replaceStep };\n", "import { Slice, Fragment, Mark, Node } from 'prosemirror-model';\nimport { ReplaceStep, ReplaceAroundStep, Transform } from 'prosemirror-transform';\n\nconst classesById = Object.create(null);\n/**\nSuperclass for editor selections. Every selection type should\nextend this. Should not be instantiated directly.\n*/\nclass Selection {\n    /**\n    Initialize a selection with the head and anchor and ranges. If no\n    ranges are given, constructs a single range across `$anchor` and\n    `$head`.\n    */\n    constructor(\n    /**\n    The resolved anchor of the selection (the side that stays in\n    place when the selection is modified).\n    */\n    $anchor, \n    /**\n    The resolved head of the selection (the side that moves when\n    the selection is modified).\n    */\n    $head, ranges) {\n        this.$anchor = $anchor;\n        this.$head = $head;\n        this.ranges = ranges || [new SelectionRange($anchor.min($head), $anchor.max($head))];\n    }\n    /**\n    The selection's anchor, as an unresolved position.\n    */\n    get anchor() { return this.$anchor.pos; }\n    /**\n    The selection's head.\n    */\n    get head() { return this.$head.pos; }\n    /**\n    The lower bound of the selection's main range.\n    */\n    get from() { return this.$from.pos; }\n    /**\n    The upper bound of the selection's main range.\n    */\n    get to() { return this.$to.pos; }\n    /**\n    The resolved lower  bound of the selection's main range.\n    */\n    get $from() {\n        return this.ranges[0].$from;\n    }\n    /**\n    The resolved upper bound of the selection's main range.\n    */\n    get $to() {\n        return this.ranges[0].$to;\n    }\n    /**\n    Indicates whether the selection contains any content.\n    */\n    get empty() {\n        let ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++)\n            if (ranges[i].$from.pos != ranges[i].$to.pos)\n                return false;\n        return true;\n    }\n    /**\n    Get the content of this selection as a slice.\n    */\n    content() {\n        return this.$from.doc.slice(this.from, this.to, true);\n    }\n    /**\n    Replace the selection with a slice or, if no slice is given,\n    delete the selection. Will append to the given transaction.\n    */\n    replace(tr, content = Slice.empty) {\n        // Put the new selection at the position after the inserted\n        // content. When that ended in an inline node, search backwards,\n        // to get the position after that node. If not, search forward.\n        let lastNode = content.content.lastChild, lastParent = null;\n        for (let i = 0; i < content.openEnd; i++) {\n            lastParent = lastNode;\n            lastNode = lastNode.lastChild;\n        }\n        let mapFrom = tr.steps.length, ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++) {\n            let { $from, $to } = ranges[i], mapping = tr.mapping.slice(mapFrom);\n            tr.replaceRange(mapping.map($from.pos), mapping.map($to.pos), i ? Slice.empty : content);\n            if (i == 0)\n                selectionToInsertionEnd(tr, mapFrom, (lastNode ? lastNode.isInline : lastParent && lastParent.isTextblock) ? -1 : 1);\n        }\n    }\n    /**\n    Replace the selection with the given node, appending the changes\n    to the given transaction.\n    */\n    replaceWith(tr, node) {\n        let mapFrom = tr.steps.length, ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++) {\n            let { $from, $to } = ranges[i], mapping = tr.mapping.slice(mapFrom);\n            let from = mapping.map($from.pos), to = mapping.map($to.pos);\n            if (i) {\n                tr.deleteRange(from, to);\n            }\n            else {\n                tr.replaceRangeWith(from, to, node);\n                selectionToInsertionEnd(tr, mapFrom, node.isInline ? -1 : 1);\n            }\n        }\n    }\n    /**\n    Find a valid cursor or leaf node selection starting at the given\n    position and searching back if `dir` is negative, and forward if\n    positive. When `textOnly` is true, only consider cursor\n    selections. Will return null when no valid selection position is\n    found.\n    */\n    static findFrom($pos, dir, textOnly = false) {\n        let inner = $pos.parent.inlineContent ? new TextSelection($pos)\n            : findSelectionIn($pos.node(0), $pos.parent, $pos.pos, $pos.index(), dir, textOnly);\n        if (inner)\n            return inner;\n        for (let depth = $pos.depth - 1; depth >= 0; depth--) {\n            let found = dir < 0\n                ? findSelectionIn($pos.node(0), $pos.node(depth), $pos.before(depth + 1), $pos.index(depth), dir, textOnly)\n                : findSelectionIn($pos.node(0), $pos.node(depth), $pos.after(depth + 1), $pos.index(depth) + 1, dir, textOnly);\n            if (found)\n                return found;\n        }\n        return null;\n    }\n    /**\n    Find a valid cursor or leaf node selection near the given\n    position. Searches forward first by default, but if `bias` is\n    negative, it will search backwards first.\n    */\n    static near($pos, bias = 1) {\n        return this.findFrom($pos, bias) || this.findFrom($pos, -bias) || new AllSelection($pos.node(0));\n    }\n    /**\n    Find the cursor or leaf node selection closest to the start of\n    the given document. Will return an\n    [`AllSelection`](https://prosemirror.net/docs/ref/#state.AllSelection) if no valid position\n    exists.\n    */\n    static atStart(doc) {\n        return findSelectionIn(doc, doc, 0, 0, 1) || new AllSelection(doc);\n    }\n    /**\n    Find the cursor or leaf node selection closest to the end of the\n    given document.\n    */\n    static atEnd(doc) {\n        return findSelectionIn(doc, doc, doc.content.size, doc.childCount, -1) || new AllSelection(doc);\n    }\n    /**\n    Deserialize the JSON representation of a selection. Must be\n    implemented for custom classes (as a static class method).\n    */\n    static fromJSON(doc, json) {\n        if (!json || !json.type)\n            throw new RangeError(\"Invalid input for Selection.fromJSON\");\n        let cls = classesById[json.type];\n        if (!cls)\n            throw new RangeError(`No selection type ${json.type} defined`);\n        return cls.fromJSON(doc, json);\n    }\n    /**\n    To be able to deserialize selections from JSON, custom selection\n    classes must register themselves with an ID string, so that they\n    can be disambiguated. Try to pick something that's unlikely to\n    clash with classes from other modules.\n    */\n    static jsonID(id, selectionClass) {\n        if (id in classesById)\n            throw new RangeError(\"Duplicate use of selection JSON ID \" + id);\n        classesById[id] = selectionClass;\n        selectionClass.prototype.jsonID = id;\n        return selectionClass;\n    }\n    /**\n    Get a [bookmark](https://prosemirror.net/docs/ref/#state.SelectionBookmark) for this selection,\n    which is a value that can be mapped without having access to a\n    current document, and later resolved to a real selection for a\n    given document again. (This is used mostly by the history to\n    track and restore old selections.) The default implementation of\n    this method just converts the selection to a text selection and\n    returns the bookmark for that.\n    */\n    getBookmark() {\n        return TextSelection.between(this.$anchor, this.$head).getBookmark();\n    }\n}\nSelection.prototype.visible = true;\n/**\nRepresents a selected range in a document.\n*/\nclass SelectionRange {\n    /**\n    Create a range.\n    */\n    constructor(\n    /**\n    The lower bound of the range.\n    */\n    $from, \n    /**\n    The upper bound of the range.\n    */\n    $to) {\n        this.$from = $from;\n        this.$to = $to;\n    }\n}\nlet warnedAboutTextSelection = false;\nfunction checkTextSelection($pos) {\n    if (!warnedAboutTextSelection && !$pos.parent.inlineContent) {\n        warnedAboutTextSelection = true;\n        console[\"warn\"](\"TextSelection endpoint not pointing into a node with inline content (\" + $pos.parent.type.name + \")\");\n    }\n}\n/**\nA text selection represents a classical editor selection, with a\nhead (the moving side) and anchor (immobile side), both of which\npoint into textblock nodes. It can be empty (a regular cursor\nposition).\n*/\nclass TextSelection extends Selection {\n    /**\n    Construct a text selection between the given points.\n    */\n    constructor($anchor, $head = $anchor) {\n        checkTextSelection($anchor);\n        checkTextSelection($head);\n        super($anchor, $head);\n    }\n    /**\n    Returns a resolved position if this is a cursor selection (an\n    empty text selection), and null otherwise.\n    */\n    get $cursor() { return this.$anchor.pos == this.$head.pos ? this.$head : null; }\n    map(doc, mapping) {\n        let $head = doc.resolve(mapping.map(this.head));\n        if (!$head.parent.inlineContent)\n            return Selection.near($head);\n        let $anchor = doc.resolve(mapping.map(this.anchor));\n        return new TextSelection($anchor.parent.inlineContent ? $anchor : $head, $head);\n    }\n    replace(tr, content = Slice.empty) {\n        super.replace(tr, content);\n        if (content == Slice.empty) {\n            let marks = this.$from.marksAcross(this.$to);\n            if (marks)\n                tr.ensureMarks(marks);\n        }\n    }\n    eq(other) {\n        return other instanceof TextSelection && other.anchor == this.anchor && other.head == this.head;\n    }\n    getBookmark() {\n        return new TextBookmark(this.anchor, this.head);\n    }\n    toJSON() {\n        return { type: \"text\", anchor: this.anchor, head: this.head };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(doc, json) {\n        if (typeof json.anchor != \"number\" || typeof json.head != \"number\")\n            throw new RangeError(\"Invalid input for TextSelection.fromJSON\");\n        return new TextSelection(doc.resolve(json.anchor), doc.resolve(json.head));\n    }\n    /**\n    Create a text selection from non-resolved positions.\n    */\n    static create(doc, anchor, head = anchor) {\n        let $anchor = doc.resolve(anchor);\n        return new this($anchor, head == anchor ? $anchor : doc.resolve(head));\n    }\n    /**\n    Return a text selection that spans the given positions or, if\n    they aren't text positions, find a text selection near them.\n    `bias` determines whether the method searches forward (default)\n    or backwards (negative number) first. Will fall back to calling\n    [`Selection.near`](https://prosemirror.net/docs/ref/#state.Selection^near) when the document\n    doesn't contain a valid text position.\n    */\n    static between($anchor, $head, bias) {\n        let dPos = $anchor.pos - $head.pos;\n        if (!bias || dPos)\n            bias = dPos >= 0 ? 1 : -1;\n        if (!$head.parent.inlineContent) {\n            let found = Selection.findFrom($head, bias, true) || Selection.findFrom($head, -bias, true);\n            if (found)\n                $head = found.$head;\n            else\n                return Selection.near($head, bias);\n        }\n        if (!$anchor.parent.inlineContent) {\n            if (dPos == 0) {\n                $anchor = $head;\n            }\n            else {\n                $anchor = (Selection.findFrom($anchor, -bias, true) || Selection.findFrom($anchor, bias, true)).$anchor;\n                if (($anchor.pos < $head.pos) != (dPos < 0))\n                    $anchor = $head;\n            }\n        }\n        return new TextSelection($anchor, $head);\n    }\n}\nSelection.jsonID(\"text\", TextSelection);\nclass TextBookmark {\n    constructor(anchor, head) {\n        this.anchor = anchor;\n        this.head = head;\n    }\n    map(mapping) {\n        return new TextBookmark(mapping.map(this.anchor), mapping.map(this.head));\n    }\n    resolve(doc) {\n        return TextSelection.between(doc.resolve(this.anchor), doc.resolve(this.head));\n    }\n}\n/**\nA node selection is a selection that points at a single node. All\nnodes marked [selectable](https://prosemirror.net/docs/ref/#model.NodeSpec.selectable) can be the\ntarget of a node selection. In such a selection, `from` and `to`\npoint directly before and after the selected node, `anchor` equals\n`from`, and `head` equals `to`..\n*/\nclass NodeSelection extends Selection {\n    /**\n    Create a node selection. Does not verify the validity of its\n    argument.\n    */\n    constructor($pos) {\n        let node = $pos.nodeAfter;\n        let $end = $pos.node(0).resolve($pos.pos + node.nodeSize);\n        super($pos, $end);\n        this.node = node;\n    }\n    map(doc, mapping) {\n        let { deleted, pos } = mapping.mapResult(this.anchor);\n        let $pos = doc.resolve(pos);\n        if (deleted)\n            return Selection.near($pos);\n        return new NodeSelection($pos);\n    }\n    content() {\n        return new Slice(Fragment.from(this.node), 0, 0);\n    }\n    eq(other) {\n        return other instanceof NodeSelection && other.anchor == this.anchor;\n    }\n    toJSON() {\n        return { type: \"node\", anchor: this.anchor };\n    }\n    getBookmark() { return new NodeBookmark(this.anchor); }\n    /**\n    @internal\n    */\n    static fromJSON(doc, json) {\n        if (typeof json.anchor != \"number\")\n            throw new RangeError(\"Invalid input for NodeSelection.fromJSON\");\n        return new NodeSelection(doc.resolve(json.anchor));\n    }\n    /**\n    Create a node selection from non-resolved positions.\n    */\n    static create(doc, from) {\n        return new NodeSelection(doc.resolve(from));\n    }\n    /**\n    Determines whether the given node may be selected as a node\n    selection.\n    */\n    static isSelectable(node) {\n        return !node.isText && node.type.spec.selectable !== false;\n    }\n}\nNodeSelection.prototype.visible = false;\nSelection.jsonID(\"node\", NodeSelection);\nclass NodeBookmark {\n    constructor(anchor) {\n        this.anchor = anchor;\n    }\n    map(mapping) {\n        let { deleted, pos } = mapping.mapResult(this.anchor);\n        return deleted ? new TextBookmark(pos, pos) : new NodeBookmark(pos);\n    }\n    resolve(doc) {\n        let $pos = doc.resolve(this.anchor), node = $pos.nodeAfter;\n        if (node && NodeSelection.isSelectable(node))\n            return new NodeSelection($pos);\n        return Selection.near($pos);\n    }\n}\n/**\nA selection type that represents selecting the whole document\n(which can not necessarily be expressed with a text selection, when\nthere are for example leaf block nodes at the start or end of the\ndocument).\n*/\nclass AllSelection extends Selection {\n    /**\n    Create an all-selection over the given document.\n    */\n    constructor(doc) {\n        super(doc.resolve(0), doc.resolve(doc.content.size));\n    }\n    replace(tr, content = Slice.empty) {\n        if (content == Slice.empty) {\n            tr.delete(0, tr.doc.content.size);\n            let sel = Selection.atStart(tr.doc);\n            if (!sel.eq(tr.selection))\n                tr.setSelection(sel);\n        }\n        else {\n            super.replace(tr, content);\n        }\n    }\n    toJSON() { return { type: \"all\" }; }\n    /**\n    @internal\n    */\n    static fromJSON(doc) { return new AllSelection(doc); }\n    map(doc) { return new AllSelection(doc); }\n    eq(other) { return other instanceof AllSelection; }\n    getBookmark() { return AllBookmark; }\n}\nSelection.jsonID(\"all\", AllSelection);\nconst AllBookmark = {\n    map() { return this; },\n    resolve(doc) { return new AllSelection(doc); }\n};\n// FIXME we'll need some awareness of text direction when scanning for selections\n// Try to find a selection inside the given node. `pos` points at the\n// position where the search starts. When `text` is true, only return\n// text selections.\nfunction findSelectionIn(doc, node, pos, index, dir, text = false) {\n    if (node.inlineContent)\n        return TextSelection.create(doc, pos);\n    for (let i = index - (dir > 0 ? 0 : 1); dir > 0 ? i < node.childCount : i >= 0; i += dir) {\n        let child = node.child(i);\n        if (!child.isAtom) {\n            let inner = findSelectionIn(doc, child, pos + dir, dir < 0 ? child.childCount : 0, dir, text);\n            if (inner)\n                return inner;\n        }\n        else if (!text && NodeSelection.isSelectable(child)) {\n            return NodeSelection.create(doc, pos - (dir < 0 ? child.nodeSize : 0));\n        }\n        pos += child.nodeSize * dir;\n    }\n    return null;\n}\nfunction selectionToInsertionEnd(tr, startLen, bias) {\n    let last = tr.steps.length - 1;\n    if (last < startLen)\n        return;\n    let step = tr.steps[last];\n    if (!(step instanceof ReplaceStep || step instanceof ReplaceAroundStep))\n        return;\n    let map = tr.mapping.maps[last], end;\n    map.forEach((_from, _to, _newFrom, newTo) => { if (end == null)\n        end = newTo; });\n    tr.setSelection(Selection.near(tr.doc.resolve(end), bias));\n}\n\nconst UPDATED_SEL = 1, UPDATED_MARKS = 2, UPDATED_SCROLL = 4;\n/**\nAn editor state transaction, which can be applied to a state to\ncreate an updated state. Use\n[`EditorState.tr`](https://prosemirror.net/docs/ref/#state.EditorState.tr) to create an instance.\n\nTransactions track changes to the document (they are a subclass of\n[`Transform`](https://prosemirror.net/docs/ref/#transform.Transform)), but also other state changes,\nlike selection updates and adjustments of the set of [stored\nmarks](https://prosemirror.net/docs/ref/#state.EditorState.storedMarks). In addition, you can store\nmetadata properties in a transaction, which are extra pieces of\ninformation that client code or plugins can use to describe what a\ntransaction represents, so that they can update their [own\nstate](https://prosemirror.net/docs/ref/#state.StateField) accordingly.\n\nThe [editor view](https://prosemirror.net/docs/ref/#view.EditorView) uses a few metadata properties:\nit will attach a property `\"pointer\"` with the value `true` to\nselection transactions directly caused by mouse or touch input, and\na `\"uiEvent\"` property of that may be `\"paste\"`, `\"cut\"`, or `\"drop\"`.\n*/\nclass Transaction extends Transform {\n    /**\n    @internal\n    */\n    constructor(state) {\n        super(state.doc);\n        // The step count for which the current selection is valid.\n        this.curSelectionFor = 0;\n        // Bitfield to track which aspects of the state were updated by\n        // this transaction.\n        this.updated = 0;\n        // Object used to store metadata properties for the transaction.\n        this.meta = Object.create(null);\n        this.time = Date.now();\n        this.curSelection = state.selection;\n        this.storedMarks = state.storedMarks;\n    }\n    /**\n    The transaction's current selection. This defaults to the editor\n    selection [mapped](https://prosemirror.net/docs/ref/#state.Selection.map) through the steps in the\n    transaction, but can be overwritten with\n    [`setSelection`](https://prosemirror.net/docs/ref/#state.Transaction.setSelection).\n    */\n    get selection() {\n        if (this.curSelectionFor < this.steps.length) {\n            this.curSelection = this.curSelection.map(this.doc, this.mapping.slice(this.curSelectionFor));\n            this.curSelectionFor = this.steps.length;\n        }\n        return this.curSelection;\n    }\n    /**\n    Update the transaction's current selection. Will determine the\n    selection that the editor gets when the transaction is applied.\n    */\n    setSelection(selection) {\n        if (selection.$from.doc != this.doc)\n            throw new RangeError(\"Selection passed to setSelection must point at the current document\");\n        this.curSelection = selection;\n        this.curSelectionFor = this.steps.length;\n        this.updated = (this.updated | UPDATED_SEL) & ~UPDATED_MARKS;\n        this.storedMarks = null;\n        return this;\n    }\n    /**\n    Whether the selection was explicitly updated by this transaction.\n    */\n    get selectionSet() {\n        return (this.updated & UPDATED_SEL) > 0;\n    }\n    /**\n    Set the current stored marks.\n    */\n    setStoredMarks(marks) {\n        this.storedMarks = marks;\n        this.updated |= UPDATED_MARKS;\n        return this;\n    }\n    /**\n    Make sure the current stored marks or, if that is null, the marks\n    at the selection, match the given set of marks. Does nothing if\n    this is already the case.\n    */\n    ensureMarks(marks) {\n        if (!Mark.sameSet(this.storedMarks || this.selection.$from.marks(), marks))\n            this.setStoredMarks(marks);\n        return this;\n    }\n    /**\n    Add a mark to the set of stored marks.\n    */\n    addStoredMark(mark) {\n        return this.ensureMarks(mark.addToSet(this.storedMarks || this.selection.$head.marks()));\n    }\n    /**\n    Remove a mark or mark type from the set of stored marks.\n    */\n    removeStoredMark(mark) {\n        return this.ensureMarks(mark.removeFromSet(this.storedMarks || this.selection.$head.marks()));\n    }\n    /**\n    Whether the stored marks were explicitly set for this transaction.\n    */\n    get storedMarksSet() {\n        return (this.updated & UPDATED_MARKS) > 0;\n    }\n    /**\n    @internal\n    */\n    addStep(step, doc) {\n        super.addStep(step, doc);\n        this.updated = this.updated & ~UPDATED_MARKS;\n        this.storedMarks = null;\n    }\n    /**\n    Update the timestamp for the transaction.\n    */\n    setTime(time) {\n        this.time = time;\n        return this;\n    }\n    /**\n    Replace the current selection with the given slice.\n    */\n    replaceSelection(slice) {\n        this.selection.replace(this, slice);\n        return this;\n    }\n    /**\n    Replace the selection with the given node. When `inheritMarks` is\n    true and the content is inline, it inherits the marks from the\n    place where it is inserted.\n    */\n    replaceSelectionWith(node, inheritMarks = true) {\n        let selection = this.selection;\n        if (inheritMarks)\n            node = node.mark(this.storedMarks || (selection.empty ? selection.$from.marks() : (selection.$from.marksAcross(selection.$to) || Mark.none)));\n        selection.replaceWith(this, node);\n        return this;\n    }\n    /**\n    Delete the selection.\n    */\n    deleteSelection() {\n        this.selection.replace(this);\n        return this;\n    }\n    /**\n    Replace the given range, or the selection if no range is given,\n    with a text node containing the given string.\n    */\n    insertText(text, from, to) {\n        let schema = this.doc.type.schema;\n        if (from == null) {\n            if (!text)\n                return this.deleteSelection();\n            return this.replaceSelectionWith(schema.text(text), true);\n        }\n        else {\n            if (to == null)\n                to = from;\n            to = to == null ? from : to;\n            if (!text)\n                return this.deleteRange(from, to);\n            let marks = this.storedMarks;\n            if (!marks) {\n                let $from = this.doc.resolve(from);\n                marks = to == from ? $from.marks() : $from.marksAcross(this.doc.resolve(to));\n            }\n            this.replaceRangeWith(from, to, schema.text(text, marks));\n            if (!this.selection.empty)\n                this.setSelection(Selection.near(this.selection.$to));\n            return this;\n        }\n    }\n    /**\n    Store a metadata property in this transaction, keyed either by\n    name or by plugin.\n    */\n    setMeta(key, value) {\n        this.meta[typeof key == \"string\" ? key : key.key] = value;\n        return this;\n    }\n    /**\n    Retrieve a metadata property for a given name or plugin.\n    */\n    getMeta(key) {\n        return this.meta[typeof key == \"string\" ? key : key.key];\n    }\n    /**\n    Returns true if this transaction doesn't contain any metadata,\n    and can thus safely be extended.\n    */\n    get isGeneric() {\n        for (let _ in this.meta)\n            return false;\n        return true;\n    }\n    /**\n    Indicate that the editor should scroll the selection into view\n    when updated to the state produced by this transaction.\n    */\n    scrollIntoView() {\n        this.updated |= UPDATED_SCROLL;\n        return this;\n    }\n    /**\n    True when this transaction has had `scrollIntoView` called on it.\n    */\n    get scrolledIntoView() {\n        return (this.updated & UPDATED_SCROLL) > 0;\n    }\n}\n\nfunction bind(f, self) {\n    return !self || !f ? f : f.bind(self);\n}\nclass FieldDesc {\n    constructor(name, desc, self) {\n        this.name = name;\n        this.init = bind(desc.init, self);\n        this.apply = bind(desc.apply, self);\n    }\n}\nconst baseFields = [\n    new FieldDesc(\"doc\", {\n        init(config) { return config.doc || config.schema.topNodeType.createAndFill(); },\n        apply(tr) { return tr.doc; }\n    }),\n    new FieldDesc(\"selection\", {\n        init(config, instance) { return config.selection || Selection.atStart(instance.doc); },\n        apply(tr) { return tr.selection; }\n    }),\n    new FieldDesc(\"storedMarks\", {\n        init(config) { return config.storedMarks || null; },\n        apply(tr, _marks, _old, state) { return state.selection.$cursor ? tr.storedMarks : null; }\n    }),\n    new FieldDesc(\"scrollToSelection\", {\n        init() { return 0; },\n        apply(tr, prev) { return tr.scrolledIntoView ? prev + 1 : prev; }\n    })\n];\n// Object wrapping the part of a state object that stays the same\n// across transactions. Stored in the state's `config` property.\nclass Configuration {\n    constructor(schema, plugins) {\n        this.schema = schema;\n        this.plugins = [];\n        this.pluginsByKey = Object.create(null);\n        this.fields = baseFields.slice();\n        if (plugins)\n            plugins.forEach(plugin => {\n                if (this.pluginsByKey[plugin.key])\n                    throw new RangeError(\"Adding different instances of a keyed plugin (\" + plugin.key + \")\");\n                this.plugins.push(plugin);\n                this.pluginsByKey[plugin.key] = plugin;\n                if (plugin.spec.state)\n                    this.fields.push(new FieldDesc(plugin.key, plugin.spec.state, plugin));\n            });\n    }\n}\n/**\nThe state of a ProseMirror editor is represented by an object of\nthis type. A state is a persistent data structure\u2014it isn't\nupdated, but rather a new state value is computed from an old one\nusing the [`apply`](https://prosemirror.net/docs/ref/#state.EditorState.apply) method.\n\nA state holds a number of built-in fields, and plugins can\n[define](https://prosemirror.net/docs/ref/#state.PluginSpec.state) additional fields.\n*/\nclass EditorState {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    config) {\n        this.config = config;\n    }\n    /**\n    The schema of the state's document.\n    */\n    get schema() {\n        return this.config.schema;\n    }\n    /**\n    The plugins that are active in this state.\n    */\n    get plugins() {\n        return this.config.plugins;\n    }\n    /**\n    Apply the given transaction to produce a new state.\n    */\n    apply(tr) {\n        return this.applyTransaction(tr).state;\n    }\n    /**\n    @internal\n    */\n    filterTransaction(tr, ignore = -1) {\n        for (let i = 0; i < this.config.plugins.length; i++)\n            if (i != ignore) {\n                let plugin = this.config.plugins[i];\n                if (plugin.spec.filterTransaction && !plugin.spec.filterTransaction.call(plugin, tr, this))\n                    return false;\n            }\n        return true;\n    }\n    /**\n    Verbose variant of [`apply`](https://prosemirror.net/docs/ref/#state.EditorState.apply) that\n    returns the precise transactions that were applied (which might\n    be influenced by the [transaction\n    hooks](https://prosemirror.net/docs/ref/#state.PluginSpec.filterTransaction) of\n    plugins) along with the new state.\n    */\n    applyTransaction(rootTr) {\n        if (!this.filterTransaction(rootTr))\n            return { state: this, transactions: [] };\n        let trs = [rootTr], newState = this.applyInner(rootTr), seen = null;\n        // This loop repeatedly gives plugins a chance to respond to\n        // transactions as new transactions are added, making sure to only\n        // pass the transactions the plugin did not see before.\n        for (;;) {\n            let haveNew = false;\n            for (let i = 0; i < this.config.plugins.length; i++) {\n                let plugin = this.config.plugins[i];\n                if (plugin.spec.appendTransaction) {\n                    let n = seen ? seen[i].n : 0, oldState = seen ? seen[i].state : this;\n                    let tr = n < trs.length &&\n                        plugin.spec.appendTransaction.call(plugin, n ? trs.slice(n) : trs, oldState, newState);\n                    if (tr && newState.filterTransaction(tr, i)) {\n                        tr.setMeta(\"appendedTransaction\", rootTr);\n                        if (!seen) {\n                            seen = [];\n                            for (let j = 0; j < this.config.plugins.length; j++)\n                                seen.push(j < i ? { state: newState, n: trs.length } : { state: this, n: 0 });\n                        }\n                        trs.push(tr);\n                        newState = newState.applyInner(tr);\n                        haveNew = true;\n                    }\n                    if (seen)\n                        seen[i] = { state: newState, n: trs.length };\n                }\n            }\n            if (!haveNew)\n                return { state: newState, transactions: trs };\n        }\n    }\n    /**\n    @internal\n    */\n    applyInner(tr) {\n        if (!tr.before.eq(this.doc))\n            throw new RangeError(\"Applying a mismatched transaction\");\n        let newInstance = new EditorState(this.config), fields = this.config.fields;\n        for (let i = 0; i < fields.length; i++) {\n            let field = fields[i];\n            newInstance[field.name] = field.apply(tr, this[field.name], this, newInstance);\n        }\n        return newInstance;\n    }\n    /**\n    Start a [transaction](https://prosemirror.net/docs/ref/#state.Transaction) from this state.\n    */\n    get tr() { return new Transaction(this); }\n    /**\n    Create a new state.\n    */\n    static create(config) {\n        let $config = new Configuration(config.doc ? config.doc.type.schema : config.schema, config.plugins);\n        let instance = new EditorState($config);\n        for (let i = 0; i < $config.fields.length; i++)\n            instance[$config.fields[i].name] = $config.fields[i].init(config, instance);\n        return instance;\n    }\n    /**\n    Create a new state based on this one, but with an adjusted set\n    of active plugins. State fields that exist in both sets of\n    plugins are kept unchanged. Those that no longer exist are\n    dropped, and those that are new are initialized using their\n    [`init`](https://prosemirror.net/docs/ref/#state.StateField.init) method, passing in the new\n    configuration object..\n    */\n    reconfigure(config) {\n        let $config = new Configuration(this.schema, config.plugins);\n        let fields = $config.fields, instance = new EditorState($config);\n        for (let i = 0; i < fields.length; i++) {\n            let name = fields[i].name;\n            instance[name] = this.hasOwnProperty(name) ? this[name] : fields[i].init(config, instance);\n        }\n        return instance;\n    }\n    /**\n    Serialize this state to JSON. If you want to serialize the state\n    of plugins, pass an object mapping property names to use in the\n    resulting JSON object to plugin objects. The argument may also be\n    a string or number, in which case it is ignored, to support the\n    way `JSON.stringify` calls `toString` methods.\n    */\n    toJSON(pluginFields) {\n        let result = { doc: this.doc.toJSON(), selection: this.selection.toJSON() };\n        if (this.storedMarks)\n            result.storedMarks = this.storedMarks.map(m => m.toJSON());\n        if (pluginFields && typeof pluginFields == 'object')\n            for (let prop in pluginFields) {\n                if (prop == \"doc\" || prop == \"selection\")\n                    throw new RangeError(\"The JSON fields `doc` and `selection` are reserved\");\n                let plugin = pluginFields[prop], state = plugin.spec.state;\n                if (state && state.toJSON)\n                    result[prop] = state.toJSON.call(plugin, this[plugin.key]);\n            }\n        return result;\n    }\n    /**\n    Deserialize a JSON representation of a state. `config` should\n    have at least a `schema` field, and should contain array of\n    plugins to initialize the state with. `pluginFields` can be used\n    to deserialize the state of plugins, by associating plugin\n    instances with the property names they use in the JSON object.\n    */\n    static fromJSON(config, json, pluginFields) {\n        if (!json)\n            throw new RangeError(\"Invalid input for EditorState.fromJSON\");\n        if (!config.schema)\n            throw new RangeError(\"Required config field 'schema' missing\");\n        let $config = new Configuration(config.schema, config.plugins);\n        let instance = new EditorState($config);\n        $config.fields.forEach(field => {\n            if (field.name == \"doc\") {\n                instance.doc = Node.fromJSON(config.schema, json.doc);\n            }\n            else if (field.name == \"selection\") {\n                instance.selection = Selection.fromJSON(instance.doc, json.selection);\n            }\n            else if (field.name == \"storedMarks\") {\n                if (json.storedMarks)\n                    instance.storedMarks = json.storedMarks.map(config.schema.markFromJSON);\n            }\n            else {\n                if (pluginFields)\n                    for (let prop in pluginFields) {\n                        let plugin = pluginFields[prop], state = plugin.spec.state;\n                        if (plugin.key == field.name && state && state.fromJSON &&\n                            Object.prototype.hasOwnProperty.call(json, prop)) {\n                            instance[field.name] = state.fromJSON.call(plugin, config, json[prop], instance);\n                            return;\n                        }\n                    }\n                instance[field.name] = field.init(config, instance);\n            }\n        });\n        return instance;\n    }\n}\n\nfunction bindProps(obj, self, target) {\n    for (let prop in obj) {\n        let val = obj[prop];\n        if (val instanceof Function)\n            val = val.bind(self);\n        else if (prop == \"handleDOMEvents\")\n            val = bindProps(val, self, {});\n        target[prop] = val;\n    }\n    return target;\n}\n/**\nPlugins bundle functionality that can be added to an editor.\nThey are part of the [editor state](https://prosemirror.net/docs/ref/#state.EditorState) and\nmay influence that state and the view that contains it.\n*/\nclass Plugin {\n    /**\n    Create a plugin.\n    */\n    constructor(\n    /**\n    The plugin's [spec object](https://prosemirror.net/docs/ref/#state.PluginSpec).\n    */\n    spec) {\n        this.spec = spec;\n        /**\n        The [props](https://prosemirror.net/docs/ref/#view.EditorProps) exported by this plugin.\n        */\n        this.props = {};\n        if (spec.props)\n            bindProps(spec.props, this, this.props);\n        this.key = spec.key ? spec.key.key : createKey(\"plugin\");\n    }\n    /**\n    Extract the plugin's state field from an editor state.\n    */\n    getState(state) { return state[this.key]; }\n}\nconst keys = Object.create(null);\nfunction createKey(name) {\n    if (name in keys)\n        return name + \"$\" + ++keys[name];\n    keys[name] = 0;\n    return name + \"$\";\n}\n/**\nA key is used to [tag](https://prosemirror.net/docs/ref/#state.PluginSpec.key) plugins in a way\nthat makes it possible to find them, given an editor state.\nAssigning a key does mean only one plugin of that type can be\nactive in a state.\n*/\nclass PluginKey {\n    /**\n    Create a plugin key.\n    */\n    constructor(name = \"key\") { this.key = createKey(name); }\n    /**\n    Get the active plugin with this key, if any, from an editor\n    state.\n    */\n    get(state) { return state.config.pluginsByKey[this.key]; }\n    /**\n    Get the plugin's state from an editor state.\n    */\n    getState(state) { return state[this.key]; }\n}\n\nexport { AllSelection, EditorState, NodeSelection, Plugin, PluginKey, Selection, SelectionRange, TextSelection, Transaction };\n", "import { TextSelection, NodeSelection, Selection, AllSelection } from 'prosemirror-state';\nimport { DOMSerializer, Fragment, Mark, Slice, DOMParser } from 'prosemirror-model';\nimport { dropPoint } from 'prosemirror-transform';\n\nconst domIndex = function (node) {\n    for (var index = 0;; index++) {\n        node = node.previousSibling;\n        if (!node)\n            return index;\n    }\n};\nconst parentNode = function (node) {\n    let parent = node.assignedSlot || node.parentNode;\n    return parent && parent.nodeType == 11 ? parent.host : parent;\n};\nlet reusedRange = null;\n// Note that this will always return the same range, because DOM range\n// objects are every expensive, and keep slowing down subsequent DOM\n// updates, for some reason.\nconst textRange = function (node, from, to) {\n    let range = reusedRange || (reusedRange = document.createRange());\n    range.setEnd(node, to == null ? node.nodeValue.length : to);\n    range.setStart(node, from || 0);\n    return range;\n};\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nconst isEquivalentPosition = function (node, off, targetNode, targetOff) {\n    return targetNode && (scanFor(node, off, targetNode, targetOff, -1) ||\n        scanFor(node, off, targetNode, targetOff, 1));\n};\nconst atomElements = /^(img|br|input|textarea|hr)$/i;\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n    for (;;) {\n        if (node == targetNode && off == targetOff)\n            return true;\n        if (off == (dir < 0 ? 0 : nodeSize(node))) {\n            let parent = node.parentNode;\n            if (!parent || parent.nodeType != 1 || hasBlockDesc(node) || atomElements.test(node.nodeName) ||\n                node.contentEditable == \"false\")\n                return false;\n            off = domIndex(node) + (dir < 0 ? 0 : 1);\n            node = parent;\n        }\n        else if (node.nodeType == 1) {\n            node = node.childNodes[off + (dir < 0 ? -1 : 0)];\n            if (node.contentEditable == \"false\")\n                return false;\n            off = dir < 0 ? nodeSize(node) : 0;\n        }\n        else {\n            return false;\n        }\n    }\n}\nfunction nodeSize(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nfunction isOnEdge(node, offset, parent) {\n    for (let atStart = offset == 0, atEnd = offset == nodeSize(node); atStart || atEnd;) {\n        if (node == parent)\n            return true;\n        let index = domIndex(node);\n        node = node.parentNode;\n        if (!node)\n            return false;\n        atStart = atStart && index == 0;\n        atEnd = atEnd && index == nodeSize(node);\n    }\n}\nfunction hasBlockDesc(dom) {\n    let desc;\n    for (let cur = dom; cur; cur = cur.parentNode)\n        if (desc = cur.pmViewDesc)\n            break;\n    return desc && desc.node && desc.node.isBlock && (desc.dom == dom || desc.contentDOM == dom);\n}\n// Work around Chrome issue https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n// (isCollapsed inappropriately returns true in shadow dom)\nconst selectionCollapsed = function (domSel) {\n    return domSel.focusNode && isEquivalentPosition(domSel.focusNode, domSel.focusOffset, domSel.anchorNode, domSel.anchorOffset);\n};\nfunction keyEvent(keyCode, key) {\n    let event = document.createEvent(\"Event\");\n    event.initEvent(\"keydown\", true, true);\n    event.keyCode = keyCode;\n    event.key = event.code = key;\n    return event;\n}\nfunction deepActiveElement(doc) {\n    let elt = doc.activeElement;\n    while (elt && elt.shadowRoot)\n        elt = elt.shadowRoot.activeElement;\n    return elt;\n}\n\nconst nav = typeof navigator != \"undefined\" ? navigator : null;\nconst doc = typeof document != \"undefined\" ? document : null;\nconst agent = (nav && nav.userAgent) || \"\";\nconst ie_edge = /Edge\\/(\\d+)/.exec(agent);\nconst ie_upto10 = /MSIE \\d/.exec(agent);\nconst ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(agent);\nconst ie = !!(ie_upto10 || ie_11up || ie_edge);\nconst ie_version = ie_upto10 ? document.documentMode : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : 0;\nconst gecko = !ie && /gecko\\/(\\d+)/i.test(agent);\ngecko && +(/Firefox\\/(\\d+)/.exec(agent) || [0, 0])[1];\nconst _chrome = !ie && /Chrome\\/(\\d+)/.exec(agent);\nconst chrome = !!_chrome;\nconst chrome_version = _chrome ? +_chrome[1] : 0;\nconst safari = !ie && !!nav && /Apple Computer/.test(nav.vendor);\n// Is true for both iOS and iPadOS for convenience\nconst ios = safari && (/Mobile\\/\\w+/.test(agent) || !!nav && nav.maxTouchPoints > 2);\nconst mac = ios || (nav ? /Mac/.test(nav.platform) : false);\nconst android = /Android \\d/.test(agent);\nconst webkit = !!doc && \"webkitFontSmoothing\" in doc.documentElement.style;\nconst webkit_version = webkit ? +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0;\n\nfunction windowRect(doc) {\n    return { left: 0, right: doc.documentElement.clientWidth,\n        top: 0, bottom: doc.documentElement.clientHeight };\n}\nfunction getSide(value, side) {\n    return typeof value == \"number\" ? value : value[side];\n}\nfunction clientRect(node) {\n    let rect = node.getBoundingClientRect();\n    // Adjust for elements with style \"transform: scale()\"\n    let scaleX = (rect.width / node.offsetWidth) || 1;\n    let scaleY = (rect.height / node.offsetHeight) || 1;\n    // Make sure scrollbar width isn't included in the rectangle\n    return { left: rect.left, right: rect.left + node.clientWidth * scaleX,\n        top: rect.top, bottom: rect.top + node.clientHeight * scaleY };\n}\nfunction scrollRectIntoView(view, rect, startDOM) {\n    let scrollThreshold = view.someProp(\"scrollThreshold\") || 0, scrollMargin = view.someProp(\"scrollMargin\") || 5;\n    let doc = view.dom.ownerDocument;\n    for (let parent = startDOM || view.dom;; parent = parentNode(parent)) {\n        if (!parent)\n            break;\n        if (parent.nodeType != 1)\n            continue;\n        let elt = parent;\n        let atTop = elt == doc.body;\n        let bounding = atTop ? windowRect(doc) : clientRect(elt);\n        let moveX = 0, moveY = 0;\n        if (rect.top < bounding.top + getSide(scrollThreshold, \"top\"))\n            moveY = -(bounding.top - rect.top + getSide(scrollMargin, \"top\"));\n        else if (rect.bottom > bounding.bottom - getSide(scrollThreshold, \"bottom\"))\n            moveY = rect.bottom - bounding.bottom + getSide(scrollMargin, \"bottom\");\n        if (rect.left < bounding.left + getSide(scrollThreshold, \"left\"))\n            moveX = -(bounding.left - rect.left + getSide(scrollMargin, \"left\"));\n        else if (rect.right > bounding.right - getSide(scrollThreshold, \"right\"))\n            moveX = rect.right - bounding.right + getSide(scrollMargin, \"right\");\n        if (moveX || moveY) {\n            if (atTop) {\n                doc.defaultView.scrollBy(moveX, moveY);\n            }\n            else {\n                let startX = elt.scrollLeft, startY = elt.scrollTop;\n                if (moveY)\n                    elt.scrollTop += moveY;\n                if (moveX)\n                    elt.scrollLeft += moveX;\n                let dX = elt.scrollLeft - startX, dY = elt.scrollTop - startY;\n                rect = { left: rect.left - dX, top: rect.top - dY, right: rect.right - dX, bottom: rect.bottom - dY };\n            }\n        }\n        if (atTop)\n            break;\n    }\n}\n// Store the scroll position of the editor's parent nodes, along with\n// the top position of an element near the top of the editor, which\n// will be used to make sure the visible viewport remains stable even\n// when the size of the content above changes.\nfunction storeScrollPos(view) {\n    let rect = view.dom.getBoundingClientRect(), startY = Math.max(0, rect.top);\n    let refDOM, refTop;\n    for (let x = (rect.left + rect.right) / 2, y = startY + 1; y < Math.min(innerHeight, rect.bottom); y += 5) {\n        let dom = view.root.elementFromPoint(x, y);\n        if (!dom || dom == view.dom || !view.dom.contains(dom))\n            continue;\n        let localRect = dom.getBoundingClientRect();\n        if (localRect.top >= startY - 20) {\n            refDOM = dom;\n            refTop = localRect.top;\n            break;\n        }\n    }\n    return { refDOM: refDOM, refTop: refTop, stack: scrollStack(view.dom) };\n}\nfunction scrollStack(dom) {\n    let stack = [], doc = dom.ownerDocument;\n    for (let cur = dom; cur; cur = parentNode(cur)) {\n        stack.push({ dom: cur, top: cur.scrollTop, left: cur.scrollLeft });\n        if (dom == doc)\n            break;\n    }\n    return stack;\n}\n// Reset the scroll position of the editor's parent nodes to that what\n// it was before, when storeScrollPos was called.\nfunction resetScrollPos({ refDOM, refTop, stack }) {\n    let newRefTop = refDOM ? refDOM.getBoundingClientRect().top : 0;\n    restoreScrollStack(stack, newRefTop == 0 ? 0 : newRefTop - refTop);\n}\nfunction restoreScrollStack(stack, dTop) {\n    for (let i = 0; i < stack.length; i++) {\n        let { dom, top, left } = stack[i];\n        if (dom.scrollTop != top + dTop)\n            dom.scrollTop = top + dTop;\n        if (dom.scrollLeft != left)\n            dom.scrollLeft = left;\n    }\n}\nlet preventScrollSupported = null;\n// Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\nfunction focusPreventScroll(dom) {\n    if (dom.setActive)\n        return dom.setActive(); // in IE\n    if (preventScrollSupported)\n        return dom.focus(preventScrollSupported);\n    let stored = scrollStack(dom);\n    dom.focus(preventScrollSupported == null ? {\n        get preventScroll() {\n            preventScrollSupported = { preventScroll: true };\n            return true;\n        }\n    } : undefined);\n    if (!preventScrollSupported) {\n        preventScrollSupported = false;\n        restoreScrollStack(stored, 0);\n    }\n}\nfunction findOffsetInNode(node, coords) {\n    let closest, dxClosest = 2e8, coordsClosest, offset = 0;\n    let rowBot = coords.top, rowTop = coords.top;\n    for (let child = node.firstChild, childIndex = 0; child; child = child.nextSibling, childIndex++) {\n        let rects;\n        if (child.nodeType == 1)\n            rects = child.getClientRects();\n        else if (child.nodeType == 3)\n            rects = textRange(child).getClientRects();\n        else\n            continue;\n        for (let i = 0; i < rects.length; i++) {\n            let rect = rects[i];\n            if (rect.top <= rowBot && rect.bottom >= rowTop) {\n                rowBot = Math.max(rect.bottom, rowBot);\n                rowTop = Math.min(rect.top, rowTop);\n                let dx = rect.left > coords.left ? rect.left - coords.left\n                    : rect.right < coords.left ? coords.left - rect.right : 0;\n                if (dx < dxClosest) {\n                    closest = child;\n                    dxClosest = dx;\n                    coordsClosest = dx && closest.nodeType == 3 ? {\n                        left: rect.right < coords.left ? rect.right : rect.left,\n                        top: coords.top\n                    } : coords;\n                    if (child.nodeType == 1 && dx)\n                        offset = childIndex + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0);\n                    continue;\n                }\n            }\n            if (!closest && (coords.left >= rect.right && coords.top >= rect.top ||\n                coords.left >= rect.left && coords.top >= rect.bottom))\n                offset = childIndex + 1;\n        }\n    }\n    if (closest && closest.nodeType == 3)\n        return findOffsetInText(closest, coordsClosest);\n    if (!closest || (dxClosest && closest.nodeType == 1))\n        return { node, offset };\n    return findOffsetInNode(closest, coordsClosest);\n}\nfunction findOffsetInText(node, coords) {\n    let len = node.nodeValue.length;\n    let range = document.createRange();\n    for (let i = 0; i < len; i++) {\n        range.setEnd(node, i + 1);\n        range.setStart(node, i);\n        let rect = singleRect(range, 1);\n        if (rect.top == rect.bottom)\n            continue;\n        if (inRect(coords, rect))\n            return { node, offset: i + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0) };\n    }\n    return { node, offset: 0 };\n}\nfunction inRect(coords, rect) {\n    return coords.left >= rect.left - 1 && coords.left <= rect.right + 1 &&\n        coords.top >= rect.top - 1 && coords.top <= rect.bottom + 1;\n}\nfunction targetKludge(dom, coords) {\n    let parent = dom.parentNode;\n    if (parent && /^li$/i.test(parent.nodeName) && coords.left < dom.getBoundingClientRect().left)\n        return parent;\n    return dom;\n}\nfunction posFromElement(view, elt, coords) {\n    let { node, offset } = findOffsetInNode(elt, coords), bias = -1;\n    if (node.nodeType == 1 && !node.firstChild) {\n        let rect = node.getBoundingClientRect();\n        bias = rect.left != rect.right && coords.left > (rect.left + rect.right) / 2 ? 1 : -1;\n    }\n    return view.docView.posFromDOM(node, offset, bias);\n}\nfunction posFromCaret(view, node, offset, coords) {\n    // Browser (in caretPosition/RangeFromPoint) will agressively\n    // normalize towards nearby inline nodes. Since we are interested in\n    // positions between block nodes too, we first walk up the hierarchy\n    // of nodes to see if there are block nodes that the coordinates\n    // fall outside of. If so, we take the position before/after that\n    // block. If not, we call `posFromDOM` on the raw node/offset.\n    let outsideBlock = -1;\n    for (let cur = node, sawBlock = false;;) {\n        if (cur == view.dom)\n            break;\n        let desc = view.docView.nearestDesc(cur, true);\n        if (!desc)\n            return null;\n        if (desc.dom.nodeType == 1 && (desc.node.isBlock && desc.parent && !sawBlock || !desc.contentDOM)) {\n            let rect = desc.dom.getBoundingClientRect();\n            if (desc.node.isBlock && desc.parent && !sawBlock) {\n                sawBlock = true;\n                if (rect.left > coords.left || rect.top > coords.top)\n                    outsideBlock = desc.posBefore;\n                else if (rect.right < coords.left || rect.bottom < coords.top)\n                    outsideBlock = desc.posAfter;\n            }\n            if (!desc.contentDOM && outsideBlock < 0) {\n                // If we are inside a leaf, return the side of the leaf closer to the coords\n                let before = desc.node.isBlock ? coords.top < (rect.top + rect.bottom) / 2\n                    : coords.left < (rect.left + rect.right) / 2;\n                return before ? desc.posBefore : desc.posAfter;\n            }\n        }\n        cur = desc.dom.parentNode;\n    }\n    return outsideBlock > -1 ? outsideBlock : view.docView.posFromDOM(node, offset, -1);\n}\nfunction elementFromPoint(element, coords, box) {\n    let len = element.childNodes.length;\n    if (len && box.top < box.bottom) {\n        for (let startI = Math.max(0, Math.min(len - 1, Math.floor(len * (coords.top - box.top) / (box.bottom - box.top)) - 2)), i = startI;;) {\n            let child = element.childNodes[i];\n            if (child.nodeType == 1) {\n                let rects = child.getClientRects();\n                for (let j = 0; j < rects.length; j++) {\n                    let rect = rects[j];\n                    if (inRect(coords, rect))\n                        return elementFromPoint(child, coords, rect);\n                }\n            }\n            if ((i = (i + 1) % len) == startI)\n                break;\n        }\n    }\n    return element;\n}\n// Given an x,y position on the editor, get the position in the document.\nfunction posAtCoords(view, coords) {\n    let doc = view.dom.ownerDocument, node, offset = 0;\n    if (doc.caretPositionFromPoint) {\n        try { // Firefox throws for this call in hard-to-predict circumstances (#994)\n            let pos = doc.caretPositionFromPoint(coords.left, coords.top);\n            if (pos)\n                ({ offsetNode: node, offset } = pos);\n        }\n        catch (_) { }\n    }\n    if (!node && doc.caretRangeFromPoint) {\n        let range = doc.caretRangeFromPoint(coords.left, coords.top);\n        if (range)\n            ({ startContainer: node, startOffset: offset } = range);\n    }\n    let elt = (view.root.elementFromPoint ? view.root : doc)\n        .elementFromPoint(coords.left, coords.top);\n    let pos;\n    if (!elt || !view.dom.contains(elt.nodeType != 1 ? elt.parentNode : elt)) {\n        let box = view.dom.getBoundingClientRect();\n        if (!inRect(coords, box))\n            return null;\n        elt = elementFromPoint(view.dom, coords, box);\n        if (!elt)\n            return null;\n    }\n    // Safari's caretRangeFromPoint returns nonsense when on a draggable element\n    if (safari) {\n        for (let p = elt; node && p; p = parentNode(p))\n            if (p.draggable)\n                node = undefined;\n    }\n    elt = targetKludge(elt, coords);\n    if (node) {\n        if (gecko && node.nodeType == 1) {\n            // Firefox will sometimes return offsets into <input> nodes, which\n            // have no actual children, from caretPositionFromPoint (#953)\n            offset = Math.min(offset, node.childNodes.length);\n            // It'll also move the returned position before image nodes,\n            // even if those are behind it.\n            if (offset < node.childNodes.length) {\n                let next = node.childNodes[offset], box;\n                if (next.nodeName == \"IMG\" && (box = next.getBoundingClientRect()).right <= coords.left &&\n                    box.bottom > coords.top)\n                    offset++;\n            }\n        }\n        // Suspiciously specific kludge to work around caret*FromPoint\n        // never returning a position at the end of the document\n        if (node == view.dom && offset == node.childNodes.length - 1 && node.lastChild.nodeType == 1 &&\n            coords.top > node.lastChild.getBoundingClientRect().bottom)\n            pos = view.state.doc.content.size;\n        // Ignore positions directly after a BR, since caret*FromPoint\n        // 'round up' positions that would be more accurately placed\n        // before the BR node.\n        else if (offset == 0 || node.nodeType != 1 || node.childNodes[offset - 1].nodeName != \"BR\")\n            pos = posFromCaret(view, node, offset, coords);\n    }\n    if (pos == null)\n        pos = posFromElement(view, elt, coords);\n    let desc = view.docView.nearestDesc(elt, true);\n    return { pos, inside: desc ? desc.posAtStart - desc.border : -1 };\n}\nfunction singleRect(target, bias) {\n    let rects = target.getClientRects();\n    return !rects.length ? target.getBoundingClientRect() : rects[bias < 0 ? 0 : rects.length - 1];\n}\nconst BIDI = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac]/;\n// Given a position in the document model, get a bounding box of the\n// character at that position, relative to the window.\nfunction coordsAtPos(view, pos, side) {\n    let { node, offset, atom } = view.docView.domFromPos(pos, side < 0 ? -1 : 1);\n    let supportEmptyRange = webkit || gecko;\n    if (node.nodeType == 3) {\n        // These browsers support querying empty text ranges. Prefer that in\n        // bidi context or when at the end of a node.\n        if (supportEmptyRange && (BIDI.test(node.nodeValue) || (side < 0 ? !offset : offset == node.nodeValue.length))) {\n            let rect = singleRect(textRange(node, offset, offset), side);\n            // Firefox returns bad results (the position before the space)\n            // when querying a position directly after line-broken\n            // whitespace. Detect this situation and and kludge around it\n            if (gecko && offset && /\\s/.test(node.nodeValue[offset - 1]) && offset < node.nodeValue.length) {\n                let rectBefore = singleRect(textRange(node, offset - 1, offset - 1), -1);\n                if (rectBefore.top == rect.top) {\n                    let rectAfter = singleRect(textRange(node, offset, offset + 1), -1);\n                    if (rectAfter.top != rect.top)\n                        return flattenV(rectAfter, rectAfter.left < rectBefore.left);\n                }\n            }\n            return rect;\n        }\n        else {\n            let from = offset, to = offset, takeSide = side < 0 ? 1 : -1;\n            if (side < 0 && !offset) {\n                to++;\n                takeSide = -1;\n            }\n            else if (side >= 0 && offset == node.nodeValue.length) {\n                from--;\n                takeSide = 1;\n            }\n            else if (side < 0) {\n                from--;\n            }\n            else {\n                to++;\n            }\n            return flattenV(singleRect(textRange(node, from, to), 1), takeSide < 0);\n        }\n    }\n    let $dom = view.state.doc.resolve(pos - (atom || 0));\n    // Return a horizontal line in block context\n    if (!$dom.parent.inlineContent) {\n        if (atom == null && offset && (side < 0 || offset == nodeSize(node))) {\n            let before = node.childNodes[offset - 1];\n            if (before.nodeType == 1)\n                return flattenH(before.getBoundingClientRect(), false);\n        }\n        if (atom == null && offset < nodeSize(node)) {\n            let after = node.childNodes[offset];\n            if (after.nodeType == 1)\n                return flattenH(after.getBoundingClientRect(), true);\n        }\n        return flattenH(node.getBoundingClientRect(), side >= 0);\n    }\n    // Inline, not in text node (this is not Bidi-safe)\n    if (atom == null && offset && (side < 0 || offset == nodeSize(node))) {\n        let before = node.childNodes[offset - 1];\n        let target = before.nodeType == 3 ? textRange(before, nodeSize(before) - (supportEmptyRange ? 0 : 1))\n            // BR nodes tend to only return the rectangle before them.\n            // Only use them if they are the last element in their parent\n            : before.nodeType == 1 && (before.nodeName != \"BR\" || !before.nextSibling) ? before : null;\n        if (target)\n            return flattenV(singleRect(target, 1), false);\n    }\n    if (atom == null && offset < nodeSize(node)) {\n        let after = node.childNodes[offset];\n        while (after.pmViewDesc && after.pmViewDesc.ignoreForCoords)\n            after = after.nextSibling;\n        let target = !after ? null : after.nodeType == 3 ? textRange(after, 0, (supportEmptyRange ? 0 : 1))\n            : after.nodeType == 1 ? after : null;\n        if (target)\n            return flattenV(singleRect(target, -1), true);\n    }\n    // All else failed, just try to get a rectangle for the target node\n    return flattenV(singleRect(node.nodeType == 3 ? textRange(node) : node, -side), side >= 0);\n}\nfunction flattenV(rect, left) {\n    if (rect.width == 0)\n        return rect;\n    let x = left ? rect.left : rect.right;\n    return { top: rect.top, bottom: rect.bottom, left: x, right: x };\n}\nfunction flattenH(rect, top) {\n    if (rect.height == 0)\n        return rect;\n    let y = top ? rect.top : rect.bottom;\n    return { top: y, bottom: y, left: rect.left, right: rect.right };\n}\nfunction withFlushedState(view, state, f) {\n    let viewState = view.state, active = view.root.activeElement;\n    if (viewState != state)\n        view.updateState(state);\n    if (active != view.dom)\n        view.focus();\n    try {\n        return f();\n    }\n    finally {\n        if (viewState != state)\n            view.updateState(viewState);\n        if (active != view.dom && active)\n            active.focus();\n    }\n}\n// Whether vertical position motion in a given direction\n// from a position would leave a text block.\nfunction endOfTextblockVertical(view, state, dir) {\n    let sel = state.selection;\n    let $pos = dir == \"up\" ? sel.$from : sel.$to;\n    return withFlushedState(view, state, () => {\n        let { node: dom } = view.docView.domFromPos($pos.pos, dir == \"up\" ? -1 : 1);\n        for (;;) {\n            let nearest = view.docView.nearestDesc(dom, true);\n            if (!nearest)\n                break;\n            if (nearest.node.isBlock) {\n                dom = nearest.contentDOM || nearest.dom;\n                break;\n            }\n            dom = nearest.dom.parentNode;\n        }\n        let coords = coordsAtPos(view, $pos.pos, 1);\n        for (let child = dom.firstChild; child; child = child.nextSibling) {\n            let boxes;\n            if (child.nodeType == 1)\n                boxes = child.getClientRects();\n            else if (child.nodeType == 3)\n                boxes = textRange(child, 0, child.nodeValue.length).getClientRects();\n            else\n                continue;\n            for (let i = 0; i < boxes.length; i++) {\n                let box = boxes[i];\n                if (box.bottom > box.top + 1 &&\n                    (dir == \"up\" ? coords.top - box.top > (box.bottom - coords.top) * 2\n                        : box.bottom - coords.bottom > (coords.bottom - box.top) * 2))\n                    return false;\n            }\n        }\n        return true;\n    });\n}\nconst maybeRTL = /[\\u0590-\\u08ac]/;\nfunction endOfTextblockHorizontal(view, state, dir) {\n    let { $head } = state.selection;\n    if (!$head.parent.isTextblock)\n        return false;\n    let offset = $head.parentOffset, atStart = !offset, atEnd = offset == $head.parent.content.size;\n    let sel = view.domSelection();\n    // If the textblock is all LTR, or the browser doesn't support\n    // Selection.modify (Edge), fall back to a primitive approach\n    if (!maybeRTL.test($head.parent.textContent) || !sel.modify)\n        return dir == \"left\" || dir == \"backward\" ? atStart : atEnd;\n    return withFlushedState(view, state, () => {\n        // This is a huge hack, but appears to be the best we can\n        // currently do: use `Selection.modify` to move the selection by\n        // one character, and see if that moves the cursor out of the\n        // textblock (or doesn't move it at all, when at the start/end of\n        // the document).\n        let { focusNode: oldNode, focusOffset: oldOff, anchorNode, anchorOffset } = view.domSelectionRange();\n        let oldBidiLevel = sel.caretBidiLevel // Only for Firefox\n        ;\n        sel.modify(\"move\", dir, \"character\");\n        let parentDOM = $head.depth ? view.docView.domAfterPos($head.before()) : view.dom;\n        let { focusNode: newNode, focusOffset: newOff } = view.domSelectionRange();\n        let result = newNode && !parentDOM.contains(newNode.nodeType == 1 ? newNode : newNode.parentNode) ||\n            (oldNode == newNode && oldOff == newOff);\n        // Restore the previous selection\n        try {\n            sel.collapse(anchorNode, anchorOffset);\n            if (oldNode && (oldNode != anchorNode || oldOff != anchorOffset) && sel.extend)\n                sel.extend(oldNode, oldOff);\n        }\n        catch (_) { }\n        if (oldBidiLevel != null)\n            sel.caretBidiLevel = oldBidiLevel;\n        return result;\n    });\n}\nlet cachedState = null;\nlet cachedDir = null;\nlet cachedResult = false;\nfunction endOfTextblock(view, state, dir) {\n    if (cachedState == state && cachedDir == dir)\n        return cachedResult;\n    cachedState = state;\n    cachedDir = dir;\n    return cachedResult = dir == \"up\" || dir == \"down\"\n        ? endOfTextblockVertical(view, state, dir)\n        : endOfTextblockHorizontal(view, state, dir);\n}\n\n// View descriptions are data structures that describe the DOM that is\n// used to represent the editor's content. They are used for:\n//\n// - Incremental redrawing when the document changes\n//\n// - Figuring out what part of the document a given DOM position\n//   corresponds to\n//\n// - Wiring in custom implementations of the editing interface for a\n//   given node\n//\n// They form a doubly-linked mutable tree, starting at `view.docView`.\nconst NOT_DIRTY = 0, CHILD_DIRTY = 1, CONTENT_DIRTY = 2, NODE_DIRTY = 3;\n// Superclass for the various kinds of descriptions. Defines their\n// basic structure and shared methods.\nclass ViewDesc {\n    constructor(parent, children, dom, \n    // This is the node that holds the child views. It may be null for\n    // descs that don't have children.\n    contentDOM) {\n        this.parent = parent;\n        this.children = children;\n        this.dom = dom;\n        this.contentDOM = contentDOM;\n        this.dirty = NOT_DIRTY;\n        // An expando property on the DOM node provides a link back to its\n        // description.\n        dom.pmViewDesc = this;\n    }\n    // Used to check whether a given description corresponds to a\n    // widget/mark/node.\n    matchesWidget(widget) { return false; }\n    matchesMark(mark) { return false; }\n    matchesNode(node, outerDeco, innerDeco) { return false; }\n    matchesHack(nodeName) { return false; }\n    // When parsing in-editor content (in domchange.js), we allow\n    // descriptions to determine the parse rules that should be used to\n    // parse them.\n    parseRule() { return null; }\n    // Used by the editor's event handler to ignore events that come\n    // from certain descs.\n    stopEvent(event) { return false; }\n    // The size of the content represented by this desc.\n    get size() {\n        let size = 0;\n        for (let i = 0; i < this.children.length; i++)\n            size += this.children[i].size;\n        return size;\n    }\n    // For block nodes, this represents the space taken up by their\n    // start/end tokens.\n    get border() { return 0; }\n    destroy() {\n        this.parent = undefined;\n        if (this.dom.pmViewDesc == this)\n            this.dom.pmViewDesc = undefined;\n        for (let i = 0; i < this.children.length; i++)\n            this.children[i].destroy();\n    }\n    posBeforeChild(child) {\n        for (let i = 0, pos = this.posAtStart;; i++) {\n            let cur = this.children[i];\n            if (cur == child)\n                return pos;\n            pos += cur.size;\n        }\n    }\n    get posBefore() {\n        return this.parent.posBeforeChild(this);\n    }\n    get posAtStart() {\n        return this.parent ? this.parent.posBeforeChild(this) + this.border : 0;\n    }\n    get posAfter() {\n        return this.posBefore + this.size;\n    }\n    get posAtEnd() {\n        return this.posAtStart + this.size - 2 * this.border;\n    }\n    localPosFromDOM(dom, offset, bias) {\n        // If the DOM position is in the content, use the child desc after\n        // it to figure out a position.\n        if (this.contentDOM && this.contentDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode)) {\n            if (bias < 0) {\n                let domBefore, desc;\n                if (dom == this.contentDOM) {\n                    domBefore = dom.childNodes[offset - 1];\n                }\n                else {\n                    while (dom.parentNode != this.contentDOM)\n                        dom = dom.parentNode;\n                    domBefore = dom.previousSibling;\n                }\n                while (domBefore && !((desc = domBefore.pmViewDesc) && desc.parent == this))\n                    domBefore = domBefore.previousSibling;\n                return domBefore ? this.posBeforeChild(desc) + desc.size : this.posAtStart;\n            }\n            else {\n                let domAfter, desc;\n                if (dom == this.contentDOM) {\n                    domAfter = dom.childNodes[offset];\n                }\n                else {\n                    while (dom.parentNode != this.contentDOM)\n                        dom = dom.parentNode;\n                    domAfter = dom.nextSibling;\n                }\n                while (domAfter && !((desc = domAfter.pmViewDesc) && desc.parent == this))\n                    domAfter = domAfter.nextSibling;\n                return domAfter ? this.posBeforeChild(desc) : this.posAtEnd;\n            }\n        }\n        // Otherwise, use various heuristics, falling back on the bias\n        // parameter, to determine whether to return the position at the\n        // start or at the end of this view desc.\n        let atEnd;\n        if (dom == this.dom && this.contentDOM) {\n            atEnd = offset > domIndex(this.contentDOM);\n        }\n        else if (this.contentDOM && this.contentDOM != this.dom && this.dom.contains(this.contentDOM)) {\n            atEnd = dom.compareDocumentPosition(this.contentDOM) & 2;\n        }\n        else if (this.dom.firstChild) {\n            if (offset == 0)\n                for (let search = dom;; search = search.parentNode) {\n                    if (search == this.dom) {\n                        atEnd = false;\n                        break;\n                    }\n                    if (search.previousSibling)\n                        break;\n                }\n            if (atEnd == null && offset == dom.childNodes.length)\n                for (let search = dom;; search = search.parentNode) {\n                    if (search == this.dom) {\n                        atEnd = true;\n                        break;\n                    }\n                    if (search.nextSibling)\n                        break;\n                }\n        }\n        return (atEnd == null ? bias > 0 : atEnd) ? this.posAtEnd : this.posAtStart;\n    }\n    nearestDesc(dom, onlyNodes = false) {\n        for (let first = true, cur = dom; cur; cur = cur.parentNode) {\n            let desc = this.getDesc(cur), nodeDOM;\n            if (desc && (!onlyNodes || desc.node)) {\n                // If dom is outside of this desc's nodeDOM, don't count it.\n                if (first && (nodeDOM = desc.nodeDOM) &&\n                    !(nodeDOM.nodeType == 1 ? nodeDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode) : nodeDOM == dom))\n                    first = false;\n                else\n                    return desc;\n            }\n        }\n    }\n    getDesc(dom) {\n        let desc = dom.pmViewDesc;\n        for (let cur = desc; cur; cur = cur.parent)\n            if (cur == this)\n                return desc;\n    }\n    posFromDOM(dom, offset, bias) {\n        for (let scan = dom; scan; scan = scan.parentNode) {\n            let desc = this.getDesc(scan);\n            if (desc)\n                return desc.localPosFromDOM(dom, offset, bias);\n        }\n        return -1;\n    }\n    // Find the desc for the node after the given pos, if any. (When a\n    // parent node overrode rendering, there might not be one.)\n    descAt(pos) {\n        for (let i = 0, offset = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (offset == pos && end != offset) {\n                while (!child.border && child.children.length)\n                    child = child.children[0];\n                return child;\n            }\n            if (pos < end)\n                return child.descAt(pos - offset - child.border);\n            offset = end;\n        }\n    }\n    domFromPos(pos, side) {\n        if (!this.contentDOM)\n            return { node: this.dom, offset: 0, atom: pos + 1 };\n        // First find the position in the child array\n        let i = 0, offset = 0;\n        for (let curPos = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = curPos + child.size;\n            if (end > pos || child instanceof TrailingHackViewDesc) {\n                offset = pos - curPos;\n                break;\n            }\n            curPos = end;\n        }\n        // If this points into the middle of a child, call through\n        if (offset)\n            return this.children[i].domFromPos(offset - this.children[i].border, side);\n        // Go back if there were any zero-length widgets with side >= 0 before this point\n        for (let prev; i && !(prev = this.children[i - 1]).size && prev instanceof WidgetViewDesc && prev.side >= 0; i--) { }\n        // Scan towards the first useable node\n        if (side <= 0) {\n            let prev, enter = true;\n            for (;; i--, enter = false) {\n                prev = i ? this.children[i - 1] : null;\n                if (!prev || prev.dom.parentNode == this.contentDOM)\n                    break;\n            }\n            if (prev && side && enter && !prev.border && !prev.domAtom)\n                return prev.domFromPos(prev.size, side);\n            return { node: this.contentDOM, offset: prev ? domIndex(prev.dom) + 1 : 0 };\n        }\n        else {\n            let next, enter = true;\n            for (;; i++, enter = false) {\n                next = i < this.children.length ? this.children[i] : null;\n                if (!next || next.dom.parentNode == this.contentDOM)\n                    break;\n            }\n            if (next && enter && !next.border && !next.domAtom)\n                return next.domFromPos(0, side);\n            return { node: this.contentDOM, offset: next ? domIndex(next.dom) : this.contentDOM.childNodes.length };\n        }\n    }\n    // Used to find a DOM range in a single parent for a given changed\n    // range.\n    parseRange(from, to, base = 0) {\n        if (this.children.length == 0)\n            return { node: this.contentDOM, from, to, fromOffset: 0, toOffset: this.contentDOM.childNodes.length };\n        let fromOffset = -1, toOffset = -1;\n        for (let offset = base, i = 0;; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (fromOffset == -1 && from <= end) {\n                let childBase = offset + child.border;\n                // FIXME maybe descend mark views to parse a narrower range?\n                if (from >= childBase && to <= end - child.border && child.node &&\n                    child.contentDOM && this.contentDOM.contains(child.contentDOM))\n                    return child.parseRange(from, to, childBase);\n                from = offset;\n                for (let j = i; j > 0; j--) {\n                    let prev = this.children[j - 1];\n                    if (prev.size && prev.dom.parentNode == this.contentDOM && !prev.emptyChildAt(1)) {\n                        fromOffset = domIndex(prev.dom) + 1;\n                        break;\n                    }\n                    from -= prev.size;\n                }\n                if (fromOffset == -1)\n                    fromOffset = 0;\n            }\n            if (fromOffset > -1 && (end > to || i == this.children.length - 1)) {\n                to = end;\n                for (let j = i + 1; j < this.children.length; j++) {\n                    let next = this.children[j];\n                    if (next.size && next.dom.parentNode == this.contentDOM && !next.emptyChildAt(-1)) {\n                        toOffset = domIndex(next.dom);\n                        break;\n                    }\n                    to += next.size;\n                }\n                if (toOffset == -1)\n                    toOffset = this.contentDOM.childNodes.length;\n                break;\n            }\n            offset = end;\n        }\n        return { node: this.contentDOM, from, to, fromOffset, toOffset };\n    }\n    emptyChildAt(side) {\n        if (this.border || !this.contentDOM || !this.children.length)\n            return false;\n        let child = this.children[side < 0 ? 0 : this.children.length - 1];\n        return child.size == 0 || child.emptyChildAt(side);\n    }\n    domAfterPos(pos) {\n        let { node, offset } = this.domFromPos(pos, 0);\n        if (node.nodeType != 1 || offset == node.childNodes.length)\n            throw new RangeError(\"No node after pos \" + pos);\n        return node.childNodes[offset];\n    }\n    // View descs are responsible for setting any selection that falls\n    // entirely inside of them, so that custom implementations can do\n    // custom things with the selection. Note that this falls apart when\n    // a selection starts in such a node and ends in another, in which\n    // case we just use whatever domFromPos produces as a best effort.\n    setSelection(anchor, head, root, force = false) {\n        // If the selection falls entirely in a child, give it to that child\n        let from = Math.min(anchor, head), to = Math.max(anchor, head);\n        for (let i = 0, offset = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (from > offset && to < end)\n                return child.setSelection(anchor - offset - child.border, head - offset - child.border, root, force);\n            offset = end;\n        }\n        let anchorDOM = this.domFromPos(anchor, anchor ? -1 : 1);\n        let headDOM = head == anchor ? anchorDOM : this.domFromPos(head, head ? -1 : 1);\n        let domSel = root.getSelection();\n        let brKludge = false;\n        // On Firefox, using Selection.collapse to put the cursor after a\n        // BR node for some reason doesn't always work (#1073). On Safari,\n        // the cursor sometimes inexplicable visually lags behind its\n        // reported position in such situations (#1092).\n        if ((gecko || safari) && anchor == head) {\n            let { node, offset } = anchorDOM;\n            if (node.nodeType == 3) {\n                brKludge = !!(offset && node.nodeValue[offset - 1] == \"\\n\");\n                // Issue #1128\n                if (brKludge && offset == node.nodeValue.length) {\n                    for (let scan = node, after; scan; scan = scan.parentNode) {\n                        if (after = scan.nextSibling) {\n                            if (after.nodeName == \"BR\")\n                                anchorDOM = headDOM = { node: after.parentNode, offset: domIndex(after) + 1 };\n                            break;\n                        }\n                        let desc = scan.pmViewDesc;\n                        if (desc && desc.node && desc.node.isBlock)\n                            break;\n                    }\n                }\n            }\n            else {\n                let prev = node.childNodes[offset - 1];\n                brKludge = prev && (prev.nodeName == \"BR\" || prev.contentEditable == \"false\");\n            }\n        }\n        // Firefox can act strangely when the selection is in front of an\n        // uneditable node. See #1163 and https://bugzilla.mozilla.org/show_bug.cgi?id=1709536\n        if (gecko && domSel.focusNode && domSel.focusNode != headDOM.node && domSel.focusNode.nodeType == 1) {\n            let after = domSel.focusNode.childNodes[domSel.focusOffset];\n            if (after && after.contentEditable == \"false\")\n                force = true;\n        }\n        if (!(force || brKludge && safari) &&\n            isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset) &&\n            isEquivalentPosition(headDOM.node, headDOM.offset, domSel.focusNode, domSel.focusOffset))\n            return;\n        // Selection.extend can be used to create an 'inverted' selection\n        // (one where the focus is before the anchor), but not all\n        // browsers support it yet.\n        let domSelExtended = false;\n        if ((domSel.extend || anchor == head) && !brKludge) {\n            domSel.collapse(anchorDOM.node, anchorDOM.offset);\n            try {\n                if (anchor != head)\n                    domSel.extend(headDOM.node, headDOM.offset);\n                domSelExtended = true;\n            }\n            catch (_) {\n                // In some cases with Chrome the selection is empty after calling\n                // collapse, even when it should be valid. This appears to be a bug, but\n                // it is difficult to isolate. If this happens fallback to the old path\n                // without using extend.\n                // Similarly, this could crash on Safari if the editor is hidden, and\n                // there was no selection.\n            }\n        }\n        if (!domSelExtended) {\n            if (anchor > head) {\n                let tmp = anchorDOM;\n                anchorDOM = headDOM;\n                headDOM = tmp;\n            }\n            let range = document.createRange();\n            range.setEnd(headDOM.node, headDOM.offset);\n            range.setStart(anchorDOM.node, anchorDOM.offset);\n            domSel.removeAllRanges();\n            domSel.addRange(range);\n        }\n    }\n    ignoreMutation(mutation) {\n        return !this.contentDOM && mutation.type != \"selection\";\n    }\n    get contentLost() {\n        return this.contentDOM && this.contentDOM != this.dom && !this.dom.contains(this.contentDOM);\n    }\n    // Remove a subtree of the element tree that has been touched\n    // by a DOM change, so that the next update will redraw it.\n    markDirty(from, to) {\n        for (let offset = 0, i = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (offset == end ? from <= end && to >= offset : from < end && to > offset) {\n                let startInside = offset + child.border, endInside = end - child.border;\n                if (from >= startInside && to <= endInside) {\n                    this.dirty = from == offset || to == end ? CONTENT_DIRTY : CHILD_DIRTY;\n                    if (from == startInside && to == endInside &&\n                        (child.contentLost || child.dom.parentNode != this.contentDOM))\n                        child.dirty = NODE_DIRTY;\n                    else\n                        child.markDirty(from - startInside, to - startInside);\n                    return;\n                }\n                else {\n                    child.dirty = child.dom == child.contentDOM && child.dom.parentNode == this.contentDOM && !child.children.length\n                        ? CONTENT_DIRTY : NODE_DIRTY;\n                }\n            }\n            offset = end;\n        }\n        this.dirty = CONTENT_DIRTY;\n    }\n    markParentsDirty() {\n        let level = 1;\n        for (let node = this.parent; node; node = node.parent, level++) {\n            let dirty = level == 1 ? CONTENT_DIRTY : CHILD_DIRTY;\n            if (node.dirty < dirty)\n                node.dirty = dirty;\n        }\n    }\n    get domAtom() { return false; }\n    get ignoreForCoords() { return false; }\n}\n// A widget desc represents a widget decoration, which is a DOM node\n// drawn between the document nodes.\nclass WidgetViewDesc extends ViewDesc {\n    constructor(parent, widget, view, pos) {\n        let self, dom = widget.type.toDOM;\n        if (typeof dom == \"function\")\n            dom = dom(view, () => {\n                if (!self)\n                    return pos;\n                if (self.parent)\n                    return self.parent.posBeforeChild(self);\n            });\n        if (!widget.type.spec.raw) {\n            if (dom.nodeType != 1) {\n                let wrap = document.createElement(\"span\");\n                wrap.appendChild(dom);\n                dom = wrap;\n            }\n            dom.contentEditable = \"false\";\n            dom.classList.add(\"ProseMirror-widget\");\n        }\n        super(parent, [], dom, null);\n        this.widget = widget;\n        this.widget = widget;\n        self = this;\n    }\n    matchesWidget(widget) {\n        return this.dirty == NOT_DIRTY && widget.type.eq(this.widget.type);\n    }\n    parseRule() { return { ignore: true }; }\n    stopEvent(event) {\n        let stop = this.widget.spec.stopEvent;\n        return stop ? stop(event) : false;\n    }\n    ignoreMutation(mutation) {\n        return mutation.type != \"selection\" || this.widget.spec.ignoreSelection;\n    }\n    destroy() {\n        this.widget.type.destroy(this.dom);\n        super.destroy();\n    }\n    get domAtom() { return true; }\n    get side() { return this.widget.type.side; }\n}\nclass CompositionViewDesc extends ViewDesc {\n    constructor(parent, dom, textDOM, text) {\n        super(parent, [], dom, null);\n        this.textDOM = textDOM;\n        this.text = text;\n    }\n    get size() { return this.text.length; }\n    localPosFromDOM(dom, offset) {\n        if (dom != this.textDOM)\n            return this.posAtStart + (offset ? this.size : 0);\n        return this.posAtStart + offset;\n    }\n    domFromPos(pos) {\n        return { node: this.textDOM, offset: pos };\n    }\n    ignoreMutation(mut) {\n        return mut.type === 'characterData' && mut.target.nodeValue == mut.oldValue;\n    }\n}\n// A mark desc represents a mark. May have multiple children,\n// depending on how the mark is split. Note that marks are drawn using\n// a fixed nesting order, for simplicity and predictability, so in\n// some cases they will be split more often than would appear\n// necessary.\nclass MarkViewDesc extends ViewDesc {\n    constructor(parent, mark, dom, contentDOM) {\n        super(parent, [], dom, contentDOM);\n        this.mark = mark;\n    }\n    static create(parent, mark, inline, view) {\n        let custom = view.nodeViews[mark.type.name];\n        let spec = custom && custom(mark, view, inline);\n        if (!spec || !spec.dom)\n            spec = DOMSerializer.renderSpec(document, mark.type.spec.toDOM(mark, inline));\n        return new MarkViewDesc(parent, mark, spec.dom, spec.contentDOM || spec.dom);\n    }\n    parseRule() {\n        if ((this.dirty & NODE_DIRTY) || this.mark.type.spec.reparseInView)\n            return null;\n        return { mark: this.mark.type.name, attrs: this.mark.attrs, contentElement: this.contentDOM || undefined };\n    }\n    matchesMark(mark) { return this.dirty != NODE_DIRTY && this.mark.eq(mark); }\n    markDirty(from, to) {\n        super.markDirty(from, to);\n        // Move dirty info to nearest node view\n        if (this.dirty != NOT_DIRTY) {\n            let parent = this.parent;\n            while (!parent.node)\n                parent = parent.parent;\n            if (parent.dirty < this.dirty)\n                parent.dirty = this.dirty;\n            this.dirty = NOT_DIRTY;\n        }\n    }\n    slice(from, to, view) {\n        let copy = MarkViewDesc.create(this.parent, this.mark, true, view);\n        let nodes = this.children, size = this.size;\n        if (to < size)\n            nodes = replaceNodes(nodes, to, size, view);\n        if (from > 0)\n            nodes = replaceNodes(nodes, 0, from, view);\n        for (let i = 0; i < nodes.length; i++)\n            nodes[i].parent = copy;\n        copy.children = nodes;\n        return copy;\n    }\n}\n// Node view descs are the main, most common type of view desc, and\n// correspond to an actual node in the document. Unlike mark descs,\n// they populate their child array themselves.\nclass NodeViewDesc extends ViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos) {\n        super(parent, [], dom, contentDOM);\n        this.node = node;\n        this.outerDeco = outerDeco;\n        this.innerDeco = innerDeco;\n        this.nodeDOM = nodeDOM;\n        if (contentDOM)\n            this.updateChildren(view, pos);\n    }\n    // By default, a node is rendered using the `toDOM` method from the\n    // node type spec. But client code can use the `nodeViews` spec to\n    // supply a custom node view, which can influence various aspects of\n    // the way the node works.\n    //\n    // (Using subclassing for this was intentionally decided against,\n    // since it'd require exposing a whole slew of finicky\n    // implementation details to the user code that they probably will\n    // never need.)\n    static create(parent, node, outerDeco, innerDeco, view, pos) {\n        let custom = view.nodeViews[node.type.name], descObj;\n        let spec = custom && custom(node, view, () => {\n            // (This is a function that allows the custom view to find its\n            // own position)\n            if (!descObj)\n                return pos;\n            if (descObj.parent)\n                return descObj.parent.posBeforeChild(descObj);\n        }, outerDeco, innerDeco);\n        let dom = spec && spec.dom, contentDOM = spec && spec.contentDOM;\n        if (node.isText) {\n            if (!dom)\n                dom = document.createTextNode(node.text);\n            else if (dom.nodeType != 3)\n                throw new RangeError(\"Text must be rendered as a DOM text node\");\n        }\n        else if (!dom) {\n            ({ dom, contentDOM } = DOMSerializer.renderSpec(document, node.type.spec.toDOM(node)));\n        }\n        if (!contentDOM && !node.isText && dom.nodeName != \"BR\") { // Chrome gets confused by <br contenteditable=false>\n            if (!dom.hasAttribute(\"contenteditable\"))\n                dom.contentEditable = \"false\";\n            if (node.type.spec.draggable)\n                dom.draggable = true;\n        }\n        let nodeDOM = dom;\n        dom = applyOuterDeco(dom, outerDeco, node);\n        if (spec)\n            return descObj = new CustomNodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM || null, nodeDOM, spec, view, pos + 1);\n        else if (node.isText)\n            return new TextViewDesc(parent, node, outerDeco, innerDeco, dom, nodeDOM, view);\n        else\n            return new NodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM || null, nodeDOM, view, pos + 1);\n    }\n    parseRule() {\n        // Experimental kludge to allow opt-in re-parsing of nodes\n        if (this.node.type.spec.reparseInView)\n            return null;\n        // FIXME the assumption that this can always return the current\n        // attrs means that if the user somehow manages to change the\n        // attrs in the dom, that won't be picked up. Not entirely sure\n        // whether this is a problem\n        let rule = { node: this.node.type.name, attrs: this.node.attrs };\n        if (this.node.type.whitespace == \"pre\")\n            rule.preserveWhitespace = \"full\";\n        if (!this.contentDOM) {\n            rule.getContent = () => this.node.content;\n        }\n        else if (!this.contentLost) {\n            rule.contentElement = this.contentDOM;\n        }\n        else {\n            // Chrome likes to randomly recreate parent nodes when\n            // backspacing things. When that happens, this tries to find the\n            // new parent.\n            for (let i = this.children.length - 1; i >= 0; i--) {\n                let child = this.children[i];\n                if (this.dom.contains(child.dom.parentNode)) {\n                    rule.contentElement = child.dom.parentNode;\n                    break;\n                }\n            }\n            if (!rule.contentElement)\n                rule.getContent = () => Fragment.empty;\n        }\n        return rule;\n    }\n    matchesNode(node, outerDeco, innerDeco) {\n        return this.dirty == NOT_DIRTY && node.eq(this.node) &&\n            sameOuterDeco(outerDeco, this.outerDeco) && innerDeco.eq(this.innerDeco);\n    }\n    get size() { return this.node.nodeSize; }\n    get border() { return this.node.isLeaf ? 0 : 1; }\n    // Syncs `this.children` to match `this.node.content` and the local\n    // decorations, possibly introducing nesting for marks. Then, in a\n    // separate step, syncs the DOM inside `this.contentDOM` to\n    // `this.children`.\n    updateChildren(view, pos) {\n        let inline = this.node.inlineContent, off = pos;\n        let composition = view.composing ? this.localCompositionInfo(view, pos) : null;\n        let localComposition = composition && composition.pos > -1 ? composition : null;\n        let compositionInChild = composition && composition.pos < 0;\n        let updater = new ViewTreeUpdater(this, localComposition && localComposition.node, view);\n        iterDeco(this.node, this.innerDeco, (widget, i, insideNode) => {\n            if (widget.spec.marks)\n                updater.syncToMarks(widget.spec.marks, inline, view);\n            else if (widget.type.side >= 0 && !insideNode)\n                updater.syncToMarks(i == this.node.childCount ? Mark.none : this.node.child(i).marks, inline, view);\n            // If the next node is a desc matching this widget, reuse it,\n            // otherwise insert the widget as a new view desc.\n            updater.placeWidget(widget, view, off);\n        }, (child, outerDeco, innerDeco, i) => {\n            // Make sure the wrapping mark descs match the node's marks.\n            updater.syncToMarks(child.marks, inline, view);\n            // Try several strategies for drawing this node\n            let compIndex;\n            if (updater.findNodeMatch(child, outerDeco, innerDeco, i)) ;\n            else if (compositionInChild && view.state.selection.from > off &&\n                view.state.selection.to < off + child.nodeSize &&\n                (compIndex = updater.findIndexWithChild(composition.node)) > -1 &&\n                updater.updateNodeAt(child, outerDeco, innerDeco, compIndex, view)) ;\n            else if (updater.updateNextNode(child, outerDeco, innerDeco, view, i)) ;\n            else {\n                // Add it as a new view\n                updater.addNode(child, outerDeco, innerDeco, view, off);\n            }\n            off += child.nodeSize;\n        });\n        // Drop all remaining descs after the current position.\n        updater.syncToMarks([], inline, view);\n        if (this.node.isTextblock)\n            updater.addTextblockHacks();\n        updater.destroyRest();\n        // Sync the DOM if anything changed\n        if (updater.changed || this.dirty == CONTENT_DIRTY) {\n            // May have to protect focused DOM from being changed if a composition is active\n            if (localComposition)\n                this.protectLocalComposition(view, localComposition);\n            renderDescs(this.contentDOM, this.children, view);\n            if (ios)\n                iosHacks(this.dom);\n        }\n    }\n    localCompositionInfo(view, pos) {\n        // Only do something if both the selection and a focused text node\n        // are inside of this node\n        let { from, to } = view.state.selection;\n        if (!(view.state.selection instanceof TextSelection) || from < pos || to > pos + this.node.content.size)\n            return null;\n        let sel = view.domSelectionRange();\n        let textNode = nearbyTextNode(sel.focusNode, sel.focusOffset);\n        if (!textNode || !this.dom.contains(textNode.parentNode))\n            return null;\n        if (this.node.inlineContent) {\n            // Find the text in the focused node in the node, stop if it's not\n            // there (may have been modified through other means, in which\n            // case it should overwritten)\n            let text = textNode.nodeValue;\n            let textPos = findTextInFragment(this.node.content, text, from - pos, to - pos);\n            return textPos < 0 ? null : { node: textNode, pos: textPos, text };\n        }\n        else {\n            return { node: textNode, pos: -1, text: \"\" };\n        }\n    }\n    protectLocalComposition(view, { node, pos, text }) {\n        // The node is already part of a local view desc, leave it there\n        if (this.getDesc(node))\n            return;\n        // Create a composition view for the orphaned nodes\n        let topNode = node;\n        for (;; topNode = topNode.parentNode) {\n            if (topNode.parentNode == this.contentDOM)\n                break;\n            while (topNode.previousSibling)\n                topNode.parentNode.removeChild(topNode.previousSibling);\n            while (topNode.nextSibling)\n                topNode.parentNode.removeChild(topNode.nextSibling);\n            if (topNode.pmViewDesc)\n                topNode.pmViewDesc = undefined;\n        }\n        let desc = new CompositionViewDesc(this, topNode, node, text);\n        view.input.compositionNodes.push(desc);\n        // Patch up this.children to contain the composition view\n        this.children = replaceNodes(this.children, pos, pos + text.length, view, desc);\n    }\n    // If this desc must be updated to match the given node decoration,\n    // do so and return true.\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY ||\n            !node.sameMarkup(this.node))\n            return false;\n        this.updateInner(node, outerDeco, innerDeco, view);\n        return true;\n    }\n    updateInner(node, outerDeco, innerDeco, view) {\n        this.updateOuterDeco(outerDeco);\n        this.node = node;\n        this.innerDeco = innerDeco;\n        if (this.contentDOM)\n            this.updateChildren(view, this.posAtStart);\n        this.dirty = NOT_DIRTY;\n    }\n    updateOuterDeco(outerDeco) {\n        if (sameOuterDeco(outerDeco, this.outerDeco))\n            return;\n        let needsWrap = this.nodeDOM.nodeType != 1;\n        let oldDOM = this.dom;\n        this.dom = patchOuterDeco(this.dom, this.nodeDOM, computeOuterDeco(this.outerDeco, this.node, needsWrap), computeOuterDeco(outerDeco, this.node, needsWrap));\n        if (this.dom != oldDOM) {\n            oldDOM.pmViewDesc = undefined;\n            this.dom.pmViewDesc = this;\n        }\n        this.outerDeco = outerDeco;\n    }\n    // Mark this node as being the selected node.\n    selectNode() {\n        if (this.nodeDOM.nodeType == 1)\n            this.nodeDOM.classList.add(\"ProseMirror-selectednode\");\n        if (this.contentDOM || !this.node.type.spec.draggable)\n            this.dom.draggable = true;\n    }\n    // Remove selected node marking from this node.\n    deselectNode() {\n        if (this.nodeDOM.nodeType == 1)\n            this.nodeDOM.classList.remove(\"ProseMirror-selectednode\");\n        if (this.contentDOM || !this.node.type.spec.draggable)\n            this.dom.removeAttribute(\"draggable\");\n    }\n    get domAtom() { return this.node.isAtom; }\n}\n// Create a view desc for the top-level document node, to be exported\n// and used by the view class.\nfunction docViewDesc(doc, outerDeco, innerDeco, dom, view) {\n    applyOuterDeco(dom, outerDeco, doc);\n    return new NodeViewDesc(undefined, doc, outerDeco, innerDeco, dom, dom, dom, view, 0);\n}\nclass TextViewDesc extends NodeViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, nodeDOM, view) {\n        super(parent, node, outerDeco, innerDeco, dom, null, nodeDOM, view, 0);\n    }\n    parseRule() {\n        let skip = this.nodeDOM.parentNode;\n        while (skip && skip != this.dom && !skip.pmIsDeco)\n            skip = skip.parentNode;\n        return { skip: (skip || true) };\n    }\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY || (this.dirty != NOT_DIRTY && !this.inParent()) ||\n            !node.sameMarkup(this.node))\n            return false;\n        this.updateOuterDeco(outerDeco);\n        if ((this.dirty != NOT_DIRTY || node.text != this.node.text) && node.text != this.nodeDOM.nodeValue) {\n            this.nodeDOM.nodeValue = node.text;\n            if (view.trackWrites == this.nodeDOM)\n                view.trackWrites = null;\n        }\n        this.node = node;\n        this.dirty = NOT_DIRTY;\n        return true;\n    }\n    inParent() {\n        let parentDOM = this.parent.contentDOM;\n        for (let n = this.nodeDOM; n; n = n.parentNode)\n            if (n == parentDOM)\n                return true;\n        return false;\n    }\n    domFromPos(pos) {\n        return { node: this.nodeDOM, offset: pos };\n    }\n    localPosFromDOM(dom, offset, bias) {\n        if (dom == this.nodeDOM)\n            return this.posAtStart + Math.min(offset, this.node.text.length);\n        return super.localPosFromDOM(dom, offset, bias);\n    }\n    ignoreMutation(mutation) {\n        return mutation.type != \"characterData\" && mutation.type != \"selection\";\n    }\n    slice(from, to, view) {\n        let node = this.node.cut(from, to), dom = document.createTextNode(node.text);\n        return new TextViewDesc(this.parent, node, this.outerDeco, this.innerDeco, dom, dom, view);\n    }\n    markDirty(from, to) {\n        super.markDirty(from, to);\n        if (this.dom != this.nodeDOM && (from == 0 || to == this.nodeDOM.nodeValue.length))\n            this.dirty = NODE_DIRTY;\n    }\n    get domAtom() { return false; }\n}\n// A dummy desc used to tag trailing BR or IMG nodes created to work\n// around contentEditable terribleness.\nclass TrailingHackViewDesc extends ViewDesc {\n    parseRule() { return { ignore: true }; }\n    matchesHack(nodeName) { return this.dirty == NOT_DIRTY && this.dom.nodeName == nodeName; }\n    get domAtom() { return true; }\n    get ignoreForCoords() { return this.dom.nodeName == \"IMG\"; }\n}\n// A separate subclass is used for customized node views, so that the\n// extra checks only have to be made for nodes that are actually\n// customized.\nclass CustomNodeViewDesc extends NodeViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, spec, view, pos) {\n        super(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos);\n        this.spec = spec;\n    }\n    // A custom `update` method gets to decide whether the update goes\n    // through. If it does, and there's a `contentDOM` node, our logic\n    // updates the children.\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY)\n            return false;\n        if (this.spec.update) {\n            let result = this.spec.update(node, outerDeco, innerDeco);\n            if (result)\n                this.updateInner(node, outerDeco, innerDeco, view);\n            return result;\n        }\n        else if (!this.contentDOM && !node.isLeaf) {\n            return false;\n        }\n        else {\n            return super.update(node, outerDeco, innerDeco, view);\n        }\n    }\n    selectNode() {\n        this.spec.selectNode ? this.spec.selectNode() : super.selectNode();\n    }\n    deselectNode() {\n        this.spec.deselectNode ? this.spec.deselectNode() : super.deselectNode();\n    }\n    setSelection(anchor, head, root, force) {\n        this.spec.setSelection ? this.spec.setSelection(anchor, head, root)\n            : super.setSelection(anchor, head, root, force);\n    }\n    destroy() {\n        if (this.spec.destroy)\n            this.spec.destroy();\n        super.destroy();\n    }\n    stopEvent(event) {\n        return this.spec.stopEvent ? this.spec.stopEvent(event) : false;\n    }\n    ignoreMutation(mutation) {\n        return this.spec.ignoreMutation ? this.spec.ignoreMutation(mutation) : super.ignoreMutation(mutation);\n    }\n}\n// Sync the content of the given DOM node with the nodes associated\n// with the given array of view descs, recursing into mark descs\n// because this should sync the subtree for a whole node at a time.\nfunction renderDescs(parentDOM, descs, view) {\n    let dom = parentDOM.firstChild, written = false;\n    for (let i = 0; i < descs.length; i++) {\n        let desc = descs[i], childDOM = desc.dom;\n        if (childDOM.parentNode == parentDOM) {\n            while (childDOM != dom) {\n                dom = rm(dom);\n                written = true;\n            }\n            dom = dom.nextSibling;\n        }\n        else {\n            written = true;\n            parentDOM.insertBefore(childDOM, dom);\n        }\n        if (desc instanceof MarkViewDesc) {\n            let pos = dom ? dom.previousSibling : parentDOM.lastChild;\n            renderDescs(desc.contentDOM, desc.children, view);\n            dom = pos ? pos.nextSibling : parentDOM.firstChild;\n        }\n    }\n    while (dom) {\n        dom = rm(dom);\n        written = true;\n    }\n    if (written && view.trackWrites == parentDOM)\n        view.trackWrites = null;\n}\nconst OuterDecoLevel = function (nodeName) {\n    if (nodeName)\n        this.nodeName = nodeName;\n};\nOuterDecoLevel.prototype = Object.create(null);\nconst noDeco = [new OuterDecoLevel];\nfunction computeOuterDeco(outerDeco, node, needsWrap) {\n    if (outerDeco.length == 0)\n        return noDeco;\n    let top = needsWrap ? noDeco[0] : new OuterDecoLevel, result = [top];\n    for (let i = 0; i < outerDeco.length; i++) {\n        let attrs = outerDeco[i].type.attrs;\n        if (!attrs)\n            continue;\n        if (attrs.nodeName)\n            result.push(top = new OuterDecoLevel(attrs.nodeName));\n        for (let name in attrs) {\n            let val = attrs[name];\n            if (val == null)\n                continue;\n            if (needsWrap && result.length == 1)\n                result.push(top = new OuterDecoLevel(node.isInline ? \"span\" : \"div\"));\n            if (name == \"class\")\n                top.class = (top.class ? top.class + \" \" : \"\") + val;\n            else if (name == \"style\")\n                top.style = (top.style ? top.style + \";\" : \"\") + val;\n            else if (name != \"nodeName\")\n                top[name] = val;\n        }\n    }\n    return result;\n}\nfunction patchOuterDeco(outerDOM, nodeDOM, prevComputed, curComputed) {\n    // Shortcut for trivial case\n    if (prevComputed == noDeco && curComputed == noDeco)\n        return nodeDOM;\n    let curDOM = nodeDOM;\n    for (let i = 0; i < curComputed.length; i++) {\n        let deco = curComputed[i], prev = prevComputed[i];\n        if (i) {\n            let parent;\n            if (prev && prev.nodeName == deco.nodeName && curDOM != outerDOM &&\n                (parent = curDOM.parentNode) && parent.nodeName.toLowerCase() == deco.nodeName) {\n                curDOM = parent;\n            }\n            else {\n                parent = document.createElement(deco.nodeName);\n                parent.pmIsDeco = true;\n                parent.appendChild(curDOM);\n                prev = noDeco[0];\n                curDOM = parent;\n            }\n        }\n        patchAttributes(curDOM, prev || noDeco[0], deco);\n    }\n    return curDOM;\n}\nfunction patchAttributes(dom, prev, cur) {\n    for (let name in prev)\n        if (name != \"class\" && name != \"style\" && name != \"nodeName\" && !(name in cur))\n            dom.removeAttribute(name);\n    for (let name in cur)\n        if (name != \"class\" && name != \"style\" && name != \"nodeName\" && cur[name] != prev[name])\n            dom.setAttribute(name, cur[name]);\n    if (prev.class != cur.class) {\n        let prevList = prev.class ? prev.class.split(\" \").filter(Boolean) : [];\n        let curList = cur.class ? cur.class.split(\" \").filter(Boolean) : [];\n        for (let i = 0; i < prevList.length; i++)\n            if (curList.indexOf(prevList[i]) == -1)\n                dom.classList.remove(prevList[i]);\n        for (let i = 0; i < curList.length; i++)\n            if (prevList.indexOf(curList[i]) == -1)\n                dom.classList.add(curList[i]);\n        if (dom.classList.length == 0)\n            dom.removeAttribute(\"class\");\n    }\n    if (prev.style != cur.style) {\n        if (prev.style) {\n            let prop = /\\s*([\\w\\-\\xa1-\\uffff]+)\\s*:(?:\"(?:\\\\.|[^\"])*\"|'(?:\\\\.|[^'])*'|\\(.*?\\)|[^;])*/g, m;\n            while (m = prop.exec(prev.style))\n                dom.style.removeProperty(m[1]);\n        }\n        if (cur.style)\n            dom.style.cssText += cur.style;\n    }\n}\nfunction applyOuterDeco(dom, deco, node) {\n    return patchOuterDeco(dom, dom, noDeco, computeOuterDeco(deco, node, dom.nodeType != 1));\n}\nfunction sameOuterDeco(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!a[i].type.eq(b[i].type))\n            return false;\n    return true;\n}\n// Remove a DOM node and return its next sibling.\nfunction rm(dom) {\n    let next = dom.nextSibling;\n    dom.parentNode.removeChild(dom);\n    return next;\n}\n// Helper class for incrementally updating a tree of mark descs and\n// the widget and node descs inside of them.\nclass ViewTreeUpdater {\n    constructor(top, lock, view) {\n        this.lock = lock;\n        this.view = view;\n        // Index into `this.top`'s child array, represents the current\n        // update position.\n        this.index = 0;\n        // When entering a mark, the current top and index are pushed\n        // onto this.\n        this.stack = [];\n        // Tracks whether anything was changed\n        this.changed = false;\n        this.top = top;\n        this.preMatch = preMatch(top.node.content, top);\n    }\n    // Destroy and remove the children between the given indices in\n    // `this.top`.\n    destroyBetween(start, end) {\n        if (start == end)\n            return;\n        for (let i = start; i < end; i++)\n            this.top.children[i].destroy();\n        this.top.children.splice(start, end - start);\n        this.changed = true;\n    }\n    // Destroy all remaining children in `this.top`.\n    destroyRest() {\n        this.destroyBetween(this.index, this.top.children.length);\n    }\n    // Sync the current stack of mark descs with the given array of\n    // marks, reusing existing mark descs when possible.\n    syncToMarks(marks, inline, view) {\n        let keep = 0, depth = this.stack.length >> 1;\n        let maxKeep = Math.min(depth, marks.length);\n        while (keep < maxKeep &&\n            (keep == depth - 1 ? this.top : this.stack[(keep + 1) << 1])\n                .matchesMark(marks[keep]) && marks[keep].type.spec.spanning !== false)\n            keep++;\n        while (keep < depth) {\n            this.destroyRest();\n            this.top.dirty = NOT_DIRTY;\n            this.index = this.stack.pop();\n            this.top = this.stack.pop();\n            depth--;\n        }\n        while (depth < marks.length) {\n            this.stack.push(this.top, this.index + 1);\n            let found = -1;\n            for (let i = this.index; i < Math.min(this.index + 3, this.top.children.length); i++) {\n                let next = this.top.children[i];\n                if (next.matchesMark(marks[depth]) && !this.isLocked(next.dom)) {\n                    found = i;\n                    break;\n                }\n            }\n            if (found > -1) {\n                if (found > this.index) {\n                    this.changed = true;\n                    this.destroyBetween(this.index, found);\n                }\n                this.top = this.top.children[this.index];\n            }\n            else {\n                let markDesc = MarkViewDesc.create(this.top, marks[depth], inline, view);\n                this.top.children.splice(this.index, 0, markDesc);\n                this.top = markDesc;\n                this.changed = true;\n            }\n            this.index = 0;\n            depth++;\n        }\n    }\n    // Try to find a node desc matching the given data. Skip over it and\n    // return true when successful.\n    findNodeMatch(node, outerDeco, innerDeco, index) {\n        let found = -1, targetDesc;\n        if (index >= this.preMatch.index &&\n            (targetDesc = this.preMatch.matches[index - this.preMatch.index]).parent == this.top &&\n            targetDesc.matchesNode(node, outerDeco, innerDeco)) {\n            found = this.top.children.indexOf(targetDesc, this.index);\n        }\n        else {\n            for (let i = this.index, e = Math.min(this.top.children.length, i + 5); i < e; i++) {\n                let child = this.top.children[i];\n                if (child.matchesNode(node, outerDeco, innerDeco) && !this.preMatch.matched.has(child)) {\n                    found = i;\n                    break;\n                }\n            }\n        }\n        if (found < 0)\n            return false;\n        this.destroyBetween(this.index, found);\n        this.index++;\n        return true;\n    }\n    updateNodeAt(node, outerDeco, innerDeco, index, view) {\n        let child = this.top.children[index];\n        if (child.dirty == NODE_DIRTY && child.dom == child.contentDOM)\n            child.dirty = CONTENT_DIRTY;\n        if (!child.update(node, outerDeco, innerDeco, view))\n            return false;\n        this.destroyBetween(this.index, index);\n        this.index++;\n        return true;\n    }\n    findIndexWithChild(domNode) {\n        for (;;) {\n            let parent = domNode.parentNode;\n            if (!parent)\n                return -1;\n            if (parent == this.top.contentDOM) {\n                let desc = domNode.pmViewDesc;\n                if (desc)\n                    for (let i = this.index; i < this.top.children.length; i++) {\n                        if (this.top.children[i] == desc)\n                            return i;\n                    }\n                return -1;\n            }\n            domNode = parent;\n        }\n    }\n    // Try to update the next node, if any, to the given data. Checks\n    // pre-matches to avoid overwriting nodes that could still be used.\n    updateNextNode(node, outerDeco, innerDeco, view, index) {\n        for (let i = this.index; i < this.top.children.length; i++) {\n            let next = this.top.children[i];\n            if (next instanceof NodeViewDesc) {\n                let preMatch = this.preMatch.matched.get(next);\n                if (preMatch != null && preMatch != index)\n                    return false;\n                let nextDOM = next.dom;\n                // Can't update if nextDOM is or contains this.lock, except if\n                // it's a text node whose content already matches the new text\n                // and whose decorations match the new ones.\n                let locked = this.isLocked(nextDOM) &&\n                    !(node.isText && next.node && next.node.isText && next.nodeDOM.nodeValue == node.text &&\n                        next.dirty != NODE_DIRTY && sameOuterDeco(outerDeco, next.outerDeco));\n                if (!locked && next.update(node, outerDeco, innerDeco, view)) {\n                    this.destroyBetween(this.index, i);\n                    if (next.dom != nextDOM)\n                        this.changed = true;\n                    this.index++;\n                    return true;\n                }\n                break;\n            }\n        }\n        return false;\n    }\n    // Insert the node as a newly created node desc.\n    addNode(node, outerDeco, innerDeco, view, pos) {\n        this.top.children.splice(this.index++, 0, NodeViewDesc.create(this.top, node, outerDeco, innerDeco, view, pos));\n        this.changed = true;\n    }\n    placeWidget(widget, view, pos) {\n        let next = this.index < this.top.children.length ? this.top.children[this.index] : null;\n        if (next && next.matchesWidget(widget) &&\n            (widget == next.widget || !next.widget.type.toDOM.parentNode)) {\n            this.index++;\n        }\n        else {\n            let desc = new WidgetViewDesc(this.top, widget, view, pos);\n            this.top.children.splice(this.index++, 0, desc);\n            this.changed = true;\n        }\n    }\n    // Make sure a textblock looks and behaves correctly in\n    // contentEditable.\n    addTextblockHacks() {\n        let lastChild = this.top.children[this.index - 1], parent = this.top;\n        while (lastChild instanceof MarkViewDesc) {\n            parent = lastChild;\n            lastChild = parent.children[parent.children.length - 1];\n        }\n        if (!lastChild || // Empty textblock\n            !(lastChild instanceof TextViewDesc) ||\n            /\\n$/.test(lastChild.node.text) ||\n            (this.view.requiresGeckoHackNode && /\\s$/.test(lastChild.node.text))) {\n            // Avoid bugs in Safari's cursor drawing (#1165) and Chrome's mouse selection (#1152)\n            if ((safari || chrome) && lastChild && lastChild.dom.contentEditable == \"false\")\n                this.addHackNode(\"IMG\", parent);\n            this.addHackNode(\"BR\", this.top);\n        }\n    }\n    addHackNode(nodeName, parent) {\n        if (parent == this.top && this.index < parent.children.length && parent.children[this.index].matchesHack(nodeName)) {\n            this.index++;\n        }\n        else {\n            let dom = document.createElement(nodeName);\n            if (nodeName == \"IMG\") {\n                dom.className = \"ProseMirror-separator\";\n                dom.alt = \"\";\n            }\n            if (nodeName == \"BR\")\n                dom.className = \"ProseMirror-trailingBreak\";\n            let hack = new TrailingHackViewDesc(this.top, [], dom, null);\n            if (parent != this.top)\n                parent.children.push(hack);\n            else\n                parent.children.splice(this.index++, 0, hack);\n            this.changed = true;\n        }\n    }\n    isLocked(node) {\n        return this.lock && (node == this.lock || node.nodeType == 1 && node.contains(this.lock.parentNode));\n    }\n}\n// Iterate from the end of the fragment and array of descs to find\n// directly matching ones, in order to avoid overeagerly reusing those\n// for other nodes. Returns the fragment index of the first node that\n// is part of the sequence of matched nodes at the end of the\n// fragment.\nfunction preMatch(frag, parentDesc) {\n    let curDesc = parentDesc, descI = curDesc.children.length;\n    let fI = frag.childCount, matched = new Map, matches = [];\n    outer: while (fI > 0) {\n        let desc;\n        for (;;) {\n            if (descI) {\n                let next = curDesc.children[descI - 1];\n                if (next instanceof MarkViewDesc) {\n                    curDesc = next;\n                    descI = next.children.length;\n                }\n                else {\n                    desc = next;\n                    descI--;\n                    break;\n                }\n            }\n            else if (curDesc == parentDesc) {\n                break outer;\n            }\n            else {\n                // FIXME\n                descI = curDesc.parent.children.indexOf(curDesc);\n                curDesc = curDesc.parent;\n            }\n        }\n        let node = desc.node;\n        if (!node)\n            continue;\n        if (node != frag.child(fI - 1))\n            break;\n        --fI;\n        matched.set(desc, fI);\n        matches.push(desc);\n    }\n    return { index: fI, matched, matches: matches.reverse() };\n}\nfunction compareSide(a, b) {\n    return a.type.side - b.type.side;\n}\n// This function abstracts iterating over the nodes and decorations in\n// a fragment. Calls `onNode` for each node, with its local and child\n// decorations. Splits text nodes when there is a decoration starting\n// or ending inside of them. Calls `onWidget` for each widget.\nfunction iterDeco(parent, deco, onWidget, onNode) {\n    let locals = deco.locals(parent), offset = 0;\n    // Simple, cheap variant for when there are no local decorations\n    if (locals.length == 0) {\n        for (let i = 0; i < parent.childCount; i++) {\n            let child = parent.child(i);\n            onNode(child, locals, deco.forChild(offset, child), i);\n            offset += child.nodeSize;\n        }\n        return;\n    }\n    let decoIndex = 0, active = [], restNode = null;\n    for (let parentIndex = 0;;) {\n        if (decoIndex < locals.length && locals[decoIndex].to == offset) {\n            let widget = locals[decoIndex++], widgets;\n            while (decoIndex < locals.length && locals[decoIndex].to == offset)\n                (widgets || (widgets = [widget])).push(locals[decoIndex++]);\n            if (widgets) {\n                widgets.sort(compareSide);\n                for (let i = 0; i < widgets.length; i++)\n                    onWidget(widgets[i], parentIndex, !!restNode);\n            }\n            else {\n                onWidget(widget, parentIndex, !!restNode);\n            }\n        }\n        let child, index;\n        if (restNode) {\n            index = -1;\n            child = restNode;\n            restNode = null;\n        }\n        else if (parentIndex < parent.childCount) {\n            index = parentIndex;\n            child = parent.child(parentIndex++);\n        }\n        else {\n            break;\n        }\n        for (let i = 0; i < active.length; i++)\n            if (active[i].to <= offset)\n                active.splice(i--, 1);\n        while (decoIndex < locals.length && locals[decoIndex].from <= offset && locals[decoIndex].to > offset)\n            active.push(locals[decoIndex++]);\n        let end = offset + child.nodeSize;\n        if (child.isText) {\n            let cutAt = end;\n            if (decoIndex < locals.length && locals[decoIndex].from < cutAt)\n                cutAt = locals[decoIndex].from;\n            for (let i = 0; i < active.length; i++)\n                if (active[i].to < cutAt)\n                    cutAt = active[i].to;\n            if (cutAt < end) {\n                restNode = child.cut(cutAt - offset);\n                child = child.cut(0, cutAt - offset);\n                end = cutAt;\n                index = -1;\n            }\n        }\n        let outerDeco = child.isInline && !child.isLeaf ? active.filter(d => !d.inline) : active.slice();\n        onNode(child, outerDeco, deco.forChild(offset, child), index);\n        offset = end;\n    }\n}\n// List markers in Mobile Safari will mysteriously disappear\n// sometimes. This works around that.\nfunction iosHacks(dom) {\n    if (dom.nodeName == \"UL\" || dom.nodeName == \"OL\") {\n        let oldCSS = dom.style.cssText;\n        dom.style.cssText = oldCSS + \"; list-style: square !important\";\n        window.getComputedStyle(dom).listStyle;\n        dom.style.cssText = oldCSS;\n    }\n}\nfunction nearbyTextNode(node, offset) {\n    for (;;) {\n        if (node.nodeType == 3)\n            return node;\n        if (node.nodeType == 1 && offset > 0) {\n            if (node.childNodes.length > offset && node.childNodes[offset].nodeType == 3)\n                return node.childNodes[offset];\n            node = node.childNodes[offset - 1];\n            offset = nodeSize(node);\n        }\n        else if (node.nodeType == 1 && offset < node.childNodes.length) {\n            node = node.childNodes[offset];\n            offset = 0;\n        }\n        else {\n            return null;\n        }\n    }\n}\n// Find a piece of text in an inline fragment, overlapping from-to\nfunction findTextInFragment(frag, text, from, to) {\n    for (let i = 0, pos = 0; i < frag.childCount && pos <= to;) {\n        let child = frag.child(i++), childStart = pos;\n        pos += child.nodeSize;\n        if (!child.isText)\n            continue;\n        let str = child.text;\n        while (i < frag.childCount) {\n            let next = frag.child(i++);\n            pos += next.nodeSize;\n            if (!next.isText)\n                break;\n            str += next.text;\n        }\n        if (pos >= from) {\n            let found = childStart < to ? str.lastIndexOf(text, to - childStart - 1) : -1;\n            if (found >= 0 && found + text.length + childStart >= from)\n                return childStart + found;\n            if (from == to && str.length >= (to + text.length) - childStart &&\n                str.slice(to - childStart, to - childStart + text.length) == text)\n                return to;\n        }\n    }\n    return -1;\n}\n// Replace range from-to in an array of view descs with replacement\n// (may be null to just delete). This goes very much against the grain\n// of the rest of this code, which tends to create nodes with the\n// right shape in one go, rather than messing with them after\n// creation, but is necessary in the composition hack.\nfunction replaceNodes(nodes, from, to, view, replacement) {\n    let result = [];\n    for (let i = 0, off = 0; i < nodes.length; i++) {\n        let child = nodes[i], start = off, end = off += child.size;\n        if (start >= to || end <= from) {\n            result.push(child);\n        }\n        else {\n            if (start < from)\n                result.push(child.slice(0, from - start, view));\n            if (replacement) {\n                result.push(replacement);\n                replacement = undefined;\n            }\n            if (end > to)\n                result.push(child.slice(to - start, child.size, view));\n        }\n    }\n    return result;\n}\n\nfunction selectionFromDOM(view, origin = null) {\n    let domSel = view.domSelectionRange(), doc = view.state.doc;\n    if (!domSel.focusNode)\n        return null;\n    let nearestDesc = view.docView.nearestDesc(domSel.focusNode), inWidget = nearestDesc && nearestDesc.size == 0;\n    let head = view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset, 1);\n    if (head < 0)\n        return null;\n    let $head = doc.resolve(head), $anchor, selection;\n    if (selectionCollapsed(domSel)) {\n        $anchor = $head;\n        while (nearestDesc && !nearestDesc.node)\n            nearestDesc = nearestDesc.parent;\n        let nearestDescNode = nearestDesc.node;\n        if (nearestDesc && nearestDescNode.isAtom && NodeSelection.isSelectable(nearestDescNode) && nearestDesc.parent\n            && !(nearestDescNode.isInline && isOnEdge(domSel.focusNode, domSel.focusOffset, nearestDesc.dom))) {\n            let pos = nearestDesc.posBefore;\n            selection = new NodeSelection(head == pos ? $head : doc.resolve(pos));\n        }\n    }\n    else {\n        let anchor = view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset, 1);\n        if (anchor < 0)\n            return null;\n        $anchor = doc.resolve(anchor);\n    }\n    if (!selection) {\n        let bias = origin == \"pointer\" || (view.state.selection.head < $head.pos && !inWidget) ? 1 : -1;\n        selection = selectionBetween(view, $anchor, $head, bias);\n    }\n    return selection;\n}\nfunction editorOwnsSelection(view) {\n    return view.editable ? view.hasFocus() :\n        hasSelection(view) && document.activeElement && document.activeElement.contains(view.dom);\n}\nfunction selectionToDOM(view, force = false) {\n    let sel = view.state.selection;\n    syncNodeSelection(view, sel);\n    if (!editorOwnsSelection(view))\n        return;\n    // The delayed drag selection causes issues with Cell Selections\n    // in Safari. And the drag selection delay is to workarond issues\n    // which only present in Chrome.\n    if (!force && view.input.mouseDown && view.input.mouseDown.allowDefault && chrome) {\n        let domSel = view.domSelectionRange(), curSel = view.domObserver.currentSelection;\n        if (domSel.anchorNode && curSel.anchorNode &&\n            isEquivalentPosition(domSel.anchorNode, domSel.anchorOffset, curSel.anchorNode, curSel.anchorOffset)) {\n            view.input.mouseDown.delayedSelectionSync = true;\n            view.domObserver.setCurSelection();\n            return;\n        }\n    }\n    view.domObserver.disconnectSelection();\n    if (view.cursorWrapper) {\n        selectCursorWrapper(view);\n    }\n    else {\n        let { anchor, head } = sel, resetEditableFrom, resetEditableTo;\n        if (brokenSelectBetweenUneditable && !(sel instanceof TextSelection)) {\n            if (!sel.$from.parent.inlineContent)\n                resetEditableFrom = temporarilyEditableNear(view, sel.from);\n            if (!sel.empty && !sel.$from.parent.inlineContent)\n                resetEditableTo = temporarilyEditableNear(view, sel.to);\n        }\n        view.docView.setSelection(anchor, head, view.root, force);\n        if (brokenSelectBetweenUneditable) {\n            if (resetEditableFrom)\n                resetEditable(resetEditableFrom);\n            if (resetEditableTo)\n                resetEditable(resetEditableTo);\n        }\n        if (sel.visible) {\n            view.dom.classList.remove(\"ProseMirror-hideselection\");\n        }\n        else {\n            view.dom.classList.add(\"ProseMirror-hideselection\");\n            if (\"onselectionchange\" in document)\n                removeClassOnSelectionChange(view);\n        }\n    }\n    view.domObserver.setCurSelection();\n    view.domObserver.connectSelection();\n}\n// Kludge to work around Webkit not allowing a selection to start/end\n// between non-editable block nodes. We briefly make something\n// editable, set the selection, then set it uneditable again.\nconst brokenSelectBetweenUneditable = safari || chrome && chrome_version < 63;\nfunction temporarilyEditableNear(view, pos) {\n    let { node, offset } = view.docView.domFromPos(pos, 0);\n    let after = offset < node.childNodes.length ? node.childNodes[offset] : null;\n    let before = offset ? node.childNodes[offset - 1] : null;\n    if (safari && after && after.contentEditable == \"false\")\n        return setEditable(after);\n    if ((!after || after.contentEditable == \"false\") &&\n        (!before || before.contentEditable == \"false\")) {\n        if (after)\n            return setEditable(after);\n        else if (before)\n            return setEditable(before);\n    }\n}\nfunction setEditable(element) {\n    element.contentEditable = \"true\";\n    if (safari && element.draggable) {\n        element.draggable = false;\n        element.wasDraggable = true;\n    }\n    return element;\n}\nfunction resetEditable(element) {\n    element.contentEditable = \"false\";\n    if (element.wasDraggable) {\n        element.draggable = true;\n        element.wasDraggable = null;\n    }\n}\nfunction removeClassOnSelectionChange(view) {\n    let doc = view.dom.ownerDocument;\n    doc.removeEventListener(\"selectionchange\", view.input.hideSelectionGuard);\n    let domSel = view.domSelectionRange();\n    let node = domSel.anchorNode, offset = domSel.anchorOffset;\n    doc.addEventListener(\"selectionchange\", view.input.hideSelectionGuard = () => {\n        if (domSel.anchorNode != node || domSel.anchorOffset != offset) {\n            doc.removeEventListener(\"selectionchange\", view.input.hideSelectionGuard);\n            setTimeout(() => {\n                if (!editorOwnsSelection(view) || view.state.selection.visible)\n                    view.dom.classList.remove(\"ProseMirror-hideselection\");\n            }, 20);\n        }\n    });\n}\nfunction selectCursorWrapper(view) {\n    let domSel = view.domSelection(), range = document.createRange();\n    let node = view.cursorWrapper.dom, img = node.nodeName == \"IMG\";\n    if (img)\n        range.setEnd(node.parentNode, domIndex(node) + 1);\n    else\n        range.setEnd(node, 0);\n    range.collapse(false);\n    domSel.removeAllRanges();\n    domSel.addRange(range);\n    // Kludge to kill 'control selection' in IE11 when selecting an\n    // invisible cursor wrapper, since that would result in those weird\n    // resize handles and a selection that considers the absolutely\n    // positioned wrapper, rather than the root editable node, the\n    // focused element.\n    if (!img && !view.state.selection.visible && ie && ie_version <= 11) {\n        node.disabled = true;\n        node.disabled = false;\n    }\n}\nfunction syncNodeSelection(view, sel) {\n    if (sel instanceof NodeSelection) {\n        let desc = view.docView.descAt(sel.from);\n        if (desc != view.lastSelectedViewDesc) {\n            clearNodeSelection(view);\n            if (desc)\n                desc.selectNode();\n            view.lastSelectedViewDesc = desc;\n        }\n    }\n    else {\n        clearNodeSelection(view);\n    }\n}\n// Clear all DOM statefulness of the last node selection.\nfunction clearNodeSelection(view) {\n    if (view.lastSelectedViewDesc) {\n        if (view.lastSelectedViewDesc.parent)\n            view.lastSelectedViewDesc.deselectNode();\n        view.lastSelectedViewDesc = undefined;\n    }\n}\nfunction selectionBetween(view, $anchor, $head, bias) {\n    return view.someProp(\"createSelectionBetween\", f => f(view, $anchor, $head))\n        || TextSelection.between($anchor, $head, bias);\n}\nfunction hasFocusAndSelection(view) {\n    if (view.editable && !view.hasFocus())\n        return false;\n    return hasSelection(view);\n}\nfunction hasSelection(view) {\n    let sel = view.domSelectionRange();\n    if (!sel.anchorNode)\n        return false;\n    try {\n        // Firefox will raise 'permission denied' errors when accessing\n        // properties of `sel.anchorNode` when it's in a generated CSS\n        // element.\n        return view.dom.contains(sel.anchorNode.nodeType == 3 ? sel.anchorNode.parentNode : sel.anchorNode) &&\n            (view.editable || view.dom.contains(sel.focusNode.nodeType == 3 ? sel.focusNode.parentNode : sel.focusNode));\n    }\n    catch (_) {\n        return false;\n    }\n}\nfunction anchorInRightPlace(view) {\n    let anchorDOM = view.docView.domFromPos(view.state.selection.anchor, 0);\n    let domSel = view.domSelectionRange();\n    return isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset);\n}\n\nfunction moveSelectionBlock(state, dir) {\n    let { $anchor, $head } = state.selection;\n    let $side = dir > 0 ? $anchor.max($head) : $anchor.min($head);\n    let $start = !$side.parent.inlineContent ? $side : $side.depth ? state.doc.resolve(dir > 0 ? $side.after() : $side.before()) : null;\n    return $start && Selection.findFrom($start, dir);\n}\nfunction apply(view, sel) {\n    view.dispatch(view.state.tr.setSelection(sel).scrollIntoView());\n    return true;\n}\nfunction selectHorizontally(view, dir, mods) {\n    let sel = view.state.selection;\n    if (sel instanceof TextSelection) {\n        if (!sel.empty || mods.indexOf(\"s\") > -1) {\n            return false;\n        }\n        else if (view.endOfTextblock(dir > 0 ? \"right\" : \"left\")) {\n            let next = moveSelectionBlock(view.state, dir);\n            if (next && (next instanceof NodeSelection))\n                return apply(view, next);\n            return false;\n        }\n        else if (!(mac && mods.indexOf(\"m\") > -1)) {\n            let $head = sel.$head, node = $head.textOffset ? null : dir < 0 ? $head.nodeBefore : $head.nodeAfter, desc;\n            if (!node || node.isText)\n                return false;\n            let nodePos = dir < 0 ? $head.pos - node.nodeSize : $head.pos;\n            if (!(node.isAtom || (desc = view.docView.descAt(nodePos)) && !desc.contentDOM))\n                return false;\n            if (NodeSelection.isSelectable(node)) {\n                return apply(view, new NodeSelection(dir < 0 ? view.state.doc.resolve($head.pos - node.nodeSize) : $head));\n            }\n            else if (webkit) {\n                // Chrome and Safari will introduce extra pointless cursor\n                // positions around inline uneditable nodes, so we have to\n                // take over and move the cursor past them (#937)\n                return apply(view, new TextSelection(view.state.doc.resolve(dir < 0 ? nodePos : nodePos + node.nodeSize)));\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    else if (sel instanceof NodeSelection && sel.node.isInline) {\n        return apply(view, new TextSelection(dir > 0 ? sel.$to : sel.$from));\n    }\n    else {\n        let next = moveSelectionBlock(view.state, dir);\n        if (next)\n            return apply(view, next);\n        return false;\n    }\n}\nfunction nodeLen(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nfunction isIgnorable(dom) {\n    let desc = dom.pmViewDesc;\n    return desc && desc.size == 0 && (dom.nextSibling || dom.nodeName != \"BR\");\n}\n// Make sure the cursor isn't directly after one or more ignored\n// nodes, which will confuse the browser's cursor motion logic.\nfunction skipIgnoredNodesLeft(view) {\n    let sel = view.domSelectionRange();\n    let node = sel.focusNode, offset = sel.focusOffset;\n    if (!node)\n        return;\n    let moveNode, moveOffset, force = false;\n    // Gecko will do odd things when the selection is directly in front\n    // of a non-editable node, so in that case, move it into the next\n    // node if possible. Issue prosemirror/prosemirror#832.\n    if (gecko && node.nodeType == 1 && offset < nodeLen(node) && isIgnorable(node.childNodes[offset]))\n        force = true;\n    for (;;) {\n        if (offset > 0) {\n            if (node.nodeType != 1) {\n                break;\n            }\n            else {\n                let before = node.childNodes[offset - 1];\n                if (isIgnorable(before)) {\n                    moveNode = node;\n                    moveOffset = --offset;\n                }\n                else if (before.nodeType == 3) {\n                    node = before;\n                    offset = node.nodeValue.length;\n                }\n                else\n                    break;\n            }\n        }\n        else if (isBlockNode(node)) {\n            break;\n        }\n        else {\n            let prev = node.previousSibling;\n            while (prev && isIgnorable(prev)) {\n                moveNode = node.parentNode;\n                moveOffset = domIndex(prev);\n                prev = prev.previousSibling;\n            }\n            if (!prev) {\n                node = node.parentNode;\n                if (node == view.dom)\n                    break;\n                offset = 0;\n            }\n            else {\n                node = prev;\n                offset = nodeLen(node);\n            }\n        }\n    }\n    if (force)\n        setSelFocus(view, node, offset);\n    else if (moveNode)\n        setSelFocus(view, moveNode, moveOffset);\n}\n// Make sure the cursor isn't directly before one or more ignored\n// nodes.\nfunction skipIgnoredNodesRight(view) {\n    let sel = view.domSelectionRange();\n    let node = sel.focusNode, offset = sel.focusOffset;\n    if (!node)\n        return;\n    let len = nodeLen(node);\n    let moveNode, moveOffset;\n    for (;;) {\n        if (offset < len) {\n            if (node.nodeType != 1)\n                break;\n            let after = node.childNodes[offset];\n            if (isIgnorable(after)) {\n                moveNode = node;\n                moveOffset = ++offset;\n            }\n            else\n                break;\n        }\n        else if (isBlockNode(node)) {\n            break;\n        }\n        else {\n            let next = node.nextSibling;\n            while (next && isIgnorable(next)) {\n                moveNode = next.parentNode;\n                moveOffset = domIndex(next) + 1;\n                next = next.nextSibling;\n            }\n            if (!next) {\n                node = node.parentNode;\n                if (node == view.dom)\n                    break;\n                offset = len = 0;\n            }\n            else {\n                node = next;\n                offset = 0;\n                len = nodeLen(node);\n            }\n        }\n    }\n    if (moveNode)\n        setSelFocus(view, moveNode, moveOffset);\n}\nfunction isBlockNode(dom) {\n    let desc = dom.pmViewDesc;\n    return desc && desc.node && desc.node.isBlock;\n}\nfunction setSelFocus(view, node, offset) {\n    let sel = view.domSelection();\n    if (selectionCollapsed(sel)) {\n        let range = document.createRange();\n        range.setEnd(node, offset);\n        range.setStart(node, offset);\n        sel.removeAllRanges();\n        sel.addRange(range);\n    }\n    else if (sel.extend) {\n        sel.extend(node, offset);\n    }\n    view.domObserver.setCurSelection();\n    let { state } = view;\n    // If no state update ends up happening, reset the selection.\n    setTimeout(() => {\n        if (view.state == state)\n            selectionToDOM(view);\n    }, 50);\n}\n// Check whether vertical selection motion would involve node\n// selections. If so, apply it (if not, the result is left to the\n// browser)\nfunction selectVertically(view, dir, mods) {\n    let sel = view.state.selection;\n    if (sel instanceof TextSelection && !sel.empty || mods.indexOf(\"s\") > -1)\n        return false;\n    if (mac && mods.indexOf(\"m\") > -1)\n        return false;\n    let { $from, $to } = sel;\n    if (!$from.parent.inlineContent || view.endOfTextblock(dir < 0 ? \"up\" : \"down\")) {\n        let next = moveSelectionBlock(view.state, dir);\n        if (next && (next instanceof NodeSelection))\n            return apply(view, next);\n    }\n    if (!$from.parent.inlineContent) {\n        let side = dir < 0 ? $from : $to;\n        let beyond = sel instanceof AllSelection ? Selection.near(side, dir) : Selection.findFrom(side, dir);\n        return beyond ? apply(view, beyond) : false;\n    }\n    return false;\n}\nfunction stopNativeHorizontalDelete(view, dir) {\n    if (!(view.state.selection instanceof TextSelection))\n        return true;\n    let { $head, $anchor, empty } = view.state.selection;\n    if (!$head.sameParent($anchor))\n        return true;\n    if (!empty)\n        return false;\n    if (view.endOfTextblock(dir > 0 ? \"forward\" : \"backward\"))\n        return true;\n    let nextNode = !$head.textOffset && (dir < 0 ? $head.nodeBefore : $head.nodeAfter);\n    if (nextNode && !nextNode.isText) {\n        let tr = view.state.tr;\n        if (dir < 0)\n            tr.delete($head.pos - nextNode.nodeSize, $head.pos);\n        else\n            tr.delete($head.pos, $head.pos + nextNode.nodeSize);\n        view.dispatch(tr);\n        return true;\n    }\n    return false;\n}\nfunction switchEditable(view, node, state) {\n    view.domObserver.stop();\n    node.contentEditable = state;\n    view.domObserver.start();\n}\n// Issue #867 / #1090 / https://bugs.chromium.org/p/chromium/issues/detail?id=903821\n// In which Safari (and at some point in the past, Chrome) does really\n// wrong things when the down arrow is pressed when the cursor is\n// directly at the start of a textblock and has an uneditable node\n// after it\nfunction safariDownArrowBug(view) {\n    if (!safari || view.state.selection.$head.parentOffset > 0)\n        return false;\n    let { focusNode, focusOffset } = view.domSelectionRange();\n    if (focusNode && focusNode.nodeType == 1 && focusOffset == 0 &&\n        focusNode.firstChild && focusNode.firstChild.contentEditable == \"false\") {\n        let child = focusNode.firstChild;\n        switchEditable(view, child, \"true\");\n        setTimeout(() => switchEditable(view, child, \"false\"), 20);\n    }\n    return false;\n}\n// A backdrop key mapping used to make sure we always suppress keys\n// that have a dangerous default effect, even if the commands they are\n// bound to return false, and to make sure that cursor-motion keys\n// find a cursor (as opposed to a node selection) when pressed. For\n// cursor-motion keys, the code in the handlers also takes care of\n// block selections.\nfunction getMods(event) {\n    let result = \"\";\n    if (event.ctrlKey)\n        result += \"c\";\n    if (event.metaKey)\n        result += \"m\";\n    if (event.altKey)\n        result += \"a\";\n    if (event.shiftKey)\n        result += \"s\";\n    return result;\n}\nfunction captureKeyDown(view, event) {\n    let code = event.keyCode, mods = getMods(event);\n    if (code == 8 || (mac && code == 72 && mods == \"c\")) { // Backspace, Ctrl-h on Mac\n        return stopNativeHorizontalDelete(view, -1) || skipIgnoredNodesLeft(view);\n    }\n    else if (code == 46 || (mac && code == 68 && mods == \"c\")) { // Delete, Ctrl-d on Mac\n        return stopNativeHorizontalDelete(view, 1) || skipIgnoredNodesRight(view);\n    }\n    else if (code == 13 || code == 27) { // Enter, Esc\n        return true;\n    }\n    else if (code == 37 || (mac && code == 66 && mods == \"c\")) { // Left arrow, Ctrl-b on Mac\n        return selectHorizontally(view, -1, mods) || skipIgnoredNodesLeft(view);\n    }\n    else if (code == 39 || (mac && code == 70 && mods == \"c\")) { // Right arrow, Ctrl-f on Mac\n        return selectHorizontally(view, 1, mods) || skipIgnoredNodesRight(view);\n    }\n    else if (code == 38 || (mac && code == 80 && mods == \"c\")) { // Up arrow, Ctrl-p on Mac\n        return selectVertically(view, -1, mods) || skipIgnoredNodesLeft(view);\n    }\n    else if (code == 40 || (mac && code == 78 && mods == \"c\")) { // Down arrow, Ctrl-n on Mac\n        return safariDownArrowBug(view) || selectVertically(view, 1, mods) || skipIgnoredNodesRight(view);\n    }\n    else if (mods == (mac ? \"m\" : \"c\") &&\n        (code == 66 || code == 73 || code == 89 || code == 90)) { // Mod-[biyz]\n        return true;\n    }\n    return false;\n}\n\nfunction serializeForClipboard(view, slice) {\n    view.someProp(\"transformCopied\", f => { slice = f(slice, view); });\n    let context = [], { content, openStart, openEnd } = slice;\n    while (openStart > 1 && openEnd > 1 && content.childCount == 1 && content.firstChild.childCount == 1) {\n        openStart--;\n        openEnd--;\n        let node = content.firstChild;\n        context.push(node.type.name, node.attrs != node.type.defaultAttrs ? node.attrs : null);\n        content = node.content;\n    }\n    let serializer = view.someProp(\"clipboardSerializer\") || DOMSerializer.fromSchema(view.state.schema);\n    let doc = detachedDoc(), wrap = doc.createElement(\"div\");\n    wrap.appendChild(serializer.serializeFragment(content, { document: doc }));\n    let firstChild = wrap.firstChild, needsWrap, wrappers = 0;\n    while (firstChild && firstChild.nodeType == 1 && (needsWrap = wrapMap[firstChild.nodeName.toLowerCase()])) {\n        for (let i = needsWrap.length - 1; i >= 0; i--) {\n            let wrapper = doc.createElement(needsWrap[i]);\n            while (wrap.firstChild)\n                wrapper.appendChild(wrap.firstChild);\n            wrap.appendChild(wrapper);\n            wrappers++;\n        }\n        firstChild = wrap.firstChild;\n    }\n    if (firstChild && firstChild.nodeType == 1)\n        firstChild.setAttribute(\"data-pm-slice\", `${openStart} ${openEnd}${wrappers ? ` -${wrappers}` : \"\"} ${JSON.stringify(context)}`);\n    let text = view.someProp(\"clipboardTextSerializer\", f => f(slice, view)) ||\n        slice.content.textBetween(0, slice.content.size, \"\\n\\n\");\n    return { dom: wrap, text };\n}\n// Read a slice of content from the clipboard (or drop data).\nfunction parseFromClipboard(view, text, html, plainText, $context) {\n    let inCode = $context.parent.type.spec.code;\n    let dom, slice;\n    if (!html && !text)\n        return null;\n    let asText = text && (plainText || inCode || !html);\n    if (asText) {\n        view.someProp(\"transformPastedText\", f => { text = f(text, inCode || plainText, view); });\n        if (inCode)\n            return text ? new Slice(Fragment.from(view.state.schema.text(text.replace(/\\r\\n?/g, \"\\n\"))), 0, 0) : Slice.empty;\n        let parsed = view.someProp(\"clipboardTextParser\", f => f(text, $context, plainText, view));\n        if (parsed) {\n            slice = parsed;\n        }\n        else {\n            let marks = $context.marks();\n            let { schema } = view.state, serializer = DOMSerializer.fromSchema(schema);\n            dom = document.createElement(\"div\");\n            text.split(/(?:\\r\\n?|\\n)+/).forEach(block => {\n                let p = dom.appendChild(document.createElement(\"p\"));\n                if (block)\n                    p.appendChild(serializer.serializeNode(schema.text(block, marks)));\n            });\n        }\n    }\n    else {\n        view.someProp(\"transformPastedHTML\", f => { html = f(html, view); });\n        dom = readHTML(html);\n        if (webkit)\n            restoreReplacedSpaces(dom);\n    }\n    let contextNode = dom && dom.querySelector(\"[data-pm-slice]\");\n    let sliceData = contextNode && /^(\\d+) (\\d+)(?: -(\\d+))? (.*)/.exec(contextNode.getAttribute(\"data-pm-slice\") || \"\");\n    if (sliceData && sliceData[3])\n        for (let i = +sliceData[3]; i > 0; i--) {\n            let child = dom.firstChild;\n            while (child && child.nodeType != 1)\n                child = child.nextSibling;\n            if (!child)\n                break;\n            dom = child;\n        }\n    if (!slice) {\n        let parser = view.someProp(\"clipboardParser\") || view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema);\n        slice = parser.parseSlice(dom, {\n            preserveWhitespace: !!(asText || sliceData),\n            context: $context,\n            ruleFromNode(dom) {\n                if (dom.nodeName == \"BR\" && !dom.nextSibling &&\n                    dom.parentNode && !inlineParents.test(dom.parentNode.nodeName))\n                    return { ignore: true };\n                return null;\n            }\n        });\n    }\n    if (sliceData) {\n        slice = addContext(closeSlice(slice, +sliceData[1], +sliceData[2]), sliceData[4]);\n    }\n    else { // HTML wasn't created by ProseMirror. Make sure top-level siblings are coherent\n        slice = Slice.maxOpen(normalizeSiblings(slice.content, $context), true);\n        if (slice.openStart || slice.openEnd) {\n            let openStart = 0, openEnd = 0;\n            for (let node = slice.content.firstChild; openStart < slice.openStart && !node.type.spec.isolating; openStart++, node = node.firstChild) { }\n            for (let node = slice.content.lastChild; openEnd < slice.openEnd && !node.type.spec.isolating; openEnd++, node = node.lastChild) { }\n            slice = closeSlice(slice, openStart, openEnd);\n        }\n    }\n    view.someProp(\"transformPasted\", f => { slice = f(slice, view); });\n    return slice;\n}\nconst inlineParents = /^(a|abbr|acronym|b|cite|code|del|em|i|ins|kbd|label|output|q|ruby|s|samp|span|strong|sub|sup|time|u|tt|var)$/i;\n// Takes a slice parsed with parseSlice, which means there hasn't been\n// any content-expression checking done on the top nodes, tries to\n// find a parent node in the current context that might fit the nodes,\n// and if successful, rebuilds the slice so that it fits into that parent.\n//\n// This addresses the problem that Transform.replace expects a\n// coherent slice, and will fail to place a set of siblings that don't\n// fit anywhere in the schema.\nfunction normalizeSiblings(fragment, $context) {\n    if (fragment.childCount < 2)\n        return fragment;\n    for (let d = $context.depth; d >= 0; d--) {\n        let parent = $context.node(d);\n        let match = parent.contentMatchAt($context.index(d));\n        let lastWrap, result = [];\n        fragment.forEach(node => {\n            if (!result)\n                return;\n            let wrap = match.findWrapping(node.type), inLast;\n            if (!wrap)\n                return result = null;\n            if (inLast = result.length && lastWrap.length && addToSibling(wrap, lastWrap, node, result[result.length - 1], 0)) {\n                result[result.length - 1] = inLast;\n            }\n            else {\n                if (result.length)\n                    result[result.length - 1] = closeRight(result[result.length - 1], lastWrap.length);\n                let wrapped = withWrappers(node, wrap);\n                result.push(wrapped);\n                match = match.matchType(wrapped.type);\n                lastWrap = wrap;\n            }\n        });\n        if (result)\n            return Fragment.from(result);\n    }\n    return fragment;\n}\nfunction withWrappers(node, wrap, from = 0) {\n    for (let i = wrap.length - 1; i >= from; i--)\n        node = wrap[i].create(null, Fragment.from(node));\n    return node;\n}\n// Used to group adjacent nodes wrapped in similar parents by\n// normalizeSiblings into the same parent node\nfunction addToSibling(wrap, lastWrap, node, sibling, depth) {\n    if (depth < wrap.length && depth < lastWrap.length && wrap[depth] == lastWrap[depth]) {\n        let inner = addToSibling(wrap, lastWrap, node, sibling.lastChild, depth + 1);\n        if (inner)\n            return sibling.copy(sibling.content.replaceChild(sibling.childCount - 1, inner));\n        let match = sibling.contentMatchAt(sibling.childCount);\n        if (match.matchType(depth == wrap.length - 1 ? node.type : wrap[depth + 1]))\n            return sibling.copy(sibling.content.append(Fragment.from(withWrappers(node, wrap, depth + 1))));\n    }\n}\nfunction closeRight(node, depth) {\n    if (depth == 0)\n        return node;\n    let fragment = node.content.replaceChild(node.childCount - 1, closeRight(node.lastChild, depth - 1));\n    let fill = node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true);\n    return node.copy(fragment.append(fill));\n}\nfunction closeRange(fragment, side, from, to, depth, openEnd) {\n    let node = side < 0 ? fragment.firstChild : fragment.lastChild, inner = node.content;\n    if (depth < to - 1)\n        inner = closeRange(inner, side, from, to, depth + 1, openEnd);\n    if (depth >= from)\n        inner = side < 0 ? node.contentMatchAt(0).fillBefore(inner, fragment.childCount > 1 || openEnd <= depth).append(inner)\n            : inner.append(node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true));\n    return fragment.replaceChild(side < 0 ? 0 : fragment.childCount - 1, node.copy(inner));\n}\nfunction closeSlice(slice, openStart, openEnd) {\n    if (openStart < slice.openStart)\n        slice = new Slice(closeRange(slice.content, -1, openStart, slice.openStart, 0, slice.openEnd), openStart, slice.openEnd);\n    if (openEnd < slice.openEnd)\n        slice = new Slice(closeRange(slice.content, 1, openEnd, slice.openEnd, 0, 0), slice.openStart, openEnd);\n    return slice;\n}\n// Trick from jQuery -- some elements must be wrapped in other\n// elements for innerHTML to work. I.e. if you do `div.innerHTML =\n// \"<td>..</td>\"` the table cells are ignored.\nconst wrapMap = {\n    thead: [\"table\"],\n    tbody: [\"table\"],\n    tfoot: [\"table\"],\n    caption: [\"table\"],\n    colgroup: [\"table\"],\n    col: [\"table\", \"colgroup\"],\n    tr: [\"table\", \"tbody\"],\n    td: [\"table\", \"tbody\", \"tr\"],\n    th: [\"table\", \"tbody\", \"tr\"]\n};\nlet _detachedDoc = null;\nfunction detachedDoc() {\n    return _detachedDoc || (_detachedDoc = document.implementation.createHTMLDocument(\"title\"));\n}\nfunction readHTML(html) {\n    let metas = /^(\\s*<meta [^>]*>)*/.exec(html);\n    if (metas)\n        html = html.slice(metas[0].length);\n    let elt = detachedDoc().createElement(\"div\");\n    let firstTag = /<([a-z][^>\\s]+)/i.exec(html), wrap;\n    if (wrap = firstTag && wrapMap[firstTag[1].toLowerCase()])\n        html = wrap.map(n => \"<\" + n + \">\").join(\"\") + html + wrap.map(n => \"</\" + n + \">\").reverse().join(\"\");\n    elt.innerHTML = html;\n    if (wrap)\n        for (let i = 0; i < wrap.length; i++)\n            elt = elt.querySelector(wrap[i]) || elt;\n    return elt;\n}\n// Webkit browsers do some hard-to-predict replacement of regular\n// spaces with non-breaking spaces when putting content on the\n// clipboard. This tries to convert such non-breaking spaces (which\n// will be wrapped in a plain span on Chrome, a span with class\n// Apple-converted-space on Safari) back to regular spaces.\nfunction restoreReplacedSpaces(dom) {\n    let nodes = dom.querySelectorAll(chrome ? \"span:not([class]):not([style])\" : \"span.Apple-converted-space\");\n    for (let i = 0; i < nodes.length; i++) {\n        let node = nodes[i];\n        if (node.childNodes.length == 1 && node.textContent == \"\\u00a0\" && node.parentNode)\n            node.parentNode.replaceChild(dom.ownerDocument.createTextNode(\" \"), node);\n    }\n}\nfunction addContext(slice, context) {\n    if (!slice.size)\n        return slice;\n    let schema = slice.content.firstChild.type.schema, array;\n    try {\n        array = JSON.parse(context);\n    }\n    catch (e) {\n        return slice;\n    }\n    let { content, openStart, openEnd } = slice;\n    for (let i = array.length - 2; i >= 0; i -= 2) {\n        let type = schema.nodes[array[i]];\n        if (!type || type.hasRequiredAttrs())\n            break;\n        content = Fragment.from(type.create(array[i + 1], content));\n        openStart++;\n        openEnd++;\n    }\n    return new Slice(content, openStart, openEnd);\n}\n\n// A collection of DOM events that occur within the editor, and callback functions\n// to invoke when the event fires.\nconst handlers = {};\nconst editHandlers = {};\nconst passiveHandlers = { touchstart: true, touchmove: true };\nclass InputState {\n    constructor() {\n        this.shiftKey = false;\n        this.mouseDown = null;\n        this.lastKeyCode = null;\n        this.lastKeyCodeTime = 0;\n        this.lastClick = { time: 0, x: 0, y: 0, type: \"\" };\n        this.lastSelectionOrigin = null;\n        this.lastSelectionTime = 0;\n        this.lastIOSEnter = 0;\n        this.lastIOSEnterFallbackTimeout = -1;\n        this.lastFocus = 0;\n        this.lastTouch = 0;\n        this.lastAndroidDelete = 0;\n        this.composing = false;\n        this.composingTimeout = -1;\n        this.compositionNodes = [];\n        this.compositionEndedAt = -2e8;\n        this.domChangeCount = 0;\n        this.eventHandlers = Object.create(null);\n        this.hideSelectionGuard = null;\n    }\n}\nfunction initInput(view) {\n    for (let event in handlers) {\n        let handler = handlers[event];\n        view.dom.addEventListener(event, view.input.eventHandlers[event] = (event) => {\n            if (eventBelongsToView(view, event) && !runCustomHandler(view, event) &&\n                (view.editable || !(event.type in editHandlers)))\n                handler(view, event);\n        }, passiveHandlers[event] ? { passive: true } : undefined);\n    }\n    // On Safari, for reasons beyond my understanding, adding an input\n    // event handler makes an issue where the composition vanishes when\n    // you press enter go away.\n    if (safari)\n        view.dom.addEventListener(\"input\", () => null);\n    ensureListeners(view);\n}\nfunction setSelectionOrigin(view, origin) {\n    view.input.lastSelectionOrigin = origin;\n    view.input.lastSelectionTime = Date.now();\n}\nfunction destroyInput(view) {\n    view.domObserver.stop();\n    for (let type in view.input.eventHandlers)\n        view.dom.removeEventListener(type, view.input.eventHandlers[type]);\n    clearTimeout(view.input.composingTimeout);\n    clearTimeout(view.input.lastIOSEnterFallbackTimeout);\n}\nfunction ensureListeners(view) {\n    view.someProp(\"handleDOMEvents\", currentHandlers => {\n        for (let type in currentHandlers)\n            if (!view.input.eventHandlers[type])\n                view.dom.addEventListener(type, view.input.eventHandlers[type] = event => runCustomHandler(view, event));\n    });\n}\nfunction runCustomHandler(view, event) {\n    return view.someProp(\"handleDOMEvents\", handlers => {\n        let handler = handlers[event.type];\n        return handler ? handler(view, event) || event.defaultPrevented : false;\n    });\n}\nfunction eventBelongsToView(view, event) {\n    if (!event.bubbles)\n        return true;\n    if (event.defaultPrevented)\n        return false;\n    for (let node = event.target; node != view.dom; node = node.parentNode)\n        if (!node || node.nodeType == 11 ||\n            (node.pmViewDesc && node.pmViewDesc.stopEvent(event)))\n            return false;\n    return true;\n}\nfunction dispatchEvent(view, event) {\n    if (!runCustomHandler(view, event) && handlers[event.type] &&\n        (view.editable || !(event.type in editHandlers)))\n        handlers[event.type](view, event);\n}\neditHandlers.keydown = (view, _event) => {\n    let event = _event;\n    view.input.shiftKey = event.keyCode == 16 || event.shiftKey;\n    if (inOrNearComposition(view, event))\n        return;\n    view.input.lastKeyCode = event.keyCode;\n    view.input.lastKeyCodeTime = Date.now();\n    // Suppress enter key events on Chrome Android, because those tend\n    // to be part of a confused sequence of composition events fired,\n    // and handling them eagerly tends to corrupt the input.\n    if (android && chrome && event.keyCode == 13)\n        return;\n    if (event.keyCode != 229)\n        view.domObserver.forceFlush();\n    // On iOS, if we preventDefault enter key presses, the virtual\n    // keyboard gets confused. So the hack here is to set a flag that\n    // makes the DOM change code recognize that what just happens should\n    // be replaced by whatever the Enter key handlers do.\n    if (ios && event.keyCode == 13 && !event.ctrlKey && !event.altKey && !event.metaKey) {\n        let now = Date.now();\n        view.input.lastIOSEnter = now;\n        view.input.lastIOSEnterFallbackTimeout = setTimeout(() => {\n            if (view.input.lastIOSEnter == now) {\n                view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")));\n                view.input.lastIOSEnter = 0;\n            }\n        }, 200);\n    }\n    else if (view.someProp(\"handleKeyDown\", f => f(view, event)) || captureKeyDown(view, event)) {\n        event.preventDefault();\n    }\n    else {\n        setSelectionOrigin(view, \"key\");\n    }\n};\neditHandlers.keyup = (view, event) => {\n    if (event.keyCode == 16)\n        view.input.shiftKey = false;\n};\neditHandlers.keypress = (view, _event) => {\n    let event = _event;\n    if (inOrNearComposition(view, event) || !event.charCode ||\n        event.ctrlKey && !event.altKey || mac && event.metaKey)\n        return;\n    if (view.someProp(\"handleKeyPress\", f => f(view, event))) {\n        event.preventDefault();\n        return;\n    }\n    let sel = view.state.selection;\n    if (!(sel instanceof TextSelection) || !sel.$from.sameParent(sel.$to)) {\n        let text = String.fromCharCode(event.charCode);\n        if (!/[\\r\\n]/.test(text) && !view.someProp(\"handleTextInput\", f => f(view, sel.$from.pos, sel.$to.pos, text)))\n            view.dispatch(view.state.tr.insertText(text).scrollIntoView());\n        event.preventDefault();\n    }\n};\nfunction eventCoords(event) { return { left: event.clientX, top: event.clientY }; }\nfunction isNear(event, click) {\n    let dx = click.x - event.clientX, dy = click.y - event.clientY;\n    return dx * dx + dy * dy < 100;\n}\nfunction runHandlerOnContext(view, propName, pos, inside, event) {\n    if (inside == -1)\n        return false;\n    let $pos = view.state.doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        if (view.someProp(propName, f => i > $pos.depth ? f(view, pos, $pos.nodeAfter, $pos.before(i), event, true)\n            : f(view, pos, $pos.node(i), $pos.before(i), event, false)))\n            return true;\n    }\n    return false;\n}\nfunction updateSelection(view, selection, origin) {\n    if (!view.focused)\n        view.focus();\n    let tr = view.state.tr.setSelection(selection);\n    if (origin == \"pointer\")\n        tr.setMeta(\"pointer\", true);\n    view.dispatch(tr);\n}\nfunction selectClickedLeaf(view, inside) {\n    if (inside == -1)\n        return false;\n    let $pos = view.state.doc.resolve(inside), node = $pos.nodeAfter;\n    if (node && node.isAtom && NodeSelection.isSelectable(node)) {\n        updateSelection(view, new NodeSelection($pos), \"pointer\");\n        return true;\n    }\n    return false;\n}\nfunction selectClickedNode(view, inside) {\n    if (inside == -1)\n        return false;\n    let sel = view.state.selection, selectedNode, selectAt;\n    if (sel instanceof NodeSelection)\n        selectedNode = sel.node;\n    let $pos = view.state.doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i);\n        if (NodeSelection.isSelectable(node)) {\n            if (selectedNode && sel.$from.depth > 0 &&\n                i >= sel.$from.depth && $pos.before(sel.$from.depth + 1) == sel.$from.pos)\n                selectAt = $pos.before(sel.$from.depth);\n            else\n                selectAt = $pos.before(i);\n            break;\n        }\n    }\n    if (selectAt != null) {\n        updateSelection(view, NodeSelection.create(view.state.doc, selectAt), \"pointer\");\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nfunction handleSingleClick(view, pos, inside, event, selectNode) {\n    return runHandlerOnContext(view, \"handleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleClick\", f => f(view, pos, event)) ||\n        (selectNode ? selectClickedNode(view, inside) : selectClickedLeaf(view, inside));\n}\nfunction handleDoubleClick(view, pos, inside, event) {\n    return runHandlerOnContext(view, \"handleDoubleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleDoubleClick\", f => f(view, pos, event));\n}\nfunction handleTripleClick(view, pos, inside, event) {\n    return runHandlerOnContext(view, \"handleTripleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleTripleClick\", f => f(view, pos, event)) ||\n        defaultTripleClick(view, inside, event);\n}\nfunction defaultTripleClick(view, inside, event) {\n    if (event.button != 0)\n        return false;\n    let doc = view.state.doc;\n    if (inside == -1) {\n        if (doc.inlineContent) {\n            updateSelection(view, TextSelection.create(doc, 0, doc.content.size), \"pointer\");\n            return true;\n        }\n        return false;\n    }\n    let $pos = doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i);\n        let nodePos = $pos.before(i);\n        if (node.inlineContent)\n            updateSelection(view, TextSelection.create(doc, nodePos + 1, nodePos + 1 + node.content.size), \"pointer\");\n        else if (NodeSelection.isSelectable(node))\n            updateSelection(view, NodeSelection.create(doc, nodePos), \"pointer\");\n        else\n            continue;\n        return true;\n    }\n}\nfunction forceDOMFlush(view) {\n    return endComposition(view);\n}\nconst selectNodeModifier = mac ? \"metaKey\" : \"ctrlKey\";\nhandlers.mousedown = (view, _event) => {\n    let event = _event;\n    view.input.shiftKey = event.shiftKey;\n    let flushed = forceDOMFlush(view);\n    let now = Date.now(), type = \"singleClick\";\n    if (now - view.input.lastClick.time < 500 && isNear(event, view.input.lastClick) && !event[selectNodeModifier]) {\n        if (view.input.lastClick.type == \"singleClick\")\n            type = \"doubleClick\";\n        else if (view.input.lastClick.type == \"doubleClick\")\n            type = \"tripleClick\";\n    }\n    view.input.lastClick = { time: now, x: event.clientX, y: event.clientY, type };\n    let pos = view.posAtCoords(eventCoords(event));\n    if (!pos)\n        return;\n    if (type == \"singleClick\") {\n        if (view.input.mouseDown)\n            view.input.mouseDown.done();\n        view.input.mouseDown = new MouseDown(view, pos, event, !!flushed);\n    }\n    else if ((type == \"doubleClick\" ? handleDoubleClick : handleTripleClick)(view, pos.pos, pos.inside, event)) {\n        event.preventDefault();\n    }\n    else {\n        setSelectionOrigin(view, \"pointer\");\n    }\n};\nclass MouseDown {\n    constructor(view, pos, event, flushed) {\n        this.view = view;\n        this.pos = pos;\n        this.event = event;\n        this.flushed = flushed;\n        this.delayedSelectionSync = false;\n        this.mightDrag = null;\n        this.startDoc = view.state.doc;\n        this.selectNode = !!event[selectNodeModifier];\n        this.allowDefault = event.shiftKey;\n        let targetNode, targetPos;\n        if (pos.inside > -1) {\n            targetNode = view.state.doc.nodeAt(pos.inside);\n            targetPos = pos.inside;\n        }\n        else {\n            let $pos = view.state.doc.resolve(pos.pos);\n            targetNode = $pos.parent;\n            targetPos = $pos.depth ? $pos.before() : 0;\n        }\n        const target = flushed ? null : event.target;\n        const targetDesc = target ? view.docView.nearestDesc(target, true) : null;\n        this.target = targetDesc ? targetDesc.dom : null;\n        let { selection } = view.state;\n        if (event.button == 0 &&\n            targetNode.type.spec.draggable && targetNode.type.spec.selectable !== false ||\n            selection instanceof NodeSelection && selection.from <= targetPos && selection.to > targetPos)\n            this.mightDrag = {\n                node: targetNode,\n                pos: targetPos,\n                addAttr: !!(this.target && !this.target.draggable),\n                setUneditable: !!(this.target && gecko && !this.target.hasAttribute(\"contentEditable\"))\n            };\n        if (this.target && this.mightDrag && (this.mightDrag.addAttr || this.mightDrag.setUneditable)) {\n            this.view.domObserver.stop();\n            if (this.mightDrag.addAttr)\n                this.target.draggable = true;\n            if (this.mightDrag.setUneditable)\n                setTimeout(() => {\n                    if (this.view.input.mouseDown == this)\n                        this.target.setAttribute(\"contentEditable\", \"false\");\n                }, 20);\n            this.view.domObserver.start();\n        }\n        view.root.addEventListener(\"mouseup\", this.up = this.up.bind(this));\n        view.root.addEventListener(\"mousemove\", this.move = this.move.bind(this));\n        setSelectionOrigin(view, \"pointer\");\n    }\n    done() {\n        this.view.root.removeEventListener(\"mouseup\", this.up);\n        this.view.root.removeEventListener(\"mousemove\", this.move);\n        if (this.mightDrag && this.target) {\n            this.view.domObserver.stop();\n            if (this.mightDrag.addAttr)\n                this.target.removeAttribute(\"draggable\");\n            if (this.mightDrag.setUneditable)\n                this.target.removeAttribute(\"contentEditable\");\n            this.view.domObserver.start();\n        }\n        if (this.delayedSelectionSync)\n            setTimeout(() => selectionToDOM(this.view));\n        this.view.input.mouseDown = null;\n    }\n    up(event) {\n        this.done();\n        if (!this.view.dom.contains(event.target))\n            return;\n        let pos = this.pos;\n        if (this.view.state.doc != this.startDoc)\n            pos = this.view.posAtCoords(eventCoords(event));\n        this.updateAllowDefault(event);\n        if (this.allowDefault || !pos) {\n            setSelectionOrigin(this.view, \"pointer\");\n        }\n        else if (handleSingleClick(this.view, pos.pos, pos.inside, event, this.selectNode)) {\n            event.preventDefault();\n        }\n        else if (event.button == 0 &&\n            (this.flushed ||\n                // Safari ignores clicks on draggable elements\n                (safari && this.mightDrag && !this.mightDrag.node.isAtom) ||\n                // Chrome will sometimes treat a node selection as a\n                // cursor, but still report that the node is selected\n                // when asked through getSelection. You'll then get a\n                // situation where clicking at the point where that\n                // (hidden) cursor is doesn't change the selection, and\n                // thus doesn't get a reaction from ProseMirror. This\n                // works around that.\n                (chrome && !this.view.state.selection.visible &&\n                    Math.min(Math.abs(pos.pos - this.view.state.selection.from), Math.abs(pos.pos - this.view.state.selection.to)) <= 2))) {\n            updateSelection(this.view, Selection.near(this.view.state.doc.resolve(pos.pos)), \"pointer\");\n            event.preventDefault();\n        }\n        else {\n            setSelectionOrigin(this.view, \"pointer\");\n        }\n    }\n    move(event) {\n        this.updateAllowDefault(event);\n        setSelectionOrigin(this.view, \"pointer\");\n        if (event.buttons == 0)\n            this.done();\n    }\n    updateAllowDefault(event) {\n        if (!this.allowDefault && (Math.abs(this.event.x - event.clientX) > 4 ||\n            Math.abs(this.event.y - event.clientY) > 4))\n            this.allowDefault = true;\n    }\n}\nhandlers.touchstart = view => {\n    view.input.lastTouch = Date.now();\n    forceDOMFlush(view);\n    setSelectionOrigin(view, \"pointer\");\n};\nhandlers.touchmove = view => {\n    view.input.lastTouch = Date.now();\n    setSelectionOrigin(view, \"pointer\");\n};\nhandlers.contextmenu = view => forceDOMFlush(view);\nfunction inOrNearComposition(view, event) {\n    if (view.composing)\n        return true;\n    // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n    // On Japanese input method editors (IMEs), the Enter key is used to confirm character\n    // selection. On Safari, when Enter is pressed, compositionend and keydown events are\n    // emitted. The keydown event triggers newline insertion, which we don't want.\n    // This method returns true if the keydown event should be ignored.\n    // We only ignore it once, as pressing Enter a second time *should* insert a newline.\n    // Furthermore, the keydown event timestamp must be close to the compositionEndedAt timestamp.\n    // This guards against the case where compositionend is triggered without the keyboard\n    // (e.g. character confirmation may be done with the mouse), and keydown is triggered\n    // afterwards- we wouldn't want to ignore the keydown event in this case.\n    if (safari && Math.abs(event.timeStamp - view.input.compositionEndedAt) < 500) {\n        view.input.compositionEndedAt = -2e8;\n        return true;\n    }\n    return false;\n}\n// Drop active composition after 5 seconds of inactivity on Android\nconst timeoutComposition = android ? 5000 : -1;\neditHandlers.compositionstart = editHandlers.compositionupdate = view => {\n    if (!view.composing) {\n        view.domObserver.flush();\n        let { state } = view, $pos = state.selection.$from;\n        if (state.selection.empty &&\n            (state.storedMarks ||\n                (!$pos.textOffset && $pos.parentOffset && $pos.nodeBefore.marks.some(m => m.type.spec.inclusive === false)))) {\n            // Need to wrap the cursor in mark nodes different from the ones in the DOM context\n            view.markCursor = view.state.storedMarks || $pos.marks();\n            endComposition(view, true);\n            view.markCursor = null;\n        }\n        else {\n            endComposition(view);\n            // In firefox, if the cursor is after but outside a marked node,\n            // the inserted text won't inherit the marks. So this moves it\n            // inside if necessary.\n            if (gecko && state.selection.empty && $pos.parentOffset && !$pos.textOffset && $pos.nodeBefore.marks.length) {\n                let sel = view.domSelectionRange();\n                for (let node = sel.focusNode, offset = sel.focusOffset; node && node.nodeType == 1 && offset != 0;) {\n                    let before = offset < 0 ? node.lastChild : node.childNodes[offset - 1];\n                    if (!before)\n                        break;\n                    if (before.nodeType == 3) {\n                        view.domSelection().collapse(before, before.nodeValue.length);\n                        break;\n                    }\n                    else {\n                        node = before;\n                        offset = -1;\n                    }\n                }\n            }\n        }\n        view.input.composing = true;\n    }\n    scheduleComposeEnd(view, timeoutComposition);\n};\neditHandlers.compositionend = (view, event) => {\n    if (view.composing) {\n        view.input.composing = false;\n        view.input.compositionEndedAt = event.timeStamp;\n        scheduleComposeEnd(view, 20);\n    }\n};\nfunction scheduleComposeEnd(view, delay) {\n    clearTimeout(view.input.composingTimeout);\n    if (delay > -1)\n        view.input.composingTimeout = setTimeout(() => endComposition(view), delay);\n}\nfunction clearComposition(view) {\n    if (view.composing) {\n        view.input.composing = false;\n        view.input.compositionEndedAt = timestampFromCustomEvent();\n    }\n    while (view.input.compositionNodes.length > 0)\n        view.input.compositionNodes.pop().markParentsDirty();\n}\nfunction timestampFromCustomEvent() {\n    let event = document.createEvent(\"Event\");\n    event.initEvent(\"event\", true, true);\n    return event.timeStamp;\n}\n/**\n@internal\n*/\nfunction endComposition(view, forceUpdate = false) {\n    if (android && view.domObserver.flushingSoon >= 0)\n        return;\n    view.domObserver.forceFlush();\n    clearComposition(view);\n    if (forceUpdate || view.docView && view.docView.dirty) {\n        let sel = selectionFromDOM(view);\n        if (sel && !sel.eq(view.state.selection))\n            view.dispatch(view.state.tr.setSelection(sel));\n        else\n            view.updateState(view.state);\n        return true;\n    }\n    return false;\n}\nfunction captureCopy(view, dom) {\n    // The extra wrapper is somehow necessary on IE/Edge to prevent the\n    // content from being mangled when it is put onto the clipboard\n    if (!view.dom.parentNode)\n        return;\n    let wrap = view.dom.parentNode.appendChild(document.createElement(\"div\"));\n    wrap.appendChild(dom);\n    wrap.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    let sel = getSelection(), range = document.createRange();\n    range.selectNodeContents(dom);\n    // Done because IE will fire a selectionchange moving the selection\n    // to its start when removeAllRanges is called and the editor still\n    // has focus (which will mess up the editor's selection state).\n    view.dom.blur();\n    sel.removeAllRanges();\n    sel.addRange(range);\n    setTimeout(() => {\n        if (wrap.parentNode)\n            wrap.parentNode.removeChild(wrap);\n        view.focus();\n    }, 50);\n}\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API\u2014all the objects and methods are\n// there, they just don't work, and they are hard to test.\nconst brokenClipboardAPI = (ie && ie_version < 15) ||\n    (ios && webkit_version < 604);\nhandlers.copy = editHandlers.cut = (view, _event) => {\n    let event = _event;\n    let sel = view.state.selection, cut = event.type == \"cut\";\n    if (sel.empty)\n        return;\n    // IE and Edge's clipboard interface is completely broken\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    let slice = sel.content(), { dom, text } = serializeForClipboard(view, slice);\n    if (data) {\n        event.preventDefault();\n        data.clearData();\n        data.setData(\"text/html\", dom.innerHTML);\n        data.setData(\"text/plain\", text);\n    }\n    else {\n        captureCopy(view, dom);\n    }\n    if (cut)\n        view.dispatch(view.state.tr.deleteSelection().scrollIntoView().setMeta(\"uiEvent\", \"cut\"));\n};\nfunction sliceSingleNode(slice) {\n    return slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1 ? slice.content.firstChild : null;\n}\nfunction capturePaste(view, event) {\n    if (!view.dom.parentNode)\n        return;\n    let plainText = view.input.shiftKey || view.state.selection.$from.parent.type.spec.code;\n    let target = view.dom.parentNode.appendChild(document.createElement(plainText ? \"textarea\" : \"div\"));\n    if (!plainText)\n        target.contentEditable = \"true\";\n    target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    target.focus();\n    setTimeout(() => {\n        view.focus();\n        if (target.parentNode)\n            target.parentNode.removeChild(target);\n        if (plainText)\n            doPaste(view, target.value, null, view.input.shiftKey, event);\n        else\n            doPaste(view, target.textContent, target.innerHTML, view.input.shiftKey, event);\n    }, 50);\n}\nfunction doPaste(view, text, html, preferPlain, event) {\n    let slice = parseFromClipboard(view, text, html, preferPlain, view.state.selection.$from);\n    if (view.someProp(\"handlePaste\", f => f(view, event, slice || Slice.empty)))\n        return true;\n    if (!slice)\n        return false;\n    let singleNode = sliceSingleNode(slice);\n    let tr = singleNode\n        ? view.state.tr.replaceSelectionWith(singleNode, view.input.shiftKey)\n        : view.state.tr.replaceSelection(slice);\n    view.dispatch(tr.scrollIntoView().setMeta(\"paste\", true).setMeta(\"uiEvent\", \"paste\"));\n    return true;\n}\neditHandlers.paste = (view, _event) => {\n    let event = _event;\n    // Handling paste from JavaScript during composition is very poorly\n    // handled by browsers, so as a dodgy but preferable kludge, we just\n    // let the browser do its native thing there, except on Android,\n    // where the editor is almost always composing.\n    if (view.composing && !android)\n        return;\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    if (data && doPaste(view, data.getData(\"text/plain\"), data.getData(\"text/html\"), view.input.shiftKey, event))\n        event.preventDefault();\n    else\n        capturePaste(view, event);\n};\nclass Dragging {\n    constructor(slice, move) {\n        this.slice = slice;\n        this.move = move;\n    }\n}\nconst dragCopyModifier = mac ? \"altKey\" : \"ctrlKey\";\nhandlers.dragstart = (view, _event) => {\n    let event = _event;\n    let mouseDown = view.input.mouseDown;\n    if (mouseDown)\n        mouseDown.done();\n    if (!event.dataTransfer)\n        return;\n    let sel = view.state.selection;\n    let pos = sel.empty ? null : view.posAtCoords(eventCoords(event));\n    if (pos && pos.pos >= sel.from && pos.pos <= (sel instanceof NodeSelection ? sel.to - 1 : sel.to)) ;\n    else if (mouseDown && mouseDown.mightDrag) {\n        view.dispatch(view.state.tr.setSelection(NodeSelection.create(view.state.doc, mouseDown.mightDrag.pos)));\n    }\n    else if (event.target && event.target.nodeType == 1) {\n        let desc = view.docView.nearestDesc(event.target, true);\n        if (desc && desc.node.type.spec.draggable && desc != view.docView)\n            view.dispatch(view.state.tr.setSelection(NodeSelection.create(view.state.doc, desc.posBefore)));\n    }\n    let slice = view.state.selection.content(), { dom, text } = serializeForClipboard(view, slice);\n    event.dataTransfer.clearData();\n    event.dataTransfer.setData(brokenClipboardAPI ? \"Text\" : \"text/html\", dom.innerHTML);\n    // See https://github.com/ProseMirror/prosemirror/issues/1156\n    event.dataTransfer.effectAllowed = \"copyMove\";\n    if (!brokenClipboardAPI)\n        event.dataTransfer.setData(\"text/plain\", text);\n    view.dragging = new Dragging(slice, !event[dragCopyModifier]);\n};\nhandlers.dragend = view => {\n    let dragging = view.dragging;\n    window.setTimeout(() => {\n        if (view.dragging == dragging)\n            view.dragging = null;\n    }, 50);\n};\neditHandlers.dragover = editHandlers.dragenter = (_, e) => e.preventDefault();\neditHandlers.drop = (view, _event) => {\n    let event = _event;\n    let dragging = view.dragging;\n    view.dragging = null;\n    if (!event.dataTransfer)\n        return;\n    let eventPos = view.posAtCoords(eventCoords(event));\n    if (!eventPos)\n        return;\n    let $mouse = view.state.doc.resolve(eventPos.pos);\n    let slice = dragging && dragging.slice;\n    if (slice) {\n        view.someProp(\"transformPasted\", f => { slice = f(slice, view); });\n    }\n    else {\n        slice = parseFromClipboard(view, event.dataTransfer.getData(brokenClipboardAPI ? \"Text\" : \"text/plain\"), brokenClipboardAPI ? null : event.dataTransfer.getData(\"text/html\"), false, $mouse);\n    }\n    let move = !!(dragging && !event[dragCopyModifier]);\n    if (view.someProp(\"handleDrop\", f => f(view, event, slice || Slice.empty, move))) {\n        event.preventDefault();\n        return;\n    }\n    if (!slice)\n        return;\n    event.preventDefault();\n    let insertPos = slice ? dropPoint(view.state.doc, $mouse.pos, slice) : $mouse.pos;\n    if (insertPos == null)\n        insertPos = $mouse.pos;\n    let tr = view.state.tr;\n    if (move)\n        tr.deleteSelection();\n    let pos = tr.mapping.map(insertPos);\n    let isNode = slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1;\n    let beforeInsert = tr.doc;\n    if (isNode)\n        tr.replaceRangeWith(pos, pos, slice.content.firstChild);\n    else\n        tr.replaceRange(pos, pos, slice);\n    if (tr.doc.eq(beforeInsert))\n        return;\n    let $pos = tr.doc.resolve(pos);\n    if (isNode && NodeSelection.isSelectable(slice.content.firstChild) &&\n        $pos.nodeAfter && $pos.nodeAfter.sameMarkup(slice.content.firstChild)) {\n        tr.setSelection(new NodeSelection($pos));\n    }\n    else {\n        let end = tr.mapping.map(insertPos);\n        tr.mapping.maps[tr.mapping.maps.length - 1].forEach((_from, _to, _newFrom, newTo) => end = newTo);\n        tr.setSelection(selectionBetween(view, $pos, tr.doc.resolve(end)));\n    }\n    view.focus();\n    view.dispatch(tr.setMeta(\"uiEvent\", \"drop\"));\n};\nhandlers.focus = view => {\n    view.input.lastFocus = Date.now();\n    if (!view.focused) {\n        view.domObserver.stop();\n        view.dom.classList.add(\"ProseMirror-focused\");\n        view.domObserver.start();\n        view.focused = true;\n        setTimeout(() => {\n            if (view.docView && view.hasFocus() && !view.domObserver.currentSelection.eq(view.domSelectionRange()))\n                selectionToDOM(view);\n        }, 20);\n    }\n};\nhandlers.blur = (view, _event) => {\n    let event = _event;\n    if (view.focused) {\n        view.domObserver.stop();\n        view.dom.classList.remove(\"ProseMirror-focused\");\n        view.domObserver.start();\n        if (event.relatedTarget && view.dom.contains(event.relatedTarget))\n            view.domObserver.currentSelection.clear();\n        view.focused = false;\n    }\n};\nhandlers.beforeinput = (view, _event) => {\n    let event = _event;\n    // We should probably do more with beforeinput events, but support\n    // is so spotty that I'm still waiting to see where they are going.\n    // Very specific hack to deal with backspace sometimes failing on\n    // Chrome Android when after an uneditable node.\n    if (chrome && android && event.inputType == \"deleteContentBackward\") {\n        view.domObserver.flushSoon();\n        let { domChangeCount } = view.input;\n        setTimeout(() => {\n            if (view.input.domChangeCount != domChangeCount)\n                return; // Event already had some effect\n            // This bug tends to close the virtual keyboard, so we refocus\n            view.dom.blur();\n            view.focus();\n            if (view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\"))))\n                return;\n            let { $cursor } = view.state.selection;\n            // Crude approximation of backspace behavior when no command handled it\n            if ($cursor && $cursor.pos > 0)\n                view.dispatch(view.state.tr.delete($cursor.pos - 1, $cursor.pos).scrollIntoView());\n        }, 50);\n    }\n};\n// Make sure all handlers get registered\nfor (let prop in editHandlers)\n    handlers[prop] = editHandlers[prop];\n\nfunction compareObjs(a, b) {\n    if (a == b)\n        return true;\n    for (let p in a)\n        if (a[p] !== b[p])\n            return false;\n    for (let p in b)\n        if (!(p in a))\n            return false;\n    return true;\n}\nclass WidgetType {\n    constructor(toDOM, spec) {\n        this.toDOM = toDOM;\n        this.spec = spec || noSpec;\n        this.side = this.spec.side || 0;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let { pos, deleted } = mapping.mapResult(span.from + oldOffset, this.side < 0 ? -1 : 1);\n        return deleted ? null : new Decoration(pos - offset, pos - offset, this);\n    }\n    valid() { return true; }\n    eq(other) {\n        return this == other ||\n            (other instanceof WidgetType &&\n                (this.spec.key && this.spec.key == other.spec.key ||\n                    this.toDOM == other.toDOM && compareObjs(this.spec, other.spec)));\n    }\n    destroy(node) {\n        if (this.spec.destroy)\n            this.spec.destroy(node);\n    }\n}\nclass InlineType {\n    constructor(attrs, spec) {\n        this.attrs = attrs;\n        this.spec = spec || noSpec;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let from = mapping.map(span.from + oldOffset, this.spec.inclusiveStart ? -1 : 1) - offset;\n        let to = mapping.map(span.to + oldOffset, this.spec.inclusiveEnd ? 1 : -1) - offset;\n        return from >= to ? null : new Decoration(from, to, this);\n    }\n    valid(_, span) { return span.from < span.to; }\n    eq(other) {\n        return this == other ||\n            (other instanceof InlineType && compareObjs(this.attrs, other.attrs) &&\n                compareObjs(this.spec, other.spec));\n    }\n    static is(span) { return span.type instanceof InlineType; }\n    destroy() { }\n}\nclass NodeType {\n    constructor(attrs, spec) {\n        this.attrs = attrs;\n        this.spec = spec || noSpec;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let from = mapping.mapResult(span.from + oldOffset, 1);\n        if (from.deleted)\n            return null;\n        let to = mapping.mapResult(span.to + oldOffset, -1);\n        if (to.deleted || to.pos <= from.pos)\n            return null;\n        return new Decoration(from.pos - offset, to.pos - offset, this);\n    }\n    valid(node, span) {\n        let { index, offset } = node.content.findIndex(span.from), child;\n        return offset == span.from && !(child = node.child(index)).isText && offset + child.nodeSize == span.to;\n    }\n    eq(other) {\n        return this == other ||\n            (other instanceof NodeType && compareObjs(this.attrs, other.attrs) &&\n                compareObjs(this.spec, other.spec));\n    }\n    destroy() { }\n}\n/**\nDecoration objects can be provided to the view through the\n[`decorations` prop](https://prosemirror.net/docs/ref/#view.EditorProps.decorations). They come in\nseveral variants\u2014see the static members of this class for details.\n*/\nclass Decoration {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The start position of the decoration.\n    */\n    from, \n    /**\n    The end position. Will be the same as `from` for [widget\n    decorations](https://prosemirror.net/docs/ref/#view.Decoration^widget).\n    */\n    to, \n    /**\n    @internal\n    */\n    type) {\n        this.from = from;\n        this.to = to;\n        this.type = type;\n    }\n    /**\n    @internal\n    */\n    copy(from, to) {\n        return new Decoration(from, to, this.type);\n    }\n    /**\n    @internal\n    */\n    eq(other, offset = 0) {\n        return this.type.eq(other.type) && this.from + offset == other.from && this.to + offset == other.to;\n    }\n    /**\n    @internal\n    */\n    map(mapping, offset, oldOffset) {\n        return this.type.map(mapping, this, offset, oldOffset);\n    }\n    /**\n    Creates a widget decoration, which is a DOM node that's shown in\n    the document at the given position. It is recommended that you\n    delay rendering the widget by passing a function that will be\n    called when the widget is actually drawn in a view, but you can\n    also directly pass a DOM node. `getPos` can be used to find the\n    widget's current document position.\n    */\n    static widget(pos, toDOM, spec) {\n        return new Decoration(pos, pos, new WidgetType(toDOM, spec));\n    }\n    /**\n    Creates an inline decoration, which adds the given attributes to\n    each inline node between `from` and `to`.\n    */\n    static inline(from, to, attrs, spec) {\n        return new Decoration(from, to, new InlineType(attrs, spec));\n    }\n    /**\n    Creates a node decoration. `from` and `to` should point precisely\n    before and after a node in the document. That node, and only that\n    node, will receive the given attributes.\n    */\n    static node(from, to, attrs, spec) {\n        return new Decoration(from, to, new NodeType(attrs, spec));\n    }\n    /**\n    The spec provided when creating this decoration. Can be useful\n    if you've stored extra information in that object.\n    */\n    get spec() { return this.type.spec; }\n    /**\n    @internal\n    */\n    get inline() { return this.type instanceof InlineType; }\n}\nconst none = [], noSpec = {};\n/**\nA collection of [decorations](https://prosemirror.net/docs/ref/#view.Decoration), organized in such\na way that the drawing algorithm can efficiently use and compare\nthem. This is a persistent data structure\u2014it is not modified,\nupdates create a new value.\n*/\nclass DecorationSet {\n    /**\n    @internal\n    */\n    constructor(local, children) {\n        this.local = local.length ? local : none;\n        this.children = children.length ? children : none;\n    }\n    /**\n    Create a set of decorations, using the structure of the given\n    document.\n    */\n    static create(doc, decorations) {\n        return decorations.length ? buildTree(decorations, doc, 0, noSpec) : empty;\n    }\n    /**\n    Find all decorations in this set which touch the given range\n    (including decorations that start or end directly at the\n    boundaries) and match the given predicate on their spec. When\n    `start` and `end` are omitted, all decorations in the set are\n    considered. When `predicate` isn't given, all decorations are\n    assumed to match.\n    */\n    find(start, end, predicate) {\n        let result = [];\n        this.findInner(start == null ? 0 : start, end == null ? 1e9 : end, result, 0, predicate);\n        return result;\n    }\n    findInner(start, end, result, offset, predicate) {\n        for (let i = 0; i < this.local.length; i++) {\n            let span = this.local[i];\n            if (span.from <= end && span.to >= start && (!predicate || predicate(span.spec)))\n                result.push(span.copy(span.from + offset, span.to + offset));\n        }\n        for (let i = 0; i < this.children.length; i += 3) {\n            if (this.children[i] < end && this.children[i + 1] > start) {\n                let childOff = this.children[i] + 1;\n                this.children[i + 2].findInner(start - childOff, end - childOff, result, offset + childOff, predicate);\n            }\n        }\n    }\n    /**\n    Map the set of decorations in response to a change in the\n    document.\n    */\n    map(mapping, doc, options) {\n        if (this == empty || mapping.maps.length == 0)\n            return this;\n        return this.mapInner(mapping, doc, 0, 0, options || noSpec);\n    }\n    /**\n    @internal\n    */\n    mapInner(mapping, node, offset, oldOffset, options) {\n        let newLocal;\n        for (let i = 0; i < this.local.length; i++) {\n            let mapped = this.local[i].map(mapping, offset, oldOffset);\n            if (mapped && mapped.type.valid(node, mapped))\n                (newLocal || (newLocal = [])).push(mapped);\n            else if (options.onRemove)\n                options.onRemove(this.local[i].spec);\n        }\n        if (this.children.length)\n            return mapChildren(this.children, newLocal || [], mapping, node, offset, oldOffset, options);\n        else\n            return newLocal ? new DecorationSet(newLocal.sort(byPos), none) : empty;\n    }\n    /**\n    Add the given array of decorations to the ones in the set,\n    producing a new set. Needs access to the current document to\n    create the appropriate tree structure.\n    */\n    add(doc, decorations) {\n        if (!decorations.length)\n            return this;\n        if (this == empty)\n            return DecorationSet.create(doc, decorations);\n        return this.addInner(doc, decorations, 0);\n    }\n    addInner(doc, decorations, offset) {\n        let children, childIndex = 0;\n        doc.forEach((childNode, childOffset) => {\n            let baseOffset = childOffset + offset, found;\n            if (!(found = takeSpansForNode(decorations, childNode, baseOffset)))\n                return;\n            if (!children)\n                children = this.children.slice();\n            while (childIndex < children.length && children[childIndex] < childOffset)\n                childIndex += 3;\n            if (children[childIndex] == childOffset)\n                children[childIndex + 2] = children[childIndex + 2].addInner(childNode, found, baseOffset + 1);\n            else\n                children.splice(childIndex, 0, childOffset, childOffset + childNode.nodeSize, buildTree(found, childNode, baseOffset + 1, noSpec));\n            childIndex += 3;\n        });\n        let local = moveSpans(childIndex ? withoutNulls(decorations) : decorations, -offset);\n        for (let i = 0; i < local.length; i++)\n            if (!local[i].type.valid(doc, local[i]))\n                local.splice(i--, 1);\n        return new DecorationSet(local.length ? this.local.concat(local).sort(byPos) : this.local, children || this.children);\n    }\n    /**\n    Create a new set that contains the decorations in this set, minus\n    the ones in the given array.\n    */\n    remove(decorations) {\n        if (decorations.length == 0 || this == empty)\n            return this;\n        return this.removeInner(decorations, 0);\n    }\n    removeInner(decorations, offset) {\n        let children = this.children, local = this.local;\n        for (let i = 0; i < children.length; i += 3) {\n            let found;\n            let from = children[i] + offset, to = children[i + 1] + offset;\n            for (let j = 0, span; j < decorations.length; j++)\n                if (span = decorations[j]) {\n                    if (span.from > from && span.to < to) {\n                        decorations[j] = null;\n                        (found || (found = [])).push(span);\n                    }\n                }\n            if (!found)\n                continue;\n            if (children == this.children)\n                children = this.children.slice();\n            let removed = children[i + 2].removeInner(found, from + 1);\n            if (removed != empty) {\n                children[i + 2] = removed;\n            }\n            else {\n                children.splice(i, 3);\n                i -= 3;\n            }\n        }\n        if (local.length)\n            for (let i = 0, span; i < decorations.length; i++)\n                if (span = decorations[i]) {\n                    for (let j = 0; j < local.length; j++)\n                        if (local[j].eq(span, offset)) {\n                            if (local == this.local)\n                                local = this.local.slice();\n                            local.splice(j--, 1);\n                        }\n                }\n        if (children == this.children && local == this.local)\n            return this;\n        return local.length || children.length ? new DecorationSet(local, children) : empty;\n    }\n    /**\n    @internal\n    */\n    forChild(offset, node) {\n        if (this == empty)\n            return this;\n        if (node.isLeaf)\n            return DecorationSet.empty;\n        let child, local;\n        for (let i = 0; i < this.children.length; i += 3)\n            if (this.children[i] >= offset) {\n                if (this.children[i] == offset)\n                    child = this.children[i + 2];\n                break;\n            }\n        let start = offset + 1, end = start + node.content.size;\n        for (let i = 0; i < this.local.length; i++) {\n            let dec = this.local[i];\n            if (dec.from < end && dec.to > start && (dec.type instanceof InlineType)) {\n                let from = Math.max(start, dec.from) - start, to = Math.min(end, dec.to) - start;\n                if (from < to)\n                    (local || (local = [])).push(dec.copy(from, to));\n            }\n        }\n        if (local) {\n            let localSet = new DecorationSet(local.sort(byPos), none);\n            return child ? new DecorationGroup([localSet, child]) : localSet;\n        }\n        return child || empty;\n    }\n    /**\n    @internal\n    */\n    eq(other) {\n        if (this == other)\n            return true;\n        if (!(other instanceof DecorationSet) ||\n            this.local.length != other.local.length ||\n            this.children.length != other.children.length)\n            return false;\n        for (let i = 0; i < this.local.length; i++)\n            if (!this.local[i].eq(other.local[i]))\n                return false;\n        for (let i = 0; i < this.children.length; i += 3)\n            if (this.children[i] != other.children[i] ||\n                this.children[i + 1] != other.children[i + 1] ||\n                !this.children[i + 2].eq(other.children[i + 2]))\n                return false;\n        return true;\n    }\n    /**\n    @internal\n    */\n    locals(node) {\n        return removeOverlap(this.localsInner(node));\n    }\n    /**\n    @internal\n    */\n    localsInner(node) {\n        if (this == empty)\n            return none;\n        if (node.inlineContent || !this.local.some(InlineType.is))\n            return this.local;\n        let result = [];\n        for (let i = 0; i < this.local.length; i++) {\n            if (!(this.local[i].type instanceof InlineType))\n                result.push(this.local[i]);\n        }\n        return result;\n    }\n}\n/**\nThe empty set of decorations.\n*/\nDecorationSet.empty = new DecorationSet([], []);\n/**\n@internal\n*/\nDecorationSet.removeOverlap = removeOverlap;\nconst empty = DecorationSet.empty;\n// An abstraction that allows the code dealing with decorations to\n// treat multiple DecorationSet objects as if it were a single object\n// with (a subset of) the same interface.\nclass DecorationGroup {\n    constructor(members) {\n        this.members = members;\n    }\n    map(mapping, doc) {\n        const mappedDecos = this.members.map(member => member.map(mapping, doc, noSpec));\n        return DecorationGroup.from(mappedDecos);\n    }\n    forChild(offset, child) {\n        if (child.isLeaf)\n            return DecorationSet.empty;\n        let found = [];\n        for (let i = 0; i < this.members.length; i++) {\n            let result = this.members[i].forChild(offset, child);\n            if (result == empty)\n                continue;\n            if (result instanceof DecorationGroup)\n                found = found.concat(result.members);\n            else\n                found.push(result);\n        }\n        return DecorationGroup.from(found);\n    }\n    eq(other) {\n        if (!(other instanceof DecorationGroup) ||\n            other.members.length != this.members.length)\n            return false;\n        for (let i = 0; i < this.members.length; i++)\n            if (!this.members[i].eq(other.members[i]))\n                return false;\n        return true;\n    }\n    locals(node) {\n        let result, sorted = true;\n        for (let i = 0; i < this.members.length; i++) {\n            let locals = this.members[i].localsInner(node);\n            if (!locals.length)\n                continue;\n            if (!result) {\n                result = locals;\n            }\n            else {\n                if (sorted) {\n                    result = result.slice();\n                    sorted = false;\n                }\n                for (let j = 0; j < locals.length; j++)\n                    result.push(locals[j]);\n            }\n        }\n        return result ? removeOverlap(sorted ? result : result.sort(byPos)) : none;\n    }\n    // Create a group for the given array of decoration sets, or return\n    // a single set when possible.\n    static from(members) {\n        switch (members.length) {\n            case 0: return empty;\n            case 1: return members[0];\n            default: return new DecorationGroup(members.every(m => m instanceof DecorationSet) ? members :\n                members.reduce((r, m) => r.concat(m instanceof DecorationSet ? m : m.members), []));\n        }\n    }\n}\nfunction mapChildren(oldChildren, newLocal, mapping, node, offset, oldOffset, options) {\n    let children = oldChildren.slice();\n    // Mark the children that are directly touched by changes, and\n    // move those that are after the changes.\n    for (let i = 0, baseOffset = oldOffset; i < mapping.maps.length; i++) {\n        let moved = 0;\n        mapping.maps[i].forEach((oldStart, oldEnd, newStart, newEnd) => {\n            let dSize = (newEnd - newStart) - (oldEnd - oldStart);\n            for (let i = 0; i < children.length; i += 3) {\n                let end = children[i + 1];\n                if (end < 0 || oldStart > end + baseOffset - moved)\n                    continue;\n                let start = children[i] + baseOffset - moved;\n                if (oldEnd >= start) {\n                    children[i + 1] = oldStart <= start ? -2 : -1;\n                }\n                else if (newStart >= offset && dSize) {\n                    children[i] += dSize;\n                    children[i + 1] += dSize;\n                }\n            }\n            moved += dSize;\n        });\n        baseOffset = mapping.maps[i].map(baseOffset, -1);\n    }\n    // Find the child nodes that still correspond to a single node,\n    // recursively call mapInner on them and update their positions.\n    let mustRebuild = false;\n    for (let i = 0; i < children.length; i += 3)\n        if (children[i + 1] < 0) { // Touched nodes\n            if (children[i + 1] == -2) {\n                mustRebuild = true;\n                children[i + 1] = -1;\n                continue;\n            }\n            let from = mapping.map(oldChildren[i] + oldOffset), fromLocal = from - offset;\n            if (fromLocal < 0 || fromLocal >= node.content.size) {\n                mustRebuild = true;\n                continue;\n            }\n            // Must read oldChildren because children was tagged with -1\n            let to = mapping.map(oldChildren[i + 1] + oldOffset, -1), toLocal = to - offset;\n            let { index, offset: childOffset } = node.content.findIndex(fromLocal);\n            let childNode = node.maybeChild(index);\n            if (childNode && childOffset == fromLocal && childOffset + childNode.nodeSize == toLocal) {\n                let mapped = children[i + 2]\n                    .mapInner(mapping, childNode, from + 1, oldChildren[i] + oldOffset + 1, options);\n                if (mapped != empty) {\n                    children[i] = fromLocal;\n                    children[i + 1] = toLocal;\n                    children[i + 2] = mapped;\n                }\n                else {\n                    children[i + 1] = -2;\n                    mustRebuild = true;\n                }\n            }\n            else {\n                mustRebuild = true;\n            }\n        }\n    // Remaining children must be collected and rebuilt into the appropriate structure\n    if (mustRebuild) {\n        let decorations = mapAndGatherRemainingDecorations(children, oldChildren, newLocal, mapping, offset, oldOffset, options);\n        let built = buildTree(decorations, node, 0, options);\n        newLocal = built.local;\n        for (let i = 0; i < children.length; i += 3)\n            if (children[i + 1] < 0) {\n                children.splice(i, 3);\n                i -= 3;\n            }\n        for (let i = 0, j = 0; i < built.children.length; i += 3) {\n            let from = built.children[i];\n            while (j < children.length && children[j] < from)\n                j += 3;\n            children.splice(j, 0, built.children[i], built.children[i + 1], built.children[i + 2]);\n        }\n    }\n    return new DecorationSet(newLocal.sort(byPos), children);\n}\nfunction moveSpans(spans, offset) {\n    if (!offset || !spans.length)\n        return spans;\n    let result = [];\n    for (let i = 0; i < spans.length; i++) {\n        let span = spans[i];\n        result.push(new Decoration(span.from + offset, span.to + offset, span.type));\n    }\n    return result;\n}\nfunction mapAndGatherRemainingDecorations(children, oldChildren, decorations, mapping, offset, oldOffset, options) {\n    // Gather all decorations from the remaining marked children\n    function gather(set, oldOffset) {\n        for (let i = 0; i < set.local.length; i++) {\n            let mapped = set.local[i].map(mapping, offset, oldOffset);\n            if (mapped)\n                decorations.push(mapped);\n            else if (options.onRemove)\n                options.onRemove(set.local[i].spec);\n        }\n        for (let i = 0; i < set.children.length; i += 3)\n            gather(set.children[i + 2], set.children[i] + oldOffset + 1);\n    }\n    for (let i = 0; i < children.length; i += 3)\n        if (children[i + 1] == -1)\n            gather(children[i + 2], oldChildren[i] + oldOffset + 1);\n    return decorations;\n}\nfunction takeSpansForNode(spans, node, offset) {\n    if (node.isLeaf)\n        return null;\n    let end = offset + node.nodeSize, found = null;\n    for (let i = 0, span; i < spans.length; i++) {\n        if ((span = spans[i]) && span.from > offset && span.to < end) {\n            (found || (found = [])).push(span);\n            spans[i] = null;\n        }\n    }\n    return found;\n}\nfunction withoutNulls(array) {\n    let result = [];\n    for (let i = 0; i < array.length; i++)\n        if (array[i] != null)\n            result.push(array[i]);\n    return result;\n}\n// Build up a tree that corresponds to a set of decorations. `offset`\n// is a base offset that should be subtracted from the `from` and `to`\n// positions in the spans (so that we don't have to allocate new spans\n// for recursive calls).\nfunction buildTree(spans, node, offset, options) {\n    let children = [], hasNulls = false;\n    node.forEach((childNode, localStart) => {\n        let found = takeSpansForNode(spans, childNode, localStart + offset);\n        if (found) {\n            hasNulls = true;\n            let subtree = buildTree(found, childNode, offset + localStart + 1, options);\n            if (subtree != empty)\n                children.push(localStart, localStart + childNode.nodeSize, subtree);\n        }\n    });\n    let locals = moveSpans(hasNulls ? withoutNulls(spans) : spans, -offset).sort(byPos);\n    for (let i = 0; i < locals.length; i++)\n        if (!locals[i].type.valid(node, locals[i])) {\n            if (options.onRemove)\n                options.onRemove(locals[i].spec);\n            locals.splice(i--, 1);\n        }\n    return locals.length || children.length ? new DecorationSet(locals, children) : empty;\n}\n// Used to sort decorations so that ones with a low start position\n// come first, and within a set with the same start position, those\n// with an smaller end position come first.\nfunction byPos(a, b) {\n    return a.from - b.from || a.to - b.to;\n}\n// Scan a sorted array of decorations for partially overlapping spans,\n// and split those so that only fully overlapping spans are left (to\n// make subsequent rendering easier). Will return the input array if\n// no partially overlapping spans are found (the common case).\nfunction removeOverlap(spans) {\n    let working = spans;\n    for (let i = 0; i < working.length - 1; i++) {\n        let span = working[i];\n        if (span.from != span.to)\n            for (let j = i + 1; j < working.length; j++) {\n                let next = working[j];\n                if (next.from == span.from) {\n                    if (next.to != span.to) {\n                        if (working == spans)\n                            working = spans.slice();\n                        // Followed by a partially overlapping larger span. Split that\n                        // span.\n                        working[j] = next.copy(next.from, span.to);\n                        insertAhead(working, j + 1, next.copy(span.to, next.to));\n                    }\n                    continue;\n                }\n                else {\n                    if (next.from < span.to) {\n                        if (working == spans)\n                            working = spans.slice();\n                        // The end of this one overlaps with a subsequent span. Split\n                        // this one.\n                        working[i] = span.copy(span.from, next.from);\n                        insertAhead(working, j, span.copy(next.from, span.to));\n                    }\n                    break;\n                }\n            }\n    }\n    return working;\n}\nfunction insertAhead(array, i, deco) {\n    while (i < array.length && byPos(deco, array[i]) > 0)\n        i++;\n    array.splice(i, 0, deco);\n}\n// Get the decorations associated with the current props of a view.\nfunction viewDecorations(view) {\n    let found = [];\n    view.someProp(\"decorations\", f => {\n        let result = f(view.state);\n        if (result && result != empty)\n            found.push(result);\n    });\n    if (view.cursorWrapper)\n        found.push(DecorationSet.create(view.state.doc, [view.cursorWrapper.deco]));\n    return DecorationGroup.from(found);\n}\n\nconst observeOptions = {\n    childList: true,\n    characterData: true,\n    characterDataOldValue: true,\n    attributes: true,\n    attributeOldValue: true,\n    subtree: true\n};\n// IE11 has very broken mutation observers, so we also listen to DOMCharacterDataModified\nconst useCharData = ie && ie_version <= 11;\nclass SelectionState {\n    constructor() {\n        this.anchorNode = null;\n        this.anchorOffset = 0;\n        this.focusNode = null;\n        this.focusOffset = 0;\n    }\n    set(sel) {\n        this.anchorNode = sel.anchorNode;\n        this.anchorOffset = sel.anchorOffset;\n        this.focusNode = sel.focusNode;\n        this.focusOffset = sel.focusOffset;\n    }\n    clear() {\n        this.anchorNode = this.focusNode = null;\n    }\n    eq(sel) {\n        return sel.anchorNode == this.anchorNode && sel.anchorOffset == this.anchorOffset &&\n            sel.focusNode == this.focusNode && sel.focusOffset == this.focusOffset;\n    }\n}\nclass DOMObserver {\n    constructor(view, handleDOMChange) {\n        this.view = view;\n        this.handleDOMChange = handleDOMChange;\n        this.queue = [];\n        this.flushingSoon = -1;\n        this.observer = null;\n        this.currentSelection = new SelectionState;\n        this.onCharData = null;\n        this.suppressingSelectionUpdates = false;\n        this.observer = window.MutationObserver &&\n            new window.MutationObserver(mutations => {\n                for (let i = 0; i < mutations.length; i++)\n                    this.queue.push(mutations[i]);\n                // IE11 will sometimes (on backspacing out a single character\n                // text node after a BR node) call the observer callback\n                // before actually updating the DOM, which will cause\n                // ProseMirror to miss the change (see #930)\n                if (ie && ie_version <= 11 && mutations.some(m => m.type == \"childList\" && m.removedNodes.length ||\n                    m.type == \"characterData\" && m.oldValue.length > m.target.nodeValue.length))\n                    this.flushSoon();\n                else\n                    this.flush();\n            });\n        if (useCharData) {\n            this.onCharData = e => {\n                this.queue.push({ target: e.target, type: \"characterData\", oldValue: e.prevValue });\n                this.flushSoon();\n            };\n        }\n        this.onSelectionChange = this.onSelectionChange.bind(this);\n    }\n    flushSoon() {\n        if (this.flushingSoon < 0)\n            this.flushingSoon = window.setTimeout(() => { this.flushingSoon = -1; this.flush(); }, 20);\n    }\n    forceFlush() {\n        if (this.flushingSoon > -1) {\n            window.clearTimeout(this.flushingSoon);\n            this.flushingSoon = -1;\n            this.flush();\n        }\n    }\n    start() {\n        if (this.observer) {\n            this.observer.takeRecords();\n            this.observer.observe(this.view.dom, observeOptions);\n        }\n        if (this.onCharData)\n            this.view.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.connectSelection();\n    }\n    stop() {\n        if (this.observer) {\n            let take = this.observer.takeRecords();\n            if (take.length) {\n                for (let i = 0; i < take.length; i++)\n                    this.queue.push(take[i]);\n                window.setTimeout(() => this.flush(), 20);\n            }\n            this.observer.disconnect();\n        }\n        if (this.onCharData)\n            this.view.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.disconnectSelection();\n    }\n    connectSelection() {\n        this.view.dom.ownerDocument.addEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    disconnectSelection() {\n        this.view.dom.ownerDocument.removeEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    suppressSelectionUpdates() {\n        this.suppressingSelectionUpdates = true;\n        setTimeout(() => this.suppressingSelectionUpdates = false, 50);\n    }\n    onSelectionChange() {\n        if (!hasFocusAndSelection(this.view))\n            return;\n        if (this.suppressingSelectionUpdates)\n            return selectionToDOM(this.view);\n        // Deletions on IE11 fire their events in the wrong order, giving\n        // us a selection change event before the DOM changes are\n        // reported.\n        if (ie && ie_version <= 11 && !this.view.state.selection.empty) {\n            let sel = this.view.domSelectionRange();\n            // Selection.isCollapsed isn't reliable on IE\n            if (sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset))\n                return this.flushSoon();\n        }\n        this.flush();\n    }\n    setCurSelection() {\n        this.currentSelection.set(this.view.domSelectionRange());\n    }\n    ignoreSelectionChange(sel) {\n        if (!sel.focusNode)\n            return true;\n        let ancestors = new Set, container;\n        for (let scan = sel.focusNode; scan; scan = parentNode(scan))\n            ancestors.add(scan);\n        for (let scan = sel.anchorNode; scan; scan = parentNode(scan))\n            if (ancestors.has(scan)) {\n                container = scan;\n                break;\n            }\n        let desc = container && this.view.docView.nearestDesc(container);\n        if (desc && desc.ignoreMutation({\n            type: \"selection\",\n            target: container.nodeType == 3 ? container.parentNode : container\n        })) {\n            this.setCurSelection();\n            return true;\n        }\n    }\n    flush() {\n        let { view } = this;\n        if (!view.docView || this.flushingSoon > -1)\n            return;\n        let mutations = this.observer ? this.observer.takeRecords() : [];\n        if (this.queue.length) {\n            mutations = this.queue.concat(mutations);\n            this.queue.length = 0;\n        }\n        let sel = view.domSelectionRange();\n        let newSel = !this.suppressingSelectionUpdates && !this.currentSelection.eq(sel) && hasFocusAndSelection(view) && !this.ignoreSelectionChange(sel);\n        let from = -1, to = -1, typeOver = false, added = [];\n        if (view.editable) {\n            for (let i = 0; i < mutations.length; i++) {\n                let result = this.registerMutation(mutations[i], added);\n                if (result) {\n                    from = from < 0 ? result.from : Math.min(result.from, from);\n                    to = to < 0 ? result.to : Math.max(result.to, to);\n                    if (result.typeOver)\n                        typeOver = true;\n                }\n            }\n        }\n        if (gecko && added.length > 1) {\n            let brs = added.filter(n => n.nodeName == \"BR\");\n            if (brs.length == 2) {\n                let a = brs[0], b = brs[1];\n                if (a.parentNode && a.parentNode.parentNode == b.parentNode)\n                    b.remove();\n                else\n                    a.remove();\n            }\n        }\n        let readSel = null;\n        // If it looks like the browser has reset the selection to the\n        // start of the document after focus, restore the selection from\n        // the state\n        if (from < 0 && newSel && view.input.lastFocus > Date.now() - 200 &&\n            Math.max(view.input.lastTouch, view.input.lastClick.time) < Date.now() - 300 &&\n            selectionCollapsed(sel) && (readSel = selectionFromDOM(view)) &&\n            readSel.eq(Selection.near(view.state.doc.resolve(0), 1))) {\n            view.input.lastFocus = 0;\n            selectionToDOM(view);\n            this.currentSelection.set(sel);\n            view.scrollToSelection();\n        }\n        else if (from > -1 || newSel) {\n            if (from > -1) {\n                view.docView.markDirty(from, to);\n                checkCSS(view);\n            }\n            this.handleDOMChange(from, to, typeOver, added);\n            if (view.docView && view.docView.dirty)\n                view.updateState(view.state);\n            else if (!this.currentSelection.eq(sel))\n                selectionToDOM(view);\n            this.currentSelection.set(sel);\n        }\n    }\n    registerMutation(mut, added) {\n        // Ignore mutations inside nodes that were already noted as inserted\n        if (added.indexOf(mut.target) > -1)\n            return null;\n        let desc = this.view.docView.nearestDesc(mut.target);\n        if (mut.type == \"attributes\" &&\n            (desc == this.view.docView || mut.attributeName == \"contenteditable\" ||\n                // Firefox sometimes fires spurious events for null/empty styles\n                (mut.attributeName == \"style\" && !mut.oldValue && !mut.target.getAttribute(\"style\"))))\n            return null;\n        if (!desc || desc.ignoreMutation(mut))\n            return null;\n        if (mut.type == \"childList\") {\n            for (let i = 0; i < mut.addedNodes.length; i++)\n                added.push(mut.addedNodes[i]);\n            if (desc.contentDOM && desc.contentDOM != desc.dom && !desc.contentDOM.contains(mut.target))\n                return { from: desc.posBefore, to: desc.posAfter };\n            let prev = mut.previousSibling, next = mut.nextSibling;\n            if (ie && ie_version <= 11 && mut.addedNodes.length) {\n                // IE11 gives us incorrect next/prev siblings for some\n                // insertions, so if there are added nodes, recompute those\n                for (let i = 0; i < mut.addedNodes.length; i++) {\n                    let { previousSibling, nextSibling } = mut.addedNodes[i];\n                    if (!previousSibling || Array.prototype.indexOf.call(mut.addedNodes, previousSibling) < 0)\n                        prev = previousSibling;\n                    if (!nextSibling || Array.prototype.indexOf.call(mut.addedNodes, nextSibling) < 0)\n                        next = nextSibling;\n                }\n            }\n            let fromOffset = prev && prev.parentNode == mut.target\n                ? domIndex(prev) + 1 : 0;\n            let from = desc.localPosFromDOM(mut.target, fromOffset, -1);\n            let toOffset = next && next.parentNode == mut.target\n                ? domIndex(next) : mut.target.childNodes.length;\n            let to = desc.localPosFromDOM(mut.target, toOffset, 1);\n            return { from, to };\n        }\n        else if (mut.type == \"attributes\") {\n            return { from: desc.posAtStart - desc.border, to: desc.posAtEnd + desc.border };\n        }\n        else { // \"characterData\"\n            return {\n                from: desc.posAtStart,\n                to: desc.posAtEnd,\n                // An event was generated for a text change that didn't change\n                // any text. Mark the dom change to fall back to assuming the\n                // selection was typed over with an identical value if it can't\n                // find another change.\n                typeOver: mut.target.nodeValue == mut.oldValue\n            };\n        }\n    }\n}\nlet cssChecked = new WeakMap();\nlet cssCheckWarned = false;\nfunction checkCSS(view) {\n    if (cssChecked.has(view))\n        return;\n    cssChecked.set(view, null);\n    if (['normal', 'nowrap', 'pre-line'].indexOf(getComputedStyle(view.dom).whiteSpace) !== -1) {\n        view.requiresGeckoHackNode = gecko;\n        if (cssCheckWarned)\n            return;\n        console[\"warn\"](\"ProseMirror expects the CSS white-space property to be set, preferably to 'pre-wrap'. It is recommended to load style/prosemirror.css from the prosemirror-view package.\");\n        cssCheckWarned = true;\n    }\n}\n// Used to work around a Safari Selection/shadow DOM bug\n// Based on https://github.com/codemirror/dev/issues/414 fix\nfunction safariShadowSelectionRange(view) {\n    let found;\n    function read(event) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        found = event.getTargetRanges()[0];\n    }\n    // Because Safari (at least in 2018-2022) doesn't provide regular\n    // access to the selection inside a shadowRoot, we have to perform a\n    // ridiculous hack to get at it\u2014using `execCommand` to trigger a\n    // `beforeInput` event so that we can read the target range from the\n    // event.\n    view.dom.addEventListener(\"beforeinput\", read, true);\n    document.execCommand(\"indent\");\n    view.dom.removeEventListener(\"beforeinput\", read, true);\n    let anchorNode = found.startContainer, anchorOffset = found.startOffset;\n    let focusNode = found.endContainer, focusOffset = found.endOffset;\n    let currentAnchor = view.domAtPos(view.state.selection.anchor);\n    // Since such a range doesn't distinguish between anchor and head,\n    // use a heuristic that flips it around if its end matches the\n    // current anchor.\n    if (isEquivalentPosition(currentAnchor.node, currentAnchor.offset, focusNode, focusOffset))\n        [anchorNode, anchorOffset, focusNode, focusOffset] = [focusNode, focusOffset, anchorNode, anchorOffset];\n    return { anchorNode, anchorOffset, focusNode, focusOffset };\n}\n\n// Note that all referencing and parsing is done with the\n// start-of-operation selection and document, since that's the one\n// that the DOM represents. If any changes came in in the meantime,\n// the modification is mapped over those before it is applied, in\n// readDOMChange.\nfunction parseBetween(view, from_, to_) {\n    let { node: parent, fromOffset, toOffset, from, to } = view.docView.parseRange(from_, to_);\n    let domSel = view.domSelectionRange();\n    let find;\n    let anchor = domSel.anchorNode;\n    if (anchor && view.dom.contains(anchor.nodeType == 1 ? anchor : anchor.parentNode)) {\n        find = [{ node: anchor, offset: domSel.anchorOffset }];\n        if (!selectionCollapsed(domSel))\n            find.push({ node: domSel.focusNode, offset: domSel.focusOffset });\n    }\n    // Work around issue in Chrome where backspacing sometimes replaces\n    // the deleted content with a random BR node (issues #799, #831)\n    if (chrome && view.input.lastKeyCode === 8) {\n        for (let off = toOffset; off > fromOffset; off--) {\n            let node = parent.childNodes[off - 1], desc = node.pmViewDesc;\n            if (node.nodeName == \"BR\" && !desc) {\n                toOffset = off;\n                break;\n            }\n            if (!desc || desc.size)\n                break;\n        }\n    }\n    let startDoc = view.state.doc;\n    let parser = view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema);\n    let $from = startDoc.resolve(from);\n    let sel = null, doc = parser.parse(parent, {\n        topNode: $from.parent,\n        topMatch: $from.parent.contentMatchAt($from.index()),\n        topOpen: true,\n        from: fromOffset,\n        to: toOffset,\n        preserveWhitespace: $from.parent.type.whitespace == \"pre\" ? \"full\" : true,\n        findPositions: find,\n        ruleFromNode,\n        context: $from\n    });\n    if (find && find[0].pos != null) {\n        let anchor = find[0].pos, head = find[1] && find[1].pos;\n        if (head == null)\n            head = anchor;\n        sel = { anchor: anchor + from, head: head + from };\n    }\n    return { doc, sel, from, to };\n}\nfunction ruleFromNode(dom) {\n    let desc = dom.pmViewDesc;\n    if (desc) {\n        return desc.parseRule();\n    }\n    else if (dom.nodeName == \"BR\" && dom.parentNode) {\n        // Safari replaces the list item or table cell with a BR\n        // directly in the list node (?!) if you delete the last\n        // character in a list item or table cell (#708, #862)\n        if (safari && /^(ul|ol)$/i.test(dom.parentNode.nodeName)) {\n            let skip = document.createElement(\"div\");\n            skip.appendChild(document.createElement(\"li\"));\n            return { skip };\n        }\n        else if (dom.parentNode.lastChild == dom || safari && /^(tr|table)$/i.test(dom.parentNode.nodeName)) {\n            return { ignore: true };\n        }\n    }\n    else if (dom.nodeName == \"IMG\" && dom.getAttribute(\"mark-placeholder\")) {\n        return { ignore: true };\n    }\n    return null;\n}\nconst isInline = /^(a|abbr|acronym|b|bd[io]|big|br|button|cite|code|data(list)?|del|dfn|em|i|ins|kbd|label|map|mark|meter|output|q|ruby|s|samp|small|span|strong|su[bp]|time|u|tt|var)$/i;\nfunction readDOMChange(view, from, to, typeOver, addedNodes) {\n    if (from < 0) {\n        let origin = view.input.lastSelectionTime > Date.now() - 50 ? view.input.lastSelectionOrigin : null;\n        let newSel = selectionFromDOM(view, origin);\n        if (newSel && !view.state.selection.eq(newSel)) {\n            if (chrome && android &&\n                view.input.lastKeyCode === 13 && Date.now() - 100 < view.input.lastKeyCodeTime &&\n                view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\"))))\n                return;\n            let tr = view.state.tr.setSelection(newSel);\n            if (origin == \"pointer\")\n                tr.setMeta(\"pointer\", true);\n            else if (origin == \"key\")\n                tr.scrollIntoView();\n            view.dispatch(tr);\n        }\n        return;\n    }\n    let $before = view.state.doc.resolve(from);\n    let shared = $before.sharedDepth(to);\n    from = $before.before(shared + 1);\n    to = view.state.doc.resolve(to).after(shared + 1);\n    let sel = view.state.selection;\n    let parse = parseBetween(view, from, to);\n    let doc = view.state.doc, compare = doc.slice(parse.from, parse.to);\n    let preferredPos, preferredSide;\n    // Prefer anchoring to end when Backspace is pressed\n    if (view.input.lastKeyCode === 8 && Date.now() - 100 < view.input.lastKeyCodeTime) {\n        preferredPos = view.state.selection.to;\n        preferredSide = \"end\";\n    }\n    else {\n        preferredPos = view.state.selection.from;\n        preferredSide = \"start\";\n    }\n    view.input.lastKeyCode = null;\n    let change = findDiff(compare.content, parse.doc.content, parse.from, preferredPos, preferredSide);\n    if ((ios && view.input.lastIOSEnter > Date.now() - 225 || android) &&\n        addedNodes.some(n => n.nodeType == 1 && !isInline.test(n.nodeName)) &&\n        (!change || change.endA >= change.endB) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n        view.input.lastIOSEnter = 0;\n        return;\n    }\n    if (!change) {\n        if (typeOver && sel instanceof TextSelection && !sel.empty && sel.$head.sameParent(sel.$anchor) &&\n            !view.composing && !(parse.sel && parse.sel.anchor != parse.sel.head)) {\n            change = { start: sel.from, endA: sel.to, endB: sel.to };\n        }\n        else {\n            if (parse.sel) {\n                let sel = resolveSelection(view, view.state.doc, parse.sel);\n                if (sel && !sel.eq(view.state.selection))\n                    view.dispatch(view.state.tr.setSelection(sel));\n            }\n            return;\n        }\n    }\n    // Chrome sometimes leaves the cursor before the inserted text when\n    // composing after a cursor wrapper. This moves it forward.\n    if (chrome && view.cursorWrapper && parse.sel && parse.sel.anchor == view.cursorWrapper.deco.from &&\n        parse.sel.head == parse.sel.anchor) {\n        let size = change.endB - change.start;\n        parse.sel = { anchor: parse.sel.anchor + size, head: parse.sel.anchor + size };\n    }\n    view.input.domChangeCount++;\n    // Handle the case where overwriting a selection by typing matches\n    // the start or end of the selected content, creating a change\n    // that's smaller than what was actually overwritten.\n    if (view.state.selection.from < view.state.selection.to &&\n        change.start == change.endB &&\n        view.state.selection instanceof TextSelection) {\n        if (change.start > view.state.selection.from && change.start <= view.state.selection.from + 2 &&\n            view.state.selection.from >= parse.from) {\n            change.start = view.state.selection.from;\n        }\n        else if (change.endA < view.state.selection.to && change.endA >= view.state.selection.to - 2 &&\n            view.state.selection.to <= parse.to) {\n            change.endB += (view.state.selection.to - change.endA);\n            change.endA = view.state.selection.to;\n        }\n    }\n    // IE11 will insert a non-breaking space _ahead_ of the space after\n    // the cursor space when adding a space before another space. When\n    // that happened, adjust the change to cover the space instead.\n    if (ie && ie_version <= 11 && change.endB == change.start + 1 &&\n        change.endA == change.start && change.start > parse.from &&\n        parse.doc.textBetween(change.start - parse.from - 1, change.start - parse.from + 1) == \" \\u00a0\") {\n        change.start--;\n        change.endA--;\n        change.endB--;\n    }\n    let $from = parse.doc.resolveNoCache(change.start - parse.from);\n    let $to = parse.doc.resolveNoCache(change.endB - parse.from);\n    let $fromA = doc.resolve(change.start);\n    let inlineChange = $from.sameParent($to) && $from.parent.inlineContent && $fromA.end() >= change.endA;\n    let nextSel;\n    // If this looks like the effect of pressing Enter (or was recorded\n    // as being an iOS enter press), just dispatch an Enter key instead.\n    if (((ios && view.input.lastIOSEnter > Date.now() - 225 &&\n        (!inlineChange || addedNodes.some(n => n.nodeName == \"DIV\" || n.nodeName == \"P\"))) ||\n        (!inlineChange && $from.pos < parse.doc.content.size &&\n            (nextSel = Selection.findFrom(parse.doc.resolve($from.pos + 1), 1, true)) &&\n            nextSel.head == $to.pos)) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n        view.input.lastIOSEnter = 0;\n        return;\n    }\n    // Same for backspace\n    if (view.state.selection.anchor > change.start &&\n        looksLikeJoin(doc, change.start, change.endA, $from, $to) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\")))) {\n        if (android && chrome)\n            view.domObserver.suppressSelectionUpdates(); // #820\n        return;\n    }\n    // Chrome Android will occasionally, during composition, delete the\n    // entire composition and then immediately insert it again. This is\n    // used to detect that situation.\n    if (chrome && android && change.endB == change.start)\n        view.input.lastAndroidDelete = Date.now();\n    // This tries to detect Android virtual keyboard\n    // enter-and-pick-suggestion action. That sometimes (see issue\n    // #1059) first fires a DOM mutation, before moving the selection to\n    // the newly created block. And then, because ProseMirror cleans up\n    // the DOM selection, it gives up moving the selection entirely,\n    // leaving the cursor in the wrong place. When that happens, we drop\n    // the new paragraph from the initial change, and fire a simulated\n    // enter key afterwards.\n    if (android && !inlineChange && $from.start() != $to.start() && $to.parentOffset == 0 && $from.depth == $to.depth &&\n        parse.sel && parse.sel.anchor == parse.sel.head && parse.sel.head == change.endA) {\n        change.endB -= 2;\n        $to = parse.doc.resolveNoCache(change.endB - parse.from);\n        setTimeout(() => {\n            view.someProp(\"handleKeyDown\", function (f) { return f(view, keyEvent(13, \"Enter\")); });\n        }, 20);\n    }\n    let chFrom = change.start, chTo = change.endA;\n    let tr, storedMarks, markChange;\n    if (inlineChange) {\n        if ($from.pos == $to.pos) { // Deletion\n            // IE11 sometimes weirdly moves the DOM selection around after\n            // backspacing out the first element in a textblock\n            if (ie && ie_version <= 11 && $from.parentOffset == 0) {\n                view.domObserver.suppressSelectionUpdates();\n                setTimeout(() => selectionToDOM(view), 20);\n            }\n            tr = view.state.tr.delete(chFrom, chTo);\n            storedMarks = doc.resolve(change.start).marksAcross(doc.resolve(change.endA));\n        }\n        else if ( // Adding or removing a mark\n        change.endA == change.endB &&\n            (markChange = isMarkChange($from.parent.content.cut($from.parentOffset, $to.parentOffset), $fromA.parent.content.cut($fromA.parentOffset, change.endA - $fromA.start())))) {\n            tr = view.state.tr;\n            if (markChange.type == \"add\")\n                tr.addMark(chFrom, chTo, markChange.mark);\n            else\n                tr.removeMark(chFrom, chTo, markChange.mark);\n        }\n        else if ($from.parent.child($from.index()).isText && $from.index() == $to.index() - ($to.textOffset ? 0 : 1)) {\n            // Both positions in the same text node -- simply insert text\n            let text = $from.parent.textBetween($from.parentOffset, $to.parentOffset);\n            if (view.someProp(\"handleTextInput\", f => f(view, chFrom, chTo, text)))\n                return;\n            tr = view.state.tr.insertText(text, chFrom, chTo);\n        }\n    }\n    if (!tr)\n        tr = view.state.tr.replace(chFrom, chTo, parse.doc.slice(change.start - parse.from, change.endB - parse.from));\n    if (parse.sel) {\n        let sel = resolveSelection(view, tr.doc, parse.sel);\n        // Chrome Android will sometimes, during composition, report the\n        // selection in the wrong place. If it looks like that is\n        // happening, don't update the selection.\n        // Edge just doesn't move the cursor forward when you start typing\n        // in an empty block or between br nodes.\n        if (sel && !(chrome && android && view.composing && sel.empty &&\n            (change.start != change.endB || view.input.lastAndroidDelete < Date.now() - 100) &&\n            (sel.head == chFrom || sel.head == tr.mapping.map(chTo) - 1) ||\n            ie && sel.empty && sel.head == chFrom))\n            tr.setSelection(sel);\n    }\n    if (storedMarks)\n        tr.ensureMarks(storedMarks);\n    view.dispatch(tr.scrollIntoView());\n}\nfunction resolveSelection(view, doc, parsedSel) {\n    if (Math.max(parsedSel.anchor, parsedSel.head) > doc.content.size)\n        return null;\n    return selectionBetween(view, doc.resolve(parsedSel.anchor), doc.resolve(parsedSel.head));\n}\n// Given two same-length, non-empty fragments of inline content,\n// determine whether the first could be created from the second by\n// removing or adding a single mark type.\nfunction isMarkChange(cur, prev) {\n    let curMarks = cur.firstChild.marks, prevMarks = prev.firstChild.marks;\n    let added = curMarks, removed = prevMarks, type, mark, update;\n    for (let i = 0; i < prevMarks.length; i++)\n        added = prevMarks[i].removeFromSet(added);\n    for (let i = 0; i < curMarks.length; i++)\n        removed = curMarks[i].removeFromSet(removed);\n    if (added.length == 1 && removed.length == 0) {\n        mark = added[0];\n        type = \"add\";\n        update = (node) => node.mark(mark.addToSet(node.marks));\n    }\n    else if (added.length == 0 && removed.length == 1) {\n        mark = removed[0];\n        type = \"remove\";\n        update = (node) => node.mark(mark.removeFromSet(node.marks));\n    }\n    else {\n        return null;\n    }\n    let updated = [];\n    for (let i = 0; i < prev.childCount; i++)\n        updated.push(update(prev.child(i)));\n    if (Fragment.from(updated).eq(cur))\n        return { mark, type };\n}\nfunction looksLikeJoin(old, start, end, $newStart, $newEnd) {\n    if (!$newStart.parent.isTextblock ||\n        // The content must have shrunk\n        end - start <= $newEnd.pos - $newStart.pos ||\n        // newEnd must point directly at or after the end of the block that newStart points into\n        skipClosingAndOpening($newStart, true, false) < $newEnd.pos)\n        return false;\n    let $start = old.resolve(start);\n    // Start must be at the end of a block\n    if ($start.parentOffset < $start.parent.content.size || !$start.parent.isTextblock)\n        return false;\n    let $next = old.resolve(skipClosingAndOpening($start, true, true));\n    // The next textblock must start before end and end near it\n    if (!$next.parent.isTextblock || $next.pos > end ||\n        skipClosingAndOpening($next, true, false) < end)\n        return false;\n    // The fragments after the join point must match\n    return $newStart.parent.content.cut($newStart.parentOffset).eq($next.parent.content);\n}\nfunction skipClosingAndOpening($pos, fromEnd, mayOpen) {\n    let depth = $pos.depth, end = fromEnd ? $pos.end() : $pos.pos;\n    while (depth > 0 && (fromEnd || $pos.indexAfter(depth) == $pos.node(depth).childCount)) {\n        depth--;\n        end++;\n        fromEnd = false;\n    }\n    if (mayOpen) {\n        let next = $pos.node(depth).maybeChild($pos.indexAfter(depth));\n        while (next && !next.isLeaf) {\n            next = next.firstChild;\n            end++;\n        }\n    }\n    return end;\n}\nfunction findDiff(a, b, pos, preferredPos, preferredSide) {\n    let start = a.findDiffStart(b, pos);\n    if (start == null)\n        return null;\n    let { a: endA, b: endB } = a.findDiffEnd(b, pos + a.size, pos + b.size);\n    if (preferredSide == \"end\") {\n        let adjust = Math.max(0, start - Math.min(endA, endB));\n        preferredPos -= endA + adjust - start;\n    }\n    if (endA < start && a.size < b.size) {\n        let move = preferredPos <= start && preferredPos >= endA ? start - preferredPos : 0;\n        start -= move;\n        endB = start + (endB - endA);\n        endA = start;\n    }\n    else if (endB < start) {\n        let move = preferredPos <= start && preferredPos >= endB ? start - preferredPos : 0;\n        start -= move;\n        endA = start + (endA - endB);\n        endB = start;\n    }\n    return { start, endA, endB };\n}\n\n/**\n@internal\n*/\nconst __serializeForClipboard = serializeForClipboard;\n/**\n@internal\n*/\nconst __parseFromClipboard = parseFromClipboard;\n/**\n@internal\n*/\nconst __endComposition = endComposition;\n/**\nAn editor view manages the DOM structure that represents an\neditable document. Its state and behavior are determined by its\n[props](https://prosemirror.net/docs/ref/#view.DirectEditorProps).\n*/\nclass EditorView {\n    /**\n    Create a view. `place` may be a DOM node that the editor should\n    be appended to, a function that will place it into the document,\n    or an object whose `mount` property holds the node to use as the\n    document container. If it is `null`, the editor will not be\n    added to the document.\n    */\n    constructor(place, props) {\n        this._root = null;\n        /**\n        @internal\n        */\n        this.focused = false;\n        /**\n        Kludge used to work around a Chrome bug @internal\n        */\n        this.trackWrites = null;\n        this.mounted = false;\n        /**\n        @internal\n        */\n        this.markCursor = null;\n        /**\n        @internal\n        */\n        this.cursorWrapper = null;\n        /**\n        @internal\n        */\n        this.lastSelectedViewDesc = undefined;\n        /**\n        @internal\n        */\n        this.input = new InputState;\n        this.prevDirectPlugins = [];\n        this.pluginViews = [];\n        /**\n        Holds `true` when a hack node is needed in Firefox to prevent the\n        [space is eaten issue](https://github.com/ProseMirror/prosemirror/issues/651)\n        @internal\n        */\n        this.requiresGeckoHackNode = false;\n        /**\n        When editor content is being dragged, this object contains\n        information about the dragged slice and whether it is being\n        copied or moved. At any other time, it is null.\n        */\n        this.dragging = null;\n        this._props = props;\n        this.state = props.state;\n        this.directPlugins = props.plugins || [];\n        this.directPlugins.forEach(checkStateComponent);\n        this.dispatch = this.dispatch.bind(this);\n        this.dom = (place && place.mount) || document.createElement(\"div\");\n        if (place) {\n            if (place.appendChild)\n                place.appendChild(this.dom);\n            else if (typeof place == \"function\")\n                place(this.dom);\n            else if (place.mount)\n                this.mounted = true;\n        }\n        this.editable = getEditable(this);\n        updateCursorWrapper(this);\n        this.nodeViews = buildNodeViews(this);\n        this.docView = docViewDesc(this.state.doc, computeDocDeco(this), viewDecorations(this), this.dom, this);\n        this.domObserver = new DOMObserver(this, (from, to, typeOver, added) => readDOMChange(this, from, to, typeOver, added));\n        this.domObserver.start();\n        initInput(this);\n        this.updatePluginViews();\n    }\n    /**\n    Holds `true` when a\n    [composition](https://w3c.github.io/uievents/#events-compositionevents)\n    is active.\n    */\n    get composing() { return this.input.composing; }\n    /**\n    The view's current [props](https://prosemirror.net/docs/ref/#view.EditorProps).\n    */\n    get props() {\n        if (this._props.state != this.state) {\n            let prev = this._props;\n            this._props = {};\n            for (let name in prev)\n                this._props[name] = prev[name];\n            this._props.state = this.state;\n        }\n        return this._props;\n    }\n    /**\n    Update the view's props. Will immediately cause an update to\n    the DOM.\n    */\n    update(props) {\n        if (props.handleDOMEvents != this._props.handleDOMEvents)\n            ensureListeners(this);\n        let prevProps = this._props;\n        this._props = props;\n        if (props.plugins) {\n            props.plugins.forEach(checkStateComponent);\n            this.directPlugins = props.plugins;\n        }\n        this.updateStateInner(props.state, prevProps);\n    }\n    /**\n    Update the view by updating existing props object with the object\n    given as argument. Equivalent to `view.update(Object.assign({},\n    view.props, props))`.\n    */\n    setProps(props) {\n        let updated = {};\n        for (let name in this._props)\n            updated[name] = this._props[name];\n        updated.state = this.state;\n        for (let name in props)\n            updated[name] = props[name];\n        this.update(updated);\n    }\n    /**\n    Update the editor's `state` prop, without touching any of the\n    other props.\n    */\n    updateState(state) {\n        this.updateStateInner(state, this._props);\n    }\n    updateStateInner(state, prevProps) {\n        let prev = this.state, redraw = false, updateSel = false;\n        // When stored marks are added, stop composition, so that they can\n        // be displayed.\n        if (state.storedMarks && this.composing) {\n            clearComposition(this);\n            updateSel = true;\n        }\n        this.state = state;\n        let pluginsChanged = prev.plugins != state.plugins || this._props.plugins != prevProps.plugins;\n        if (pluginsChanged || this._props.plugins != prevProps.plugins || this._props.nodeViews != prevProps.nodeViews) {\n            let nodeViews = buildNodeViews(this);\n            if (changedNodeViews(nodeViews, this.nodeViews)) {\n                this.nodeViews = nodeViews;\n                redraw = true;\n            }\n        }\n        if (pluginsChanged || prevProps.handleDOMEvents != this._props.handleDOMEvents) {\n            ensureListeners(this);\n        }\n        this.editable = getEditable(this);\n        updateCursorWrapper(this);\n        let innerDeco = viewDecorations(this), outerDeco = computeDocDeco(this);\n        let scroll = prev.plugins != state.plugins && !prev.doc.eq(state.doc) ? \"reset\"\n            : state.scrollToSelection > prev.scrollToSelection ? \"to selection\" : \"preserve\";\n        let updateDoc = redraw || !this.docView.matchesNode(state.doc, outerDeco, innerDeco);\n        if (updateDoc || !state.selection.eq(prev.selection))\n            updateSel = true;\n        let oldScrollPos = scroll == \"preserve\" && updateSel && this.dom.style.overflowAnchor == null && storeScrollPos(this);\n        if (updateSel) {\n            this.domObserver.stop();\n            // Work around an issue in Chrome, IE, and Edge where changing\n            // the DOM around an active selection puts it into a broken\n            // state where the thing the user sees differs from the\n            // selection reported by the Selection object (#710, #973,\n            // #1011, #1013, #1035).\n            let forceSelUpdate = updateDoc && (ie || chrome) && !this.composing &&\n                !prev.selection.empty && !state.selection.empty && selectionContextChanged(prev.selection, state.selection);\n            if (updateDoc) {\n                // If the node that the selection points into is written to,\n                // Chrome sometimes starts misreporting the selection, so this\n                // tracks that and forces a selection reset when our update\n                // did write to the node.\n                let chromeKludge = chrome ? (this.trackWrites = this.domSelectionRange().focusNode) : null;\n                if (redraw || !this.docView.update(state.doc, outerDeco, innerDeco, this)) {\n                    this.docView.updateOuterDeco([]);\n                    this.docView.destroy();\n                    this.docView = docViewDesc(state.doc, outerDeco, innerDeco, this.dom, this);\n                }\n                if (chromeKludge && !this.trackWrites)\n                    forceSelUpdate = true;\n            }\n            // Work around for an issue where an update arriving right between\n            // a DOM selection change and the \"selectionchange\" event for it\n            // can cause a spurious DOM selection update, disrupting mouse\n            // drag selection.\n            if (forceSelUpdate ||\n                !(this.input.mouseDown && this.domObserver.currentSelection.eq(this.domSelectionRange()) &&\n                    anchorInRightPlace(this))) {\n                selectionToDOM(this, forceSelUpdate);\n            }\n            else {\n                syncNodeSelection(this, state.selection);\n                this.domObserver.setCurSelection();\n            }\n            this.domObserver.start();\n        }\n        this.updatePluginViews(prev);\n        if (scroll == \"reset\") {\n            this.dom.scrollTop = 0;\n        }\n        else if (scroll == \"to selection\") {\n            this.scrollToSelection();\n        }\n        else if (oldScrollPos) {\n            resetScrollPos(oldScrollPos);\n        }\n    }\n    /**\n    @internal\n    */\n    scrollToSelection() {\n        let startDOM = this.domSelectionRange().focusNode;\n        if (this.someProp(\"handleScrollToSelection\", f => f(this))) ;\n        else if (this.state.selection instanceof NodeSelection) {\n            let target = this.docView.domAfterPos(this.state.selection.from);\n            if (target.nodeType == 1)\n                scrollRectIntoView(this, target.getBoundingClientRect(), startDOM);\n        }\n        else {\n            scrollRectIntoView(this, this.coordsAtPos(this.state.selection.head, 1), startDOM);\n        }\n    }\n    destroyPluginViews() {\n        let view;\n        while (view = this.pluginViews.pop())\n            if (view.destroy)\n                view.destroy();\n    }\n    updatePluginViews(prevState) {\n        if (!prevState || prevState.plugins != this.state.plugins || this.directPlugins != this.prevDirectPlugins) {\n            this.prevDirectPlugins = this.directPlugins;\n            this.destroyPluginViews();\n            for (let i = 0; i < this.directPlugins.length; i++) {\n                let plugin = this.directPlugins[i];\n                if (plugin.spec.view)\n                    this.pluginViews.push(plugin.spec.view(this));\n            }\n            for (let i = 0; i < this.state.plugins.length; i++) {\n                let plugin = this.state.plugins[i];\n                if (plugin.spec.view)\n                    this.pluginViews.push(plugin.spec.view(this));\n            }\n        }\n        else {\n            for (let i = 0; i < this.pluginViews.length; i++) {\n                let pluginView = this.pluginViews[i];\n                if (pluginView.update)\n                    pluginView.update(this, prevState);\n            }\n        }\n    }\n    someProp(propName, f) {\n        let prop = this._props && this._props[propName], value;\n        if (prop != null && (value = f ? f(prop) : prop))\n            return value;\n        for (let i = 0; i < this.directPlugins.length; i++) {\n            let prop = this.directPlugins[i].props[propName];\n            if (prop != null && (value = f ? f(prop) : prop))\n                return value;\n        }\n        let plugins = this.state.plugins;\n        if (plugins)\n            for (let i = 0; i < plugins.length; i++) {\n                let prop = plugins[i].props[propName];\n                if (prop != null && (value = f ? f(prop) : prop))\n                    return value;\n            }\n    }\n    /**\n    Query whether the view has focus.\n    */\n    hasFocus() {\n        // Work around IE not handling focus correctly if resize handles are shown.\n        // If the cursor is inside an element with resize handles, activeElement\n        // will be that element instead of this.dom.\n        if (ie) {\n            // If activeElement is within this.dom, and there are no other elements\n            // setting `contenteditable` to false in between, treat it as focused.\n            let node = this.root.activeElement;\n            if (node == this.dom)\n                return true;\n            if (!node || !this.dom.contains(node))\n                return false;\n            while (node && this.dom != node && this.dom.contains(node)) {\n                if (node.contentEditable == 'false')\n                    return false;\n                node = node.parentElement;\n            }\n            return true;\n        }\n        return this.root.activeElement == this.dom;\n    }\n    /**\n    Focus the editor.\n    */\n    focus() {\n        this.domObserver.stop();\n        if (this.editable)\n            focusPreventScroll(this.dom);\n        selectionToDOM(this);\n        this.domObserver.start();\n    }\n    /**\n    Get the document root in which the editor exists. This will\n    usually be the top-level `document`, but might be a [shadow\n    DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM)\n    root if the editor is inside one.\n    */\n    get root() {\n        let cached = this._root;\n        if (cached == null)\n            for (let search = this.dom.parentNode; search; search = search.parentNode) {\n                if (search.nodeType == 9 || (search.nodeType == 11 && search.host)) {\n                    if (!search.getSelection)\n                        Object.getPrototypeOf(search).getSelection = () => search.ownerDocument.getSelection();\n                    return this._root = search;\n                }\n            }\n        return cached || document;\n    }\n    /**\n    Given a pair of viewport coordinates, return the document\n    position that corresponds to them. May return null if the given\n    coordinates aren't inside of the editor. When an object is\n    returned, its `pos` property is the position nearest to the\n    coordinates, and its `inside` property holds the position of the\n    inner node that the position falls inside of, or -1 if it is at\n    the top level, not in any node.\n    */\n    posAtCoords(coords) {\n        return posAtCoords(this, coords);\n    }\n    /**\n    Returns the viewport rectangle at a given document position.\n    `left` and `right` will be the same number, as this returns a\n    flat cursor-ish rectangle. If the position is between two things\n    that aren't directly adjacent, `side` determines which element\n    is used. When < 0, the element before the position is used,\n    otherwise the element after.\n    */\n    coordsAtPos(pos, side = 1) {\n        return coordsAtPos(this, pos, side);\n    }\n    /**\n    Find the DOM position that corresponds to the given document\n    position. When `side` is negative, find the position as close as\n    possible to the content before the position. When positive,\n    prefer positions close to the content after the position. When\n    zero, prefer as shallow a position as possible.\n    \n    Note that you should **not** mutate the editor's internal DOM,\n    only inspect it (and even that is usually not necessary).\n    */\n    domAtPos(pos, side = 0) {\n        return this.docView.domFromPos(pos, side);\n    }\n    /**\n    Find the DOM node that represents the document node after the\n    given position. May return `null` when the position doesn't point\n    in front of a node or if the node is inside an opaque node view.\n    \n    This is intended to be able to call things like\n    `getBoundingClientRect` on that DOM node. Do **not** mutate the\n    editor DOM directly, or add styling this way, since that will be\n    immediately overriden by the editor as it redraws the node.\n    */\n    nodeDOM(pos) {\n        let desc = this.docView.descAt(pos);\n        return desc ? desc.nodeDOM : null;\n    }\n    /**\n    Find the document position that corresponds to a given DOM\n    position. (Whenever possible, it is preferable to inspect the\n    document structure directly, rather than poking around in the\n    DOM, but sometimes\u2014for example when interpreting an event\n    target\u2014you don't have a choice.)\n    \n    The `bias` parameter can be used to influence which side of a DOM\n    node to use when the position is inside a leaf node.\n    */\n    posAtDOM(node, offset, bias = -1) {\n        let pos = this.docView.posFromDOM(node, offset, bias);\n        if (pos == null)\n            throw new RangeError(\"DOM position not inside the editor\");\n        return pos;\n    }\n    /**\n    Find out whether the selection is at the end of a textblock when\n    moving in a given direction. When, for example, given `\"left\"`,\n    it will return true if moving left from the current cursor\n    position would leave that position's parent textblock. Will apply\n    to the view's current state by default, but it is possible to\n    pass a different state.\n    */\n    endOfTextblock(dir, state) {\n        return endOfTextblock(this, state || this.state, dir);\n    }\n    /**\n    Run the editor's paste logic with the given HTML string. The\n    `event`, if given, will be passed to the\n    [`handlePaste`](https://prosemirror.net/docs/ref/#view.EditorProps.handlePaste) hook.\n    */\n    pasteHTML(html, event) {\n        return doPaste(this, \"\", html, false, event || new ClipboardEvent(\"paste\"));\n    }\n    /**\n    Run the editor's paste logic with the given plain-text input.\n    */\n    pasteText(text, event) {\n        return doPaste(this, text, null, true, event || new ClipboardEvent(\"paste\"));\n    }\n    /**\n    Removes the editor from the DOM and destroys all [node\n    views](https://prosemirror.net/docs/ref/#view.NodeView).\n    */\n    destroy() {\n        if (!this.docView)\n            return;\n        destroyInput(this);\n        this.destroyPluginViews();\n        if (this.mounted) {\n            this.docView.update(this.state.doc, [], viewDecorations(this), this);\n            this.dom.textContent = \"\";\n        }\n        else if (this.dom.parentNode) {\n            this.dom.parentNode.removeChild(this.dom);\n        }\n        this.docView.destroy();\n        this.docView = null;\n    }\n    /**\n    This is true when the view has been\n    [destroyed](https://prosemirror.net/docs/ref/#view.EditorView.destroy) (and thus should not be\n    used anymore).\n    */\n    get isDestroyed() {\n        return this.docView == null;\n    }\n    /**\n    Used for testing.\n    */\n    dispatchEvent(event) {\n        return dispatchEvent(this, event);\n    }\n    /**\n    Dispatch a transaction. Will call\n    [`dispatchTransaction`](https://prosemirror.net/docs/ref/#view.DirectEditorProps.dispatchTransaction)\n    when given, and otherwise defaults to applying the transaction to\n    the current state and calling\n    [`updateState`](https://prosemirror.net/docs/ref/#view.EditorView.updateState) with the result.\n    This method is bound to the view instance, so that it can be\n    easily passed around.\n    */\n    dispatch(tr) {\n        let dispatchTransaction = this._props.dispatchTransaction;\n        if (dispatchTransaction)\n            dispatchTransaction.call(this, tr);\n        else\n            this.updateState(this.state.apply(tr));\n    }\n    /**\n    @internal\n    */\n    domSelectionRange() {\n        return safari && this.root.nodeType === 11 && deepActiveElement(this.dom.ownerDocument) == this.dom\n            ? safariShadowSelectionRange(this) : this.domSelection();\n    }\n    /**\n    @internal\n    */\n    domSelection() {\n        return this.root.getSelection();\n    }\n}\nfunction computeDocDeco(view) {\n    let attrs = Object.create(null);\n    attrs.class = \"ProseMirror\";\n    attrs.contenteditable = String(view.editable);\n    attrs.translate = \"no\";\n    view.someProp(\"attributes\", value => {\n        if (typeof value == \"function\")\n            value = value(view.state);\n        if (value)\n            for (let attr in value) {\n                if (attr == \"class\")\n                    attrs.class += \" \" + value[attr];\n                if (attr == \"style\") {\n                    attrs.style = (attrs.style ? attrs.style + \";\" : \"\") + value[attr];\n                }\n                else if (!attrs[attr] && attr != \"contenteditable\" && attr != \"nodeName\")\n                    attrs[attr] = String(value[attr]);\n            }\n    });\n    return [Decoration.node(0, view.state.doc.content.size, attrs)];\n}\nfunction updateCursorWrapper(view) {\n    if (view.markCursor) {\n        let dom = document.createElement(\"img\");\n        dom.className = \"ProseMirror-separator\";\n        dom.setAttribute(\"mark-placeholder\", \"true\");\n        dom.setAttribute(\"alt\", \"\");\n        view.cursorWrapper = { dom, deco: Decoration.widget(view.state.selection.head, dom, { raw: true, marks: view.markCursor }) };\n    }\n    else {\n        view.cursorWrapper = null;\n    }\n}\nfunction getEditable(view) {\n    return !view.someProp(\"editable\", value => value(view.state) === false);\n}\nfunction selectionContextChanged(sel1, sel2) {\n    let depth = Math.min(sel1.$anchor.sharedDepth(sel1.head), sel2.$anchor.sharedDepth(sel2.head));\n    return sel1.$anchor.start(depth) != sel2.$anchor.start(depth);\n}\nfunction buildNodeViews(view) {\n    let result = Object.create(null);\n    function add(obj) {\n        for (let prop in obj)\n            if (!Object.prototype.hasOwnProperty.call(result, prop))\n                result[prop] = obj[prop];\n    }\n    view.someProp(\"nodeViews\", add);\n    view.someProp(\"markViews\", add);\n    return result;\n}\nfunction changedNodeViews(a, b) {\n    let nA = 0, nB = 0;\n    for (let prop in a) {\n        if (a[prop] != b[prop])\n            return true;\n        nA++;\n    }\n    for (let _ in b)\n        nB++;\n    return nA != nB;\n}\nfunction checkStateComponent(plugin) {\n    if (plugin.spec.state || plugin.spec.filterTransaction || plugin.spec.appendTransaction)\n        throw new RangeError(\"Plugins passed directly to the view must not have a state component\");\n}\n\nexport { Decoration, DecorationSet, EditorView, __endComposition, __parseFromClipboard, __serializeForClipboard };\n", "export var base = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  10: \"Enter\",\n  12: \"NumLock\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  44: \"PrintScreen\",\n  45: \"Insert\",\n  46: \"Delete\",\n  59: \";\",\n  61: \"=\",\n  91: \"Meta\",\n  92: \"Meta\",\n  106: \"*\",\n  107: \"+\",\n  108: \",\",\n  109: \"-\",\n  110: \".\",\n  111: \"/\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  160: \"Shift\",\n  161: \"Shift\",\n  162: \"Control\",\n  163: \"Control\",\n  164: \"Alt\",\n  165: \"Alt\",\n  173: \"-\",\n  186: \";\",\n  187: \"=\",\n  188: \",\",\n  189: \"-\",\n  190: \".\",\n  191: \"/\",\n  192: \"`\",\n  219: \"[\",\n  220: \"\\\\\",\n  221: \"]\",\n  222: \"'\"\n}\n\nexport var shift = {\n  48: \")\",\n  49: \"!\",\n  50: \"@\",\n  51: \"#\",\n  52: \"$\",\n  53: \"%\",\n  54: \"^\",\n  55: \"&\",\n  56: \"*\",\n  57: \"(\",\n  59: \":\",\n  61: \"+\",\n  173: \"_\",\n  186: \":\",\n  187: \"+\",\n  188: \"<\",\n  189: \"_\",\n  190: \">\",\n  191: \"?\",\n  192: \"~\",\n  219: \"{\",\n  220: \"|\",\n  221: \"}\",\n  222: \"\\\"\"\n}\n\nvar chrome = typeof navigator != \"undefined\" && /Chrome\\/(\\d+)/.exec(navigator.userAgent)\nvar gecko = typeof navigator != \"undefined\" && /Gecko\\/\\d+/.test(navigator.userAgent)\nvar mac = typeof navigator != \"undefined\" && /Mac/.test(navigator.platform)\nvar ie = typeof navigator != \"undefined\" && /MSIE \\d|Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\nvar brokenModifierNames = mac || chrome && +chrome[1] < 57\n\n// Fill in the digit keys\nfor (var i = 0; i < 10; i++) base[48 + i] = base[96 + i] = String(i)\n\n// The function keys\nfor (var i = 1; i <= 24; i++) base[i + 111] = \"F\" + i\n\n// And the alphabetic keys\nfor (var i = 65; i <= 90; i++) {\n  base[i] = String.fromCharCode(i + 32)\n  shift[i] = String.fromCharCode(i)\n}\n\n// For each code that doesn't have a shift-equivalent, copy the base name\nfor (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code]\n\nexport function keyName(event) {\n  var ignoreKey = brokenModifierNames && (event.ctrlKey || event.altKey || event.metaKey) ||\n    ie && event.shiftKey && event.key && event.key.length == 1 ||\n    event.key == \"Unidentified\"\n  var name = (!ignoreKey && event.key) ||\n    (event.shiftKey ? shift : base)[event.keyCode] ||\n    event.key || \"Unidentified\"\n  // Edge sometimes produces wrong names (Issue #3)\n  if (name == \"Esc\") name = \"Escape\"\n  if (name == \"Del\") name = \"Delete\"\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/\n  if (name == \"Left\") name = \"ArrowLeft\"\n  if (name == \"Up\") name = \"ArrowUp\"\n  if (name == \"Right\") name = \"ArrowRight\"\n  if (name == \"Down\") name = \"ArrowDown\"\n  return name\n}\n", "import { keyName, base } from 'w3c-keyname';\nimport { Plugin } from 'prosemirror-state';\n\nconst mac = typeof navigator != \"undefined\" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform) : false;\nfunction normalizeKeyName(name) {\n    let parts = name.split(/-(?!$)/), result = parts[parts.length - 1];\n    if (result == \"Space\")\n        result = \" \";\n    let alt, ctrl, shift, meta;\n    for (let i = 0; i < parts.length - 1; i++) {\n        let mod = parts[i];\n        if (/^(cmd|meta|m)$/i.test(mod))\n            meta = true;\n        else if (/^a(lt)?$/i.test(mod))\n            alt = true;\n        else if (/^(c|ctrl|control)$/i.test(mod))\n            ctrl = true;\n        else if (/^s(hift)?$/i.test(mod))\n            shift = true;\n        else if (/^mod$/i.test(mod)) {\n            if (mac)\n                meta = true;\n            else\n                ctrl = true;\n        }\n        else\n            throw new Error(\"Unrecognized modifier name: \" + mod);\n    }\n    if (alt)\n        result = \"Alt-\" + result;\n    if (ctrl)\n        result = \"Ctrl-\" + result;\n    if (meta)\n        result = \"Meta-\" + result;\n    if (shift)\n        result = \"Shift-\" + result;\n    return result;\n}\nfunction normalize(map) {\n    let copy = Object.create(null);\n    for (let prop in map)\n        copy[normalizeKeyName(prop)] = map[prop];\n    return copy;\n}\nfunction modifiers(name, event, shift = true) {\n    if (event.altKey)\n        name = \"Alt-\" + name;\n    if (event.ctrlKey)\n        name = \"Ctrl-\" + name;\n    if (event.metaKey)\n        name = \"Meta-\" + name;\n    if (shift && event.shiftKey)\n        name = \"Shift-\" + name;\n    return name;\n}\n/**\nCreate a keymap plugin for the given set of bindings.\n\nBindings should map key names to [command](https://prosemirror.net/docs/ref/#commands)-style\nfunctions, which will be called with `(EditorState, dispatch,\nEditorView)` arguments, and should return true when they've handled\nthe key. Note that the view argument isn't part of the command\nprotocol, but can be used as an escape hatch if a binding needs to\ndirectly interact with the UI.\n\nKey names may be strings like `\"Shift-Ctrl-Enter\"`\u2014a key\nidentifier prefixed with zero or more modifiers. Key identifiers\nare based on the strings that can appear in\n[`KeyEvent.key`](https:developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key).\nUse lowercase letters to refer to letter keys (or uppercase letters\nif you want shift to be held). You may use `\"Space\"` as an alias\nfor the `\" \"` name.\n\nModifiers can be given in any order. `Shift-` (or `s-`), `Alt-` (or\n`a-`), `Ctrl-` (or `c-` or `Control-`) and `Cmd-` (or `m-` or\n`Meta-`) are recognized. For characters that are created by holding\nshift, the `Shift-` prefix is implied, and should not be added\nexplicitly.\n\nYou can use `Mod-` as a shorthand for `Cmd-` on Mac and `Ctrl-` on\nother platforms.\n\nYou can add multiple keymap plugins to an editor. The order in\nwhich they appear determines their precedence (the ones early in\nthe array get to dispatch first).\n*/\nfunction keymap(bindings) {\n    return new Plugin({ props: { handleKeyDown: keydownHandler(bindings) } });\n}\n/**\nGiven a set of bindings (using the same format as\n[`keymap`](https://prosemirror.net/docs/ref/#keymap.keymap)), return a [keydown\nhandler](https://prosemirror.net/docs/ref/#view.EditorProps.handleKeyDown) that handles them.\n*/\nfunction keydownHandler(bindings) {\n    let map = normalize(bindings);\n    return function (view, event) {\n        let name = keyName(event), baseName, direct = map[modifiers(name, event)];\n        if (direct && direct(view.state, view.dispatch, view))\n            return true;\n        // A character key\n        if (name.length == 1 && name != \" \") {\n            if (event.shiftKey) {\n                // In case the name was already modified by shift, try looking\n                // it up without its shift modifier\n                let noShift = map[modifiers(name, event, false)];\n                if (noShift && noShift(view.state, view.dispatch, view))\n                    return true;\n            }\n            if ((event.shiftKey || event.altKey || event.metaKey || name.charCodeAt(0) > 127) &&\n                (baseName = base[event.keyCode]) && baseName != name) {\n                // Try falling back to the keyCode when there's a modifier\n                // active or the character produced isn't ASCII, and our table\n                // produces a different name from the the keyCode. See #668,\n                // #1060\n                let fromCode = map[modifiers(baseName, event)];\n                if (fromCode && fromCode(view.state, view.dispatch, view))\n                    return true;\n            }\n        }\n        return false;\n    };\n}\n\nexport { keydownHandler, keymap };\n", "import { liftTarget, replaceStep, ReplaceStep, canJoin, joinPoint, canSplit, ReplaceAroundStep, findWrapping } from 'prosemirror-transform';\nimport { Slice, Fragment } from 'prosemirror-model';\nimport { NodeSelection, Selection, TextSelection, AllSelection } from 'prosemirror-state';\n\n/**\nDelete the selection, if there is one.\n*/\nconst deleteSelection = (state, dispatch) => {\n    if (state.selection.empty)\n        return false;\n    if (dispatch)\n        dispatch(state.tr.deleteSelection().scrollIntoView());\n    return true;\n};\nfunction atBlockStart(state, view) {\n    let { $cursor } = state.selection;\n    if (!$cursor || (view ? !view.endOfTextblock(\"backward\", state)\n        : $cursor.parentOffset > 0))\n        return null;\n    return $cursor;\n}\n/**\nIf the selection is empty and at the start of a textblock, try to\nreduce the distance between that block and the one before it\u2014if\nthere's a block directly before it that can be joined, join them.\nIf not, try to move the selected block closer to the next one in\nthe document structure by lifting it out of its parent or moving it\ninto a parent of the previous block. Will use the view for accurate\n(bidi-aware) start-of-textblock detection if given.\n*/\nconst joinBackward = (state, dispatch, view) => {\n    let $cursor = atBlockStart(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutBefore($cursor);\n    // If there is no node before this, try to lift\n    if (!$cut) {\n        let range = $cursor.blockRange(), target = range && liftTarget(range);\n        if (target == null)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.lift(range, target).scrollIntoView());\n        return true;\n    }\n    let before = $cut.nodeBefore;\n    // Apply the joining algorithm\n    if (!before.type.spec.isolating && deleteBarrier(state, $cut, dispatch))\n        return true;\n    // If the node below has no content and the node above is\n    // selectable, delete the node below and select the one above.\n    if ($cursor.parent.content.size == 0 &&\n        (textblockAt(before, \"end\") || NodeSelection.isSelectable(before))) {\n        let delStep = replaceStep(state.doc, $cursor.before(), $cursor.after(), Slice.empty);\n        if (delStep && delStep.slice.size < delStep.to - delStep.from) {\n            if (dispatch) {\n                let tr = state.tr.step(delStep);\n                tr.setSelection(textblockAt(before, \"end\") ? Selection.findFrom(tr.doc.resolve(tr.mapping.map($cut.pos, -1)), -1)\n                    : NodeSelection.create(tr.doc, $cut.pos - before.nodeSize));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n    }\n    // If the node before is an atom, delete it\n    if (before.isAtom && $cut.depth == $cursor.depth - 1) {\n        if (dispatch)\n            dispatch(state.tr.delete($cut.pos - before.nodeSize, $cut.pos).scrollIntoView());\n        return true;\n    }\n    return false;\n};\n/**\nA more limited form of [`joinBackward`]($commands.joinBackward)\nthat only tries to join the current textblock to the one before\nit, if the cursor is at the start of a textblock.\n*/\nconst joinTextblockBackward = (state, dispatch, view) => {\n    let $cursor = atBlockStart(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutBefore($cursor);\n    return $cut ? joinTextblocksAround(state, $cut, dispatch) : false;\n};\n/**\nA more limited form of [`joinForward`]($commands.joinForward)\nthat only tries to join the current textblock to the one after\nit, if the cursor is at the end of a textblock.\n*/\nconst joinTextblockForward = (state, dispatch, view) => {\n    let $cursor = atBlockEnd(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutAfter($cursor);\n    return $cut ? joinTextblocksAround(state, $cut, dispatch) : false;\n};\nfunction joinTextblocksAround(state, $cut, dispatch) {\n    let before = $cut.nodeBefore, beforeText = before, beforePos = $cut.pos - 1;\n    for (; !beforeText.isTextblock; beforePos--) {\n        if (beforeText.type.spec.isolating)\n            return false;\n        let child = beforeText.lastChild;\n        if (!child)\n            return false;\n        beforeText = child;\n    }\n    let after = $cut.nodeAfter, afterText = after, afterPos = $cut.pos + 1;\n    for (; !afterText.isTextblock; afterPos++) {\n        if (afterText.type.spec.isolating)\n            return false;\n        let child = afterText.firstChild;\n        if (!child)\n            return false;\n        afterText = child;\n    }\n    let step = replaceStep(state.doc, beforePos, afterPos, Slice.empty);\n    if (!step || step.from != beforePos ||\n        step instanceof ReplaceStep && step.slice.size >= afterPos - beforePos)\n        return false;\n    if (dispatch) {\n        let tr = state.tr.step(step);\n        tr.setSelection(TextSelection.create(tr.doc, beforePos));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n}\nfunction textblockAt(node, side, only = false) {\n    for (let scan = node; scan; scan = (side == \"start\" ? scan.firstChild : scan.lastChild)) {\n        if (scan.isTextblock)\n            return true;\n        if (only && scan.childCount != 1)\n            return false;\n    }\n    return false;\n}\n/**\nWhen the selection is empty and at the start of a textblock, select\nthe node before that textblock, if possible. This is intended to be\nbound to keys like backspace, after\n[`joinBackward`](https://prosemirror.net/docs/ref/#commands.joinBackward) or other deleting\ncommands, as a fall-back behavior when the schema doesn't allow\ndeletion at the selected point.\n*/\nconst selectNodeBackward = (state, dispatch, view) => {\n    let { $head, empty } = state.selection, $cut = $head;\n    if (!empty)\n        return false;\n    if ($head.parent.isTextblock) {\n        if (view ? !view.endOfTextblock(\"backward\", state) : $head.parentOffset > 0)\n            return false;\n        $cut = findCutBefore($head);\n    }\n    let node = $cut && $cut.nodeBefore;\n    if (!node || !NodeSelection.isSelectable(node))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.setSelection(NodeSelection.create(state.doc, $cut.pos - node.nodeSize)).scrollIntoView());\n    return true;\n};\nfunction findCutBefore($pos) {\n    if (!$pos.parent.type.spec.isolating)\n        for (let i = $pos.depth - 1; i >= 0; i--) {\n            if ($pos.index(i) > 0)\n                return $pos.doc.resolve($pos.before(i + 1));\n            if ($pos.node(i).type.spec.isolating)\n                break;\n        }\n    return null;\n}\nfunction atBlockEnd(state, view) {\n    let { $cursor } = state.selection;\n    if (!$cursor || (view ? !view.endOfTextblock(\"forward\", state)\n        : $cursor.parentOffset < $cursor.parent.content.size))\n        return null;\n    return $cursor;\n}\n/**\nIf the selection is empty and the cursor is at the end of a\ntextblock, try to reduce or remove the boundary between that block\nand the one after it, either by joining them or by moving the other\nblock closer to this one in the tree structure. Will use the view\nfor accurate start-of-textblock detection if given.\n*/\nconst joinForward = (state, dispatch, view) => {\n    let $cursor = atBlockEnd(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutAfter($cursor);\n    // If there is no node after this, there's nothing to do\n    if (!$cut)\n        return false;\n    let after = $cut.nodeAfter;\n    // Try the joining algorithm\n    if (deleteBarrier(state, $cut, dispatch))\n        return true;\n    // If the node above has no content and the node below is\n    // selectable, delete the node above and select the one below.\n    if ($cursor.parent.content.size == 0 &&\n        (textblockAt(after, \"start\") || NodeSelection.isSelectable(after))) {\n        let delStep = replaceStep(state.doc, $cursor.before(), $cursor.after(), Slice.empty);\n        if (delStep && delStep.slice.size < delStep.to - delStep.from) {\n            if (dispatch) {\n                let tr = state.tr.step(delStep);\n                tr.setSelection(textblockAt(after, \"start\") ? Selection.findFrom(tr.doc.resolve(tr.mapping.map($cut.pos)), 1)\n                    : NodeSelection.create(tr.doc, tr.mapping.map($cut.pos)));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n    }\n    // If the next node is an atom, delete it\n    if (after.isAtom && $cut.depth == $cursor.depth - 1) {\n        if (dispatch)\n            dispatch(state.tr.delete($cut.pos, $cut.pos + after.nodeSize).scrollIntoView());\n        return true;\n    }\n    return false;\n};\n/**\nWhen the selection is empty and at the end of a textblock, select\nthe node coming after that textblock, if possible. This is intended\nto be bound to keys like delete, after\n[`joinForward`](https://prosemirror.net/docs/ref/#commands.joinForward) and similar deleting\ncommands, to provide a fall-back behavior when the schema doesn't\nallow deletion at the selected point.\n*/\nconst selectNodeForward = (state, dispatch, view) => {\n    let { $head, empty } = state.selection, $cut = $head;\n    if (!empty)\n        return false;\n    if ($head.parent.isTextblock) {\n        if (view ? !view.endOfTextblock(\"forward\", state) : $head.parentOffset < $head.parent.content.size)\n            return false;\n        $cut = findCutAfter($head);\n    }\n    let node = $cut && $cut.nodeAfter;\n    if (!node || !NodeSelection.isSelectable(node))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.setSelection(NodeSelection.create(state.doc, $cut.pos)).scrollIntoView());\n    return true;\n};\nfunction findCutAfter($pos) {\n    if (!$pos.parent.type.spec.isolating)\n        for (let i = $pos.depth - 1; i >= 0; i--) {\n            let parent = $pos.node(i);\n            if ($pos.index(i) + 1 < parent.childCount)\n                return $pos.doc.resolve($pos.after(i + 1));\n            if (parent.type.spec.isolating)\n                break;\n        }\n    return null;\n}\n/**\nJoin the selected block or, if there is a text selection, the\nclosest ancestor block of the selection that can be joined, with\nthe sibling above it.\n*/\nconst joinUp = (state, dispatch) => {\n    let sel = state.selection, nodeSel = sel instanceof NodeSelection, point;\n    if (nodeSel) {\n        if (sel.node.isTextblock || !canJoin(state.doc, sel.from))\n            return false;\n        point = sel.from;\n    }\n    else {\n        point = joinPoint(state.doc, sel.from, -1);\n        if (point == null)\n            return false;\n    }\n    if (dispatch) {\n        let tr = state.tr.join(point);\n        if (nodeSel)\n            tr.setSelection(NodeSelection.create(tr.doc, point - state.doc.resolve(point).nodeBefore.nodeSize));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n};\n/**\nJoin the selected block, or the closest ancestor of the selection\nthat can be joined, with the sibling after it.\n*/\nconst joinDown = (state, dispatch) => {\n    let sel = state.selection, point;\n    if (sel instanceof NodeSelection) {\n        if (sel.node.isTextblock || !canJoin(state.doc, sel.to))\n            return false;\n        point = sel.to;\n    }\n    else {\n        point = joinPoint(state.doc, sel.to, 1);\n        if (point == null)\n            return false;\n    }\n    if (dispatch)\n        dispatch(state.tr.join(point).scrollIntoView());\n    return true;\n};\n/**\nLift the selected block, or the closest ancestor block of the\nselection that can be lifted, out of its parent node.\n*/\nconst lift = (state, dispatch) => {\n    let { $from, $to } = state.selection;\n    let range = $from.blockRange($to), target = range && liftTarget(range);\n    if (target == null)\n        return false;\n    if (dispatch)\n        dispatch(state.tr.lift(range, target).scrollIntoView());\n    return true;\n};\n/**\nIf the selection is in a node whose type has a truthy\n[`code`](https://prosemirror.net/docs/ref/#model.NodeSpec.code) property in its spec, replace the\nselection with a newline character.\n*/\nconst newlineInCode = (state, dispatch) => {\n    let { $head, $anchor } = state.selection;\n    if (!$head.parent.type.spec.code || !$head.sameParent($anchor))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.insertText(\"\\n\").scrollIntoView());\n    return true;\n};\nfunction defaultBlockAt(match) {\n    for (let i = 0; i < match.edgeCount; i++) {\n        let { type } = match.edge(i);\n        if (type.isTextblock && !type.hasRequiredAttrs())\n            return type;\n    }\n    return null;\n}\n/**\nWhen the selection is in a node with a truthy\n[`code`](https://prosemirror.net/docs/ref/#model.NodeSpec.code) property in its spec, create a\ndefault block after the code block, and move the cursor there.\n*/\nconst exitCode = (state, dispatch) => {\n    let { $head, $anchor } = state.selection;\n    if (!$head.parent.type.spec.code || !$head.sameParent($anchor))\n        return false;\n    let above = $head.node(-1), after = $head.indexAfter(-1), type = defaultBlockAt(above.contentMatchAt(after));\n    if (!type || !above.canReplaceWith(after, after, type))\n        return false;\n    if (dispatch) {\n        let pos = $head.after(), tr = state.tr.replaceWith(pos, pos, type.createAndFill());\n        tr.setSelection(Selection.near(tr.doc.resolve(pos), 1));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n};\n/**\nIf a block node is selected, create an empty paragraph before (if\nit is its parent's first child) or after it.\n*/\nconst createParagraphNear = (state, dispatch) => {\n    let sel = state.selection, { $from, $to } = sel;\n    if (sel instanceof AllSelection || $from.parent.inlineContent || $to.parent.inlineContent)\n        return false;\n    let type = defaultBlockAt($to.parent.contentMatchAt($to.indexAfter()));\n    if (!type || !type.isTextblock)\n        return false;\n    if (dispatch) {\n        let side = (!$from.parentOffset && $to.index() < $to.parent.childCount ? $from : $to).pos;\n        let tr = state.tr.insert(side, type.createAndFill());\n        tr.setSelection(TextSelection.create(tr.doc, side + 1));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n};\n/**\nIf the cursor is in an empty textblock that can be lifted, lift the\nblock.\n*/\nconst liftEmptyBlock = (state, dispatch) => {\n    let { $cursor } = state.selection;\n    if (!$cursor || $cursor.parent.content.size)\n        return false;\n    if ($cursor.depth > 1 && $cursor.after() != $cursor.end(-1)) {\n        let before = $cursor.before();\n        if (canSplit(state.doc, before)) {\n            if (dispatch)\n                dispatch(state.tr.split(before).scrollIntoView());\n            return true;\n        }\n    }\n    let range = $cursor.blockRange(), target = range && liftTarget(range);\n    if (target == null)\n        return false;\n    if (dispatch)\n        dispatch(state.tr.lift(range, target).scrollIntoView());\n    return true;\n};\n/**\nCreate a variant of [`splitBlock`](https://prosemirror.net/docs/ref/#commands.splitBlock) that uses\na custom function to determine the type of the newly split off block.\n*/\nfunction splitBlockAs(splitNode) {\n    return (state, dispatch) => {\n        let { $from, $to } = state.selection;\n        if (state.selection instanceof NodeSelection && state.selection.node.isBlock) {\n            if (!$from.parentOffset || !canSplit(state.doc, $from.pos))\n                return false;\n            if (dispatch)\n                dispatch(state.tr.split($from.pos).scrollIntoView());\n            return true;\n        }\n        if (!$from.parent.isBlock)\n            return false;\n        if (dispatch) {\n            let atEnd = $to.parentOffset == $to.parent.content.size;\n            let tr = state.tr;\n            if (state.selection instanceof TextSelection || state.selection instanceof AllSelection)\n                tr.deleteSelection();\n            let deflt = $from.depth == 0 ? null : defaultBlockAt($from.node(-1).contentMatchAt($from.indexAfter(-1)));\n            let splitType = splitNode && splitNode($to.parent, atEnd);\n            let types = splitType ? [splitType] : atEnd && deflt ? [{ type: deflt }] : undefined;\n            let can = canSplit(tr.doc, tr.mapping.map($from.pos), 1, types);\n            if (!types && !can && canSplit(tr.doc, tr.mapping.map($from.pos), 1, deflt ? [{ type: deflt }] : undefined)) {\n                if (deflt)\n                    types = [{ type: deflt }];\n                can = true;\n            }\n            if (can) {\n                tr.split(tr.mapping.map($from.pos), 1, types);\n                if (!atEnd && !$from.parentOffset && $from.parent.type != deflt) {\n                    let first = tr.mapping.map($from.before()), $first = tr.doc.resolve(first);\n                    if (deflt && $from.node(-1).canReplaceWith($first.index(), $first.index() + 1, deflt))\n                        tr.setNodeMarkup(tr.mapping.map($from.before()), deflt);\n                }\n            }\n            dispatch(tr.scrollIntoView());\n        }\n        return true;\n    };\n}\n/**\nSplit the parent block of the selection. If the selection is a text\nselection, also delete its content.\n*/\nconst splitBlock = splitBlockAs();\n/**\nActs like [`splitBlock`](https://prosemirror.net/docs/ref/#commands.splitBlock), but without\nresetting the set of active marks at the cursor.\n*/\nconst splitBlockKeepMarks = (state, dispatch) => {\n    return splitBlock(state, dispatch && (tr => {\n        let marks = state.storedMarks || (state.selection.$to.parentOffset && state.selection.$from.marks());\n        if (marks)\n            tr.ensureMarks(marks);\n        dispatch(tr);\n    }));\n};\n/**\nMove the selection to the node wrapping the current selection, if\nany. (Will not select the document node.)\n*/\nconst selectParentNode = (state, dispatch) => {\n    let { $from, to } = state.selection, pos;\n    let same = $from.sharedDepth(to);\n    if (same == 0)\n        return false;\n    pos = $from.before(same);\n    if (dispatch)\n        dispatch(state.tr.setSelection(NodeSelection.create(state.doc, pos)));\n    return true;\n};\n/**\nSelect the whole document.\n*/\nconst selectAll = (state, dispatch) => {\n    if (dispatch)\n        dispatch(state.tr.setSelection(new AllSelection(state.doc)));\n    return true;\n};\nfunction joinMaybeClear(state, $pos, dispatch) {\n    let before = $pos.nodeBefore, after = $pos.nodeAfter, index = $pos.index();\n    if (!before || !after || !before.type.compatibleContent(after.type))\n        return false;\n    if (!before.content.size && $pos.parent.canReplace(index - 1, index)) {\n        if (dispatch)\n            dispatch(state.tr.delete($pos.pos - before.nodeSize, $pos.pos).scrollIntoView());\n        return true;\n    }\n    if (!$pos.parent.canReplace(index, index + 1) || !(after.isTextblock || canJoin(state.doc, $pos.pos)))\n        return false;\n    if (dispatch)\n        dispatch(state.tr\n            .clearIncompatible($pos.pos, before.type, before.contentMatchAt(before.childCount))\n            .join($pos.pos)\n            .scrollIntoView());\n    return true;\n}\nfunction deleteBarrier(state, $cut, dispatch) {\n    let before = $cut.nodeBefore, after = $cut.nodeAfter, conn, match;\n    if (before.type.spec.isolating || after.type.spec.isolating)\n        return false;\n    if (joinMaybeClear(state, $cut, dispatch))\n        return true;\n    let canDelAfter = $cut.parent.canReplace($cut.index(), $cut.index() + 1);\n    if (canDelAfter &&\n        (conn = (match = before.contentMatchAt(before.childCount)).findWrapping(after.type)) &&\n        match.matchType(conn[0] || after.type).validEnd) {\n        if (dispatch) {\n            let end = $cut.pos + after.nodeSize, wrap = Fragment.empty;\n            for (let i = conn.length - 1; i >= 0; i--)\n                wrap = Fragment.from(conn[i].create(null, wrap));\n            wrap = Fragment.from(before.copy(wrap));\n            let tr = state.tr.step(new ReplaceAroundStep($cut.pos - 1, end, $cut.pos, end, new Slice(wrap, 1, 0), conn.length, true));\n            let joinAt = end + 2 * conn.length;\n            if (canJoin(tr.doc, joinAt))\n                tr.join(joinAt);\n            dispatch(tr.scrollIntoView());\n        }\n        return true;\n    }\n    let selAfter = Selection.findFrom($cut, 1);\n    let range = selAfter && selAfter.$from.blockRange(selAfter.$to), target = range && liftTarget(range);\n    if (target != null && target >= $cut.depth) {\n        if (dispatch)\n            dispatch(state.tr.lift(range, target).scrollIntoView());\n        return true;\n    }\n    if (canDelAfter && textblockAt(after, \"start\", true) && textblockAt(before, \"end\")) {\n        let at = before, wrap = [];\n        for (;;) {\n            wrap.push(at);\n            if (at.isTextblock)\n                break;\n            at = at.lastChild;\n        }\n        let afterText = after, afterDepth = 1;\n        for (; !afterText.isTextblock; afterText = afterText.firstChild)\n            afterDepth++;\n        if (at.canReplace(at.childCount, at.childCount, afterText.content)) {\n            if (dispatch) {\n                let end = Fragment.empty;\n                for (let i = wrap.length - 1; i >= 0; i--)\n                    end = Fragment.from(wrap[i].copy(end));\n                let tr = state.tr.step(new ReplaceAroundStep($cut.pos - wrap.length, $cut.pos + after.nodeSize, $cut.pos + afterDepth, $cut.pos + after.nodeSize - afterDepth, new Slice(end, wrap.length, 0), 0, true));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction selectTextblockSide(side) {\n    return function (state, dispatch) {\n        let sel = state.selection, $pos = side < 0 ? sel.$from : sel.$to;\n        let depth = $pos.depth;\n        while ($pos.node(depth).isInline) {\n            if (!depth)\n                return false;\n            depth--;\n        }\n        if (!$pos.node(depth).isTextblock)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.setSelection(TextSelection.create(state.doc, side < 0 ? $pos.start(depth) : $pos.end(depth))));\n        return true;\n    };\n}\n/**\nMoves the cursor to the start of current text block.\n*/\nconst selectTextblockStart = selectTextblockSide(-1);\n/**\nMoves the cursor to the end of current text block.\n*/\nconst selectTextblockEnd = selectTextblockSide(1);\n// Parameterized commands\n/**\nWrap the selection in a node of the given type with the given\nattributes.\n*/\nfunction wrapIn(nodeType, attrs = null) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to), wrapping = range && findWrapping(range, nodeType, attrs);\n        if (!wrapping)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.wrap(range, wrapping).scrollIntoView());\n        return true;\n    };\n}\n/**\nReturns a command that tries to set the selected textblocks to the\ngiven node type with the given attributes.\n*/\nfunction setBlockType(nodeType, attrs = null) {\n    return function (state, dispatch) {\n        let applicable = false;\n        for (let i = 0; i < state.selection.ranges.length && !applicable; i++) {\n            let { $from: { pos: from }, $to: { pos: to } } = state.selection.ranges[i];\n            state.doc.nodesBetween(from, to, (node, pos) => {\n                if (applicable)\n                    return false;\n                if (!node.isTextblock || node.hasMarkup(nodeType, attrs))\n                    return;\n                if (node.type == nodeType) {\n                    applicable = true;\n                }\n                else {\n                    let $pos = state.doc.resolve(pos), index = $pos.index();\n                    applicable = $pos.parent.canReplaceWith(index, index + 1, nodeType);\n                }\n            });\n        }\n        if (!applicable)\n            return false;\n        if (dispatch) {\n            let tr = state.tr;\n            for (let i = 0; i < state.selection.ranges.length; i++) {\n                let { $from: { pos: from }, $to: { pos: to } } = state.selection.ranges[i];\n                tr.setBlockType(from, to, nodeType, attrs);\n            }\n            dispatch(tr.scrollIntoView());\n        }\n        return true;\n    };\n}\nfunction markApplies(doc, ranges, type) {\n    for (let i = 0; i < ranges.length; i++) {\n        let { $from, $to } = ranges[i];\n        let can = $from.depth == 0 ? doc.inlineContent && doc.type.allowsMarkType(type) : false;\n        doc.nodesBetween($from.pos, $to.pos, node => {\n            if (can)\n                return false;\n            can = node.inlineContent && node.type.allowsMarkType(type);\n        });\n        if (can)\n            return true;\n    }\n    return false;\n}\n/**\nCreate a command function that toggles the given mark with the\ngiven attributes. Will return `false` when the current selection\ndoesn't support that mark. This will remove the mark if any marks\nof that type exist in the selection, or add it otherwise. If the\nselection is empty, this applies to the [stored\nmarks](https://prosemirror.net/docs/ref/#state.EditorState.storedMarks) instead of a range of the\ndocument.\n*/\nfunction toggleMark(markType, attrs = null) {\n    return function (state, dispatch) {\n        let { empty, $cursor, ranges } = state.selection;\n        if ((empty && !$cursor) || !markApplies(state.doc, ranges, markType))\n            return false;\n        if (dispatch) {\n            if ($cursor) {\n                if (markType.isInSet(state.storedMarks || $cursor.marks()))\n                    dispatch(state.tr.removeStoredMark(markType));\n                else\n                    dispatch(state.tr.addStoredMark(markType.create(attrs)));\n            }\n            else {\n                let has = false, tr = state.tr;\n                for (let i = 0; !has && i < ranges.length; i++) {\n                    let { $from, $to } = ranges[i];\n                    has = state.doc.rangeHasMark($from.pos, $to.pos, markType);\n                }\n                for (let i = 0; i < ranges.length; i++) {\n                    let { $from, $to } = ranges[i];\n                    if (has) {\n                        tr.removeMark($from.pos, $to.pos, markType);\n                    }\n                    else {\n                        let from = $from.pos, to = $to.pos, start = $from.nodeAfter, end = $to.nodeBefore;\n                        let spaceStart = start && start.isText ? /^\\s*/.exec(start.text)[0].length : 0;\n                        let spaceEnd = end && end.isText ? /\\s*$/.exec(end.text)[0].length : 0;\n                        if (from + spaceStart < to) {\n                            from += spaceStart;\n                            to -= spaceEnd;\n                        }\n                        tr.addMark(from, to, markType.create(attrs));\n                    }\n                }\n                dispatch(tr.scrollIntoView());\n            }\n        }\n        return true;\n    };\n}\nfunction wrapDispatchForJoin(dispatch, isJoinable) {\n    return (tr) => {\n        if (!tr.isGeneric)\n            return dispatch(tr);\n        let ranges = [];\n        for (let i = 0; i < tr.mapping.maps.length; i++) {\n            let map = tr.mapping.maps[i];\n            for (let j = 0; j < ranges.length; j++)\n                ranges[j] = map.map(ranges[j]);\n            map.forEach((_s, _e, from, to) => ranges.push(from, to));\n        }\n        // Figure out which joinable points exist inside those ranges,\n        // by checking all node boundaries in their parent nodes.\n        let joinable = [];\n        for (let i = 0; i < ranges.length; i += 2) {\n            let from = ranges[i], to = ranges[i + 1];\n            let $from = tr.doc.resolve(from), depth = $from.sharedDepth(to), parent = $from.node(depth);\n            for (let index = $from.indexAfter(depth), pos = $from.after(depth + 1); pos <= to; ++index) {\n                let after = parent.maybeChild(index);\n                if (!after)\n                    break;\n                if (index && joinable.indexOf(pos) == -1) {\n                    let before = parent.child(index - 1);\n                    if (before.type == after.type && isJoinable(before, after))\n                        joinable.push(pos);\n                }\n                pos += after.nodeSize;\n            }\n        }\n        // Join the joinable points\n        joinable.sort((a, b) => a - b);\n        for (let i = joinable.length - 1; i >= 0; i--) {\n            if (canJoin(tr.doc, joinable[i]))\n                tr.join(joinable[i]);\n        }\n        dispatch(tr);\n    };\n}\n/**\nWrap a command so that, when it produces a transform that causes\ntwo joinable nodes to end up next to each other, those are joined.\nNodes are considered joinable when they are of the same type and\nwhen the `isJoinable` predicate returns true for them or, if an\narray of strings was passed, if their node type name is in that\narray.\n*/\nfunction autoJoin(command, isJoinable) {\n    let canJoin = Array.isArray(isJoinable) ? (node) => isJoinable.indexOf(node.type.name) > -1\n        : isJoinable;\n    return (state, dispatch, view) => command(state, dispatch && wrapDispatchForJoin(dispatch, canJoin), view);\n}\n/**\nCombine a number of command functions into a single function (which\ncalls them one by one until one returns true).\n*/\nfunction chainCommands(...commands) {\n    return function (state, dispatch, view) {\n        for (let i = 0; i < commands.length; i++)\n            if (commands[i](state, dispatch, view))\n                return true;\n        return false;\n    };\n}\nlet backspace = chainCommands(deleteSelection, joinBackward, selectNodeBackward);\nlet del = chainCommands(deleteSelection, joinForward, selectNodeForward);\n/**\nA basic keymap containing bindings not specific to any schema.\nBinds the following keys (when multiple commands are listed, they\nare chained with [`chainCommands`](https://prosemirror.net/docs/ref/#commands.chainCommands)):\n\n* **Enter** to `newlineInCode`, `createParagraphNear`, `liftEmptyBlock`, `splitBlock`\n* **Mod-Enter** to `exitCode`\n* **Backspace** and **Mod-Backspace** to `deleteSelection`, `joinBackward`, `selectNodeBackward`\n* **Delete** and **Mod-Delete** to `deleteSelection`, `joinForward`, `selectNodeForward`\n* **Mod-Delete** to `deleteSelection`, `joinForward`, `selectNodeForward`\n* **Mod-a** to `selectAll`\n*/\nconst pcBaseKeymap = {\n    \"Enter\": chainCommands(newlineInCode, createParagraphNear, liftEmptyBlock, splitBlock),\n    \"Mod-Enter\": exitCode,\n    \"Backspace\": backspace,\n    \"Mod-Backspace\": backspace,\n    \"Shift-Backspace\": backspace,\n    \"Delete\": del,\n    \"Mod-Delete\": del,\n    \"Mod-a\": selectAll\n};\n/**\nA copy of `pcBaseKeymap` that also binds **Ctrl-h** like Backspace,\n**Ctrl-d** like Delete, **Alt-Backspace** like Ctrl-Backspace, and\n**Ctrl-Alt-Backspace**, **Alt-Delete**, and **Alt-d** like\nCtrl-Delete.\n*/\nconst macBaseKeymap = {\n    \"Ctrl-h\": pcBaseKeymap[\"Backspace\"],\n    \"Alt-Backspace\": pcBaseKeymap[\"Mod-Backspace\"],\n    \"Ctrl-d\": pcBaseKeymap[\"Delete\"],\n    \"Ctrl-Alt-Backspace\": pcBaseKeymap[\"Mod-Delete\"],\n    \"Alt-Delete\": pcBaseKeymap[\"Mod-Delete\"],\n    \"Alt-d\": pcBaseKeymap[\"Mod-Delete\"],\n    \"Ctrl-a\": selectTextblockStart,\n    \"Ctrl-e\": selectTextblockEnd\n};\nfor (let key in pcBaseKeymap)\n    macBaseKeymap[key] = pcBaseKeymap[key];\nconst mac = typeof navigator != \"undefined\" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform)\n    // @ts-ignore\n    : typeof os != \"undefined\" && os.platform ? os.platform() == \"darwin\" : false;\n/**\nDepending on the detected platform, this will hold\n[`pcBasekeymap`](https://prosemirror.net/docs/ref/#commands.pcBaseKeymap) or\n[`macBaseKeymap`](https://prosemirror.net/docs/ref/#commands.macBaseKeymap).\n*/\nconst baseKeymap = mac ? macBaseKeymap : pcBaseKeymap;\n\nexport { autoJoin, baseKeymap, chainCommands, createParagraphNear, deleteSelection, exitCode, joinBackward, joinDown, joinForward, joinTextblockBackward, joinTextblockForward, joinUp, lift, liftEmptyBlock, macBaseKeymap, newlineInCode, pcBaseKeymap, selectAll, selectNodeBackward, selectNodeForward, selectParentNode, selectTextblockEnd, selectTextblockStart, setBlockType, splitBlock, splitBlockAs, splitBlockKeepMarks, toggleMark, wrapIn };\n", "import { findWrapping, ReplaceAroundStep, canSplit, liftTarget, canJoin } from 'prosemirror-transform';\nimport { NodeRange, Fragment, Slice } from 'prosemirror-model';\nimport { Selection } from 'prosemirror-state';\n\nconst olDOM = [\"ol\", 0], ulDOM = [\"ul\", 0], liDOM = [\"li\", 0];\n/**\nAn ordered list [node spec](https://prosemirror.net/docs/ref/#model.NodeSpec). Has a single\nattribute, `order`, which determines the number at which the list\nstarts counting, and defaults to 1. Represented as an `<ol>`\nelement.\n*/\nconst orderedList = {\n    attrs: { order: { default: 1 } },\n    parseDOM: [{ tag: \"ol\", getAttrs(dom) {\n                return { order: dom.hasAttribute(\"start\") ? +dom.getAttribute(\"start\") : 1 };\n            } }],\n    toDOM(node) {\n        return node.attrs.order == 1 ? olDOM : [\"ol\", { start: node.attrs.order }, 0];\n    }\n};\n/**\nA bullet list node spec, represented in the DOM as `<ul>`.\n*/\nconst bulletList = {\n    parseDOM: [{ tag: \"ul\" }],\n    toDOM() { return ulDOM; }\n};\n/**\nA list item (`<li>`) spec.\n*/\nconst listItem = {\n    parseDOM: [{ tag: \"li\" }],\n    toDOM() { return liDOM; },\n    defining: true\n};\nfunction add(obj, props) {\n    let copy = {};\n    for (let prop in obj)\n        copy[prop] = obj[prop];\n    for (let prop in props)\n        copy[prop] = props[prop];\n    return copy;\n}\n/**\nConvenience function for adding list-related node types to a map\nspecifying the nodes for a schema. Adds\n[`orderedList`](https://prosemirror.net/docs/ref/#schema-list.orderedList) as `\"ordered_list\"`,\n[`bulletList`](https://prosemirror.net/docs/ref/#schema-list.bulletList) as `\"bullet_list\"`, and\n[`listItem`](https://prosemirror.net/docs/ref/#schema-list.listItem) as `\"list_item\"`.\n\n`itemContent` determines the content expression for the list items.\nIf you want the commands defined in this module to apply to your\nlist structure, it should have a shape like `\"paragraph block*\"` or\n`\"paragraph (ordered_list | bullet_list)*\"`. `listGroup` can be\ngiven to assign a group name to the list node types, for example\n`\"block\"`.\n*/\nfunction addListNodes(nodes, itemContent, listGroup) {\n    return nodes.append({\n        ordered_list: add(orderedList, { content: \"list_item+\", group: listGroup }),\n        bullet_list: add(bulletList, { content: \"list_item+\", group: listGroup }),\n        list_item: add(listItem, { content: itemContent })\n    });\n}\n/**\nReturns a command function that wraps the selection in a list with\nthe given type an attributes. If `dispatch` is null, only return a\nvalue to indicate whether this is possible, but don't actually\nperform the change.\n*/\nfunction wrapInList(listType, attrs = null) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to), doJoin = false, outerRange = range;\n        if (!range)\n            return false;\n        // This is at the top of an existing list item\n        if (range.depth >= 2 && $from.node(range.depth - 1).type.compatibleContent(listType) && range.startIndex == 0) {\n            // Don't do anything if this is the top of the list\n            if ($from.index(range.depth - 1) == 0)\n                return false;\n            let $insert = state.doc.resolve(range.start - 2);\n            outerRange = new NodeRange($insert, $insert, range.depth);\n            if (range.endIndex < range.parent.childCount)\n                range = new NodeRange($from, state.doc.resolve($to.end(range.depth)), range.depth);\n            doJoin = true;\n        }\n        let wrap = findWrapping(outerRange, listType, attrs, range);\n        if (!wrap)\n            return false;\n        if (dispatch)\n            dispatch(doWrapInList(state.tr, range, wrap, doJoin, listType).scrollIntoView());\n        return true;\n    };\n}\nfunction doWrapInList(tr, range, wrappers, joinBefore, listType) {\n    let content = Fragment.empty;\n    for (let i = wrappers.length - 1; i >= 0; i--)\n        content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content));\n    tr.step(new ReplaceAroundStep(range.start - (joinBefore ? 2 : 0), range.end, range.start, range.end, new Slice(content, 0, 0), wrappers.length, true));\n    let found = 0;\n    for (let i = 0; i < wrappers.length; i++)\n        if (wrappers[i].type == listType)\n            found = i + 1;\n    let splitDepth = wrappers.length - found;\n    let splitPos = range.start + wrappers.length - (joinBefore ? 2 : 0), parent = range.parent;\n    for (let i = range.startIndex, e = range.endIndex, first = true; i < e; i++, first = false) {\n        if (!first && canSplit(tr.doc, splitPos, splitDepth)) {\n            tr.split(splitPos, splitDepth);\n            splitPos += 2 * splitDepth;\n        }\n        splitPos += parent.child(i).nodeSize;\n    }\n    return tr;\n}\n/**\nBuild a command that splits a non-empty textblock at the top level\nof a list item by also splitting that list item.\n*/\nfunction splitListItem(itemType) {\n    return function (state, dispatch) {\n        let { $from, $to, node } = state.selection;\n        if ((node && node.isBlock) || $from.depth < 2 || !$from.sameParent($to))\n            return false;\n        let grandParent = $from.node(-1);\n        if (grandParent.type != itemType)\n            return false;\n        if ($from.parent.content.size == 0 && $from.node(-1).childCount == $from.indexAfter(-1)) {\n            // In an empty block. If this is a nested list, the wrapping\n            // list item should be split. Otherwise, bail out and let next\n            // command handle lifting.\n            if ($from.depth == 3 || $from.node(-3).type != itemType ||\n                $from.index(-2) != $from.node(-2).childCount - 1)\n                return false;\n            if (dispatch) {\n                let wrap = Fragment.empty;\n                let depthBefore = $from.index(-1) ? 1 : $from.index(-2) ? 2 : 3;\n                // Build a fragment containing empty versions of the structure\n                // from the outer list item to the parent node of the cursor\n                for (let d = $from.depth - depthBefore; d >= $from.depth - 3; d--)\n                    wrap = Fragment.from($from.node(d).copy(wrap));\n                let depthAfter = $from.indexAfter(-1) < $from.node(-2).childCount ? 1\n                    : $from.indexAfter(-2) < $from.node(-3).childCount ? 2 : 3;\n                // Add a second list item with an empty default start node\n                wrap = wrap.append(Fragment.from(itemType.createAndFill()));\n                let start = $from.before($from.depth - (depthBefore - 1));\n                let tr = state.tr.replace(start, $from.after(-depthAfter), new Slice(wrap, 4 - depthBefore, 0));\n                let sel = -1;\n                tr.doc.nodesBetween(start, tr.doc.content.size, (node, pos) => {\n                    if (sel > -1)\n                        return false;\n                    if (node.isTextblock && node.content.size == 0)\n                        sel = pos + 1;\n                });\n                if (sel > -1)\n                    tr.setSelection(Selection.near(tr.doc.resolve(sel)));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n        let nextType = $to.pos == $from.end() ? grandParent.contentMatchAt(0).defaultType : null;\n        let tr = state.tr.delete($from.pos, $to.pos);\n        let types = nextType ? [null, { type: nextType }] : undefined;\n        if (!canSplit(tr.doc, $from.pos, 2, types))\n            return false;\n        if (dispatch)\n            dispatch(tr.split($from.pos, 2, types).scrollIntoView());\n        return true;\n    };\n}\n/**\nCreate a command to lift the list item around the selection up into\na wrapping list.\n*/\nfunction liftListItem(itemType) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to, node => node.childCount > 0 && node.firstChild.type == itemType);\n        if (!range)\n            return false;\n        if (!dispatch)\n            return true;\n        if ($from.node(range.depth - 1).type == itemType) // Inside a parent list\n            return liftToOuterList(state, dispatch, itemType, range);\n        else // Outer list node\n            return liftOutOfList(state, dispatch, range);\n    };\n}\nfunction liftToOuterList(state, dispatch, itemType, range) {\n    let tr = state.tr, end = range.end, endOfList = range.$to.end(range.depth);\n    if (end < endOfList) {\n        // There are siblings after the lifted items, which must become\n        // children of the last item\n        tr.step(new ReplaceAroundStep(end - 1, endOfList, end, endOfList, new Slice(Fragment.from(itemType.create(null, range.parent.copy())), 1, 0), 1, true));\n        range = new NodeRange(tr.doc.resolve(range.$from.pos), tr.doc.resolve(endOfList), range.depth);\n    }\n    const target = liftTarget(range);\n    if (target == null)\n        return false;\n    tr.lift(range, target);\n    let after = tr.mapping.map(end, -1) - 1;\n    if (canJoin(tr.doc, after))\n        tr.join(after);\n    dispatch(tr.scrollIntoView());\n    return true;\n}\nfunction liftOutOfList(state, dispatch, range) {\n    let tr = state.tr, list = range.parent;\n    // Merge the list items into a single big item\n    for (let pos = range.end, i = range.endIndex - 1, e = range.startIndex; i > e; i--) {\n        pos -= list.child(i).nodeSize;\n        tr.delete(pos - 1, pos + 1);\n    }\n    let $start = tr.doc.resolve(range.start), item = $start.nodeAfter;\n    if (tr.mapping.map(range.end) != range.start + $start.nodeAfter.nodeSize)\n        return false;\n    let atStart = range.startIndex == 0, atEnd = range.endIndex == list.childCount;\n    let parent = $start.node(-1), indexBefore = $start.index(-1);\n    if (!parent.canReplace(indexBefore + (atStart ? 0 : 1), indexBefore + 1, item.content.append(atEnd ? Fragment.empty : Fragment.from(list))))\n        return false;\n    let start = $start.pos, end = start + item.nodeSize;\n    // Strip off the surrounding list. At the sides where we're not at\n    // the end of the list, the existing list is closed. At sides where\n    // this is the end, it is overwritten to its end.\n    tr.step(new ReplaceAroundStep(start - (atStart ? 1 : 0), end + (atEnd ? 1 : 0), start + 1, end - 1, new Slice((atStart ? Fragment.empty : Fragment.from(list.copy(Fragment.empty)))\n        .append(atEnd ? Fragment.empty : Fragment.from(list.copy(Fragment.empty))), atStart ? 0 : 1, atEnd ? 0 : 1), atStart ? 0 : 1));\n    dispatch(tr.scrollIntoView());\n    return true;\n}\n/**\nCreate a command to sink the list item around the selection down\ninto an inner list.\n*/\nfunction sinkListItem(itemType) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to, node => node.childCount > 0 && node.firstChild.type == itemType);\n        if (!range)\n            return false;\n        let startIndex = range.startIndex;\n        if (startIndex == 0)\n            return false;\n        let parent = range.parent, nodeBefore = parent.child(startIndex - 1);\n        if (nodeBefore.type != itemType)\n            return false;\n        if (dispatch) {\n            let nestedBefore = nodeBefore.lastChild && nodeBefore.lastChild.type == parent.type;\n            let inner = Fragment.from(nestedBefore ? itemType.create() : null);\n            let slice = new Slice(Fragment.from(itemType.create(null, Fragment.from(parent.type.create(null, inner)))), nestedBefore ? 3 : 1, 0);\n            let before = range.start, after = range.end;\n            dispatch(state.tr.step(new ReplaceAroundStep(before - (nestedBefore ? 3 : 1), after, before, after, slice, 1, true))\n                .scrollIntoView());\n        }\n        return true;\n    };\n}\n\nexport { addListNodes, bulletList, liftListItem, listItem, orderedList, sinkListItem, splitListItem, wrapInList };\n", "import { EditorState, Transaction } from '@tiptap/pm/state'\n\nexport function createChainableState(config: {\n  transaction: Transaction\n  state: EditorState\n}): EditorState {\n  const { state, transaction } = config\n  let { selection } = transaction\n  let { doc } = transaction\n  let { storedMarks } = transaction\n\n  return {\n    ...state,\n    apply: state.apply.bind(state),\n    applyTransaction: state.applyTransaction.bind(state),\n    filterTransaction: state.filterTransaction,\n    plugins: state.plugins,\n    schema: state.schema,\n    reconfigure: state.reconfigure.bind(state),\n    toJSON: state.toJSON.bind(state),\n    get storedMarks() {\n      return storedMarks\n    },\n    get selection() {\n      return selection\n    },\n    get doc() {\n      return doc\n    },\n    get tr() {\n      selection = transaction.selection\n      doc = transaction.doc\n      storedMarks = transaction.storedMarks\n\n      return transaction\n    },\n  }\n}\n", "import { EditorState, Transaction } from '@tiptap/pm/state'\n\nimport { Editor } from './Editor'\nimport { createChainableState } from './helpers/createChainableState'\nimport {\n  AnyCommands, CanCommands, ChainedCommands, CommandProps, SingleCommands,\n} from './types'\n\nexport class CommandManager {\n  editor: Editor\n\n  rawCommands: AnyCommands\n\n  customState?: EditorState\n\n  constructor(props: { editor: Editor; state?: EditorState }) {\n    this.editor = props.editor\n    this.rawCommands = this.editor.extensionManager.commands\n    this.customState = props.state\n  }\n\n  get hasCustomState(): boolean {\n    return !!this.customState\n  }\n\n  get state(): EditorState {\n    return this.customState || this.editor.state\n  }\n\n  get commands(): SingleCommands {\n    const { rawCommands, editor, state } = this\n    const { view } = editor\n    const { tr } = state\n    const props = this.buildProps(tr)\n\n    return Object.fromEntries(\n      Object.entries(rawCommands).map(([name, command]) => {\n        const method = (...args: any[]) => {\n          const callback = command(...args)(props)\n\n          if (!tr.getMeta('preventDispatch') && !this.hasCustomState) {\n            view.dispatch(tr)\n          }\n\n          return callback\n        }\n\n        return [name, method]\n      }),\n    ) as unknown as SingleCommands\n  }\n\n  get chain(): () => ChainedCommands {\n    return () => this.createChain()\n  }\n\n  get can(): () => CanCommands {\n    return () => this.createCan()\n  }\n\n  public createChain(startTr?: Transaction, shouldDispatch = true): ChainedCommands {\n    const { rawCommands, editor, state } = this\n    const { view } = editor\n    const callbacks: boolean[] = []\n    const hasStartTransaction = !!startTr\n    const tr = startTr || state.tr\n\n    const run = () => {\n      if (\n        !hasStartTransaction\n        && shouldDispatch\n        && !tr.getMeta('preventDispatch')\n        && !this.hasCustomState\n      ) {\n        view.dispatch(tr)\n      }\n\n      return callbacks.every(callback => callback === true)\n    }\n\n    const chain = {\n      ...Object.fromEntries(\n        Object.entries(rawCommands).map(([name, command]) => {\n          const chainedCommand = (...args: never[]) => {\n            const props = this.buildProps(tr, shouldDispatch)\n            const callback = command(...args)(props)\n\n            callbacks.push(callback)\n\n            return chain\n          }\n\n          return [name, chainedCommand]\n        }),\n      ),\n      run,\n    } as unknown as ChainedCommands\n\n    return chain\n  }\n\n  public createCan(startTr?: Transaction): CanCommands {\n    const { rawCommands, state } = this\n    const dispatch = false\n    const tr = startTr || state.tr\n    const props = this.buildProps(tr, dispatch)\n    const formattedCommands = Object.fromEntries(\n      Object.entries(rawCommands).map(([name, command]) => {\n        return [name, (...args: never[]) => command(...args)({ ...props, dispatch: undefined })]\n      }),\n    ) as unknown as SingleCommands\n\n    return {\n      ...formattedCommands,\n      chain: () => this.createChain(tr, dispatch),\n    } as CanCommands\n  }\n\n  public buildProps(tr: Transaction, shouldDispatch = true): CommandProps {\n    const { rawCommands, editor, state } = this\n    const { view } = editor\n\n    if (state.storedMarks) {\n      tr.setStoredMarks(state.storedMarks)\n    }\n\n    const props: CommandProps = {\n      tr,\n      editor,\n      view,\n      state: createChainableState({\n        state,\n        transaction: tr,\n      }),\n      dispatch: shouldDispatch ? () => undefined : undefined,\n      chain: () => this.createChain(tr),\n      can: () => this.createCan(tr),\n      get commands() {\n        return Object.fromEntries(\n          Object.entries(rawCommands).map(([name, command]) => {\n            return [name, (...args: never[]) => command(...args)(props)]\n          }),\n        ) as unknown as SingleCommands\n      },\n    }\n\n    return props\n  }\n}\n", "type StringKeyOf<T> = Extract<keyof T, string>\ntype CallbackType<\n  T extends Record<string, any>,\n  EventName extends StringKeyOf<T>,\n> = T[EventName] extends any[] ? T[EventName] : [T[EventName]]\ntype CallbackFunction<\n  T extends Record<string, any>,\n  EventName extends StringKeyOf<T>,\n> = (...props: CallbackType<T, EventName>) => any\n\nexport class EventEmitter<T extends Record<string, any>> {\n\n  private callbacks: { [key: string]: Function[] } = {}\n\n  public on<EventName extends StringKeyOf<T>>(event: EventName, fn: CallbackFunction<T, EventName>): this {\n    if (!this.callbacks[event]) {\n      this.callbacks[event] = []\n    }\n\n    this.callbacks[event].push(fn)\n\n    return this\n  }\n\n  protected emit<EventName extends StringKeyOf<T>>(event: EventName, ...args: CallbackType<T, EventName>): this {\n    const callbacks = this.callbacks[event]\n\n    if (callbacks) {\n      callbacks.forEach(callback => callback.apply(this, args))\n    }\n\n    return this\n  }\n\n  public off<EventName extends StringKeyOf<T>>(event: EventName, fn?: CallbackFunction<T, EventName>): this {\n    const callbacks = this.callbacks[event]\n\n    if (callbacks) {\n      if (fn) {\n        this.callbacks[event] = callbacks.filter(callback => callback !== fn)\n      } else {\n        delete this.callbacks[event]\n      }\n    }\n\n    return this\n  }\n\n  protected removeAllListeners(): void {\n    this.callbacks = {}\n  }\n}\n", "import { AnyExtension, MaybeThisParameterType, RemoveThis } from '../types'\n\nexport function getExtensionField<T = any>(\n  extension: AnyExtension,\n  field: string,\n  context?: Omit<MaybeThisParameterType<T>, 'parent'>,\n): RemoveThis<T> {\n\n  if (extension.config[field] === undefined && extension.parent) {\n    return getExtensionField(extension.parent, field, context)\n  }\n\n  if (typeof extension.config[field] === 'function') {\n    const value = extension.config[field].bind({\n      ...context,\n      parent: extension.parent\n        ? getExtensionField(extension.parent, field, context)\n        : null,\n    })\n\n    return value\n  }\n\n  return extension.config[field]\n}\n", "import { Extension } from '../Extension'\nimport { Mark } from '../Mark'\nimport { Node } from '../Node'\nimport { Extensions } from '../types'\n\nexport function splitExtensions(extensions: Extensions) {\n  const baseExtensions = extensions.filter(extension => extension.type === 'extension') as Extension[]\n  const nodeExtensions = extensions.filter(extension => extension.type === 'node') as Node[]\n  const markExtensions = extensions.filter(extension => extension.type === 'mark') as Mark[]\n\n  return {\n    baseExtensions,\n    nodeExtensions,\n    markExtensions,\n  }\n}\n", "import { MarkConfig, NodeConfig } from '..'\nimport {\n  AnyConfig,\n  Attribute,\n  Attributes,\n  ExtensionAttribute,\n  Extensions,\n  GlobalAttributes,\n} from '../types'\nimport { getExtensionField } from './getExtensionField'\nimport { splitExtensions } from './splitExtensions'\n\n/**\n * Get a list of all extension attributes defined in `addAttribute` and `addGlobalAttribute`.\n * @param extensions List of extensions\n */\nexport function getAttributesFromExtensions(extensions: Extensions): ExtensionAttribute[] {\n  const extensionAttributes: ExtensionAttribute[] = []\n  const { nodeExtensions, markExtensions } = splitExtensions(extensions)\n  const nodeAndMarkExtensions = [...nodeExtensions, ...markExtensions]\n  const defaultAttribute: Required<Attribute> = {\n    default: null,\n    rendered: true,\n    renderHTML: null,\n    parseHTML: null,\n    keepOnSplit: true,\n    isRequired: false,\n  }\n\n  extensions.forEach(extension => {\n    const context = {\n      name: extension.name,\n      options: extension.options,\n      storage: extension.storage,\n    }\n\n    const addGlobalAttributes = getExtensionField<AnyConfig['addGlobalAttributes']>(\n      extension,\n      'addGlobalAttributes',\n      context,\n    )\n\n    if (!addGlobalAttributes) {\n      return\n    }\n\n    // TODO: remove `as GlobalAttributes`\n    const globalAttributes = addGlobalAttributes() as GlobalAttributes\n\n    globalAttributes.forEach(globalAttribute => {\n      globalAttribute.types.forEach(type => {\n        Object\n          .entries(globalAttribute.attributes)\n          .forEach(([name, attribute]) => {\n            extensionAttributes.push({\n              type,\n              name,\n              attribute: {\n                ...defaultAttribute,\n                ...attribute,\n              },\n            })\n          })\n      })\n    })\n  })\n\n  nodeAndMarkExtensions.forEach(extension => {\n    const context = {\n      name: extension.name,\n      options: extension.options,\n      storage: extension.storage,\n    }\n\n    const addAttributes = getExtensionField<NodeConfig['addAttributes'] | MarkConfig['addAttributes']>(\n      extension,\n      'addAttributes',\n      context,\n    )\n\n    if (!addAttributes) {\n      return\n    }\n\n    // TODO: remove `as Attributes`\n    const attributes = addAttributes() as Attributes\n\n    Object\n      .entries(attributes)\n      .forEach(([name, attribute]) => {\n        const mergedAttr = {\n          ...defaultAttribute,\n          ...attribute,\n        }\n\n        if (typeof mergedAttr?.default === 'function') {\n          mergedAttr.default = mergedAttr.default()\n        }\n\n        if (mergedAttr?.isRequired && mergedAttr?.default === undefined) {\n          delete mergedAttr.default\n        }\n\n        extensionAttributes.push({\n          type: extension.name,\n          name,\n          attribute: mergedAttr,\n        })\n      })\n  })\n\n  return extensionAttributes\n}\n", "import { NodeType, Schema } from '@tiptap/pm/model'\n\nexport function getNodeType(nameOrType: string | NodeType, schema: Schema): NodeType {\n  if (typeof nameOrType === 'string') {\n    if (!schema.nodes[nameOrType]) {\n      throw Error(\n        `There is no node type named '${nameOrType}'. Maybe you forgot to add the extension?`,\n      )\n    }\n\n    return schema.nodes[nameOrType]\n  }\n\n  return nameOrType\n}\n", "export function mergeAttributes(...objects: Record<string, any>[]): Record<string, any> {\n  return objects\n    .filter(item => !!item)\n    .reduce((items, item) => {\n      const mergedAttributes = { ...items }\n\n      Object.entries(item).forEach(([key, value]) => {\n        const exists = mergedAttributes[key]\n\n        if (!exists) {\n          mergedAttributes[key] = value\n\n          return\n        }\n\n        if (key === 'class') {\n          mergedAttributes[key] = [mergedAttributes[key], value].join(' ')\n        } else if (key === 'style') {\n          mergedAttributes[key] = [mergedAttributes[key], value].join('; ')\n        } else {\n          mergedAttributes[key] = value\n        }\n      })\n\n      return mergedAttributes\n    }, {})\n}\n", "import { Mark, Node } from '@tiptap/pm/model'\n\nimport { ExtensionAttribute } from '../types'\nimport { mergeAttributes } from '../utilities/mergeAttributes'\n\nexport function getRenderedAttributes(\n  nodeOrMark: Node | Mark,\n  extensionAttributes: ExtensionAttribute[],\n): Record<string, any> {\n  return extensionAttributes\n    .filter(item => item.attribute.rendered)\n    .map(item => {\n      if (!item.attribute.renderHTML) {\n        return {\n          [item.name]: nodeOrMark.attrs[item.name],\n        }\n      }\n\n      return item.attribute.renderHTML(nodeOrMark.attrs) || {}\n    })\n    .reduce((attributes, attribute) => mergeAttributes(attributes, attribute), {})\n}\n", "export function isFunction(value: any): value is Function {\n  return typeof value === 'function'\n}\n", "import { MaybeReturnType } from '../types'\nimport { isFunction } from './isFunction'\n\n/**\n * Optionally calls `value` as a function.\n * Otherwise it is returned directly.\n * @param value Function or any value.\n * @param context Optional context to bind to function.\n * @param props Optional props to pass to function.\n */\nexport function callOrReturn<T>(value: T, context: any = undefined, ...props: any[]): MaybeReturnType<T> {\n  if (isFunction(value)) {\n    if (context) {\n      return value.bind(context)(...props)\n    }\n\n    return value(...props)\n  }\n\n  return value as MaybeReturnType<T>\n}\n", "export function isEmptyObject(value = {}): boolean {\n  return Object.keys(value).length === 0 && value.constructor === Object\n}\n", "export function fromString(value: any): any {\n  if (typeof value !== 'string') {\n    return value\n  }\n\n  if (value.match(/^[+-]?(?:\\d*\\.)?\\d+$/)) {\n    return Number(value)\n  }\n\n  if (value === 'true') {\n    return true\n  }\n\n  if (value === 'false') {\n    return false\n  }\n\n  return value\n}\n", "import { ParseRule } from '@tiptap/pm/model'\n\nimport { ExtensionAttribute } from '../types'\nimport { fromString } from '../utilities/fromString'\n\n/**\n * This function merges extension attributes into parserule attributes (`attrs` or `getAttrs`).\n * Cancels when `getAttrs` returned `false`.\n * @param parseRule ProseMirror ParseRule\n * @param extensionAttributes List of attributes to inject\n */\nexport function injectExtensionAttributesToParseRule(\n  parseRule: ParseRule,\n  extensionAttributes: ExtensionAttribute[],\n): ParseRule {\n  if (parseRule.style) {\n    return parseRule\n  }\n\n  return {\n    ...parseRule,\n    getAttrs: node => {\n      const oldAttributes = parseRule.getAttrs ? parseRule.getAttrs(node) : parseRule.attrs\n\n      if (oldAttributes === false) {\n        return false\n      }\n\n      const newAttributes = extensionAttributes.reduce((items, item) => {\n        const value = item.attribute.parseHTML\n          ? item.attribute.parseHTML(node as HTMLElement)\n          : fromString((node as HTMLElement).getAttribute(item.name))\n\n        if (value === null || value === undefined) {\n          return items\n        }\n\n        return {\n          ...items,\n          [item.name]: value,\n        }\n      }, {})\n\n      return { ...oldAttributes, ...newAttributes }\n    },\n  }\n}\n", "import { MarkSpec, NodeSpec, Schema } from '@tiptap/pm/model'\n\nimport { Editor, MarkConfig, NodeConfig } from '..'\nimport { AnyConfig, Extensions } from '../types'\nimport { callOrReturn } from '../utilities/callOrReturn'\nimport { isEmptyObject } from '../utilities/isEmptyObject'\nimport { getAttributesFromExtensions } from './getAttributesFromExtensions'\nimport { getExtensionField } from './getExtensionField'\nimport { getRenderedAttributes } from './getRenderedAttributes'\nimport { injectExtensionAttributesToParseRule } from './injectExtensionAttributesToParseRule'\nimport { splitExtensions } from './splitExtensions'\n\nfunction cleanUpSchemaItem<T>(data: T) {\n  return Object.fromEntries(\n    // @ts-ignore\n    Object.entries(data).filter(([key, value]) => {\n      if (key === 'attrs' && isEmptyObject(value as {} | undefined)) {\n        return false\n      }\n\n      return value !== null && value !== undefined\n    }),\n  ) as T\n}\n\nexport function getSchemaByResolvedExtensions(extensions: Extensions, editor?: Editor): Schema {\n  const allAttributes = getAttributesFromExtensions(extensions)\n  const { nodeExtensions, markExtensions } = splitExtensions(extensions)\n  const topNode = nodeExtensions.find(extension => getExtensionField(extension, 'topNode'))?.name\n\n  const nodes = Object.fromEntries(\n    nodeExtensions.map(extension => {\n      const extensionAttributes = allAttributes.filter(\n        attribute => attribute.type === extension.name,\n      )\n      const context = {\n        name: extension.name,\n        options: extension.options,\n        storage: extension.storage,\n        editor,\n      }\n\n      const extraNodeFields = extensions.reduce((fields, e) => {\n        const extendNodeSchema = getExtensionField<AnyConfig['extendNodeSchema']>(\n          e,\n          'extendNodeSchema',\n          context,\n        )\n\n        return {\n          ...fields,\n          ...(extendNodeSchema ? extendNodeSchema(extension) : {}),\n        }\n      }, {})\n\n      const schema: NodeSpec = cleanUpSchemaItem({\n        ...extraNodeFields,\n        content: callOrReturn(\n          getExtensionField<NodeConfig['content']>(extension, 'content', context),\n        ),\n        marks: callOrReturn(getExtensionField<NodeConfig['marks']>(extension, 'marks', context)),\n        group: callOrReturn(getExtensionField<NodeConfig['group']>(extension, 'group', context)),\n        inline: callOrReturn(getExtensionField<NodeConfig['inline']>(extension, 'inline', context)),\n        atom: callOrReturn(getExtensionField<NodeConfig['atom']>(extension, 'atom', context)),\n        selectable: callOrReturn(\n          getExtensionField<NodeConfig['selectable']>(extension, 'selectable', context),\n        ),\n        draggable: callOrReturn(\n          getExtensionField<NodeConfig['draggable']>(extension, 'draggable', context),\n        ),\n        code: callOrReturn(getExtensionField<NodeConfig['code']>(extension, 'code', context)),\n        defining: callOrReturn(\n          getExtensionField<NodeConfig['defining']>(extension, 'defining', context),\n        ),\n        isolating: callOrReturn(\n          getExtensionField<NodeConfig['isolating']>(extension, 'isolating', context),\n        ),\n        attrs: Object.fromEntries(\n          extensionAttributes.map(extensionAttribute => {\n            return [extensionAttribute.name, { default: extensionAttribute?.attribute?.default }]\n          }),\n        ),\n      })\n\n      const parseHTML = callOrReturn(\n        getExtensionField<NodeConfig['parseHTML']>(extension, 'parseHTML', context),\n      )\n\n      if (parseHTML) {\n        schema.parseDOM = parseHTML.map(parseRule => injectExtensionAttributesToParseRule(parseRule, extensionAttributes))\n      }\n\n      const renderHTML = getExtensionField<NodeConfig['renderHTML']>(\n        extension,\n        'renderHTML',\n        context,\n      )\n\n      if (renderHTML) {\n        schema.toDOM = node => renderHTML({\n          node,\n          HTMLAttributes: getRenderedAttributes(node, extensionAttributes),\n        })\n      }\n\n      const renderText = getExtensionField<NodeConfig['renderText']>(\n        extension,\n        'renderText',\n        context,\n      )\n\n      if (renderText) {\n        schema.toText = renderText\n      }\n\n      return [extension.name, schema]\n    }),\n  )\n\n  const marks = Object.fromEntries(\n    markExtensions.map(extension => {\n      const extensionAttributes = allAttributes.filter(\n        attribute => attribute.type === extension.name,\n      )\n      const context = {\n        name: extension.name,\n        options: extension.options,\n        storage: extension.storage,\n        editor,\n      }\n\n      const extraMarkFields = extensions.reduce((fields, e) => {\n        const extendMarkSchema = getExtensionField<AnyConfig['extendMarkSchema']>(\n          e,\n          'extendMarkSchema',\n          context,\n        )\n\n        return {\n          ...fields,\n          ...(extendMarkSchema ? extendMarkSchema(extension) : {}),\n        }\n      }, {})\n\n      const schema: MarkSpec = cleanUpSchemaItem({\n        ...extraMarkFields,\n        inclusive: callOrReturn(\n          getExtensionField<MarkConfig['inclusive']>(extension, 'inclusive', context),\n        ),\n        excludes: callOrReturn(\n          getExtensionField<MarkConfig['excludes']>(extension, 'excludes', context),\n        ),\n        group: callOrReturn(getExtensionField<MarkConfig['group']>(extension, 'group', context)),\n        spanning: callOrReturn(\n          getExtensionField<MarkConfig['spanning']>(extension, 'spanning', context),\n        ),\n        code: callOrReturn(getExtensionField<MarkConfig['code']>(extension, 'code', context)),\n        attrs: Object.fromEntries(\n          extensionAttributes.map(extensionAttribute => {\n            return [extensionAttribute.name, { default: extensionAttribute?.attribute?.default }]\n          }),\n        ),\n      })\n\n      const parseHTML = callOrReturn(\n        getExtensionField<MarkConfig['parseHTML']>(extension, 'parseHTML', context),\n      )\n\n      if (parseHTML) {\n        schema.parseDOM = parseHTML.map(parseRule => injectExtensionAttributesToParseRule(parseRule, extensionAttributes))\n      }\n\n      const renderHTML = getExtensionField<MarkConfig['renderHTML']>(\n        extension,\n        'renderHTML',\n        context,\n      )\n\n      if (renderHTML) {\n        schema.toDOM = mark => renderHTML({\n          mark,\n          HTMLAttributes: getRenderedAttributes(mark, extensionAttributes),\n        })\n      }\n\n      return [extension.name, schema]\n    }),\n  )\n\n  return new Schema({\n    topNode,\n    nodes,\n    marks,\n  })\n}\n", "import { MarkType, NodeType, Schema } from '@tiptap/pm/model'\n\nexport function getSchemaTypeByName(name: string, schema: Schema): NodeType | MarkType | null {\n  return schema.nodes[name] || schema.marks[name] || null\n}\n", "import { AnyExtension, EnableRules } from '../types'\n\nexport function isExtensionRulesEnabled(extension: AnyExtension, enabled: EnableRules): boolean {\n  if (Array.isArray(enabled)) {\n    return enabled.some(enabledExtension => {\n      const name = typeof enabledExtension === 'string'\n        ? enabledExtension\n        : enabledExtension.name\n\n      return name === extension.name\n    })\n  }\n\n  return enabled\n}\n", "import { ResolvedPos } from '@tiptap/pm/model'\n\nexport const getTextContentFromNodes = ($from: ResolvedPos, maxMatch = 500) => {\n  let textBefore = ''\n\n  const sliceEndPos = $from.parentOffset\n\n  $from.parent.nodesBetween(\n    Math.max(0, sliceEndPos - maxMatch),\n    sliceEndPos,\n    (node, pos, parent, index) => {\n      const chunk = node.type.spec.toText?.({\n        node,\n        pos,\n        parent,\n        index,\n      })\n        || node.textContent\n        || '%leaf%'\n\n      textBefore += chunk.slice(0, Math.max(0, sliceEndPos - pos))\n    },\n  )\n\n  return textBefore\n}\n", "export function isRegExp(value: any): value is RegExp {\n  return Object.prototype.toString.call(value) === '[object RegExp]'\n}\n", "import { EditorState, Plugin, TextSelection } from '@tiptap/pm/state'\n\nimport { CommandManager } from './CommandManager'\nimport { Editor } from './Editor'\nimport { createChainableState } from './helpers/createChainableState'\nimport { getTextContentFromNodes } from './helpers/getTextContentFromNodes'\nimport {\n  CanCommands,\n  ChainedCommands,\n  ExtendedRegExpMatchArray,\n  Range,\n  SingleCommands,\n} from './types'\nimport { isRegExp } from './utilities/isRegExp'\n\nexport type InputRuleMatch = {\n  index: number\n  text: string\n  replaceWith?: string\n  match?: RegExpMatchArray\n  data?: Record<string, any>\n}\n\nexport type InputRuleFinder = RegExp | ((text: string) => InputRuleMatch | null)\n\nexport class InputRule {\n  find: InputRuleFinder\n\n  handler: (props: {\n    state: EditorState\n    range: Range\n    match: ExtendedRegExpMatchArray\n    commands: SingleCommands\n    chain: () => ChainedCommands\n    can: () => CanCommands\n  }) => void | null\n\n  constructor(config: {\n    find: InputRuleFinder\n    handler: (props: {\n      state: EditorState\n      range: Range\n      match: ExtendedRegExpMatchArray\n      commands: SingleCommands\n      chain: () => ChainedCommands\n      can: () => CanCommands\n    }) => void | null\n  }) {\n    this.find = config.find\n    this.handler = config.handler\n  }\n}\n\nconst inputRuleMatcherHandler = (\n  text: string,\n  find: InputRuleFinder,\n): ExtendedRegExpMatchArray | null => {\n  if (isRegExp(find)) {\n    return find.exec(text)\n  }\n\n  const inputRuleMatch = find(text)\n\n  if (!inputRuleMatch) {\n    return null\n  }\n\n  const result: ExtendedRegExpMatchArray = [inputRuleMatch.text]\n\n  result.index = inputRuleMatch.index\n  result.input = text\n  result.data = inputRuleMatch.data\n\n  if (inputRuleMatch.replaceWith) {\n    if (!inputRuleMatch.text.includes(inputRuleMatch.replaceWith)) {\n      console.warn(\n        '[tiptap warn]: \"inputRuleMatch.replaceWith\" must be part of \"inputRuleMatch.text\".',\n      )\n    }\n\n    result.push(inputRuleMatch.replaceWith)\n  }\n\n  return result\n}\n\nfunction run(config: {\n  editor: Editor\n  from: number\n  to: number\n  text: string\n  rules: InputRule[]\n  plugin: Plugin\n}): boolean {\n  const {\n    editor, from, to, text, rules, plugin,\n  } = config\n  const { view } = editor\n\n  if (view.composing) {\n    return false\n  }\n\n  const $from = view.state.doc.resolve(from)\n\n  if (\n    // check for code node\n    $from.parent.type.spec.code\n    // check for code mark\n    || !!($from.nodeBefore || $from.nodeAfter)?.marks.find(mark => mark.type.spec.code)\n  ) {\n    return false\n  }\n\n  let matched = false\n\n  const textBefore = getTextContentFromNodes($from) + text\n\n  rules.forEach(rule => {\n    if (matched) {\n      return\n    }\n\n    const match = inputRuleMatcherHandler(textBefore, rule.find)\n\n    if (!match) {\n      return\n    }\n\n    const tr = view.state.tr\n    const state = createChainableState({\n      state: view.state,\n      transaction: tr,\n    })\n    const range = {\n      from: from - (match[0].length - text.length),\n      to,\n    }\n\n    const { commands, chain, can } = new CommandManager({\n      editor,\n      state,\n    })\n\n    const handler = rule.handler({\n      state,\n      range,\n      match,\n      commands,\n      chain,\n      can,\n    })\n\n    // stop if there are no changes\n    if (handler === null || !tr.steps.length) {\n      return\n    }\n\n    // store transform as meta data\n    // so we can undo input rules within the `undoInputRules` command\n    tr.setMeta(plugin, {\n      transform: tr,\n      from,\n      to,\n      text,\n    })\n\n    view.dispatch(tr)\n    matched = true\n  })\n\n  return matched\n}\n\n/**\n * Create an input rules plugin. When enabled, it will cause text\n * input that matches any of the given rules to trigger the rule\u2019s\n * action.\n */\nexport function inputRulesPlugin(props: { editor: Editor; rules: InputRule[] }): Plugin {\n  const { editor, rules } = props\n  const plugin = new Plugin({\n    state: {\n      init() {\n        return null\n      },\n      apply(tr, prev) {\n        const stored = tr.getMeta(plugin)\n\n        if (stored) {\n          return stored\n        }\n\n        return tr.selectionSet || tr.docChanged ? null : prev\n      },\n    },\n\n    props: {\n      handleTextInput(view, from, to, text) {\n        return run({\n          editor,\n          from,\n          to,\n          text,\n          rules,\n          plugin,\n        })\n      },\n\n      handleDOMEvents: {\n        compositionend: view => {\n          setTimeout(() => {\n            const { $cursor } = view.state.selection as TextSelection\n\n            if ($cursor) {\n              run({\n                editor,\n                from: $cursor.pos,\n                to: $cursor.pos,\n                text: '',\n                rules,\n                plugin,\n              })\n            }\n          })\n\n          return false\n        },\n      },\n\n      // add support for input rules to trigger on enter\n      // this is useful for example for code blocks\n      handleKeyDown(view, event) {\n        if (event.key !== 'Enter') {\n          return false\n        }\n\n        const { $cursor } = view.state.selection as TextSelection\n\n        if ($cursor) {\n          return run({\n            editor,\n            from: $cursor.pos,\n            to: $cursor.pos,\n            text: '\\n',\n            rules,\n            plugin,\n          })\n        }\n\n        return false\n      },\n    },\n\n    // @ts-ignore\n    isInputRules: true,\n  }) as Plugin\n\n  return plugin\n}\n", "export function isNumber(value: any): value is number {\n  return typeof value === 'number'\n}\n", "import { EditorState, Plugin } from '@tiptap/pm/state'\n\nimport { CommandManager } from './CommandManager'\nimport { Editor } from './Editor'\nimport { createChainableState } from './helpers/createChainableState'\nimport {\n  CanCommands,\n  ChainedCommands,\n  ExtendedRegExpMatchArray,\n  Range,\n  SingleCommands,\n} from './types'\nimport { isNumber } from './utilities/isNumber'\nimport { isRegExp } from './utilities/isRegExp'\n\nexport type PasteRuleMatch = {\n  index: number\n  text: string\n  replaceWith?: string\n  match?: RegExpMatchArray\n  data?: Record<string, any>\n}\n\nexport type PasteRuleFinder = RegExp | ((text: string) => PasteRuleMatch[] | null | undefined)\n\nexport class PasteRule {\n  find: PasteRuleFinder\n\n  handler: (props: {\n    state: EditorState\n    range: Range\n    match: ExtendedRegExpMatchArray\n    commands: SingleCommands\n    chain: () => ChainedCommands\n    can: () => CanCommands\n  }) => void | null\n\n  constructor(config: {\n    find: PasteRuleFinder\n    handler: (props: {\n      state: EditorState\n      range: Range\n      match: ExtendedRegExpMatchArray\n      commands: SingleCommands\n      chain: () => ChainedCommands\n      can: () => CanCommands\n    }) => void | null\n  }) {\n    this.find = config.find\n    this.handler = config.handler\n  }\n}\n\nconst pasteRuleMatcherHandler = (\n  text: string,\n  find: PasteRuleFinder,\n): ExtendedRegExpMatchArray[] => {\n  if (isRegExp(find)) {\n    return [...text.matchAll(find)]\n  }\n\n  const matches = find(text)\n\n  if (!matches) {\n    return []\n  }\n\n  return matches.map(pasteRuleMatch => {\n    const result: ExtendedRegExpMatchArray = [pasteRuleMatch.text]\n\n    result.index = pasteRuleMatch.index\n    result.input = text\n    result.data = pasteRuleMatch.data\n\n    if (pasteRuleMatch.replaceWith) {\n      if (!pasteRuleMatch.text.includes(pasteRuleMatch.replaceWith)) {\n        console.warn(\n          '[tiptap warn]: \"pasteRuleMatch.replaceWith\" must be part of \"pasteRuleMatch.text\".',\n        )\n      }\n\n      result.push(pasteRuleMatch.replaceWith)\n    }\n\n    return result\n  })\n}\n\nfunction run(config: {\n  editor: Editor\n  state: EditorState\n  from: number\n  to: number\n  rule: PasteRule\n}): boolean {\n  const {\n    editor, state, from, to, rule,\n  } = config\n\n  const { commands, chain, can } = new CommandManager({\n    editor,\n    state,\n  })\n\n  const handlers: (void | null)[] = []\n\n  state.doc.nodesBetween(from, to, (node, pos) => {\n    if (!node.isTextblock || node.type.spec.code) {\n      return\n    }\n\n    const resolvedFrom = Math.max(from, pos)\n    const resolvedTo = Math.min(to, pos + node.content.size)\n    const textToMatch = node.textBetween(resolvedFrom - pos, resolvedTo - pos, undefined, '\\ufffc')\n\n    const matches = pasteRuleMatcherHandler(textToMatch, rule.find)\n\n    matches.forEach(match => {\n      if (match.index === undefined) {\n        return\n      }\n\n      const start = resolvedFrom + match.index + 1\n      const end = start + match[0].length\n      const range = {\n        from: state.tr.mapping.map(start),\n        to: state.tr.mapping.map(end),\n      }\n\n      const handler = rule.handler({\n        state,\n        range,\n        match,\n        commands,\n        chain,\n        can,\n      })\n\n      handlers.push(handler)\n    })\n  })\n\n  const success = handlers.every(handler => handler !== null)\n\n  return success\n}\n\n/**\n * Create an paste rules plugin. When enabled, it will cause pasted\n * text that matches any of the given rules to trigger the rule\u2019s\n * action.\n */\nexport function pasteRulesPlugin(props: { editor: Editor; rules: PasteRule[] }): Plugin[] {\n  const { editor, rules } = props\n  let dragSourceElement: Element | null = null\n  let isPastedFromProseMirror = false\n  let isDroppedFromProseMirror = false\n\n  const plugins = rules.map(rule => {\n    return new Plugin({\n      // we register a global drag handler to track the current drag source element\n      view(view) {\n        const handleDragstart = (event: DragEvent) => {\n          dragSourceElement = view.dom.parentElement?.contains(event.target as Element)\n            ? view.dom.parentElement\n            : null\n        }\n\n        window.addEventListener('dragstart', handleDragstart)\n\n        return {\n          destroy() {\n            window.removeEventListener('dragstart', handleDragstart)\n          },\n        }\n      },\n\n      props: {\n        handleDOMEvents: {\n          drop: view => {\n            isDroppedFromProseMirror = dragSourceElement === view.dom.parentElement\n\n            return false\n          },\n\n          paste: (view, event: Event) => {\n            const html = (event as ClipboardEvent).clipboardData?.getData('text/html')\n\n            isPastedFromProseMirror = !!html?.includes('data-pm-slice')\n\n            return false\n          },\n        },\n      },\n\n      appendTransaction: (transactions, oldState, state) => {\n        const transaction = transactions[0]\n        const isPaste = transaction.getMeta('uiEvent') === 'paste' && !isPastedFromProseMirror\n        const isDrop = transaction.getMeta('uiEvent') === 'drop' && !isDroppedFromProseMirror\n\n        if (!isPaste && !isDrop) {\n          return\n        }\n\n        // stop if there is no changed range\n        const from = oldState.doc.content.findDiffStart(state.doc.content)\n        const to = oldState.doc.content.findDiffEnd(state.doc.content)\n\n        if (!isNumber(from) || !to || from === to.b) {\n          return\n        }\n\n        // build a chainable state\n        // so we can use a single transaction for all paste rules\n        const tr = state.tr\n        const chainableState = createChainableState({\n          state,\n          transaction: tr,\n        })\n\n        const handler = run({\n          editor,\n          state: chainableState,\n          from: Math.max(from - 1, 0),\n          to: to.b - 1,\n          rule,\n        })\n\n        // stop if there are no changes\n        if (!handler || !tr.steps.length) {\n          return\n        }\n\n        return tr\n      },\n    })\n  })\n\n  return plugins\n}\n", "export function findDuplicates(items: any[]): any[] {\n  const filtered = items.filter((el, index) => items.indexOf(el) !== index)\n\n  return [...new Set(filtered)]\n}\n", "import { keymap } from '@tiptap/pm/keymap'\nimport { Node as ProsemirrorNode, Schema } from '@tiptap/pm/model'\nimport { Plugin } from '@tiptap/pm/state'\nimport { Decoration, EditorView } from '@tiptap/pm/view'\n\nimport { Mark, NodeConfig } from '.'\nimport { Editor } from './Editor'\nimport { getAttributesFromExtensions } from './helpers/getAttributesFromExtensions'\nimport { getExtensionField } from './helpers/getExtensionField'\nimport { getNodeType } from './helpers/getNodeType'\nimport { getRenderedAttributes } from './helpers/getRenderedAttributes'\nimport { getSchemaByResolvedExtensions } from './helpers/getSchemaByResolvedExtensions'\nimport { getSchemaTypeByName } from './helpers/getSchemaTypeByName'\nimport { isExtensionRulesEnabled } from './helpers/isExtensionRulesEnabled'\nimport { splitExtensions } from './helpers/splitExtensions'\nimport { inputRulesPlugin } from './InputRule'\nimport { pasteRulesPlugin } from './PasteRule'\nimport { AnyConfig, Extensions, RawCommands } from './types'\nimport { callOrReturn } from './utilities/callOrReturn'\nimport { findDuplicates } from './utilities/findDuplicates'\n\nexport class ExtensionManager {\n  editor: Editor\n\n  schema: Schema\n\n  extensions: Extensions\n\n  splittableMarks: string[] = []\n\n  constructor(extensions: Extensions, editor: Editor) {\n    this.editor = editor\n    this.extensions = ExtensionManager.resolve(extensions)\n    this.schema = getSchemaByResolvedExtensions(this.extensions, editor)\n\n    this.extensions.forEach(extension => {\n      // store extension storage in editor\n      this.editor.extensionStorage[extension.name] = extension.storage\n\n      const context = {\n        name: extension.name,\n        options: extension.options,\n        storage: extension.storage,\n        editor: this.editor,\n        type: getSchemaTypeByName(extension.name, this.schema),\n      }\n\n      if (extension.type === 'mark') {\n        const keepOnSplit = callOrReturn(getExtensionField(extension, 'keepOnSplit', context)) ?? true\n\n        if (keepOnSplit) {\n          this.splittableMarks.push(extension.name)\n        }\n      }\n\n      const onBeforeCreate = getExtensionField<AnyConfig['onBeforeCreate']>(\n        extension,\n        'onBeforeCreate',\n        context,\n      )\n\n      if (onBeforeCreate) {\n        this.editor.on('beforeCreate', onBeforeCreate)\n      }\n\n      const onCreate = getExtensionField<AnyConfig['onCreate']>(extension, 'onCreate', context)\n\n      if (onCreate) {\n        this.editor.on('create', onCreate)\n      }\n\n      const onUpdate = getExtensionField<AnyConfig['onUpdate']>(extension, 'onUpdate', context)\n\n      if (onUpdate) {\n        this.editor.on('update', onUpdate)\n      }\n\n      const onSelectionUpdate = getExtensionField<AnyConfig['onSelectionUpdate']>(\n        extension,\n        'onSelectionUpdate',\n        context,\n      )\n\n      if (onSelectionUpdate) {\n        this.editor.on('selectionUpdate', onSelectionUpdate)\n      }\n\n      const onTransaction = getExtensionField<AnyConfig['onTransaction']>(\n        extension,\n        'onTransaction',\n        context,\n      )\n\n      if (onTransaction) {\n        this.editor.on('transaction', onTransaction)\n      }\n\n      const onFocus = getExtensionField<AnyConfig['onFocus']>(extension, 'onFocus', context)\n\n      if (onFocus) {\n        this.editor.on('focus', onFocus)\n      }\n\n      const onBlur = getExtensionField<AnyConfig['onBlur']>(extension, 'onBlur', context)\n\n      if (onBlur) {\n        this.editor.on('blur', onBlur)\n      }\n\n      const onDestroy = getExtensionField<AnyConfig['onDestroy']>(extension, 'onDestroy', context)\n\n      if (onDestroy) {\n        this.editor.on('destroy', onDestroy)\n      }\n    })\n  }\n\n  static resolve(extensions: Extensions): Extensions {\n    const resolvedExtensions = ExtensionManager.sort(ExtensionManager.flatten(extensions))\n    const duplicatedNames = findDuplicates(resolvedExtensions.map(extension => extension.name))\n\n    if (duplicatedNames.length) {\n      console.warn(\n        `[tiptap warn]: Duplicate extension names found: [${duplicatedNames\n          .map(item => `'${item}'`)\n          .join(', ')}]. This can lead to issues.`,\n      )\n    }\n\n    return resolvedExtensions\n  }\n\n  static flatten(extensions: Extensions): Extensions {\n    return (\n      extensions\n        .map(extension => {\n          const context = {\n            name: extension.name,\n            options: extension.options,\n            storage: extension.storage,\n          }\n\n          const addExtensions = getExtensionField<AnyConfig['addExtensions']>(\n            extension,\n            'addExtensions',\n            context,\n          )\n\n          if (addExtensions) {\n            return [extension, ...this.flatten(addExtensions())]\n          }\n\n          return extension\n        })\n        // `Infinity` will break TypeScript so we set a number that is probably high enough\n        .flat(10)\n    )\n  }\n\n  static sort(extensions: Extensions): Extensions {\n    const defaultPriority = 100\n\n    return extensions.sort((a, b) => {\n      const priorityA = getExtensionField<AnyConfig['priority']>(a, 'priority') || defaultPriority\n      const priorityB = getExtensionField<AnyConfig['priority']>(b, 'priority') || defaultPriority\n\n      if (priorityA > priorityB) {\n        return -1\n      }\n\n      if (priorityA < priorityB) {\n        return 1\n      }\n\n      return 0\n    })\n  }\n\n  get commands(): RawCommands {\n    return this.extensions.reduce((commands, extension) => {\n      const context = {\n        name: extension.name,\n        options: extension.options,\n        storage: extension.storage,\n        editor: this.editor,\n        type: getSchemaTypeByName(extension.name, this.schema),\n      }\n\n      const addCommands = getExtensionField<AnyConfig['addCommands']>(\n        extension,\n        'addCommands',\n        context,\n      )\n\n      if (!addCommands) {\n        return commands\n      }\n\n      return {\n        ...commands,\n        ...addCommands(),\n      }\n    }, {} as RawCommands)\n  }\n\n  get plugins(): Plugin[] {\n    const { editor } = this\n\n    // With ProseMirror, first plugins within an array are executed first.\n    // In Tiptap, we provide the ability to override plugins,\n    // so it feels more natural to run plugins at the end of an array first.\n    // That\u2019s why we have to reverse the `extensions` array and sort again\n    // based on the `priority` option.\n    const extensions = ExtensionManager.sort([...this.extensions].reverse())\n\n    const inputRules: any[] = []\n    const pasteRules: any[] = []\n\n    const allPlugins = extensions\n      .map(extension => {\n        const context = {\n          name: extension.name,\n          options: extension.options,\n          storage: extension.storage,\n          editor,\n          type: getSchemaTypeByName(extension.name, this.schema),\n        }\n\n        const plugins: Plugin[] = []\n\n        const addKeyboardShortcuts = getExtensionField<AnyConfig['addKeyboardShortcuts']>(\n          extension,\n          'addKeyboardShortcuts',\n          context,\n        )\n\n        let defaultBindings: Record<string, () => boolean> = {}\n\n        // bind exit handling\n        if (extension.type === 'mark' && extension.config.exitable) {\n          defaultBindings.ArrowRight = () => Mark.handleExit({ editor, mark: extension as Mark })\n        }\n\n        if (addKeyboardShortcuts) {\n          const bindings = Object.fromEntries(\n            Object.entries(addKeyboardShortcuts()).map(([shortcut, method]) => {\n              return [shortcut, () => method({ editor })]\n            }),\n          )\n\n          defaultBindings = { ...defaultBindings, ...bindings }\n        }\n\n        const keyMapPlugin = keymap(defaultBindings)\n\n        plugins.push(keyMapPlugin)\n\n        const addInputRules = getExtensionField<AnyConfig['addInputRules']>(\n          extension,\n          'addInputRules',\n          context,\n        )\n\n        if (isExtensionRulesEnabled(extension, editor.options.enableInputRules) && addInputRules) {\n          inputRules.push(...addInputRules())\n        }\n\n        const addPasteRules = getExtensionField<AnyConfig['addPasteRules']>(\n          extension,\n          'addPasteRules',\n          context,\n        )\n\n        if (isExtensionRulesEnabled(extension, editor.options.enablePasteRules) && addPasteRules) {\n          pasteRules.push(...addPasteRules())\n        }\n\n        const addProseMirrorPlugins = getExtensionField<AnyConfig['addProseMirrorPlugins']>(\n          extension,\n          'addProseMirrorPlugins',\n          context,\n        )\n\n        if (addProseMirrorPlugins) {\n          const proseMirrorPlugins = addProseMirrorPlugins()\n\n          plugins.push(...proseMirrorPlugins)\n        }\n\n        return plugins\n      })\n      .flat()\n\n    return [\n      inputRulesPlugin({\n        editor,\n        rules: inputRules,\n      }),\n      ...pasteRulesPlugin({\n        editor,\n        rules: pasteRules,\n      }),\n      ...allPlugins,\n    ]\n  }\n\n  get attributes() {\n    return getAttributesFromExtensions(this.extensions)\n  }\n\n  get nodeViews() {\n    const { editor } = this\n    const { nodeExtensions } = splitExtensions(this.extensions)\n\n    return Object.fromEntries(\n      nodeExtensions\n        .filter(extension => !!getExtensionField(extension, 'addNodeView'))\n        .map(extension => {\n          const extensionAttributes = this.attributes.filter(\n            attribute => attribute.type === extension.name,\n          )\n          const context = {\n            name: extension.name,\n            options: extension.options,\n            storage: extension.storage,\n            editor,\n            type: getNodeType(extension.name, this.schema),\n          }\n          const addNodeView = getExtensionField<NodeConfig['addNodeView']>(\n            extension,\n            'addNodeView',\n            context,\n          )\n\n          if (!addNodeView) {\n            return []\n          }\n\n          const nodeview = (\n            node: ProsemirrorNode,\n            view: EditorView,\n            getPos: (() => number) | boolean,\n            decorations: Decoration[],\n          ) => {\n            const HTMLAttributes = getRenderedAttributes(node, extensionAttributes)\n\n            return addNodeView()({\n              editor,\n              node,\n              getPos,\n              decorations,\n              HTMLAttributes,\n              extension,\n            })\n          }\n\n          return [extension.name, nodeview]\n        }),\n    )\n  }\n}\n", "// see: https://github.com/mesqueeb/is-what/blob/88d6e4ca92fb2baab6003c54e02eedf4e729e5ab/src/index.ts\n\nfunction getType(value: any): string {\n  return Object.prototype.toString.call(value).slice(8, -1)\n}\n\nexport function isPlainObject(value: any): value is Record<string, any> {\n  if (getType(value) !== 'Object') {\n    return false\n  }\n\n  return value.constructor === Object && Object.getPrototypeOf(value) === Object.prototype\n}\n", "import { isPlainObject } from './isPlainObject'\n\nexport function mergeDeep(target: Record<string, any>, source: Record<string, any>): Record<string, any> {\n  const output = { ...target }\n\n  if (isPlainObject(target) && isPlainObject(source)) {\n    Object.keys(source).forEach(key => {\n      if (isPlainObject(source[key])) {\n        if (!(key in target)) {\n          Object.assign(output, { [key]: source[key] })\n        } else {\n          output[key] = mergeDeep(target[key], source[key])\n        }\n      } else {\n        Object.assign(output, { [key]: source[key] })\n      }\n    })\n  }\n\n  return output\n}\n", "import { Plugin, Transaction } from '@tiptap/pm/state'\n\nimport { ExtensionConfig } from '.'\nimport { Editor } from './Editor'\nimport { getExtensionField } from './helpers/getExtensionField'\nimport { InputRule } from './InputRule'\nimport { Mark } from './Mark'\nimport { Node } from './Node'\nimport { PasteRule } from './PasteRule'\nimport {\n  AnyConfig,\n  Extensions,\n  GlobalAttributes,\n  KeyboardShortcutCommand,\n  ParentConfig,\n  RawCommands,\n} from './types'\nimport { callOrReturn } from './utilities/callOrReturn'\nimport { mergeDeep } from './utilities/mergeDeep'\n\ndeclare module '@tiptap/core' {\n  interface ExtensionConfig<Options = any, Storage = any> {\n    [key: string]: any\n\n    /**\n     * Name\n     */\n    name: string\n\n    /**\n     * Priority\n     */\n    priority?: number\n\n    /**\n     * Default options\n     */\n    defaultOptions?: Options\n\n    /**\n     * Default Options\n     */\n    addOptions?: (this: {\n      name: string\n      parent: Exclude<ParentConfig<ExtensionConfig<Options, Storage>>['addOptions'], undefined>\n    }) => Options\n\n    /**\n     * Default Storage\n     */\n    addStorage?: (this: {\n      name: string\n      options: Options\n      parent: Exclude<ParentConfig<ExtensionConfig<Options, Storage>>['addStorage'], undefined>\n    }) => Storage\n\n    /**\n     * Global attributes\n     */\n    addGlobalAttributes?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<ExtensionConfig<Options, Storage>>['addGlobalAttributes']\n    }) => GlobalAttributes | {}\n\n    /**\n     * Raw\n     */\n    addCommands?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      parent: ParentConfig<ExtensionConfig<Options, Storage>>['addCommands']\n    }) => Partial<RawCommands>\n\n    /**\n     * Keyboard shortcuts\n     */\n    addKeyboardShortcuts?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      parent: ParentConfig<ExtensionConfig<Options, Storage>>['addKeyboardShortcuts']\n    }) => {\n      [key: string]: KeyboardShortcutCommand\n    }\n\n    /**\n     * Input rules\n     */\n    addInputRules?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      parent: ParentConfig<ExtensionConfig<Options, Storage>>['addInputRules']\n    }) => InputRule[]\n\n    /**\n     * Paste rules\n     */\n    addPasteRules?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      parent: ParentConfig<ExtensionConfig<Options, Storage>>['addPasteRules']\n    }) => PasteRule[]\n\n    /**\n     * ProseMirror plugins\n     */\n    addProseMirrorPlugins?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      parent: ParentConfig<ExtensionConfig<Options, Storage>>['addProseMirrorPlugins']\n    }) => Plugin[]\n\n    /**\n     * Extensions\n     */\n    addExtensions?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<ExtensionConfig<Options, Storage>>['addExtensions']\n    }) => Extensions\n\n    /**\n     * Extend Node Schema\n     */\n    extendNodeSchema?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<ExtensionConfig<Options, Storage>>['extendNodeSchema']\n          },\n          extension: Node,\n        ) => Record<string, any>)\n      | null\n\n    /**\n     * Extend Mark Schema\n     */\n    extendMarkSchema?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<ExtensionConfig<Options, Storage>>['extendMarkSchema']\n          },\n          extension: Mark,\n        ) => Record<string, any>)\n      | null\n\n    /**\n     * The editor is not ready yet.\n     */\n    onBeforeCreate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          parent: ParentConfig<ExtensionConfig<Options, Storage>>['onBeforeCreate']\n        }) => void)\n      | null\n\n    /**\n     * The editor is ready.\n     */\n    onCreate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          parent: ParentConfig<ExtensionConfig<Options, Storage>>['onCreate']\n        }) => void)\n      | null\n\n    /**\n     * The content has changed.\n     */\n    onUpdate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          parent: ParentConfig<ExtensionConfig<Options, Storage>>['onUpdate']\n        }) => void)\n      | null\n\n    /**\n     * The selection has changed.\n     */\n    onSelectionUpdate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          parent: ParentConfig<ExtensionConfig<Options, Storage>>['onSelectionUpdate']\n        }) => void)\n      | null\n\n    /**\n     * The editor state has changed.\n     */\n    onTransaction?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            parent: ParentConfig<ExtensionConfig<Options, Storage>>['onTransaction']\n          },\n          props: {\n            transaction: Transaction\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor is focused.\n     */\n    onFocus?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            parent: ParentConfig<ExtensionConfig<Options, Storage>>['onFocus']\n          },\n          props: {\n            event: FocusEvent\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor isn\u2019t focused anymore.\n     */\n    onBlur?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            parent: ParentConfig<ExtensionConfig<Options, Storage>>['onBlur']\n          },\n          props: {\n            event: FocusEvent\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor is destroyed.\n     */\n    onDestroy?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          parent: ParentConfig<ExtensionConfig<Options, Storage>>['onDestroy']\n        }) => void)\n      | null\n  }\n}\n\nexport class Extension<Options = any, Storage = any> {\n  type = 'extension'\n\n  name = 'extension'\n\n  parent: Extension | null = null\n\n  child: Extension | null = null\n\n  options: Options\n\n  storage: Storage\n\n  config: ExtensionConfig = {\n    name: this.name,\n    defaultOptions: {},\n  }\n\n  constructor(config: Partial<ExtensionConfig<Options, Storage>> = {}) {\n    this.config = {\n      ...this.config,\n      ...config,\n    }\n\n    this.name = this.config.name\n\n    if (config.defaultOptions) {\n      console.warn(\n        `[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${this.name}\".`,\n      )\n    }\n\n    // TODO: remove `addOptions` fallback\n    this.options = this.config.defaultOptions\n\n    if (this.config.addOptions) {\n      this.options = callOrReturn(\n        getExtensionField<AnyConfig['addOptions']>(this, 'addOptions', {\n          name: this.name,\n        }),\n      )\n    }\n\n    this.storage = callOrReturn(\n      getExtensionField<AnyConfig['addStorage']>(this, 'addStorage', {\n        name: this.name,\n        options: this.options,\n      }),\n    ) || {}\n  }\n\n  static create<O = any, S = any>(config: Partial<ExtensionConfig<O, S>> = {}) {\n    return new Extension<O, S>(config)\n  }\n\n  configure(options: Partial<Options> = {}) {\n    // return a new instance so we can use the same extension\n    // with different calls of `configure`\n    const extension = this.extend()\n\n    extension.options = mergeDeep(this.options as Record<string, any>, options) as Options\n\n    extension.storage = callOrReturn(\n      getExtensionField<AnyConfig['addStorage']>(extension, 'addStorage', {\n        name: extension.name,\n        options: extension.options,\n      }),\n    )\n\n    return extension\n  }\n\n  extend<ExtendedOptions = Options, ExtendedStorage = Storage>(\n    extendedConfig: Partial<ExtensionConfig<ExtendedOptions, ExtendedStorage>> = {},\n  ) {\n    const extension = new Extension<ExtendedOptions, ExtendedStorage>(extendedConfig)\n\n    extension.parent = this\n\n    this.child = extension\n\n    extension.name = extendedConfig.name ? extendedConfig.name : extension.parent.name\n\n    if (extendedConfig.defaultOptions) {\n      console.warn(\n        `[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${extension.name}\".`,\n      )\n    }\n\n    extension.options = callOrReturn(\n      getExtensionField<AnyConfig['addOptions']>(extension, 'addOptions', {\n        name: extension.name,\n      }),\n    )\n\n    extension.storage = callOrReturn(\n      getExtensionField<AnyConfig['addStorage']>(extension, 'addStorage', {\n        name: extension.name,\n        options: extension.options,\n      }),\n    )\n\n    return extension\n  }\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\n\nimport { Range, TextSerializer } from '../types'\n\nexport function getTextBetween(\n  startNode: ProseMirrorNode,\n  range: Range,\n  options?: {\n    blockSeparator?: string\n    textSerializers?: Record<string, TextSerializer>\n  },\n): string {\n  const { from, to } = range\n  const { blockSeparator = '\\n\\n', textSerializers = {} } = options || {}\n  let text = ''\n  let separated = true\n\n  startNode.nodesBetween(from, to, (node, pos, parent, index) => {\n    const textSerializer = textSerializers?.[node.type.name]\n\n    if (textSerializer) {\n      if (node.isBlock && !separated) {\n        text += blockSeparator\n        separated = true\n      }\n\n      if (parent) {\n        text += textSerializer({\n          node,\n          pos,\n          parent,\n          index,\n          range,\n        })\n      }\n    } else if (node.isText) {\n      text += node?.text?.slice(Math.max(from, pos) - pos, to - pos) // eslint-disable-line\n      separated = false\n    } else if (node.isBlock && !separated) {\n      text += blockSeparator\n      separated = true\n    }\n  })\n\n  return text\n}\n", "import { Schema } from '@tiptap/pm/model'\n\nimport { TextSerializer } from '../types'\n\nexport function getTextSerializersFromSchema(schema: Schema): Record<string, TextSerializer> {\n  return Object.fromEntries(\n    Object.entries(schema.nodes)\n      .filter(([, node]) => node.spec.toText)\n      .map(([name, node]) => [name, node.spec.toText]),\n  )\n}\n", "import { Plugin, PluginKey } from '@tiptap/pm/state'\n\nimport { Extension } from '../Extension'\nimport { getTextBetween } from '../helpers/getTextBetween'\nimport { getTextSerializersFromSchema } from '../helpers/getTextSerializersFromSchema'\n\nexport const ClipboardTextSerializer = Extension.create({\n  name: 'clipboardTextSerializer',\n\n  addProseMirrorPlugins() {\n    return [\n      new Plugin({\n        key: new PluginKey('clipboardTextSerializer'),\n        props: {\n          clipboardTextSerializer: () => {\n            const { editor } = this\n            const { state, schema } = editor\n            const { doc, selection } = state\n            const { ranges } = selection\n            const from = Math.min(...ranges.map(range => range.$from.pos))\n            const to = Math.max(...ranges.map(range => range.$to.pos))\n            const textSerializers = getTextSerializersFromSchema(schema)\n            const range = { from, to }\n\n            return getTextBetween(doc, range, {\n              textSerializers,\n            })\n          },\n        },\n      }),\n    ]\n  },\n})\n", "import { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    blur: {\n      /**\n       * Removes focus from the editor.\n       */\n      blur: () => ReturnType,\n    }\n  }\n}\n\nexport const blur: RawCommands['blur'] = () => ({ editor, view }) => {\n  requestAnimationFrame(() => {\n    if (!editor.isDestroyed) {\n      (view.dom as HTMLElement).blur()\n\n      // Browsers should remove the caret on blur but safari does not.\n      // See: https://github.com/ueberdosis/tiptap/issues/2405\n      window?.getSelection()?.removeAllRanges()\n    }\n  })\n\n  return true\n}\n", "import { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    clearContent: {\n      /**\n       * Clear the whole document.\n       */\n      clearContent: (emitUpdate?: boolean) => ReturnType,\n    }\n  }\n}\n\nexport const clearContent: RawCommands['clearContent'] = (emitUpdate = false) => ({ commands }) => {\n  return commands.setContent('', emitUpdate)\n}\n", "import { liftTarget } from '@tiptap/pm/transform'\n\nimport { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    clearNodes: {\n      /**\n       * Normalize nodes to a simple paragraph.\n       */\n      clearNodes: () => ReturnType,\n    }\n  }\n}\n\nexport const clearNodes: RawCommands['clearNodes'] = () => ({ state, tr, dispatch }) => {\n  const { selection } = tr\n  const { ranges } = selection\n\n  if (!dispatch) {\n    return true\n  }\n\n  ranges.forEach(({ $from, $to }) => {\n    state.doc.nodesBetween($from.pos, $to.pos, (node, pos) => {\n      if (node.type.isText) {\n        return\n      }\n\n      const { doc, mapping } = tr\n      const $mappedFrom = doc.resolve(mapping.map(pos))\n      const $mappedTo = doc.resolve(mapping.map(pos + node.nodeSize))\n      const nodeRange = $mappedFrom.blockRange($mappedTo)\n\n      if (!nodeRange) {\n        return\n      }\n\n      const targetLiftDepth = liftTarget(nodeRange)\n\n      if (node.type.isTextblock) {\n        const { defaultType } = $mappedFrom.parent.contentMatchAt($mappedFrom.index())\n\n        tr.setNodeMarkup(nodeRange.start, defaultType)\n      }\n\n      if (targetLiftDepth || targetLiftDepth === 0) {\n        tr.lift(nodeRange, targetLiftDepth)\n      }\n    })\n  })\n\n  return true\n}\n", "import { Command, RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    command: {\n      /**\n       * Define a command inline.\n       */\n      command: (fn: (props: Parameters<Command>[0]) => boolean) => ReturnType,\n    }\n  }\n}\n\nexport const command: RawCommands['command'] = fn => props => {\n  return fn(props)\n}\n", "import { createParagraphNear as originalCreateParagraphNear } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    createParagraphNear: {\n      /**\n       * Create a paragraph nearby.\n       */\n      createParagraphNear: () => ReturnType\n    }\n  }\n}\n\nexport const createParagraphNear: RawCommands['createParagraphNear'] = () => ({ state, dispatch }) => {\n  return originalCreateParagraphNear(state, dispatch)\n}\n", "import { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    deleteCurrentNode: {\n      /**\n       * Delete the node that currently has the selection anchor.\n       */\n      deleteCurrentNode: () => ReturnType,\n    }\n  }\n}\n\nexport const deleteCurrentNode: RawCommands['deleteCurrentNode'] = () => ({ tr, dispatch }) => {\n  const { selection } = tr\n  const currentNode = selection.$anchor.node()\n\n  // if there is content inside the current node, break out of this command\n  if (currentNode.content.size > 0) {\n    return false\n  }\n\n  const $pos = tr.selection.$anchor\n\n  for (let depth = $pos.depth; depth > 0; depth -= 1) {\n    const node = $pos.node(depth)\n\n    if (node.type === currentNode.type) {\n      if (dispatch) {\n        const from = $pos.before(depth)\n        const to = $pos.after(depth)\n\n        tr.delete(from, to).scrollIntoView()\n      }\n\n      return true\n    }\n  }\n\n  return false\n}\n", "import { NodeType } from '@tiptap/pm/model'\n\nimport { getNodeType } from '../helpers/getNodeType'\nimport { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    deleteNode: {\n      /**\n       * Delete a node.\n       */\n      deleteNode: (typeOrName: string | NodeType) => ReturnType,\n    }\n  }\n}\n\nexport const deleteNode: RawCommands['deleteNode'] = typeOrName => ({ tr, state, dispatch }) => {\n  const type = getNodeType(typeOrName, state.schema)\n  const $pos = tr.selection.$anchor\n\n  for (let depth = $pos.depth; depth > 0; depth -= 1) {\n    const node = $pos.node(depth)\n\n    if (node.type === type) {\n      if (dispatch) {\n        const from = $pos.before(depth)\n        const to = $pos.after(depth)\n\n        tr.delete(from, to).scrollIntoView()\n      }\n\n      return true\n    }\n  }\n\n  return false\n}\n", "import { Range, RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    deleteRange: {\n      /**\n       * Delete a given range.\n       */\n      deleteRange: (range: Range) => ReturnType,\n    }\n  }\n}\n\nexport const deleteRange: RawCommands['deleteRange'] = range => ({ tr, dispatch }) => {\n  const { from, to } = range\n\n  if (dispatch) {\n    tr.delete(from, to)\n  }\n\n  return true\n}\n", "import { deleteSelection as originalDeleteSelection } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    deleteSelection: {\n      /**\n       * Delete the selection, if there is one.\n       */\n      deleteSelection: () => ReturnType\n    }\n  }\n}\n\nexport const deleteSelection: RawCommands['deleteSelection'] = () => ({ state, dispatch }) => {\n  return originalDeleteSelection(state, dispatch)\n}\n", "import { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    enter: {\n      /**\n       * Trigger enter.\n       */\n      enter: () => ReturnType,\n    }\n  }\n}\n\nexport const enter: RawCommands['enter'] = () => ({ commands }) => {\n  return commands.keyboardShortcut('Enter')\n}\n", "import { exitCode as originalExitCode } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    exitCode: {\n      /**\n       * Exit from a code block.\n       */\n      exitCode: () => ReturnType\n    }\n  }\n}\n\nexport const exitCode: RawCommands['exitCode'] = () => ({ state, dispatch }) => {\n  return originalExitCode(state, dispatch)\n}\n", "import { isRegExp } from './isRegExp'\n\n/**\n * Check if object1 includes object2\n * @param object1 Object\n * @param object2 Object\n */\nexport function objectIncludes(\n  object1: Record<string, any>,\n  object2: Record<string, any>,\n  options: { strict: boolean } = { strict: true },\n): boolean {\n  const keys = Object.keys(object2)\n\n  if (!keys.length) {\n    return true\n  }\n\n  return keys.every(key => {\n    if (options.strict) {\n      return object2[key] === object1[key]\n    }\n\n    if (isRegExp(object2[key])) {\n      return object2[key].test(object1[key])\n    }\n\n    return object2[key] === object1[key]\n  })\n}\n", "import { Mark as ProseMirrorMark, MarkType, ResolvedPos } from '@tiptap/pm/model'\n\nimport { Range } from '../types'\nimport { objectIncludes } from '../utilities/objectIncludes'\n\nfunction findMarkInSet(\n  marks: ProseMirrorMark[],\n  type: MarkType,\n  attributes: Record<string, any> = {},\n): ProseMirrorMark | undefined {\n  return marks.find(item => {\n    return item.type === type && objectIncludes(item.attrs, attributes)\n  })\n}\n\nfunction isMarkInSet(\n  marks: ProseMirrorMark[],\n  type: MarkType,\n  attributes: Record<string, any> = {},\n): boolean {\n  return !!findMarkInSet(marks, type, attributes)\n}\n\nexport function getMarkRange(\n  $pos: ResolvedPos,\n  type: MarkType,\n  attributes: Record<string, any> = {},\n): Range | void {\n  if (!$pos || !type) {\n    return\n  }\n\n  let start = $pos.parent.childAfter($pos.parentOffset)\n\n  if ($pos.parentOffset === start.offset && start.offset !== 0) {\n    start = $pos.parent.childBefore($pos.parentOffset)\n  }\n\n  if (!start.node) {\n    return\n  }\n\n  const mark = findMarkInSet([...start.node.marks], type, attributes)\n\n  if (!mark) {\n    return\n  }\n\n  let startIndex = start.index\n  let startPos = $pos.start() + start.offset\n  let endIndex = startIndex + 1\n  let endPos = startPos + start.node.nodeSize\n\n  findMarkInSet([...start.node.marks], type, attributes)\n\n  while (startIndex > 0 && mark.isInSet($pos.parent.child(startIndex - 1).marks)) {\n    startIndex -= 1\n    startPos -= $pos.parent.child(startIndex).nodeSize\n  }\n\n  while (\n    endIndex < $pos.parent.childCount\n    && isMarkInSet([...$pos.parent.child(endIndex).marks], type, attributes)\n  ) {\n    endPos += $pos.parent.child(endIndex).nodeSize\n    endIndex += 1\n  }\n\n  return {\n    from: startPos,\n    to: endPos,\n  }\n}\n", "import { MarkType, Schema } from '@tiptap/pm/model'\n\nexport function getMarkType(nameOrType: string | MarkType, schema: Schema): MarkType {\n  if (typeof nameOrType === 'string') {\n    if (!schema.marks[nameOrType]) {\n      throw Error(\n        `There is no mark type named '${nameOrType}'. Maybe you forgot to add the extension?`,\n      )\n    }\n\n    return schema.marks[nameOrType]\n  }\n\n  return nameOrType\n}\n", "import { MarkType } from '@tiptap/pm/model'\nimport { TextSelection } from '@tiptap/pm/state'\n\nimport { getMarkRange } from '../helpers/getMarkRange'\nimport { getMarkType } from '../helpers/getMarkType'\nimport { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    extendMarkRange: {\n      /**\n       * Extends the text selection to the current mark.\n       */\n      extendMarkRange: (\n        typeOrName: string | MarkType,\n        attributes?: Record<string, any>,\n      ) => ReturnType\n    }\n  }\n}\n\nexport const extendMarkRange: RawCommands['extendMarkRange'] = (typeOrName, attributes = {}) => ({ tr, state, dispatch }) => {\n  const type = getMarkType(typeOrName, state.schema)\n  const { doc, selection } = tr\n  const { $from, from, to } = selection\n\n  if (dispatch) {\n    const range = getMarkRange($from, type, attributes)\n\n    if (range && range.from <= from && range.to >= to) {\n      const newSelection = TextSelection.create(doc, range.from, range.to)\n\n      tr.setSelection(newSelection)\n    }\n  }\n\n  return true\n}\n", "import { Command, CommandProps, RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    first: {\n      /**\n       * Runs one command after the other and stops at the first which returns true.\n       */\n      first: (commands: Command[] | ((props: CommandProps) => Command[])) => ReturnType,\n    }\n  }\n}\n\nexport const first: RawCommands['first'] = commands => props => {\n  const items = typeof commands === 'function'\n    ? commands(props)\n    : commands\n\n  for (let i = 0; i < items.length; i += 1) {\n    if (items[i](props)) {\n      return true\n    }\n  }\n\n  return false\n}\n", "import { TextSelection } from '@tiptap/pm/state'\n\nexport function isTextSelection(value: unknown): value is TextSelection {\n  return value instanceof TextSelection\n}\n", "export function minMax(value = 0, min = 0, max = 0): number {\n  return Math.min(Math.max(value, min), max)\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\nimport { Selection, TextSelection } from '@tiptap/pm/state'\n\nimport { FocusPosition } from '../types'\nimport { minMax } from '../utilities/minMax'\n\nexport function resolveFocusPosition(\n  doc: ProseMirrorNode,\n  position: FocusPosition = null,\n): Selection | null {\n  if (!position) {\n    return null\n  }\n\n  const selectionAtStart = Selection.atStart(doc)\n  const selectionAtEnd = Selection.atEnd(doc)\n\n  if (position === 'start' || position === true) {\n    return selectionAtStart\n  }\n\n  if (position === 'end') {\n    return selectionAtEnd\n  }\n\n  const minPos = selectionAtStart.from\n  const maxPos = selectionAtEnd.to\n\n  if (position === 'all') {\n    return TextSelection.create(\n      doc,\n      minMax(0, minPos, maxPos),\n      minMax(doc.content.size, minPos, maxPos),\n    )\n  }\n\n  return TextSelection.create(\n    doc,\n    minMax(position, minPos, maxPos),\n    minMax(position, minPos, maxPos),\n  )\n}\n", "export function isiOS(): boolean {\n  return [\n    'iPad Simulator',\n    'iPhone Simulator',\n    'iPod Simulator',\n    'iPad',\n    'iPhone',\n    'iPod',\n  ].includes(navigator.platform)\n  // iPad on iOS 13 detection\n  || (navigator.userAgent.includes('Mac') && 'ontouchend' in document)\n}\n", "import { isTextSelection } from '../helpers/isTextSelection'\nimport { resolveFocusPosition } from '../helpers/resolveFocusPosition'\nimport { FocusPosition, RawCommands } from '../types'\nimport { isiOS } from '../utilities/isiOS'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    focus: {\n      /**\n       * Focus the editor at the given position.\n       */\n      focus: (\n        position?: FocusPosition,\n        options?: {\n          scrollIntoView?: boolean,\n        },\n      ) => ReturnType,\n    }\n  }\n}\n\nexport const focus: RawCommands['focus'] = (position = null, options = {}) => ({\n  editor,\n  view,\n  tr,\n  dispatch,\n}) => {\n  options = {\n    scrollIntoView: true,\n    ...options,\n  }\n\n  const delayedFocus = () => {\n    // focus within `requestAnimationFrame` breaks focus on iOS\n    // so we have to call this\n    if (isiOS()) {\n      (view.dom as HTMLElement).focus()\n    }\n\n    // For React we have to focus asynchronously. Otherwise wild things happen.\n    // see: https://github.com/ueberdosis/tiptap/issues/1520\n    requestAnimationFrame(() => {\n      if (!editor.isDestroyed) {\n        view.focus()\n\n        if (options?.scrollIntoView) {\n          editor.commands.scrollIntoView()\n        }\n      }\n    })\n  }\n\n  if ((view.hasFocus() && position === null) || position === false) {\n    return true\n  }\n\n  // we don\u2019t try to resolve a NodeSelection or CellSelection\n  if (dispatch && position === null && !isTextSelection(editor.state.selection)) {\n    delayedFocus()\n    return true\n  }\n\n  // pass through tr.doc instead of editor.state.doc\n  // since transactions could change the editors state before this command has been run\n  const selection = resolveFocusPosition(tr.doc, position) || editor.state.selection\n  const isSameSelection = editor.state.selection.eq(selection)\n\n  if (dispatch) {\n    if (!isSameSelection) {\n      tr.setSelection(selection)\n    }\n\n    // `tr.setSelection` resets the stored marks\n    // so we\u2019ll restore them if the selection is the same as before\n    if (isSameSelection && tr.storedMarks) {\n      tr.setStoredMarks(tr.storedMarks)\n    }\n\n    delayedFocus()\n  }\n\n  return true\n}\n", "import { CommandProps, RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    forEach: {\n      /**\n       * Loop through an array of items.\n       */\n      forEach: <T>(\n        items: T[],\n        fn: (\n          item: T,\n          props: CommandProps & {\n            index: number,\n          },\n        ) => boolean,\n      ) => ReturnType,\n    }\n  }\n}\n\nexport const forEach: RawCommands['forEach'] = (items, fn) => props => {\n  return items.every((item, index) => fn(item, { ...props, index }))\n}\n", "import { ParseOptions } from '@tiptap/pm/model'\n\nimport { Content, RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    insertContent: {\n      /**\n       * Insert a node or string of HTML at the current position.\n       */\n      insertContent: (\n        value: Content,\n        options?: {\n          parseOptions?: ParseOptions\n          updateSelection?: boolean\n        },\n      ) => ReturnType\n    }\n  }\n}\n\nexport const insertContent: RawCommands['insertContent'] = (value, options) => ({ tr, commands }) => {\n  return commands.insertContentAt(\n    { from: tr.selection.from, to: tr.selection.to },\n    value,\n    options,\n  )\n}\n", "export function elementFromString(value: string): HTMLElement {\n  // add a wrapper to preserve leading and trailing whitespace\n  const wrappedValue = `<body>${value}</body>`\n\n  return new window.DOMParser().parseFromString(wrappedValue, 'text/html').body\n}\n", "import {\n  DOMParser,\n  Fragment,\n  Node as ProseMirrorNode,\n  ParseOptions,\n  Schema,\n} from '@tiptap/pm/model'\n\nimport { Content } from '../types'\nimport { elementFromString } from '../utilities/elementFromString'\n\nexport type CreateNodeFromContentOptions = {\n  slice?: boolean\n  parseOptions?: ParseOptions\n}\n\nexport function createNodeFromContent(\n  content: Content,\n  schema: Schema,\n  options?: CreateNodeFromContentOptions,\n): ProseMirrorNode | Fragment {\n  options = {\n    slice: true,\n    parseOptions: {},\n    ...options,\n  }\n\n  if (typeof content === 'object' && content !== null) {\n    try {\n      if (Array.isArray(content) && content.length > 0) {\n        return Fragment.fromArray(content.map(item => schema.nodeFromJSON(item)))\n      }\n\n      return schema.nodeFromJSON(content)\n    } catch (error) {\n      console.warn('[tiptap warn]: Invalid content.', 'Passed value:', content, 'Error:', error)\n\n      return createNodeFromContent('', schema, options)\n    }\n  }\n\n  if (typeof content === 'string') {\n    const parser = DOMParser.fromSchema(schema)\n\n    return options.slice\n      ? parser.parseSlice(elementFromString(content), options.parseOptions).content\n      : parser.parse(elementFromString(content), options.parseOptions)\n  }\n\n  return createNodeFromContent('', schema, options)\n}\n", "import { Selection, Transaction } from '@tiptap/pm/state'\nimport { ReplaceAroundStep, ReplaceStep } from '@tiptap/pm/transform'\n\n// source: https://github.com/ProseMirror/prosemirror-state/blob/master/src/selection.js#L466\nexport function selectionToInsertionEnd(tr: Transaction, startLen: number, bias: number) {\n  const last = tr.steps.length - 1\n\n  if (last < startLen) {\n    return\n  }\n\n  const step = tr.steps[last]\n\n  if (!(step instanceof ReplaceStep || step instanceof ReplaceAroundStep)) {\n    return\n  }\n\n  const map = tr.mapping.maps[last]\n  let end = 0\n\n  map.forEach((_from, _to, _newFrom, newTo) => {\n    if (end === 0) {\n      end = newTo\n    }\n  })\n\n  tr.setSelection(Selection.near(tr.doc.resolve(end), bias))\n}\n", "import { Fragment, Node as ProseMirrorNode, ParseOptions } from '@tiptap/pm/model'\n\nimport { createNodeFromContent } from '../helpers/createNodeFromContent'\nimport { selectionToInsertionEnd } from '../helpers/selectionToInsertionEnd'\nimport { Content, Range, RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    insertContentAt: {\n      /**\n       * Insert a node or string of HTML at a specific position.\n       */\n      insertContentAt: (\n        position: number | Range,\n        value: Content,\n        options?: {\n          parseOptions?: ParseOptions\n          updateSelection?: boolean\n        },\n      ) => ReturnType\n    }\n  }\n}\n\nconst isFragment = (nodeOrFragment: ProseMirrorNode | Fragment): nodeOrFragment is Fragment => {\n  return nodeOrFragment.toString().startsWith('<')\n}\n\nexport const insertContentAt: RawCommands['insertContentAt'] = (position, value, options) => ({ tr, dispatch, editor }) => {\n  if (dispatch) {\n    options = {\n      parseOptions: {},\n      updateSelection: true,\n      ...options,\n    }\n\n    const content = createNodeFromContent(value, editor.schema, {\n      parseOptions: {\n        preserveWhitespace: 'full',\n        ...options.parseOptions,\n      },\n    })\n\n    // don\u2019t dispatch an empty fragment because this can lead to strange errors\n    if (content.toString() === '<>') {\n      return true\n    }\n\n    let { from, to } = typeof position === 'number' ? { from: position, to: position } : position\n\n    let isOnlyTextContent = true\n    let isOnlyBlockContent = true\n    const nodes = isFragment(content) ? content : [content]\n\n    nodes.forEach(node => {\n      // check if added node is valid\n      node.check()\n\n      isOnlyTextContent = isOnlyTextContent ? node.isText && node.marks.length === 0 : false\n\n      isOnlyBlockContent = isOnlyBlockContent ? node.isBlock : false\n    })\n\n    // check if we can replace the wrapping node by\n    // the newly inserted content\n    // example:\n    // replace an empty paragraph by an inserted image\n    // instead of inserting the image below the paragraph\n    if (from === to && isOnlyBlockContent) {\n      const { parent } = tr.doc.resolve(from)\n      const isEmptyTextBlock = parent.isTextblock && !parent.type.spec.code && !parent.childCount\n\n      if (isEmptyTextBlock) {\n        from -= 1\n        to += 1\n      }\n    }\n\n    // if there is only plain text we have to use `insertText`\n    // because this will keep the current marks\n    if (isOnlyTextContent) {\n      // if value is string, we can use it directly\n      // otherwise if it is an array, we have to join it\n      if (Array.isArray(value)) {\n        tr.insertText(value.map(v => v.text || '').join(''), from, to)\n      } else if (typeof value === 'object' && !!value && !!value.text) {\n        tr.insertText(value.text, from, to)\n      } else {\n        tr.insertText(value as string, from, to)\n      }\n    } else {\n      tr.replaceWith(from, to, content)\n    }\n\n    // set cursor at end of inserted content\n    if (options.updateSelection) {\n      selectionToInsertionEnd(tr, tr.steps.length - 1, -1)\n    }\n  }\n\n  return true\n}\n", "import {\n  joinBackward as originalJoinBackward,\n  joinDown as originalJoinDown,\n  joinForward as originalJoinForward,\n  joinUp as originalJoinUp,\n} from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    joinUp: {\n      /**\n       * Join two nodes Up.\n       */\n      joinUp: () => ReturnType\n    }\n    joinDown: {\n      /**\n       * Join two nodes Down.\n       */\n      joinDown: () => ReturnType\n    }\n    joinBackward: {\n      /**\n       * Join two nodes Backwards.\n       */\n      joinBackward: () => ReturnType\n    }\n    joinForward: {\n      /**\n       * Join two nodes Forwards.\n       */\n      joinForward: () => ReturnType\n    }\n  }\n}\n\nexport const joinUp: RawCommands['joinUp'] = () => ({ state, dispatch }) => {\n  return originalJoinUp(state, dispatch)\n}\n\nexport const joinDown: RawCommands['joinDown'] = () => ({ state, dispatch }) => {\n  return originalJoinDown(state, dispatch)\n}\n\nexport const joinBackward: RawCommands['joinBackward'] = () => ({ state, dispatch }) => {\n  return originalJoinBackward(state, dispatch)\n}\n\nexport const joinForward: RawCommands['joinForward'] = () => ({ state, dispatch }) => {\n  return originalJoinForward(state, dispatch)\n}\n", "export function isMacOS(): boolean {\n  return typeof navigator !== 'undefined'\n    ? /Mac/.test(navigator.platform)\n    : false\n}\n", "import { RawCommands } from '../types'\nimport { isiOS } from '../utilities/isiOS'\nimport { isMacOS } from '../utilities/isMacOS'\n\nfunction normalizeKeyName(name: string) {\n  const parts = name.split(/-(?!$)/)\n  let result = parts[parts.length - 1]\n\n  if (result === 'Space') {\n    result = ' '\n  }\n\n  let alt\n  let ctrl\n  let shift\n  let meta\n\n  for (let i = 0; i < parts.length - 1; i += 1) {\n    const mod = parts[i]\n\n    if (/^(cmd|meta|m)$/i.test(mod)) {\n      meta = true\n    } else if (/^a(lt)?$/i.test(mod)) {\n      alt = true\n    } else if (/^(c|ctrl|control)$/i.test(mod)) {\n      ctrl = true\n    } else if (/^s(hift)?$/i.test(mod)) {\n      shift = true\n    } else if (/^mod$/i.test(mod)) {\n      if (isiOS() || isMacOS()) {\n        meta = true\n      } else {\n        ctrl = true\n      }\n    } else {\n      throw new Error(`Unrecognized modifier name: ${mod}`)\n    }\n  }\n\n  if (alt) {\n    result = `Alt-${result}`\n  }\n\n  if (ctrl) {\n    result = `Ctrl-${result}`\n  }\n\n  if (meta) {\n    result = `Meta-${result}`\n  }\n\n  if (shift) {\n    result = `Shift-${result}`\n  }\n\n  return result\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    keyboardShortcut: {\n      /**\n       * Trigger a keyboard shortcut.\n       */\n      keyboardShortcut: (name: string) => ReturnType,\n    }\n  }\n}\n\nexport const keyboardShortcut: RawCommands['keyboardShortcut'] = name => ({\n  editor,\n  view,\n  tr,\n  dispatch,\n}) => {\n  const keys = normalizeKeyName(name).split(/-(?!$)/)\n  const key = keys.find(item => !['Alt', 'Ctrl', 'Meta', 'Shift'].includes(item))\n  const event = new KeyboardEvent('keydown', {\n    key: key === 'Space'\n      ? ' '\n      : key,\n    altKey: keys.includes('Alt'),\n    ctrlKey: keys.includes('Ctrl'),\n    metaKey: keys.includes('Meta'),\n    shiftKey: keys.includes('Shift'),\n    bubbles: true,\n    cancelable: true,\n  })\n\n  const capturedTransaction = editor.captureTransaction(() => {\n    view.someProp('handleKeyDown', f => f(view, event))\n  })\n\n  capturedTransaction?.steps.forEach(step => {\n    const newStep = step.map(tr.mapping)\n\n    if (newStep && dispatch) {\n      tr.maybeStep(newStep)\n    }\n  })\n\n  return true\n}\n", "import { NodeType } from '@tiptap/pm/model'\nimport { EditorState } from '@tiptap/pm/state'\n\nimport { NodeRange } from '../types'\nimport { objectIncludes } from '../utilities/objectIncludes'\nimport { getNodeType } from './getNodeType'\n\nexport function isNodeActive(\n  state: EditorState,\n  typeOrName: NodeType | string | null,\n  attributes: Record<string, any> = {},\n): boolean {\n  const { from, to, empty } = state.selection\n  const type = typeOrName ? getNodeType(typeOrName, state.schema) : null\n\n  const nodeRanges: NodeRange[] = []\n\n  state.doc.nodesBetween(from, to, (node, pos) => {\n    if (node.isText) {\n      return\n    }\n\n    const relativeFrom = Math.max(from, pos)\n    const relativeTo = Math.min(to, pos + node.nodeSize)\n\n    nodeRanges.push({\n      node,\n      from: relativeFrom,\n      to: relativeTo,\n    })\n  })\n\n  const selectionRange = to - from\n  const matchedNodeRanges = nodeRanges\n    .filter(nodeRange => {\n      if (!type) {\n        return true\n      }\n\n      return type.name === nodeRange.node.type.name\n    })\n    .filter(nodeRange => objectIncludes(nodeRange.node.attrs, attributes, { strict: false }))\n\n  if (empty) {\n    return !!matchedNodeRanges.length\n  }\n\n  const range = matchedNodeRanges.reduce((sum, nodeRange) => sum + nodeRange.to - nodeRange.from, 0)\n\n  return range >= selectionRange\n}\n", "import { lift as originalLift } from '@tiptap/pm/commands'\nimport { NodeType } from '@tiptap/pm/model'\n\nimport { getNodeType } from '../helpers/getNodeType'\nimport { isNodeActive } from '../helpers/isNodeActive'\nimport { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    lift: {\n      /**\n       * Removes an existing wrap.\n       */\n      lift: (typeOrName: string | NodeType, attributes?: Record<string, any>) => ReturnType\n    }\n  }\n}\n\nexport const lift: RawCommands['lift'] = (typeOrName, attributes = {}) => ({ state, dispatch }) => {\n  const type = getNodeType(typeOrName, state.schema)\n  const isActive = isNodeActive(state, type, attributes)\n\n  if (!isActive) {\n    return false\n  }\n\n  return originalLift(state, dispatch)\n}\n", "import { liftEmptyBlock as originalLiftEmptyBlock } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    liftEmptyBlock: {\n      /**\n       * Lift block if empty.\n       */\n      liftEmptyBlock: () => ReturnType,\n    }\n  }\n}\n\nexport const liftEmptyBlock: RawCommands['liftEmptyBlock'] = () => ({ state, dispatch }) => {\n  return originalLiftEmptyBlock(state, dispatch)\n}\n", "import { NodeType } from '@tiptap/pm/model'\nimport { liftListItem as originalLiftListItem } from '@tiptap/pm/schema-list'\n\nimport { getNodeType } from '../helpers/getNodeType'\nimport { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    liftListItem: {\n      /**\n       * Lift the list item into a wrapping list.\n       */\n      liftListItem: (typeOrName: string | NodeType) => ReturnType\n    }\n  }\n}\n\nexport const liftListItem: RawCommands['liftListItem'] = typeOrName => ({ state, dispatch }) => {\n  const type = getNodeType(typeOrName, state.schema)\n\n  return originalLiftListItem(type)(state, dispatch)\n}\n", "import { newlineInCode as originalNewlineInCode } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    newlineInCode: {\n      /**\n       * Add a newline character in code.\n       */\n      newlineInCode: () => ReturnType\n    }\n  }\n}\n\nexport const newlineInCode: RawCommands['newlineInCode'] = () => ({ state, dispatch }) => {\n  return originalNewlineInCode(state, dispatch)\n}\n", "import { Schema } from '@tiptap/pm/model'\n\nexport function getSchemaTypeNameByName(name: string, schema: Schema): 'node' | 'mark' | null {\n  if (schema.nodes[name]) {\n    return 'node'\n  }\n\n  if (schema.marks[name]) {\n    return 'mark'\n  }\n\n  return null\n}\n", "/**\n * Remove a property or an array of properties from an object\n * @param obj Object\n * @param key Key to remove\n */\nexport function deleteProps(obj: Record<string, any>, propOrProps: string | string[]): Record<string, any> {\n  const props = typeof propOrProps === 'string'\n    ? [propOrProps]\n    : propOrProps\n\n  return Object\n    .keys(obj)\n    .reduce((newObj: Record<string, any>, prop) => {\n      if (!props.includes(prop)) {\n        newObj[prop] = obj[prop]\n      }\n\n      return newObj\n    }, {})\n}\n", "import { MarkType, NodeType } from '@tiptap/pm/model'\n\nimport { getMarkType } from '../helpers/getMarkType'\nimport { getNodeType } from '../helpers/getNodeType'\nimport { getSchemaTypeNameByName } from '../helpers/getSchemaTypeNameByName'\nimport { RawCommands } from '../types'\nimport { deleteProps } from '../utilities/deleteProps'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    resetAttributes: {\n      /**\n       * Resets some node attributes to the default value.\n       */\n      resetAttributes: (\n        typeOrName: string | NodeType | MarkType,\n        attributes: string | string[],\n      ) => ReturnType\n    }\n  }\n}\n\nexport const resetAttributes: RawCommands['resetAttributes'] = (typeOrName, attributes) => ({ tr, state, dispatch }) => {\n  let nodeType: NodeType | null = null\n  let markType: MarkType | null = null\n\n  const schemaType = getSchemaTypeNameByName(\n    typeof typeOrName === 'string' ? typeOrName : typeOrName.name,\n    state.schema,\n  )\n\n  if (!schemaType) {\n    return false\n  }\n\n  if (schemaType === 'node') {\n    nodeType = getNodeType(typeOrName as NodeType, state.schema)\n  }\n\n  if (schemaType === 'mark') {\n    markType = getMarkType(typeOrName as MarkType, state.schema)\n  }\n\n  if (dispatch) {\n    tr.selection.ranges.forEach(range => {\n      state.doc.nodesBetween(range.$from.pos, range.$to.pos, (node, pos) => {\n        if (nodeType && nodeType === node.type) {\n          tr.setNodeMarkup(pos, undefined, deleteProps(node.attrs, attributes))\n        }\n\n        if (markType && node.marks.length) {\n          node.marks.forEach(mark => {\n            if (markType === mark.type) {\n              tr.addMark(\n                pos,\n                pos + node.nodeSize,\n                markType.create(deleteProps(mark.attrs, attributes)),\n              )\n            }\n          })\n        }\n      })\n    })\n  }\n\n  return true\n}\n", "import { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    scrollIntoView: {\n      /**\n       * Scroll the selection into view.\n       */\n      scrollIntoView: () => ReturnType,\n    }\n  }\n}\n\nexport const scrollIntoView: RawCommands['scrollIntoView'] = () => ({ tr, dispatch }) => {\n  if (dispatch) {\n    tr.scrollIntoView()\n  }\n\n  return true\n}\n", "import { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    selectAll: {\n      /**\n       * Select the whole document.\n       */\n      selectAll: () => ReturnType,\n    }\n  }\n}\n\nexport const selectAll: RawCommands['selectAll'] = () => ({ tr, commands }) => {\n  return commands.setTextSelection({\n    from: 0,\n    to: tr.doc.content.size,\n  })\n}\n", "import { selectNodeBackward as originalSelectNodeBackward } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    selectNodeBackward: {\n      /**\n       * Select a node backward.\n       */\n      selectNodeBackward: () => ReturnType\n    }\n  }\n}\n\nexport const selectNodeBackward: RawCommands['selectNodeBackward'] = () => ({ state, dispatch }) => {\n  return originalSelectNodeBackward(state, dispatch)\n}\n", "import { selectNodeForward as originalSelectNodeForward } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    selectNodeForward: {\n      /**\n       * Select a node forward.\n       */\n      selectNodeForward: () => ReturnType\n    }\n  }\n}\n\nexport const selectNodeForward: RawCommands['selectNodeForward'] = () => ({ state, dispatch }) => {\n  return originalSelectNodeForward(state, dispatch)\n}\n", "import { selectParentNode as originalSelectParentNode } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    selectParentNode: {\n      /**\n       * Select the parent node.\n       */\n      selectParentNode: () => ReturnType\n    }\n  }\n}\n\nexport const selectParentNode: RawCommands['selectParentNode'] = () => ({ state, dispatch }) => {\n  return originalSelectParentNode(state, dispatch)\n}\n", "// @ts-ignore\n// TODO: add types to @types/prosemirror-commands\nimport { selectTextblockEnd as originalSelectTextblockEnd } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    selectTextblockEnd: {\n      /**\n       * Moves the cursor to the end of current text block.\n       */\n      selectTextblockEnd: () => ReturnType\n    }\n  }\n}\n\nexport const selectTextblockEnd: RawCommands['selectTextblockEnd'] = () => ({ state, dispatch }) => {\n  return originalSelectTextblockEnd(state, dispatch)\n}\n", "// @ts-ignore\n// TODO: add types to @types/prosemirror-commands\nimport { selectTextblockStart as originalSelectTextblockStart } from '@tiptap/pm/commands'\n\nimport { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    selectTextblockStart: {\n      /**\n       * Moves the cursor to the start of current text block.\n       */\n      selectTextblockStart: () => ReturnType\n    }\n  }\n}\n\nexport const selectTextblockStart: RawCommands['selectTextblockStart'] = () => ({ state, dispatch }) => {\n  return originalSelectTextblockStart(state, dispatch)\n}\n", "import { Node as ProseMirrorNode, ParseOptions, Schema } from '@tiptap/pm/model'\n\nimport { Content } from '../types'\nimport { createNodeFromContent } from './createNodeFromContent'\n\nexport function createDocument(\n  content: Content,\n  schema: Schema,\n  parseOptions: ParseOptions = {},\n): ProseMirrorNode {\n  return createNodeFromContent(content, schema, { slice: false, parseOptions }) as ProseMirrorNode\n}\n", "import { ParseOptions } from '@tiptap/pm/model'\n\nimport { createDocument } from '../helpers/createDocument'\nimport { Content, RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    setContent: {\n      /**\n       * Replace the whole document with new content.\n       */\n      setContent: (\n        content: Content,\n        emitUpdate?: boolean,\n        parseOptions?: ParseOptions,\n      ) => ReturnType\n    }\n  }\n}\n\nexport const setContent: RawCommands['setContent'] = (content, emitUpdate = false, parseOptions = {}) => ({ tr, editor, dispatch }) => {\n  const { doc } = tr\n  const document = createDocument(content, editor.schema, parseOptions)\n\n  if (dispatch) {\n    tr.replaceWith(0, doc.content.size, document).setMeta('preventUpdate', !emitUpdate)\n  }\n\n  return true\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\nimport { Transaction } from '@tiptap/pm/state'\nimport { Transform } from '@tiptap/pm/transform'\n\n/**\n * Returns a new `Transform` based on all steps of the passed transactions.\n */\nexport function combineTransactionSteps(\n  oldDoc: ProseMirrorNode,\n  transactions: Transaction[],\n): Transform {\n  const transform = new Transform(oldDoc)\n\n  transactions.forEach(transaction => {\n    transaction.steps.forEach(step => {\n      transform.step(step)\n    })\n  })\n\n  return transform\n}\n", "import { ContentMatch, NodeType } from '@tiptap/pm/model'\n\nexport function defaultBlockAt(match: ContentMatch): NodeType | null {\n  for (let i = 0; i < match.edgeCount; i += 1) {\n    const { type } = match.edge(i)\n\n    if (type.isTextblock && !type.hasRequiredAttrs()) {\n      return type\n    }\n  }\n\n  return null\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\n\nimport { NodeWithPos, Predicate } from '../types'\n\nexport function findChildren(node: ProseMirrorNode, predicate: Predicate): NodeWithPos[] {\n  const nodesWithPos: NodeWithPos[] = []\n\n  node.descendants((child, pos) => {\n    if (predicate(child)) {\n      nodesWithPos.push({\n        node: child,\n        pos,\n      })\n    }\n  })\n\n  return nodesWithPos\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\n\nimport { NodeWithPos, Predicate, Range } from '../types'\n\n/**\n * Same as `findChildren` but searches only within a `range`.\n */\nexport function findChildrenInRange(\n  node: ProseMirrorNode,\n  range: Range,\n  predicate: Predicate,\n): NodeWithPos[] {\n  const nodesWithPos: NodeWithPos[] = []\n\n  // if (range.from === range.to) {\n  //   const nodeAt = node.nodeAt(range.from)\n\n  //   if (nodeAt) {\n  //     nodesWithPos.push({\n  //       node: nodeAt,\n  //       pos: range.from,\n  //     })\n  //   }\n  // }\n\n  node.nodesBetween(range.from, range.to, (child, pos) => {\n    if (predicate(child)) {\n      nodesWithPos.push({\n        node: child,\n        pos,\n      })\n    }\n  })\n\n  return nodesWithPos\n}\n", "import { Node as ProseMirrorNode, ResolvedPos } from '@tiptap/pm/model'\n\nimport { Predicate } from '../types'\n\nexport function findParentNodeClosestToPos(\n  $pos: ResolvedPos,\n  predicate: Predicate,\n):\n  | {\n      pos: number\n      start: number\n      depth: number\n      node: ProseMirrorNode\n    }\n  | undefined {\n  for (let i = $pos.depth; i > 0; i -= 1) {\n    const node = $pos.node(i)\n\n    if (predicate(node)) {\n      return {\n        pos: i > 0 ? $pos.before(i) : 0,\n        start: $pos.start(i),\n        depth: i,\n        node,\n      }\n    }\n  }\n}\n", "import { Selection } from '@tiptap/pm/state'\n\nimport { Predicate } from '../types'\nimport { findParentNodeClosestToPos } from './findParentNodeClosestToPos'\n\nexport function findParentNode(predicate: Predicate) {\n  return (selection: Selection) => findParentNodeClosestToPos(selection.$from, predicate)\n}\n", "import { DOMSerializer, Fragment, Schema } from '@tiptap/pm/model'\n\nexport function getHTMLFromFragment(fragment: Fragment, schema: Schema): string {\n  const documentFragment = DOMSerializer.fromSchema(schema).serializeFragment(fragment)\n\n  const temporaryDocument = document.implementation.createHTMLDocument()\n  const container = temporaryDocument.createElement('div')\n\n  container.appendChild(documentFragment)\n\n  return container.innerHTML\n}\n", "import { Schema } from '@tiptap/pm/model'\n\nimport { Editor } from '../Editor'\nimport { ExtensionManager } from '../ExtensionManager'\nimport { Extensions } from '../types'\nimport { getSchemaByResolvedExtensions } from './getSchemaByResolvedExtensions'\n\nexport function getSchema(extensions: Extensions, editor?: Editor): Schema {\n  const resolvedExtensions = ExtensionManager.resolve(extensions)\n\n  return getSchemaByResolvedExtensions(resolvedExtensions, editor)\n}\n", "import { Node } from '@tiptap/pm/model'\n\nimport { Extensions, JSONContent } from '../types'\nimport { getHTMLFromFragment } from './getHTMLFromFragment'\nimport { getSchema } from './getSchema'\n\nexport function generateHTML(doc: JSONContent, extensions: Extensions): string {\n  const schema = getSchema(extensions)\n  const contentNode = Node.fromJSON(schema, doc)\n\n  return getHTMLFromFragment(contentNode.content, schema)\n}\n", "import { DOMParser } from '@tiptap/pm/model'\n\nimport { Extensions } from '../types'\nimport { elementFromString } from '../utilities/elementFromString'\nimport { getSchema } from './getSchema'\n\nexport function generateJSON(html: string, extensions: Extensions): Record<string, any> {\n  const schema = getSchema(extensions)\n  const dom = elementFromString(html)\n\n  return DOMParser.fromSchema(schema).parse(dom).toJSON()\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\n\nimport { TextSerializer } from '../types'\nimport { getTextBetween } from './getTextBetween'\n\nexport function getText(\n  node: ProseMirrorNode,\n  options?: {\n    blockSeparator?: string\n    textSerializers?: Record<string, TextSerializer>\n  },\n) {\n  const range = {\n    from: 0,\n    to: node.content.size,\n  }\n\n  return getTextBetween(node, range, options)\n}\n", "import { Node } from '@tiptap/pm/model'\n\nimport { Extensions, JSONContent, TextSerializer } from '../types'\nimport { getSchema } from './getSchema'\nimport { getText } from './getText'\nimport { getTextSerializersFromSchema } from './getTextSerializersFromSchema'\n\nexport function generateText(\n  doc: JSONContent,\n  extensions: Extensions,\n  options?: {\n    blockSeparator?: string\n    textSerializers?: Record<string, TextSerializer>\n  },\n): string {\n  const { blockSeparator = '\\n\\n', textSerializers = {} } = options || {}\n  const schema = getSchema(extensions)\n  const contentNode = Node.fromJSON(schema, doc)\n\n  return getText(contentNode, {\n    blockSeparator,\n    textSerializers: {\n      ...getTextSerializersFromSchema(schema),\n      ...textSerializers,\n    },\n  })\n}\n", "import { Mark, MarkType } from '@tiptap/pm/model'\nimport { EditorState } from '@tiptap/pm/state'\n\nimport { getMarkType } from './getMarkType'\n\nexport function getMarkAttributes(\n  state: EditorState,\n  typeOrName: string | MarkType,\n): Record<string, any> {\n  const type = getMarkType(typeOrName, state.schema)\n  const { from, to, empty } = state.selection\n  const marks: Mark[] = []\n\n  if (empty) {\n    if (state.storedMarks) {\n      marks.push(...state.storedMarks)\n    }\n\n    marks.push(...state.selection.$head.marks())\n  } else {\n    state.doc.nodesBetween(from, to, node => {\n      marks.push(...node.marks)\n    })\n  }\n\n  const mark = marks.find(markItem => markItem.type.name === type.name)\n\n  if (!mark) {\n    return {}\n  }\n\n  return { ...mark.attrs }\n}\n", "import { Node, NodeType } from '@tiptap/pm/model'\nimport { EditorState } from '@tiptap/pm/state'\n\nimport { getNodeType } from './getNodeType'\n\nexport function getNodeAttributes(\n  state: EditorState,\n  typeOrName: string | NodeType,\n): Record<string, any> {\n  const type = getNodeType(typeOrName, state.schema)\n  const { from, to } = state.selection\n  const nodes: Node[] = []\n\n  state.doc.nodesBetween(from, to, node => {\n    nodes.push(node)\n  })\n\n  const node = nodes.reverse().find(nodeItem => nodeItem.type.name === type.name)\n\n  if (!node) {\n    return {}\n  }\n\n  return { ...node.attrs }\n}\n", "import { MarkType, NodeType } from '@tiptap/pm/model'\nimport { EditorState } from '@tiptap/pm/state'\n\nimport { getMarkAttributes } from './getMarkAttributes'\nimport { getNodeAttributes } from './getNodeAttributes'\nimport { getSchemaTypeNameByName } from './getSchemaTypeNameByName'\n\nexport function getAttributes(\n  state: EditorState,\n  typeOrName: string | NodeType | MarkType,\n): Record<string, any> {\n  const schemaType = getSchemaTypeNameByName(\n    typeof typeOrName === 'string' ? typeOrName : typeOrName.name,\n    state.schema,\n  )\n\n  if (schemaType === 'node') {\n    return getNodeAttributes(state, typeOrName as NodeType)\n  }\n\n  if (schemaType === 'mark') {\n    return getMarkAttributes(state, typeOrName as MarkType)\n  }\n\n  return {}\n}\n", "/**\n * Removes duplicated values within an array.\n * Supports numbers, strings and objects.\n */\nexport function removeDuplicates<T>(array: T[], by = JSON.stringify): T[] {\n  const seen: Record<any, any> = {}\n\n  return array.filter(item => {\n    const key = by(item)\n\n    return Object.prototype.hasOwnProperty.call(seen, key)\n      ? false\n      : (seen[key] = true)\n  })\n}\n", "import { Step, Transform } from '@tiptap/pm/transform'\n\nimport { Range } from '../types'\nimport { removeDuplicates } from '../utilities/removeDuplicates'\n\nexport type ChangedRange = {\n  oldRange: Range,\n  newRange: Range,\n}\n\n/**\n * Removes duplicated ranges and ranges that are\n * fully captured by other ranges.\n */\nfunction simplifyChangedRanges(changes: ChangedRange[]): ChangedRange[] {\n  const uniqueChanges = removeDuplicates(changes)\n\n  return uniqueChanges.length === 1\n    ? uniqueChanges\n    : uniqueChanges.filter((change, index) => {\n      const rest = uniqueChanges.filter((_, i) => i !== index)\n\n      return !rest.some(otherChange => {\n        return change.oldRange.from >= otherChange.oldRange.from\n          && change.oldRange.to <= otherChange.oldRange.to\n          && change.newRange.from >= otherChange.newRange.from\n          && change.newRange.to <= otherChange.newRange.to\n      })\n    })\n}\n\n/**\n * Returns a list of changed ranges\n * based on the first and last state of all steps.\n */\nexport function getChangedRanges(transform: Transform): ChangedRange[] {\n  const { mapping, steps } = transform\n  const changes: ChangedRange[] = []\n\n  mapping.maps.forEach((stepMap, index) => {\n    const ranges: Range[] = []\n\n    // This accounts for step changes where no range was actually altered\n    // e.g. when setting a mark, node attribute, etc.\n    // @ts-ignore\n    if (!stepMap.ranges.length) {\n      const { from, to } = steps[index] as Step & {\n        from?: number,\n        to?: number,\n      }\n\n      if (from === undefined || to === undefined) {\n        return\n      }\n\n      ranges.push({ from, to })\n    } else {\n      stepMap.forEach((from, to) => {\n        ranges.push({ from, to })\n      })\n    }\n\n    ranges.forEach(({ from, to }) => {\n      const newStart = mapping.slice(index).map(from, -1)\n      const newEnd = mapping.slice(index).map(to)\n      const oldStart = mapping.invert().map(newStart, -1)\n      const oldEnd = mapping.invert().map(newEnd)\n\n      changes.push({\n        oldRange: {\n          from: oldStart,\n          to: oldEnd,\n        },\n        newRange: {\n          from: newStart,\n          to: newEnd,\n        },\n      })\n    })\n  })\n\n  return simplifyChangedRanges(changes)\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\n\nimport { JSONContent } from '../types'\n\ninterface DebugJSONContent extends JSONContent {\n  from: number\n  to: number\n}\n\nexport function getDebugJSON(node: ProseMirrorNode, startOffset = 0): DebugJSONContent {\n  const isTopNode = node.type === node.type.schema.topNodeType\n  const increment = isTopNode ? 0 : 1\n  const from = startOffset\n  const to = from + node.nodeSize\n  const marks = node.marks.map(mark => {\n    const output: { type: string; attrs?: Record<string, any> } = {\n      type: mark.type.name,\n    }\n\n    if (Object.keys(mark.attrs).length) {\n      output.attrs = { ...mark.attrs }\n    }\n\n    return output\n  })\n  const attrs = { ...node.attrs }\n  const output: DebugJSONContent = {\n    type: node.type.name,\n    from,\n    to,\n  }\n\n  if (Object.keys(attrs).length) {\n    output.attrs = attrs\n  }\n\n  if (marks.length) {\n    output.marks = marks\n  }\n\n  if (node.content.childCount) {\n    output.content = []\n\n    node.forEach((child, offset) => {\n      output.content?.push(getDebugJSON(child, startOffset + offset + increment))\n    })\n  }\n\n  if (node.text) {\n    output.text = node.text\n  }\n\n  return output\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\n\nimport { MarkRange } from '../types'\nimport { getMarkRange } from './getMarkRange'\n\nexport function getMarksBetween(from: number, to: number, doc: ProseMirrorNode): MarkRange[] {\n  const marks: MarkRange[] = []\n\n  // get all inclusive marks on empty selection\n  if (from === to) {\n    doc\n      .resolve(from)\n      .marks()\n      .forEach(mark => {\n        const $pos = doc.resolve(from - 1)\n        const range = getMarkRange($pos, mark.type)\n\n        if (!range) {\n          return\n        }\n\n        marks.push({\n          mark,\n          ...range,\n        })\n      })\n  } else {\n    doc.nodesBetween(from, to, (node, pos) => {\n      marks.push(\n        ...node.marks.map(mark => ({\n          from: pos,\n          to: pos + node.nodeSize,\n          mark,\n        })),\n      )\n    })\n  }\n\n  return marks\n}\n", "import { ExtensionAttribute } from '../types'\n\nexport function getSplittedAttributes(\n  extensionAttributes: ExtensionAttribute[],\n  typeName: string,\n  attributes: Record<string, any>,\n): Record<string, any> {\n  return Object.fromEntries(Object\n    .entries(attributes)\n    .filter(([name]) => {\n      const extensionAttribute = extensionAttributes.find(item => {\n        return item.type === typeName && item.name === name\n      })\n\n      if (!extensionAttribute) {\n        return false\n      }\n\n      return extensionAttribute.attribute.keepOnSplit\n    }))\n}\n", "import { MarkType } from '@tiptap/pm/model'\nimport { EditorState } from '@tiptap/pm/state'\n\nimport { MarkRange } from '../types'\nimport { objectIncludes } from '../utilities/objectIncludes'\nimport { getMarkType } from './getMarkType'\n\nexport function isMarkActive(\n  state: EditorState,\n  typeOrName: MarkType | string | null,\n  attributes: Record<string, any> = {},\n): boolean {\n  const { empty, ranges } = state.selection\n  const type = typeOrName ? getMarkType(typeOrName, state.schema) : null\n\n  if (empty) {\n    return !!(state.storedMarks || state.selection.$from.marks())\n      .filter(mark => {\n        if (!type) {\n          return true\n        }\n\n        return type.name === mark.type.name\n      })\n      .find(mark => objectIncludes(mark.attrs, attributes, { strict: false }))\n  }\n\n  let selectionRange = 0\n  const markRanges: MarkRange[] = []\n\n  ranges.forEach(({ $from, $to }) => {\n    const from = $from.pos\n    const to = $to.pos\n\n    state.doc.nodesBetween(from, to, (node, pos) => {\n      if (!node.isText && !node.marks.length) {\n        return\n      }\n\n      const relativeFrom = Math.max(from, pos)\n      const relativeTo = Math.min(to, pos + node.nodeSize)\n      const range = relativeTo - relativeFrom\n\n      selectionRange += range\n\n      markRanges.push(\n        ...node.marks.map(mark => ({\n          mark,\n          from: relativeFrom,\n          to: relativeTo,\n        })),\n      )\n    })\n  })\n\n  if (selectionRange === 0) {\n    return false\n  }\n\n  // calculate range of matched mark\n  const matchedRange = markRanges\n    .filter(markRange => {\n      if (!type) {\n        return true\n      }\n\n      return type.name === markRange.mark.type.name\n    })\n    .filter(markRange => objectIncludes(markRange.mark.attrs, attributes, { strict: false }))\n    .reduce((sum, markRange) => sum + markRange.to - markRange.from, 0)\n\n  // calculate range of marks that excludes the searched mark\n  // for example `code` doesn\u2019t allow any other marks\n  const excludedRange = markRanges\n    .filter(markRange => {\n      if (!type) {\n        return true\n      }\n\n      return markRange.mark.type !== type && markRange.mark.type.excludes(type)\n    })\n    .reduce((sum, markRange) => sum + markRange.to - markRange.from, 0)\n\n  // we only include the result of `excludedRange`\n  // if there is a match at all\n  const range = matchedRange > 0 ? matchedRange + excludedRange : matchedRange\n\n  return range >= selectionRange\n}\n", "import { EditorState } from '@tiptap/pm/state'\n\nimport { getSchemaTypeNameByName } from './getSchemaTypeNameByName'\nimport { isMarkActive } from './isMarkActive'\nimport { isNodeActive } from './isNodeActive'\n\nexport function isActive(\n  state: EditorState,\n  name: string | null,\n  attributes: Record<string, any> = {},\n): boolean {\n  if (!name) {\n    return isNodeActive(state, null, attributes) || isMarkActive(state, null, attributes)\n  }\n\n  const schemaType = getSchemaTypeNameByName(name, state.schema)\n\n  if (schemaType === 'node') {\n    return isNodeActive(state, name, attributes)\n  }\n\n  if (schemaType === 'mark') {\n    return isMarkActive(state, name, attributes)\n  }\n\n  return false\n}\n", "import { NodeConfig } from '..'\nimport { getExtensionField } from '../helpers/getExtensionField'\nimport { Extensions } from '../types'\nimport { callOrReturn } from '../utilities/callOrReturn'\nimport { splitExtensions } from './splitExtensions'\n\nexport function isList(name: string, extensions: Extensions): boolean {\n  const { nodeExtensions } = splitExtensions(extensions)\n  const extension = nodeExtensions.find(item => item.name === name)\n\n  if (!extension) {\n    return false\n  }\n\n  const context = {\n    name: extension.name,\n    options: extension.options,\n    storage: extension.storage,\n  }\n  const group = callOrReturn(getExtensionField<NodeConfig['group']>(extension, 'group', context))\n\n  if (typeof group !== 'string') {\n    return false\n  }\n\n  return group.split(' ').includes('list')\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\n\nexport function isNodeEmpty(node: ProseMirrorNode): boolean {\n  const defaultContent = node.type.createAndFill()?.toJSON()\n  const content = node.toJSON()\n\n  return JSON.stringify(defaultContent) === JSON.stringify(content)\n}\n", "import { NodeSelection } from '@tiptap/pm/state'\n\nexport function isNodeSelection(value: unknown): value is NodeSelection {\n  return value instanceof NodeSelection\n}\n", "import { EditorView } from '@tiptap/pm/view'\n\nimport { minMax } from '../utilities/minMax'\n\nexport function posToDOMRect(view: EditorView, from: number, to: number): DOMRect {\n  const minPos = 0\n  const maxPos = view.state.doc.content.size\n  const resolvedFrom = minMax(from, minPos, maxPos)\n  const resolvedEnd = minMax(to, minPos, maxPos)\n  const start = view.coordsAtPos(resolvedFrom)\n  const end = view.coordsAtPos(resolvedEnd, -1)\n  const top = Math.min(start.top, end.top)\n  const bottom = Math.max(start.bottom, end.bottom)\n  const left = Math.min(start.left, end.left)\n  const right = Math.max(start.right, end.right)\n  const width = right - left\n  const height = bottom - top\n  const x = left\n  const y = top\n  const data = {\n    top,\n    bottom,\n    left,\n    right,\n    width,\n    height,\n    x,\n    y,\n  }\n\n  return {\n    ...data,\n    toJSON: () => data,\n  }\n}\n", "import { MarkType, ResolvedPos } from '@tiptap/pm/model'\nimport { EditorState, Transaction } from '@tiptap/pm/state'\n\nimport { isTextSelection } from '../helpers'\nimport { getMarkAttributes } from '../helpers/getMarkAttributes'\nimport { getMarkType } from '../helpers/getMarkType'\nimport { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    setMark: {\n      /**\n       * Add a mark with new attributes.\n       */\n      setMark: (typeOrName: string | MarkType, attributes?: Record<string, any>) => ReturnType\n    }\n  }\n}\n\nfunction canSetMark(state: EditorState, tr: Transaction, newMarkType: MarkType) {\n  const { selection } = tr\n  let cursor: ResolvedPos | null = null\n\n  if (isTextSelection(selection)) {\n    cursor = selection.$cursor\n  }\n\n  if (cursor) {\n    const currentMarks = state.storedMarks ?? cursor.marks()\n\n    // There can be no current marks that exclude the new mark\n    return (\n      !!newMarkType.isInSet(currentMarks)\n      || !currentMarks.some(mark => mark.type.excludes(newMarkType))\n    )\n  }\n\n  const { ranges } = selection\n\n  return ranges.some(({ $from, $to }) => {\n    let someNodeSupportsMark = $from.depth === 0\n      ? state.doc.inlineContent && state.doc.type.allowsMarkType(newMarkType)\n      : false\n\n    state.doc.nodesBetween($from.pos, $to.pos, (node, _pos, parent) => {\n      // If we already found a mark that we can enable, return false to bypass the remaining search\n      if (someNodeSupportsMark) {\n        return false\n      }\n\n      if (node.isInline) {\n        const parentAllowsMarkType = !parent || parent.type.allowsMarkType(newMarkType)\n        const currentMarksAllowMarkType = !!newMarkType.isInSet(node.marks)\n          || !node.marks.some(otherMark => otherMark.type.excludes(newMarkType))\n\n        someNodeSupportsMark = parentAllowsMarkType && currentMarksAllowMarkType\n      }\n      return !someNodeSupportsMark\n    })\n\n    return someNodeSupportsMark\n  })\n}\nexport const setMark: RawCommands['setMark'] = (typeOrName, attributes = {}) => ({ tr, state, dispatch }) => {\n  const { selection } = tr\n  const { empty, ranges } = selection\n  const type = getMarkType(typeOrName, state.schema)\n\n  if (dispatch) {\n    if (empty) {\n      const oldAttributes = getMarkAttributes(state, type)\n\n      tr.addStoredMark(\n        type.create({\n          ...oldAttributes,\n          ...attributes,\n        }),\n      )\n    } else {\n      ranges.forEach(range => {\n        const from = range.$from.pos\n        const to = range.$to.pos\n\n        state.doc.nodesBetween(from, to, (node, pos) => {\n          const trimmedFrom = Math.max(pos, from)\n          const trimmedTo = Math.min(pos + node.nodeSize, to)\n          const someHasMark = node.marks.find(mark => mark.type === type)\n\n          // if there is already a mark of this type\n          // we know that we have to merge its attributes\n          // otherwise we add a fresh new mark\n          if (someHasMark) {\n            node.marks.forEach(mark => {\n              if (type === mark.type) {\n                tr.addMark(\n                  trimmedFrom,\n                  trimmedTo,\n                  type.create({\n                    ...mark.attrs,\n                    ...attributes,\n                  }),\n                )\n              }\n            })\n          } else {\n            tr.addMark(trimmedFrom, trimmedTo, type.create(attributes))\n          }\n        })\n      })\n    }\n  }\n\n  return canSetMark(state, tr, type)\n}\n", "import { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    setMeta: {\n      /**\n       * Store a metadata property in the current transaction.\n       */\n      setMeta: (key: string, value: any) => ReturnType,\n    }\n  }\n}\n\nexport const setMeta: RawCommands['setMeta'] = (key, value) => ({ tr }) => {\n  tr.setMeta(key, value)\n\n  return true\n}\n", "import { setBlockType } from '@tiptap/pm/commands'\nimport { NodeType } from '@tiptap/pm/model'\n\nimport { getNodeType } from '../helpers/getNodeType'\nimport { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    setNode: {\n      /**\n       * Replace a given range with a node.\n       */\n      setNode: (typeOrName: string | NodeType, attributes?: Record<string, any>) => ReturnType\n    }\n  }\n}\n\nexport const setNode: RawCommands['setNode'] = (typeOrName, attributes = {}) => ({ state, dispatch, chain }) => {\n  const type = getNodeType(typeOrName, state.schema)\n\n  // TODO: use a fallback like insertContent?\n  if (!type.isTextblock) {\n    console.warn('[tiptap warn]: Currently \"setNode()\" only supports text block nodes.')\n\n    return false\n  }\n\n  return (\n    chain()\n    // try to convert node to default node if needed\n      .command(({ commands }) => {\n        const canSetBlock = setBlockType(type, attributes)(state)\n\n        if (canSetBlock) {\n          return true\n        }\n\n        return commands.clearNodes()\n      })\n      .command(({ state: updatedState }) => {\n        return setBlockType(type, attributes)(updatedState, dispatch)\n      })\n      .run()\n  )\n}\n", "import { NodeSelection } from '@tiptap/pm/state'\n\nimport { RawCommands } from '../types'\nimport { minMax } from '../utilities/minMax'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    setNodeSelection: {\n      /**\n       * Creates a NodeSelection.\n       */\n      setNodeSelection: (position: number) => ReturnType\n    }\n  }\n}\n\nexport const setNodeSelection: RawCommands['setNodeSelection'] = position => ({ tr, dispatch }) => {\n  if (dispatch) {\n    const { doc } = tr\n    const from = minMax(position, 0, doc.content.size)\n    const selection = NodeSelection.create(doc, from)\n\n    tr.setSelection(selection)\n  }\n\n  return true\n}\n", "import { TextSelection } from '@tiptap/pm/state'\n\nimport { Range, RawCommands } from '../types'\nimport { minMax } from '../utilities/minMax'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    setTextSelection: {\n      /**\n       * Creates a TextSelection.\n       */\n      setTextSelection: (position: number | Range) => ReturnType\n    }\n  }\n}\n\nexport const setTextSelection: RawCommands['setTextSelection'] = position => ({ tr, dispatch }) => {\n  if (dispatch) {\n    const { doc } = tr\n    const { from, to } = typeof position === 'number' ? { from: position, to: position } : position\n    const minPos = TextSelection.atStart(doc).from\n    const maxPos = TextSelection.atEnd(doc).to\n    const resolvedFrom = minMax(from, minPos, maxPos)\n    const resolvedEnd = minMax(to, minPos, maxPos)\n    const selection = TextSelection.create(doc, resolvedFrom, resolvedEnd)\n\n    tr.setSelection(selection)\n  }\n\n  return true\n}\n", "import { NodeType } from '@tiptap/pm/model'\nimport { sinkListItem as originalSinkListItem } from '@tiptap/pm/schema-list'\n\nimport { getNodeType } from '../helpers/getNodeType'\nimport { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    sinkListItem: {\n      /**\n       * Sink the list item down into an inner list.\n       */\n      sinkListItem: (typeOrName: string | NodeType) => ReturnType\n    }\n  }\n}\n\nexport const sinkListItem: RawCommands['sinkListItem'] = typeOrName => ({ state, dispatch }) => {\n  const type = getNodeType(typeOrName, state.schema)\n\n  return originalSinkListItem(type)(state, dispatch)\n}\n", "import { EditorState, NodeSelection, TextSelection } from '@tiptap/pm/state'\nimport { canSplit } from '@tiptap/pm/transform'\n\nimport { defaultBlockAt } from '../helpers/defaultBlockAt'\nimport { getSplittedAttributes } from '../helpers/getSplittedAttributes'\nimport { RawCommands } from '../types'\n\nfunction ensureMarks(state: EditorState, splittableMarks?: string[]) {\n  const marks = state.storedMarks || (state.selection.$to.parentOffset && state.selection.$from.marks())\n\n  if (marks) {\n    const filteredMarks = marks.filter(mark => splittableMarks?.includes(mark.type.name))\n\n    state.tr.ensureMarks(filteredMarks)\n  }\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    splitBlock: {\n      /**\n       * Forks a new node from an existing node.\n       */\n      splitBlock: (options?: { keepMarks?: boolean }) => ReturnType\n    }\n  }\n}\n\nexport const splitBlock: RawCommands['splitBlock'] = ({ keepMarks = true } = {}) => ({\n  tr, state, dispatch, editor,\n}) => {\n  const { selection, doc } = tr\n  const { $from, $to } = selection\n  const extensionAttributes = editor.extensionManager.attributes\n  const newAttributes = getSplittedAttributes(\n    extensionAttributes,\n    $from.node().type.name,\n    $from.node().attrs,\n  )\n\n  if (selection instanceof NodeSelection && selection.node.isBlock) {\n    if (!$from.parentOffset || !canSplit(doc, $from.pos)) {\n      return false\n    }\n\n    if (dispatch) {\n      if (keepMarks) {\n        ensureMarks(state, editor.extensionManager.splittableMarks)\n      }\n\n      tr.split($from.pos).scrollIntoView()\n    }\n\n    return true\n  }\n\n  if (!$from.parent.isBlock) {\n    return false\n  }\n\n  if (dispatch) {\n    const atEnd = $to.parentOffset === $to.parent.content.size\n\n    if (selection instanceof TextSelection) {\n      tr.deleteSelection()\n    }\n\n    const deflt = $from.depth === 0\n      ? undefined\n      : defaultBlockAt($from.node(-1).contentMatchAt($from.indexAfter(-1)))\n\n    let types = atEnd && deflt\n      ? [\n        {\n          type: deflt,\n          attrs: newAttributes,\n        },\n      ]\n      : undefined\n\n    let can = canSplit(tr.doc, tr.mapping.map($from.pos), 1, types)\n\n    if (\n      !types\n        && !can\n        && canSplit(tr.doc, tr.mapping.map($from.pos), 1, deflt ? [{ type: deflt }] : undefined)\n    ) {\n      can = true\n      types = deflt\n        ? [\n          {\n            type: deflt,\n            attrs: newAttributes,\n          },\n        ]\n        : undefined\n    }\n\n    if (can) {\n      tr.split(tr.mapping.map($from.pos), 1, types)\n\n      if (deflt && !atEnd && !$from.parentOffset && $from.parent.type !== deflt) {\n        const first = tr.mapping.map($from.before())\n        const $first = tr.doc.resolve(first)\n\n        if ($from.node(-1).canReplaceWith($first.index(), $first.index() + 1, deflt)) {\n          tr.setNodeMarkup(tr.mapping.map($from.before()), deflt)\n        }\n      }\n    }\n\n    if (keepMarks) {\n      ensureMarks(state, editor.extensionManager.splittableMarks)\n    }\n\n    tr.scrollIntoView()\n  }\n\n  return true\n}\n", "import {\n  Fragment, Node as ProseMirrorNode, NodeType, Slice,\n} from '@tiptap/pm/model'\nimport { TextSelection } from '@tiptap/pm/state'\nimport { canSplit } from '@tiptap/pm/transform'\n\nimport { getNodeType } from '../helpers/getNodeType'\nimport { getSplittedAttributes } from '../helpers/getSplittedAttributes'\nimport { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    splitListItem: {\n      /**\n       * Splits one list item into two list items.\n       */\n      splitListItem: (typeOrName: string | NodeType) => ReturnType\n    }\n  }\n}\n\nexport const splitListItem: RawCommands['splitListItem'] = typeOrName => ({\n  tr, state, dispatch, editor,\n}) => {\n  const type = getNodeType(typeOrName, state.schema)\n  const { $from, $to } = state.selection\n\n  // @ts-ignore\n  // eslint-disable-next-line\n    const node: ProseMirrorNode = state.selection.node\n\n  if ((node && node.isBlock) || $from.depth < 2 || !$from.sameParent($to)) {\n    return false\n  }\n\n  const grandParent = $from.node(-1)\n\n  if (grandParent.type !== type) {\n    return false\n  }\n\n  const extensionAttributes = editor.extensionManager.attributes\n\n  if ($from.parent.content.size === 0 && $from.node(-1).childCount === $from.indexAfter(-1)) {\n    // In an empty block. If this is a nested list, the wrapping\n    // list item should be split. Otherwise, bail out and let next\n    // command handle lifting.\n    if (\n      $from.depth === 2\n        || $from.node(-3).type !== type\n        || $from.index(-2) !== $from.node(-2).childCount - 1\n    ) {\n      return false\n    }\n\n    if (dispatch) {\n      let wrap = Fragment.empty\n      // eslint-disable-next-line\n        const depthBefore = $from.index(-1) ? 1 : $from.index(-2) ? 2 : 3\n\n      // Build a fragment containing empty versions of the structure\n      // from the outer list item to the parent node of the cursor\n      for (let d = $from.depth - depthBefore; d >= $from.depth - 3; d -= 1) {\n        wrap = Fragment.from($from.node(d).copy(wrap))\n      }\n\n      // eslint-disable-next-line\n        const depthAfter = $from.indexAfter(-1) < $from.node(-2).childCount ? 1 : $from.indexAfter(-2) < $from.node(-3).childCount ? 2 : 3\n\n      // Add a second list item with an empty default start node\n      const newNextTypeAttributes = getSplittedAttributes(\n        extensionAttributes,\n        $from.node().type.name,\n        $from.node().attrs,\n      )\n      const nextType = type.contentMatch.defaultType?.createAndFill(newNextTypeAttributes) || undefined\n\n      wrap = wrap.append(Fragment.from(type.createAndFill(null, nextType) || undefined))\n\n      const start = $from.before($from.depth - (depthBefore - 1))\n\n      tr.replace(start, $from.after(-depthAfter), new Slice(wrap, 4 - depthBefore, 0))\n\n      let sel = -1\n\n      tr.doc.nodesBetween(start, tr.doc.content.size, (n, pos) => {\n        if (sel > -1) {\n          return false\n        }\n\n        if (n.isTextblock && n.content.size === 0) {\n          sel = pos + 1\n        }\n      })\n\n      if (sel > -1) {\n        tr.setSelection(TextSelection.near(tr.doc.resolve(sel)))\n      }\n\n      tr.scrollIntoView()\n    }\n\n    return true\n  }\n\n  const nextType = $to.pos === $from.end() ? grandParent.contentMatchAt(0).defaultType : null\n\n  const newTypeAttributes = getSplittedAttributes(\n    extensionAttributes,\n    grandParent.type.name,\n    grandParent.attrs,\n  )\n  const newNextTypeAttributes = getSplittedAttributes(\n    extensionAttributes,\n    $from.node().type.name,\n    $from.node().attrs,\n  )\n\n  tr.delete($from.pos, $to.pos)\n\n  const types = nextType\n    ? [\n      { type, attrs: newTypeAttributes },\n      { type: nextType, attrs: newNextTypeAttributes },\n    ]\n    : [{ type, attrs: newTypeAttributes }]\n\n  if (!canSplit(tr.doc, $from.pos, 2)) {\n    return false\n  }\n\n  if (dispatch) {\n    const { selection, storedMarks } = state\n    const { splittableMarks } = editor.extensionManager\n    const marks = storedMarks || (selection.$to.parentOffset && selection.$from.marks())\n\n    tr.split($from.pos, 2, types).scrollIntoView()\n\n    if (!marks || !dispatch) {\n      return true\n    }\n\n    const filteredMarks = marks.filter(mark => splittableMarks.includes(mark.type.name))\n\n    tr.ensureMarks(filteredMarks)\n  }\n\n  return true\n}\n", "import { NodeType } from '@tiptap/pm/model'\nimport { Transaction } from '@tiptap/pm/state'\nimport { canJoin } from '@tiptap/pm/transform'\n\nimport { findParentNode } from '../helpers/findParentNode'\nimport { getNodeType } from '../helpers/getNodeType'\nimport { isList } from '../helpers/isList'\nimport { RawCommands } from '../types'\n\nconst joinListBackwards = (tr: Transaction, listType: NodeType): boolean => {\n  const list = findParentNode(node => node.type === listType)(tr.selection)\n\n  if (!list) {\n    return true\n  }\n\n  const before = tr.doc.resolve(Math.max(0, list.pos - 1)).before(list.depth)\n\n  if (before === undefined) {\n    return true\n  }\n\n  const nodeBefore = tr.doc.nodeAt(before)\n  const canJoinBackwards = list.node.type === nodeBefore?.type && canJoin(tr.doc, list.pos)\n\n  if (!canJoinBackwards) {\n    return true\n  }\n\n  tr.join(list.pos)\n\n  return true\n}\n\nconst joinListForwards = (tr: Transaction, listType: NodeType): boolean => {\n  const list = findParentNode(node => node.type === listType)(tr.selection)\n\n  if (!list) {\n    return true\n  }\n\n  const after = tr.doc.resolve(list.start).after(list.depth)\n\n  if (after === undefined) {\n    return true\n  }\n\n  const nodeAfter = tr.doc.nodeAt(after)\n  const canJoinForwards = list.node.type === nodeAfter?.type && canJoin(tr.doc, after)\n\n  if (!canJoinForwards) {\n    return true\n  }\n\n  tr.join(after)\n\n  return true\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    toggleList: {\n      /**\n       * Toggle between different list types.\n       */\n      toggleList: (listTypeOrName: string | NodeType, itemTypeOrName: string | NodeType, keepMarks?: boolean, attributes?: Record<string, any>) => ReturnType;\n    }\n  }\n}\n\nexport const toggleList: RawCommands['toggleList'] = (listTypeOrName, itemTypeOrName, keepMarks, attributes = {}) => ({\n  editor, tr, state, dispatch, chain, commands, can,\n}) => {\n  const { extensions, splittableMarks } = editor.extensionManager\n  const listType = getNodeType(listTypeOrName, state.schema)\n  const itemType = getNodeType(itemTypeOrName, state.schema)\n  const { selection, storedMarks } = state\n  const { $from, $to } = selection\n  const range = $from.blockRange($to)\n\n  const marks = storedMarks || (selection.$to.parentOffset && selection.$from.marks())\n\n  if (!range) {\n    return false\n  }\n\n  const parentList = findParentNode(node => isList(node.type.name, extensions))(selection)\n\n  if (range.depth >= 1 && parentList && range.depth - parentList.depth <= 1) {\n    // remove list\n    if (parentList.node.type === listType) {\n      return commands.liftListItem(itemType)\n    }\n\n    // change list type\n    if (\n      isList(parentList.node.type.name, extensions)\n        && listType.validContent(parentList.node.content)\n        && dispatch\n    ) {\n      return chain()\n        .command(() => {\n          tr.setNodeMarkup(parentList.pos, listType)\n\n          return true\n        })\n        .command(() => joinListBackwards(tr, listType))\n        .command(() => joinListForwards(tr, listType))\n        .run()\n    }\n  }\n  if (!keepMarks || !marks || !dispatch) {\n\n    return chain()\n      // try to convert node to default node if needed\n      .command(() => {\n        const canWrapInList = can().wrapInList(listType, attributes)\n\n        if (canWrapInList) {\n          return true\n        }\n\n        return commands.clearNodes()\n      })\n      .wrapInList(listType, attributes)\n      .command(() => joinListBackwards(tr, listType))\n      .command(() => joinListForwards(tr, listType))\n      .run()\n  }\n\n  return (\n    chain()\n    // try to convert node to default node if needed\n      .command(() => {\n        const canWrapInList = can().wrapInList(listType, attributes)\n\n        const filteredMarks = marks.filter(mark => splittableMarks.includes(mark.type.name))\n\n        tr.ensureMarks(filteredMarks)\n\n        if (canWrapInList) {\n          return true\n        }\n\n        return commands.clearNodes()\n      })\n      .wrapInList(listType, attributes)\n      .command(() => joinListBackwards(tr, listType))\n      .command(() => joinListForwards(tr, listType))\n      .run()\n  )\n}\n", "import { MarkType } from '@tiptap/pm/model'\n\nimport { getMarkType } from '../helpers/getMarkType'\nimport { isMarkActive } from '../helpers/isMarkActive'\nimport { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    toggleMark: {\n      /**\n       * Toggle a mark on and off.\n       */\n      toggleMark: (\n        typeOrName: string | MarkType,\n        attributes?: Record<string, any>,\n        options?: {\n          /**\n           * Removes the mark even across the current selection. Defaults to `false`.\n           */\n          extendEmptyMarkRange?: boolean\n        },\n      ) => ReturnType\n    }\n  }\n}\n\nexport const toggleMark: RawCommands['toggleMark'] = (typeOrName, attributes = {}, options = {}) => ({ state, commands }) => {\n  const { extendEmptyMarkRange = false } = options\n  const type = getMarkType(typeOrName, state.schema)\n  const isActive = isMarkActive(state, type, attributes)\n\n  if (isActive) {\n    return commands.unsetMark(type, { extendEmptyMarkRange })\n  }\n\n  return commands.setMark(type, attributes)\n}\n", "import { NodeType } from '@tiptap/pm/model'\n\nimport { getNodeType } from '../helpers/getNodeType'\nimport { isNodeActive } from '../helpers/isNodeActive'\nimport { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    toggleNode: {\n      /**\n       * Toggle a node with another node.\n       */\n      toggleNode: (\n        typeOrName: string | NodeType,\n        toggleTypeOrName: string | NodeType,\n        attributes?: Record<string, any>,\n      ) => ReturnType\n    }\n  }\n}\n\nexport const toggleNode: RawCommands['toggleNode'] = (typeOrName, toggleTypeOrName, attributes = {}) => ({ state, commands }) => {\n  const type = getNodeType(typeOrName, state.schema)\n  const toggleType = getNodeType(toggleTypeOrName, state.schema)\n  const isActive = isNodeActive(state, type, attributes)\n\n  if (isActive) {\n    return commands.setNode(toggleType)\n  }\n\n  return commands.setNode(type, attributes)\n}\n", "import { NodeType } from '@tiptap/pm/model'\n\nimport { getNodeType } from '../helpers/getNodeType'\nimport { isNodeActive } from '../helpers/isNodeActive'\nimport { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    toggleWrap: {\n      /**\n       * Wraps nodes in another node, or removes an existing wrap.\n       */\n      toggleWrap: (typeOrName: string | NodeType, attributes?: Record<string, any>) => ReturnType\n    }\n  }\n}\n\nexport const toggleWrap: RawCommands['toggleWrap'] = (typeOrName, attributes = {}) => ({ state, commands }) => {\n  const type = getNodeType(typeOrName, state.schema)\n  const isActive = isNodeActive(state, type, attributes)\n\n  if (isActive) {\n    return commands.lift(type)\n  }\n\n  return commands.wrapIn(type, attributes)\n}\n", "import { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    undoInputRule: {\n      /**\n       * Undo an input rule.\n       */\n      undoInputRule: () => ReturnType,\n    }\n  }\n}\n\nexport const undoInputRule: RawCommands['undoInputRule'] = () => ({ state, dispatch }) => {\n  const plugins = state.plugins\n\n  for (let i = 0; i < plugins.length; i += 1) {\n    const plugin = plugins[i]\n    let undoable\n\n    // @ts-ignore\n    // eslint-disable-next-line\n    if (plugin.spec.isInputRules && (undoable = plugin.getState(state))) {\n      if (dispatch) {\n        const tr = state.tr\n        const toUndo = undoable.transform\n\n        for (let j = toUndo.steps.length - 1; j >= 0; j -= 1) {\n          tr.step(toUndo.steps[j].invert(toUndo.docs[j]))\n        }\n\n        if (undoable.text) {\n          const marks = tr.doc.resolve(undoable.from).marks()\n\n          tr.replaceWith(undoable.from, undoable.to, state.schema.text(undoable.text, marks))\n        } else {\n          tr.delete(undoable.from, undoable.to)\n        }\n      }\n\n      return true\n    }\n  }\n\n  return false\n}\n", "import { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    unsetAllMarks: {\n      /**\n       * Remove all marks in the current selection.\n       */\n      unsetAllMarks: () => ReturnType,\n    }\n  }\n}\n\nexport const unsetAllMarks: RawCommands['unsetAllMarks'] = () => ({ tr, dispatch }) => {\n  const { selection } = tr\n  const { empty, ranges } = selection\n\n  if (empty) {\n    return true\n  }\n\n  if (dispatch) {\n    ranges.forEach(range => {\n      tr.removeMark(range.$from.pos, range.$to.pos)\n    })\n  }\n\n  return true\n}\n", "import { MarkType } from '@tiptap/pm/model'\n\nimport { getMarkRange } from '../helpers/getMarkRange'\nimport { getMarkType } from '../helpers/getMarkType'\nimport { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    unsetMark: {\n      /**\n       * Remove all marks in the current selection.\n       */\n      unsetMark: (\n        typeOrName: string | MarkType,\n        options?: {\n          /**\n           * Removes the mark even across the current selection. Defaults to `false`.\n           */\n          extendEmptyMarkRange?: boolean\n        },\n      ) => ReturnType\n    }\n  }\n}\n\nexport const unsetMark: RawCommands['unsetMark'] = (typeOrName, options = {}) => ({ tr, state, dispatch }) => {\n  const { extendEmptyMarkRange = false } = options\n  const { selection } = tr\n  const type = getMarkType(typeOrName, state.schema)\n  const { $from, empty, ranges } = selection\n\n  if (!dispatch) {\n    return true\n  }\n\n  if (empty && extendEmptyMarkRange) {\n    let { from, to } = selection\n    const attrs = $from.marks().find(mark => mark.type === type)?.attrs\n    const range = getMarkRange($from, type, attrs)\n\n    if (range) {\n      from = range.from\n      to = range.to\n    }\n\n    tr.removeMark(from, to, type)\n  } else {\n    ranges.forEach(range => {\n      tr.removeMark(range.$from.pos, range.$to.pos, type)\n    })\n  }\n\n  tr.removeStoredMark(type)\n\n  return true\n}\n", "import { MarkType, NodeType } from '@tiptap/pm/model'\n\nimport { getMarkType } from '../helpers/getMarkType'\nimport { getNodeType } from '../helpers/getNodeType'\nimport { getSchemaTypeNameByName } from '../helpers/getSchemaTypeNameByName'\nimport { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    updateAttributes: {\n      /**\n       * Update attributes of a node or mark.\n       */\n      updateAttributes: (\n        typeOrName: string | NodeType | MarkType,\n        attributes: Record<string, any>,\n      ) => ReturnType\n    }\n  }\n}\n\nexport const updateAttributes: RawCommands['updateAttributes'] = (typeOrName, attributes = {}) => ({ tr, state, dispatch }) => {\n  let nodeType: NodeType | null = null\n  let markType: MarkType | null = null\n\n  const schemaType = getSchemaTypeNameByName(\n    typeof typeOrName === 'string' ? typeOrName : typeOrName.name,\n    state.schema,\n  )\n\n  if (!schemaType) {\n    return false\n  }\n\n  if (schemaType === 'node') {\n    nodeType = getNodeType(typeOrName as NodeType, state.schema)\n  }\n\n  if (schemaType === 'mark') {\n    markType = getMarkType(typeOrName as MarkType, state.schema)\n  }\n\n  if (dispatch) {\n    tr.selection.ranges.forEach(range => {\n      const from = range.$from.pos\n      const to = range.$to.pos\n\n      state.doc.nodesBetween(from, to, (node, pos) => {\n        if (nodeType && nodeType === node.type) {\n          tr.setNodeMarkup(pos, undefined, {\n            ...node.attrs,\n            ...attributes,\n          })\n        }\n\n        if (markType && node.marks.length) {\n          node.marks.forEach(mark => {\n            if (markType === mark.type) {\n              const trimmedFrom = Math.max(pos, from)\n              const trimmedTo = Math.min(pos + node.nodeSize, to)\n\n              tr.addMark(\n                trimmedFrom,\n                trimmedTo,\n                markType.create({\n                  ...mark.attrs,\n                  ...attributes,\n                }),\n              )\n            }\n          })\n        }\n      })\n    })\n  }\n\n  return true\n}\n", "import { wrapIn as originalWrapIn } from '@tiptap/pm/commands'\nimport { NodeType } from '@tiptap/pm/model'\n\nimport { getNodeType } from '../helpers/getNodeType'\nimport { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    wrapIn: {\n      /**\n       * Wraps nodes in another node.\n       */\n      wrapIn: (typeOrName: string | NodeType, attributes?: Record<string, any>) => ReturnType\n    }\n  }\n}\n\nexport const wrapIn: RawCommands['wrapIn'] = (typeOrName, attributes = {}) => ({ state, dispatch }) => {\n  const type = getNodeType(typeOrName, state.schema)\n\n  return originalWrapIn(type, attributes)(state, dispatch)\n}\n", "import { NodeType } from '@tiptap/pm/model'\nimport { wrapInList as originalWrapInList } from '@tiptap/pm/schema-list'\n\nimport { getNodeType } from '../helpers/getNodeType'\nimport { RawCommands } from '../types'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    wrapInList: {\n      /**\n       * Wrap a node in a list.\n       */\n      wrapInList: (typeOrName: string | NodeType, attributes?: Record<string, any>) => ReturnType\n    }\n  }\n}\n\nexport const wrapInList: RawCommands['wrapInList'] = (typeOrName, attributes = {}) => ({ state, dispatch }) => {\n  const type = getNodeType(typeOrName, state.schema)\n\n  return originalWrapInList(type, attributes)(state, dispatch)\n}\n", "import * as commands from '../commands'\nimport { Extension } from '../Extension'\n\nexport * from '../commands'\n\nexport const Commands = Extension.create({\n  name: 'commands',\n\n  addCommands() {\n    return {\n      ...commands,\n    }\n  },\n})\n", "import { Plugin, PluginKey } from '@tiptap/pm/state'\n\nimport { Extension } from '../Extension'\n\nexport const Editable = Extension.create({\n  name: 'editable',\n\n  addProseMirrorPlugins() {\n    return [\n      new Plugin({\n        key: new PluginKey('editable'),\n        props: {\n          editable: () => this.editor.options.editable,\n        },\n      }),\n    ]\n  },\n})\n", "import { Plugin, PluginKey } from '@tiptap/pm/state'\n\nimport { Extension } from '../Extension'\n\nexport const FocusEvents = Extension.create({\n  name: 'focusEvents',\n\n  addProseMirrorPlugins() {\n    const { editor } = this\n\n    return [\n      new Plugin({\n        key: new PluginKey('focusEvents'),\n        props: {\n          handleDOMEvents: {\n            focus: (view, event: Event) => {\n              editor.isFocused = true\n\n              const transaction = editor.state.tr\n                .setMeta('focus', { event })\n                .setMeta('addToHistory', false)\n\n              view.dispatch(transaction)\n\n              return false\n            },\n            blur: (view, event: Event) => {\n              editor.isFocused = false\n\n              const transaction = editor.state.tr\n                .setMeta('blur', { event })\n                .setMeta('addToHistory', false)\n\n              view.dispatch(transaction)\n\n              return false\n            },\n          },\n        },\n      }),\n    ]\n  },\n})\n", "import { Plugin, PluginKey, Selection } from '@tiptap/pm/state'\n\nimport { CommandManager } from '../CommandManager'\nimport { Extension } from '../Extension'\nimport { createChainableState } from '../helpers/createChainableState'\nimport { isiOS } from '../utilities/isiOS'\nimport { isMacOS } from '../utilities/isMacOS'\n\nexport const Keymap = Extension.create({\n  name: 'keymap',\n\n  addKeyboardShortcuts() {\n    const handleBackspace = () => this.editor.commands.first(({ commands }) => [\n      () => commands.undoInputRule(),\n      // maybe convert first text block node to default node\n      () => commands.command(({ tr }) => {\n        const { selection, doc } = tr\n        const { empty, $anchor } = selection\n        const { pos, parent } = $anchor\n        const isAtStart = Selection.atStart(doc).from === pos\n\n        if (!empty || !isAtStart || !parent.type.isTextblock || parent.textContent.length) {\n          return false\n        }\n\n        return commands.clearNodes()\n      }),\n      () => commands.deleteSelection(),\n      () => commands.joinBackward(),\n      () => commands.selectNodeBackward(),\n    ])\n\n    const handleDelete = () => this.editor.commands.first(({ commands }) => [\n      () => commands.deleteSelection(),\n      () => commands.deleteCurrentNode(),\n      () => commands.joinForward(),\n      () => commands.selectNodeForward(),\n    ])\n\n    const handleEnter = () => this.editor.commands.first(({ commands }) => [\n      () => commands.newlineInCode(),\n      () => commands.createParagraphNear(),\n      () => commands.liftEmptyBlock(),\n      () => commands.splitBlock(),\n    ])\n\n    const baseKeymap = {\n      Enter: handleEnter,\n      'Mod-Enter': () => this.editor.commands.exitCode(),\n      Backspace: handleBackspace,\n      'Mod-Backspace': handleBackspace,\n      'Shift-Backspace': handleBackspace,\n      Delete: handleDelete,\n      'Mod-Delete': handleDelete,\n      'Mod-a': () => this.editor.commands.selectAll(),\n    }\n\n    const pcKeymap = {\n      ...baseKeymap,\n    }\n\n    const macKeymap = {\n      ...baseKeymap,\n      'Ctrl-h': handleBackspace,\n      'Alt-Backspace': handleBackspace,\n      'Ctrl-d': handleDelete,\n      'Ctrl-Alt-Backspace': handleDelete,\n      'Alt-Delete': handleDelete,\n      'Alt-d': handleDelete,\n      'Ctrl-a': () => this.editor.commands.selectTextblockStart(),\n      'Ctrl-e': () => this.editor.commands.selectTextblockEnd(),\n    }\n\n    if (isiOS() || isMacOS()) {\n      return macKeymap\n    }\n\n    return pcKeymap\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      // With this plugin we check if the whole document was selected and deleted.\n      // In this case we will additionally call `clearNodes()` to convert e.g. a heading\n      // to a paragraph if necessary.\n      // This is an alternative to ProseMirror's `AllSelection`, which doesn\u2019t work well\n      // with many other commands.\n      new Plugin({\n        key: new PluginKey('clearDocument'),\n        appendTransaction: (transactions, oldState, newState) => {\n          const docChanges = transactions.some(transaction => transaction.docChanged)\n            && !oldState.doc.eq(newState.doc)\n\n          if (!docChanges) {\n            return\n          }\n\n          const { empty, from, to } = oldState.selection\n          const allFrom = Selection.atStart(oldState.doc).from\n          const allEnd = Selection.atEnd(oldState.doc).to\n          const allWasSelected = from === allFrom && to === allEnd\n\n          if (empty || !allWasSelected) {\n            return\n          }\n\n          const isEmpty = newState.doc.textBetween(0, newState.doc.content.size, ' ', ' ').length === 0\n\n          if (!isEmpty) {\n            return\n          }\n\n          const tr = newState.tr\n          const state = createChainableState({\n            state: newState,\n            transaction: tr,\n          })\n          const { commands } = new CommandManager({\n            editor: this.editor,\n            state,\n          })\n\n          commands.clearNodes()\n\n          if (!tr.steps.length) {\n            return\n          }\n\n          return tr\n        },\n      }),\n    ]\n  },\n})\n", "import { Plugin, PluginKey } from '@tiptap/pm/state'\n\nimport { Extension } from '../Extension'\n\nexport const Tabindex = Extension.create({\n  name: 'tabindex',\n\n  addProseMirrorPlugins() {\n    return [\n      new Plugin({\n        key: new PluginKey('tabindex'),\n        props: {\n          attributes: this.editor.isEditable ? { tabindex: '0' } : {},\n        },\n      }),\n    ]\n  },\n})\n", "export const style = `.ProseMirror {\n  position: relative;\n}\n\n.ProseMirror {\n  word-wrap: break-word;\n  white-space: pre-wrap;\n  white-space: break-spaces;\n  -webkit-font-variant-ligatures: none;\n  font-variant-ligatures: none;\n  font-feature-settings: \"liga\" 0; /* the above doesn't seem to work in Edge */\n}\n\n.ProseMirror [contenteditable=\"false\"] {\n  white-space: normal;\n}\n\n.ProseMirror [contenteditable=\"false\"] [contenteditable=\"true\"] {\n  white-space: pre-wrap;\n}\n\n.ProseMirror pre {\n  white-space: pre-wrap;\n}\n\nimg.ProseMirror-separator {\n  display: inline !important;\n  border: none !important;\n  margin: 0 !important;\n  width: 1px !important;\n  height: 1px !important;\n}\n\n.ProseMirror-gapcursor {\n  display: none;\n  pointer-events: none;\n  position: absolute;\n  margin: 0;\n}\n\n.ProseMirror-gapcursor:after {\n  content: \"\";\n  display: block;\n  position: absolute;\n  top: -2px;\n  width: 20px;\n  border-top: 1px solid black;\n  animation: ProseMirror-cursor-blink 1.1s steps(2, start) infinite;\n}\n\n@keyframes ProseMirror-cursor-blink {\n  to {\n    visibility: hidden;\n  }\n}\n\n.ProseMirror-hideselection *::selection {\n  background: transparent;\n}\n\n.ProseMirror-hideselection *::-moz-selection {\n  background: transparent;\n}\n\n.ProseMirror-hideselection * {\n  caret-color: transparent;\n}\n\n.ProseMirror-focused .ProseMirror-gapcursor {\n  display: block;\n}\n\n.tippy-box[data-animation=fade][data-state=hidden] {\n  opacity: 0\n}`\n", "export function createStyleTag(style: string, nonce?: string): HTMLStyleElement {\n  const tiptapStyleTag = (<HTMLStyleElement>document.querySelector('style[data-tiptap-style]'))\n\n  if (tiptapStyleTag !== null) {\n    return tiptapStyleTag\n  }\n\n  const styleNode = document.createElement('style')\n\n  if (nonce) {\n    styleNode.setAttribute('nonce', nonce)\n  }\n\n  styleNode.setAttribute('data-tiptap-style', '')\n  styleNode.innerHTML = style\n  document.getElementsByTagName('head')[0].appendChild(styleNode)\n\n  return styleNode\n}\n", "import { MarkType, NodeType, Schema } from '@tiptap/pm/model'\nimport {\n  EditorState, Plugin, PluginKey, Transaction,\n} from '@tiptap/pm/state'\nimport { EditorView } from '@tiptap/pm/view'\n\nimport { CommandManager } from './CommandManager'\nimport { EventEmitter } from './EventEmitter'\nimport { ExtensionManager } from './ExtensionManager'\nimport * as extensions from './extensions'\nimport { createDocument } from './helpers/createDocument'\nimport { getAttributes } from './helpers/getAttributes'\nimport { getHTMLFromFragment } from './helpers/getHTMLFromFragment'\nimport { getText } from './helpers/getText'\nimport { getTextSerializersFromSchema } from './helpers/getTextSerializersFromSchema'\nimport { isActive } from './helpers/isActive'\nimport { isNodeEmpty } from './helpers/isNodeEmpty'\nimport { resolveFocusPosition } from './helpers/resolveFocusPosition'\nimport { style } from './style'\nimport {\n  CanCommands,\n  ChainedCommands,\n  EditorEvents,\n  EditorOptions,\n  JSONContent,\n  SingleCommands,\n  TextSerializer,\n} from './types'\nimport { createStyleTag } from './utilities/createStyleTag'\nimport { isFunction } from './utilities/isFunction'\n\nexport { extensions }\n\nexport interface HTMLElement {\n  editor?: Editor\n}\n\nexport class Editor extends EventEmitter<EditorEvents> {\n  private commandManager!: CommandManager\n\n  public extensionManager!: ExtensionManager\n\n  private css!: HTMLStyleElement\n\n  public schema!: Schema\n\n  public view!: EditorView\n\n  public isFocused = false\n\n  public extensionStorage: Record<string, any> = {}\n\n  public options: EditorOptions = {\n    element: document.createElement('div'),\n    content: '',\n    injectCSS: true,\n    injectNonce: undefined,\n    extensions: [],\n    autofocus: false,\n    editable: true,\n    editorProps: {},\n    parseOptions: {},\n    enableInputRules: true,\n    enablePasteRules: true,\n    enableCoreExtensions: true,\n    onBeforeCreate: () => null,\n    onCreate: () => null,\n    onUpdate: () => null,\n    onSelectionUpdate: () => null,\n    onTransaction: () => null,\n    onFocus: () => null,\n    onBlur: () => null,\n    onDestroy: () => null,\n  }\n\n  constructor(options: Partial<EditorOptions> = {}) {\n    super()\n    this.setOptions(options)\n    this.createExtensionManager()\n    this.createCommandManager()\n    this.createSchema()\n    this.on('beforeCreate', this.options.onBeforeCreate)\n    this.emit('beforeCreate', { editor: this })\n    this.createView()\n    this.injectCSS()\n    this.on('create', this.options.onCreate)\n    this.on('update', this.options.onUpdate)\n    this.on('selectionUpdate', this.options.onSelectionUpdate)\n    this.on('transaction', this.options.onTransaction)\n    this.on('focus', this.options.onFocus)\n    this.on('blur', this.options.onBlur)\n    this.on('destroy', this.options.onDestroy)\n\n    window.setTimeout(() => {\n      if (this.isDestroyed) {\n        return\n      }\n\n      this.commands.focus(this.options.autofocus)\n      this.emit('create', { editor: this })\n    }, 0)\n  }\n\n  /**\n   * Returns the editor storage.\n   */\n  public get storage(): Record<string, any> {\n    return this.extensionStorage\n  }\n\n  /**\n   * An object of all registered commands.\n   */\n  public get commands(): SingleCommands {\n    return this.commandManager.commands\n  }\n\n  /**\n   * Create a command chain to call multiple commands at once.\n   */\n  public chain(): ChainedCommands {\n    return this.commandManager.chain()\n  }\n\n  /**\n   * Check if a command or a command chain can be executed. Without executing it.\n   */\n  public can(): CanCommands {\n    return this.commandManager.can()\n  }\n\n  /**\n   * Inject CSS styles.\n   */\n  private injectCSS(): void {\n    if (this.options.injectCSS && document) {\n      this.css = createStyleTag(style, this.options.injectNonce)\n    }\n  }\n\n  /**\n   * Update editor options.\n   *\n   * @param options A list of options\n   */\n  public setOptions(options: Partial<EditorOptions> = {}): void {\n    this.options = {\n      ...this.options,\n      ...options,\n    }\n\n    if (!this.view || !this.state || this.isDestroyed) {\n      return\n    }\n\n    if (this.options.editorProps) {\n      this.view.setProps(this.options.editorProps)\n    }\n\n    this.view.updateState(this.state)\n  }\n\n  /**\n   * Update editable state of the editor.\n   */\n  public setEditable(editable: boolean, emitUpdate = true): void {\n    this.setOptions({ editable })\n\n    if (emitUpdate) {\n      this.emit('update', { editor: this, transaction: this.state.tr })\n    }\n  }\n\n  /**\n   * Returns whether the editor is editable.\n   */\n  public get isEditable(): boolean {\n    // since plugins are applied after creating the view\n    // `editable` is always `true` for one tick.\n    // that\u2019s why we also have to check for `options.editable`\n    return this.options.editable && this.view && this.view.editable\n  }\n\n  /**\n   * Returns the editor state.\n   */\n  public get state(): EditorState {\n    return this.view.state\n  }\n\n  /**\n   * Register a ProseMirror plugin.\n   *\n   * @param plugin A ProseMirror plugin\n   * @param handlePlugins Control how to merge the plugin into the existing plugins.\n   */\n  public registerPlugin(\n    plugin: Plugin,\n    handlePlugins?: (newPlugin: Plugin, plugins: Plugin[]) => Plugin[],\n  ): void {\n    const plugins = isFunction(handlePlugins)\n      ? handlePlugins(plugin, [...this.state.plugins])\n      : [...this.state.plugins, plugin]\n\n    const state = this.state.reconfigure({ plugins })\n\n    this.view.updateState(state)\n  }\n\n  /**\n   * Unregister a ProseMirror plugin.\n   *\n   * @param nameOrPluginKey The plugins name\n   */\n  public unregisterPlugin(nameOrPluginKey: string | PluginKey): void {\n    if (this.isDestroyed) {\n      return\n    }\n\n    // @ts-ignore\n    const name = typeof nameOrPluginKey === 'string' ? `${nameOrPluginKey}$` : nameOrPluginKey.key\n\n    const state = this.state.reconfigure({\n      // @ts-ignore\n      plugins: this.state.plugins.filter(plugin => !plugin.key.startsWith(name)),\n    })\n\n    this.view.updateState(state)\n  }\n\n  /**\n   * Creates an extension manager.\n   */\n  private createExtensionManager(): void {\n    const coreExtensions = this.options.enableCoreExtensions ? Object.values(extensions) : []\n    const allExtensions = [...coreExtensions, ...this.options.extensions].filter(extension => {\n      return ['extension', 'node', 'mark'].includes(extension?.type)\n    })\n\n    this.extensionManager = new ExtensionManager(allExtensions, this)\n  }\n\n  /**\n   * Creates an command manager.\n   */\n  private createCommandManager(): void {\n    this.commandManager = new CommandManager({\n      editor: this,\n    })\n  }\n\n  /**\n   * Creates a ProseMirror schema.\n   */\n  private createSchema(): void {\n    this.schema = this.extensionManager.schema\n  }\n\n  /**\n   * Creates a ProseMirror view.\n   */\n  private createView(): void {\n    const doc = createDocument(this.options.content, this.schema, this.options.parseOptions)\n    const selection = resolveFocusPosition(doc, this.options.autofocus)\n\n    this.view = new EditorView(this.options.element, {\n      ...this.options.editorProps,\n      dispatchTransaction: this.dispatchTransaction.bind(this),\n      state: EditorState.create({\n        doc,\n        selection: selection || undefined,\n      }),\n    })\n\n    // `editor.view` is not yet available at this time.\n    // Therefore we will add all plugins and node views directly afterwards.\n    const newState = this.state.reconfigure({\n      plugins: this.extensionManager.plugins,\n    })\n\n    this.view.updateState(newState)\n\n    this.createNodeViews()\n\n    // Let\u2019s store the editor instance in the DOM element.\n    // So we\u2019ll have access to it for tests.\n    const dom = this.view.dom as HTMLElement\n\n    dom.editor = this\n  }\n\n  /**\n   * Creates all node views.\n   */\n  public createNodeViews(): void {\n    this.view.setProps({\n      nodeViews: this.extensionManager.nodeViews,\n    })\n  }\n\n  public isCapturingTransaction = false\n\n  private capturedTransaction: Transaction | null = null\n\n  public captureTransaction(fn: Function) {\n    this.isCapturingTransaction = true\n    fn()\n    this.isCapturingTransaction = false\n\n    const tr = this.capturedTransaction\n\n    this.capturedTransaction = null\n\n    return tr\n  }\n\n  /**\n   * The callback over which to send transactions (state updates) produced by the view.\n   *\n   * @param transaction An editor state transaction\n   */\n  private dispatchTransaction(transaction: Transaction): void {\n    // if the editor / the view of the editor was destroyed\n    // the transaction should not be dispatched as there is no view anymore.\n    if (this.view.isDestroyed) {\n      return\n    }\n\n    if (this.isCapturingTransaction) {\n      if (!this.capturedTransaction) {\n        this.capturedTransaction = transaction\n\n        return\n      }\n\n      transaction.steps.forEach(step => this.capturedTransaction?.step(step))\n\n      return\n    }\n\n    const state = this.state.apply(transaction)\n    const selectionHasChanged = !this.state.selection.eq(state.selection)\n\n    this.view.updateState(state)\n    this.emit('transaction', {\n      editor: this,\n      transaction,\n    })\n\n    if (selectionHasChanged) {\n      this.emit('selectionUpdate', {\n        editor: this,\n        transaction,\n      })\n    }\n\n    const focus = transaction.getMeta('focus')\n    const blur = transaction.getMeta('blur')\n\n    if (focus) {\n      this.emit('focus', {\n        editor: this,\n        event: focus.event,\n        transaction,\n      })\n    }\n\n    if (blur) {\n      this.emit('blur', {\n        editor: this,\n        event: blur.event,\n        transaction,\n      })\n    }\n\n    if (!transaction.docChanged || transaction.getMeta('preventUpdate')) {\n      return\n    }\n\n    this.emit('update', {\n      editor: this,\n      transaction,\n    })\n  }\n\n  /**\n   * Get attributes of the currently selected node or mark.\n   */\n  public getAttributes(nameOrType: string | NodeType | MarkType): Record<string, any> {\n    return getAttributes(this.state, nameOrType)\n  }\n\n  /**\n   * Returns if the currently selected node or mark is active.\n   *\n   * @param name Name of the node or mark\n   * @param attributes Attributes of the node or mark\n   */\n  public isActive(name: string, attributes?: {}): boolean\n  public isActive(attributes: {}): boolean\n  public isActive(nameOrAttributes: string, attributesOrUndefined?: {}): boolean {\n    const name = typeof nameOrAttributes === 'string' ? nameOrAttributes : null\n\n    const attributes = typeof nameOrAttributes === 'string' ? attributesOrUndefined : nameOrAttributes\n\n    return isActive(this.state, name, attributes)\n  }\n\n  /**\n   * Get the document as JSON.\n   */\n  public getJSON(): JSONContent {\n    return this.state.doc.toJSON()\n  }\n\n  /**\n   * Get the document as HTML.\n   */\n  public getHTML(): string {\n    return getHTMLFromFragment(this.state.doc.content, this.schema)\n  }\n\n  /**\n   * Get the document as text.\n   */\n  public getText(options?: {\n    blockSeparator?: string\n    textSerializers?: Record<string, TextSerializer>\n  }): string {\n    const { blockSeparator = '\\n\\n', textSerializers = {} } = options || {}\n\n    return getText(this.state.doc, {\n      blockSeparator,\n      textSerializers: {\n        ...getTextSerializersFromSchema(this.schema),\n        ...textSerializers,\n      },\n    })\n  }\n\n  /**\n   * Check if there is no content.\n   */\n  public get isEmpty(): boolean {\n    return isNodeEmpty(this.state.doc)\n  }\n\n  /**\n   * Get the number of characters for the current document.\n   *\n   * @deprecated\n   */\n  public getCharacterCount(): number {\n    console.warn(\n      '[tiptap warn]: \"editor.getCharacterCount()\" is deprecated. Please use \"editor.storage.characterCount.characters()\" instead.',\n    )\n\n    return this.state.doc.content.size - 2\n  }\n\n  /**\n   * Destroy the editor.\n   */\n  public destroy(): void {\n    this.emit('destroy')\n\n    if (this.view) {\n      this.view.destroy()\n    }\n\n    this.removeAllListeners()\n  }\n\n  /**\n   * Check if the editor is already destroyed.\n   */\n  public get isDestroyed(): boolean {\n    // @ts-ignore\n    return !this.view?.docView\n  }\n}\n", "import { MarkType } from '@tiptap/pm/model'\n\nimport { getMarksBetween } from '../helpers/getMarksBetween'\nimport { InputRule, InputRuleFinder } from '../InputRule'\nimport { ExtendedRegExpMatchArray } from '../types'\nimport { callOrReturn } from '../utilities/callOrReturn'\n\n/**\n * Build an input rule that adds a mark when the\n * matched text is typed into it.\n */\nexport function markInputRule(config: {\n  find: InputRuleFinder\n  type: MarkType\n  getAttributes?:\n    | Record<string, any>\n    | ((match: ExtendedRegExpMatchArray) => Record<string, any>)\n    | false\n    | null\n}) {\n  return new InputRule({\n    find: config.find,\n    handler: ({ state, range, match }) => {\n      const attributes = callOrReturn(config.getAttributes, undefined, match)\n\n      if (attributes === false || attributes === null) {\n        return null\n      }\n\n      const { tr } = state\n      const captureGroup = match[match.length - 1]\n      const fullMatch = match[0]\n      let markEnd = range.to\n\n      if (captureGroup) {\n        const startSpaces = fullMatch.search(/\\S/)\n        const textStart = range.from + fullMatch.indexOf(captureGroup)\n        const textEnd = textStart + captureGroup.length\n\n        const excludedMarks = getMarksBetween(range.from, range.to, state.doc)\n          .filter(item => {\n            // @ts-ignore\n            const excluded = item.mark.type.excluded as MarkType[]\n\n            return excluded.find(type => type === config.type && type !== item.mark.type)\n          })\n          .filter(item => item.to > textStart)\n\n        if (excludedMarks.length) {\n          return null\n        }\n\n        if (textEnd < range.to) {\n          tr.delete(textEnd, range.to)\n        }\n\n        if (textStart > range.from) {\n          tr.delete(range.from + startSpaces, textStart)\n        }\n\n        markEnd = range.from + startSpaces + captureGroup.length\n\n        tr.addMark(range.from + startSpaces, markEnd, config.type.create(attributes || {}))\n\n        tr.removeStoredMark(config.type)\n      }\n    },\n  })\n}\n", "import { NodeType } from '@tiptap/pm/model'\n\nimport { InputRule, InputRuleFinder } from '../InputRule'\nimport { ExtendedRegExpMatchArray } from '../types'\nimport { callOrReturn } from '../utilities/callOrReturn'\n\n/**\n * Build an input rule that adds a node when the\n * matched text is typed into it.\n */\nexport function nodeInputRule(config: {\n  find: InputRuleFinder\n  type: NodeType\n  getAttributes?:\n    | Record<string, any>\n    | ((match: ExtendedRegExpMatchArray) => Record<string, any>)\n    | false\n    | null\n}) {\n  return new InputRule({\n    find: config.find,\n    handler: ({ state, range, match }) => {\n      const attributes = callOrReturn(config.getAttributes, undefined, match) || {}\n      const { tr } = state\n      const start = range.from\n      let end = range.to\n\n      if (match[1]) {\n        const offset = match[0].lastIndexOf(match[1])\n        let matchStart = start + offset\n\n        if (matchStart > end) {\n          matchStart = end\n        } else {\n          end = matchStart + match[1].length\n        }\n\n        // insert last typed character\n        const lastChar = match[0][match[0].length - 1]\n\n        tr.insertText(lastChar, start + match[0].length - 1)\n\n        // insert node from input rule\n        tr.replaceWith(matchStart, end, config.type.create(attributes))\n      } else if (match[0]) {\n        tr.replaceWith(start, end, config.type.create(attributes))\n      }\n    },\n  })\n}\n", "import { NodeType } from '@tiptap/pm/model'\n\nimport { InputRule, InputRuleFinder } from '../InputRule'\nimport { ExtendedRegExpMatchArray } from '../types'\nimport { callOrReturn } from '../utilities/callOrReturn'\n\n/**\n * Build an input rule that changes the type of a textblock when the\n * matched text is typed into it. When using a regular expresion you\u2019ll\n * probably want the regexp to start with `^`, so that the pattern can\n * only occur at the start of a textblock.\n */\nexport function textblockTypeInputRule(config: {\n  find: InputRuleFinder\n  type: NodeType\n  getAttributes?:\n    | Record<string, any>\n    | ((match: ExtendedRegExpMatchArray) => Record<string, any>)\n    | false\n    | null\n}) {\n  return new InputRule({\n    find: config.find,\n    handler: ({ state, range, match }) => {\n      const $start = state.doc.resolve(range.from)\n      const attributes = callOrReturn(config.getAttributes, undefined, match) || {}\n\n      if (!$start.node(-1).canReplaceWith($start.index(-1), $start.indexAfter(-1), config.type)) {\n        return null\n      }\n\n      state.tr\n        .delete(range.from, range.to)\n        .setBlockType(range.from, range.from, config.type, attributes)\n    },\n  })\n}\n", "import { InputRule, InputRuleFinder } from '../InputRule'\n\n/**\n * Build an input rule that replaces text when the\n * matched text is typed into it.\n */\nexport function textInputRule(config: {\n  find: InputRuleFinder,\n  replace: string,\n}) {\n  return new InputRule({\n    find: config.find,\n    handler: ({ state, range, match }) => {\n      let insert = config.replace\n      let start = range.from\n      const end = range.to\n\n      if (match[1]) {\n        const offset = match[0].lastIndexOf(match[1])\n\n        insert += match[0].slice(offset + match[1].length)\n        start += offset\n\n        const cutOff = start - end\n\n        if (cutOff > 0) {\n          insert = match[0].slice(offset - cutOff, offset) + insert\n          start = end\n        }\n      }\n\n      state.tr.insertText(insert, start, end)\n    },\n  })\n}\n", "import { Node as ProseMirrorNode, NodeType } from '@tiptap/pm/model'\nimport { canJoin, findWrapping } from '@tiptap/pm/transform'\n\nimport { Editor } from '../Editor'\nimport { InputRule, InputRuleFinder } from '../InputRule'\nimport { ExtendedRegExpMatchArray } from '../types'\nimport { callOrReturn } from '../utilities/callOrReturn'\n\n/**\n * Build an input rule for automatically wrapping a textblock when a\n * given string is typed. When using a regular expresion you\u2019ll\n * probably want the regexp to start with `^`, so that the pattern can\n * only occur at the start of a textblock.\n *\n * `type` is the type of node to wrap in.\n *\n * By default, if there\u2019s a node with the same type above the newly\n * wrapped node, the rule will try to join those\n * two nodes. You can pass a join predicate, which takes a regular\n * expression match and the node before the wrapped node, and can\n * return a boolean to indicate whether a join should happen.\n */\nexport function wrappingInputRule(config: {\n  find: InputRuleFinder,\n  type: NodeType,\n  keepMarks?: boolean,\n  keepAttributes?: boolean,\n  editor?: Editor\n  getAttributes?:\n  | Record<string, any>\n  | ((match: ExtendedRegExpMatchArray) => Record<string, any>)\n  | false\n  | null\n  ,\n  joinPredicate?: (match: ExtendedRegExpMatchArray, node: ProseMirrorNode) => boolean,\n}) {\n  return new InputRule({\n    find: config.find,\n    handler: ({\n      state, range, match, chain,\n    }) => {\n      const attributes = callOrReturn(config.getAttributes, undefined, match) || {}\n      const tr = state.tr.delete(range.from, range.to)\n      const $start = tr.doc.resolve(range.from)\n      const blockRange = $start.blockRange()\n      const wrapping = blockRange && findWrapping(blockRange, config.type, attributes)\n\n      if (!wrapping) {\n        return null\n      }\n\n      tr.wrap(blockRange, wrapping)\n\n      if (config.keepMarks && config.editor) {\n        const { selection, storedMarks } = state\n        const { splittableMarks } = config.editor.extensionManager\n        const marks = storedMarks || (selection.$to.parentOffset && selection.$from.marks())\n\n        if (marks) {\n          const filteredMarks = marks.filter(mark => splittableMarks.includes(mark.type.name))\n\n          tr.ensureMarks(filteredMarks)\n        }\n      }\n      if (config.keepAttributes) {\n        /** If the nodeType is `bulletList` or `orderedList` set the `nodeType` as `listItem` */\n        const nodeType = config.type.name === 'bulletList' || config.type.name === 'orderedList' ? 'listItem' : 'taskList'\n\n        chain().updateAttributes(nodeType, attributes).run()\n      }\n\n      const before = tr.doc.resolve(range.from - 1).nodeBefore\n\n      if (\n        before\n        && before.type === config.type\n        && canJoin(tr.doc, range.from - 1)\n        && (!config.joinPredicate || config.joinPredicate(match, before))\n      ) {\n        tr.join(range.from - 1)\n      }\n    },\n  })\n}\n", "import {\n  DOMOutputSpec, Mark as ProseMirrorMark, MarkSpec, MarkType,\n} from '@tiptap/pm/model'\nimport { Plugin, Transaction } from '@tiptap/pm/state'\n\nimport { MarkConfig } from '.'\nimport { Editor } from './Editor'\nimport { getExtensionField } from './helpers/getExtensionField'\nimport { InputRule } from './InputRule'\nimport { Node } from './Node'\nimport { PasteRule } from './PasteRule'\nimport {\n  AnyConfig,\n  Attributes,\n  Extensions,\n  GlobalAttributes,\n  KeyboardShortcutCommand,\n  ParentConfig,\n  RawCommands,\n} from './types'\nimport { callOrReturn } from './utilities/callOrReturn'\nimport { mergeDeep } from './utilities/mergeDeep'\n\ndeclare module '@tiptap/core' {\n  export interface MarkConfig<Options = any, Storage = any> {\n    [key: string]: any\n\n    /**\n     * Name\n     */\n    name: string\n\n    /**\n     * Priority\n     */\n    priority?: number\n\n    /**\n     * Default options\n     */\n    defaultOptions?: Options\n\n    /**\n     * Default Options\n     */\n    addOptions?: (this: {\n      name: string\n      parent: Exclude<ParentConfig<MarkConfig<Options, Storage>>['addOptions'], undefined>\n    }) => Options\n\n    /**\n     * Default Storage\n     */\n    addStorage?: (this: {\n      name: string\n      options: Options\n      parent: Exclude<ParentConfig<MarkConfig<Options, Storage>>['addStorage'], undefined>\n    }) => Storage\n\n    /**\n     * Global attributes\n     */\n    addGlobalAttributes?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<MarkConfig<Options, Storage>>['addGlobalAttributes']\n    }) => GlobalAttributes | {}\n\n    /**\n     * Raw\n     */\n    addCommands?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: MarkType\n      parent: ParentConfig<MarkConfig<Options, Storage>>['addCommands']\n    }) => Partial<RawCommands>\n\n    /**\n     * Keyboard shortcuts\n     */\n    addKeyboardShortcuts?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: MarkType\n      parent: ParentConfig<MarkConfig<Options, Storage>>['addKeyboardShortcuts']\n    }) => {\n      [key: string]: KeyboardShortcutCommand\n    }\n\n    /**\n     * Input rules\n     */\n    addInputRules?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: MarkType\n      parent: ParentConfig<MarkConfig<Options, Storage>>['addInputRules']\n    }) => InputRule[]\n\n    /**\n     * Paste rules\n     */\n    addPasteRules?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: MarkType\n      parent: ParentConfig<MarkConfig<Options, Storage>>['addPasteRules']\n    }) => PasteRule[]\n\n    /**\n     * ProseMirror plugins\n     */\n    addProseMirrorPlugins?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: MarkType\n      parent: ParentConfig<MarkConfig<Options, Storage>>['addProseMirrorPlugins']\n    }) => Plugin[]\n\n    /**\n     * Extensions\n     */\n    addExtensions?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<MarkConfig<Options, Storage>>['addExtensions']\n    }) => Extensions\n\n    /**\n     * Extend Node Schema\n     */\n    extendNodeSchema?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<MarkConfig<Options, Storage>>['extendNodeSchema']\n          },\n          extension: Node,\n        ) => Record<string, any>)\n      | null\n\n    /**\n     * Extend Mark Schema\n     */\n    extendMarkSchema?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<MarkConfig<Options, Storage>>['extendMarkSchema']\n          },\n          extension: Mark,\n        ) => Record<string, any>)\n      | null\n\n    /**\n     * The editor is not ready yet.\n     */\n    onBeforeCreate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: MarkType\n          parent: ParentConfig<MarkConfig<Options, Storage>>['onBeforeCreate']\n        }) => void)\n      | null\n\n    /**\n     * The editor is ready.\n     */\n    onCreate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: MarkType\n          parent: ParentConfig<MarkConfig<Options, Storage>>['onCreate']\n        }) => void)\n      | null\n\n    /**\n     * The content has changed.\n     */\n    onUpdate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: MarkType\n          parent: ParentConfig<MarkConfig<Options, Storage>>['onUpdate']\n        }) => void)\n      | null\n\n    /**\n     * The selection has changed.\n     */\n    onSelectionUpdate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: MarkType\n          parent: ParentConfig<MarkConfig<Options, Storage>>['onSelectionUpdate']\n        }) => void)\n      | null\n\n    /**\n     * The editor state has changed.\n     */\n    onTransaction?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            type: MarkType\n            parent: ParentConfig<MarkConfig<Options, Storage>>['onTransaction']\n          },\n          props: {\n            transaction: Transaction\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor is focused.\n     */\n    onFocus?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            type: MarkType\n            parent: ParentConfig<MarkConfig<Options, Storage>>['onFocus']\n          },\n          props: {\n            event: FocusEvent\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor isn\u2019t focused anymore.\n     */\n    onBlur?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            type: MarkType\n            parent: ParentConfig<MarkConfig<Options, Storage>>['onBlur']\n          },\n          props: {\n            event: FocusEvent\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor is destroyed.\n     */\n    onDestroy?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: MarkType\n          parent: ParentConfig<MarkConfig<Options, Storage>>['onDestroy']\n        }) => void)\n      | null\n\n    /**\n     * Keep mark after split node\n     */\n    keepOnSplit?: boolean | (() => boolean)\n\n    /**\n     * Inclusive\n     */\n    inclusive?:\n      | MarkSpec['inclusive']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<MarkConfig<Options, Storage>>['inclusive']\n          editor?: Editor\n        }) => MarkSpec['inclusive'])\n\n    /**\n     * Excludes\n     */\n    excludes?:\n      | MarkSpec['excludes']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<MarkConfig<Options, Storage>>['excludes']\n          editor?: Editor\n        }) => MarkSpec['excludes'])\n\n    /**\n     * Marks this Mark as exitable\n     */\n    exitable?: boolean | (() => boolean)\n\n    /**\n     * Group\n     */\n    group?:\n      | MarkSpec['group']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<MarkConfig<Options, Storage>>['group']\n          editor?: Editor\n        }) => MarkSpec['group'])\n\n    /**\n     * Spanning\n     */\n    spanning?:\n      | MarkSpec['spanning']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<MarkConfig<Options, Storage>>['spanning']\n          editor?: Editor\n        }) => MarkSpec['spanning'])\n\n    /**\n     * Code\n     */\n    code?:\n      | boolean\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<MarkConfig<Options, Storage>>['code']\n          editor?: Editor\n        }) => boolean)\n\n    /**\n     * Parse HTML\n     */\n    parseHTML?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<MarkConfig<Options, Storage>>['parseHTML']\n      editor?: Editor\n    }) => MarkSpec['parseDOM']\n\n    /**\n     * Render HTML\n     */\n    renderHTML?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<MarkConfig<Options, Storage>>['renderHTML']\n            editor?: Editor\n          },\n          props: {\n            mark: ProseMirrorMark\n            HTMLAttributes: Record<string, any>\n          },\n        ) => DOMOutputSpec)\n      | null\n\n    /**\n     * Attributes\n     */\n    addAttributes?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<MarkConfig<Options, Storage>>['addAttributes']\n      editor?: Editor\n    }) => Attributes | {}\n  }\n}\n\nexport class Mark<Options = any, Storage = any> {\n  type = 'mark'\n\n  name = 'mark'\n\n  parent: Mark | null = null\n\n  child: Mark | null = null\n\n  options: Options\n\n  storage: Storage\n\n  config: MarkConfig = {\n    name: this.name,\n    defaultOptions: {},\n  }\n\n  constructor(config: Partial<MarkConfig<Options, Storage>> = {}) {\n    this.config = {\n      ...this.config,\n      ...config,\n    }\n\n    this.name = this.config.name\n\n    if (config.defaultOptions) {\n      console.warn(\n        `[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${this.name}\".`,\n      )\n    }\n\n    // TODO: remove `addOptions` fallback\n    this.options = this.config.defaultOptions\n\n    if (this.config.addOptions) {\n      this.options = callOrReturn(\n        getExtensionField<AnyConfig['addOptions']>(this, 'addOptions', {\n          name: this.name,\n        }),\n      )\n    }\n\n    this.storage = callOrReturn(\n      getExtensionField<AnyConfig['addStorage']>(this, 'addStorage', {\n        name: this.name,\n        options: this.options,\n      }),\n    ) || {}\n  }\n\n  static create<O = any, S = any>(config: Partial<MarkConfig<O, S>> = {}) {\n    return new Mark<O, S>(config)\n  }\n\n  configure(options: Partial<Options> = {}) {\n    // return a new instance so we can use the same extension\n    // with different calls of `configure`\n    const extension = this.extend()\n\n    extension.options = mergeDeep(this.options as Record<string, any>, options) as Options\n\n    extension.storage = callOrReturn(\n      getExtensionField<AnyConfig['addStorage']>(extension, 'addStorage', {\n        name: extension.name,\n        options: extension.options,\n      }),\n    )\n\n    return extension\n  }\n\n  extend<ExtendedOptions = Options, ExtendedStorage = Storage>(\n    extendedConfig: Partial<MarkConfig<ExtendedOptions, ExtendedStorage>> = {},\n  ) {\n    const extension = new Mark<ExtendedOptions, ExtendedStorage>(extendedConfig)\n\n    extension.parent = this\n\n    this.child = extension\n\n    extension.name = extendedConfig.name ? extendedConfig.name : extension.parent.name\n\n    if (extendedConfig.defaultOptions) {\n      console.warn(\n        `[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${extension.name}\".`,\n      )\n    }\n\n    extension.options = callOrReturn(\n      getExtensionField<AnyConfig['addOptions']>(extension, 'addOptions', {\n        name: extension.name,\n      }),\n    )\n\n    extension.storage = callOrReturn(\n      getExtensionField<AnyConfig['addStorage']>(extension, 'addStorage', {\n        name: extension.name,\n        options: extension.options,\n      }),\n    )\n\n    return extension\n  }\n\n  static handleExit({ editor, mark }: { editor: Editor; mark: Mark }) {\n    const { tr } = editor.state\n    const currentPos = editor.state.selection.$from\n    const isAtEnd = currentPos.pos === currentPos.end()\n\n    if (isAtEnd) {\n      const currentMarks = currentPos.marks()\n      const isInMark = !!currentMarks.find(m => m?.type.name === mark.name)\n\n      if (!isInMark) {\n        return false\n      }\n\n      const removeMark = currentMarks.find(m => m?.type.name === mark.name)\n\n      if (removeMark) {\n        tr.removeStoredMark(removeMark)\n      }\n      tr.insertText(' ', currentPos.pos)\n\n      editor.view.dispatch(tr)\n\n      return true\n    }\n\n    return false\n  }\n}\n", "import {\n  DOMOutputSpec, Node as ProseMirrorNode, NodeSpec, NodeType,\n} from '@tiptap/pm/model'\nimport { Plugin, Transaction } from '@tiptap/pm/state'\n\nimport { NodeConfig } from '.'\nimport { Editor } from './Editor'\nimport { getExtensionField } from './helpers/getExtensionField'\nimport { InputRule } from './InputRule'\nimport { PasteRule } from './PasteRule'\nimport {\n  AnyConfig,\n  Attributes,\n  Extensions,\n  GlobalAttributes,\n  KeyboardShortcutCommand,\n  NodeViewRenderer,\n  ParentConfig,\n  RawCommands,\n} from './types'\nimport { callOrReturn } from './utilities/callOrReturn'\nimport { mergeDeep } from './utilities/mergeDeep'\n\ndeclare module '@tiptap/core' {\n  interface NodeConfig<Options = any, Storage = any> {\n    [key: string]: any\n\n    /**\n     * Name\n     */\n    name: string\n\n    /**\n     * Priority\n     */\n    priority?: number\n\n    /**\n     * Default options\n     */\n    defaultOptions?: Options\n\n    /**\n     * Default Options\n     */\n    addOptions?: (this: {\n      name: string\n      parent: Exclude<ParentConfig<NodeConfig<Options, Storage>>['addOptions'], undefined>\n    }) => Options\n\n    /**\n     * Default Storage\n     */\n    addStorage?: (this: {\n      name: string\n      options: Options\n      parent: Exclude<ParentConfig<NodeConfig<Options, Storage>>['addStorage'], undefined>\n    }) => Storage\n\n    /**\n     * Global attributes\n     */\n    addGlobalAttributes?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<NodeConfig<Options, Storage>>['addGlobalAttributes']\n    }) => GlobalAttributes | {}\n\n    /**\n     * Raw\n     */\n    addCommands?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: NodeType\n      parent: ParentConfig<NodeConfig<Options, Storage>>['addCommands']\n    }) => Partial<RawCommands>\n\n    /**\n     * Keyboard shortcuts\n     */\n    addKeyboardShortcuts?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: NodeType\n      parent: ParentConfig<NodeConfig<Options, Storage>>['addKeyboardShortcuts']\n    }) => {\n      [key: string]: KeyboardShortcutCommand\n    }\n\n    /**\n     * Input rules\n     */\n    addInputRules?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: NodeType\n      parent: ParentConfig<NodeConfig<Options, Storage>>['addInputRules']\n    }) => InputRule[]\n\n    /**\n     * Paste rules\n     */\n    addPasteRules?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: NodeType\n      parent: ParentConfig<NodeConfig<Options, Storage>>['addPasteRules']\n    }) => PasteRule[]\n\n    /**\n     * ProseMirror plugins\n     */\n    addProseMirrorPlugins?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      editor: Editor\n      type: NodeType\n      parent: ParentConfig<NodeConfig<Options, Storage>>['addProseMirrorPlugins']\n    }) => Plugin[]\n\n    /**\n     * Extensions\n     */\n    addExtensions?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<NodeConfig<Options, Storage>>['addExtensions']\n    }) => Extensions\n\n    /**\n     * Extend Node Schema\n     */\n    extendNodeSchema?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<NodeConfig<Options, Storage>>['extendNodeSchema']\n          },\n          extension: Node,\n        ) => Record<string, any>)\n      | null\n\n    /**\n     * Extend Mark Schema\n     */\n    extendMarkSchema?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<NodeConfig<Options, Storage>>['extendMarkSchema']\n            editor?: Editor\n          },\n          extension: Node,\n        ) => Record<string, any>)\n      | null\n\n    /**\n     * The editor is not ready yet.\n     */\n    onBeforeCreate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: NodeType\n          parent: ParentConfig<NodeConfig<Options, Storage>>['onBeforeCreate']\n        }) => void)\n      | null\n\n    /**\n     * The editor is ready.\n     */\n    onCreate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: NodeType\n          parent: ParentConfig<NodeConfig<Options, Storage>>['onCreate']\n        }) => void)\n      | null\n\n    /**\n     * The content has changed.\n     */\n    onUpdate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: NodeType\n          parent: ParentConfig<NodeConfig<Options, Storage>>['onUpdate']\n        }) => void)\n      | null\n\n    /**\n     * The selection has changed.\n     */\n    onSelectionUpdate?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: NodeType\n          parent: ParentConfig<NodeConfig<Options, Storage>>['onSelectionUpdate']\n        }) => void)\n      | null\n\n    /**\n     * The editor state has changed.\n     */\n    onTransaction?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            type: NodeType\n            parent: ParentConfig<NodeConfig<Options, Storage>>['onTransaction']\n          },\n          props: {\n            transaction: Transaction\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor is focused.\n     */\n    onFocus?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            type: NodeType\n            parent: ParentConfig<NodeConfig<Options, Storage>>['onFocus']\n          },\n          props: {\n            event: FocusEvent\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor isn\u2019t focused anymore.\n     */\n    onBlur?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            editor: Editor\n            type: NodeType\n            parent: ParentConfig<NodeConfig<Options, Storage>>['onBlur']\n          },\n          props: {\n            event: FocusEvent\n          },\n        ) => void)\n      | null\n\n    /**\n     * The editor is destroyed.\n     */\n    onDestroy?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: NodeType\n          parent: ParentConfig<NodeConfig<Options, Storage>>['onDestroy']\n        }) => void)\n      | null\n\n    /**\n     * Node View\n     */\n    addNodeView?:\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          editor: Editor\n          type: NodeType\n          parent: ParentConfig<NodeConfig<Options, Storage>>['addNodeView']\n        }) => NodeViewRenderer)\n      | null\n\n    /**\n     * TopNode\n     */\n    topNode?: boolean\n\n    /**\n     * Content\n     */\n    content?:\n      | NodeSpec['content']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['content']\n          editor?: Editor\n        }) => NodeSpec['content'])\n\n    /**\n     * Marks\n     */\n    marks?:\n      | NodeSpec['marks']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['marks']\n          editor?: Editor\n        }) => NodeSpec['marks'])\n\n    /**\n     * Group\n     */\n    group?:\n      | NodeSpec['group']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['group']\n          editor?: Editor\n        }) => NodeSpec['group'])\n\n    /**\n     * Inline\n     */\n    inline?:\n      | NodeSpec['inline']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['inline']\n          editor?: Editor\n        }) => NodeSpec['inline'])\n\n    /**\n     * Atom\n     */\n    atom?:\n      | NodeSpec['atom']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['atom']\n          editor?: Editor\n        }) => NodeSpec['atom'])\n\n    /**\n     * Selectable\n     */\n    selectable?:\n      | NodeSpec['selectable']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['selectable']\n          editor?: Editor\n        }) => NodeSpec['selectable'])\n\n    /**\n     * Draggable\n     */\n    draggable?:\n      | NodeSpec['draggable']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['draggable']\n          editor?: Editor\n        }) => NodeSpec['draggable'])\n\n    /**\n     * Code\n     */\n    code?:\n      | NodeSpec['code']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['code']\n          editor?: Editor\n        }) => NodeSpec['code'])\n\n    /**\n     * Whitespace\n     */\n    whitespace?:\n      | NodeSpec['whitespace']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['whitespace']\n          editor?: Editor\n        }) => NodeSpec['whitespace'])\n\n    /**\n     * Defining\n     */\n    defining?:\n      | NodeSpec['defining']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['defining']\n          editor?: Editor\n        }) => NodeSpec['defining'])\n\n    /**\n     * Isolating\n     */\n    isolating?:\n      | NodeSpec['isolating']\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options, Storage>>['isolating']\n          editor?: Editor\n        }) => NodeSpec['isolating'])\n\n    /**\n     * Parse HTML\n     */\n    parseHTML?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<NodeConfig<Options, Storage>>['parseHTML']\n      editor?: Editor\n    }) => NodeSpec['parseDOM']\n\n    /**\n     * Render HTML\n     */\n    renderHTML?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<NodeConfig<Options, Storage>>['renderHTML']\n            editor?: Editor\n          },\n          props: {\n            node: ProseMirrorNode\n            HTMLAttributes: Record<string, any>\n          },\n        ) => DOMOutputSpec)\n      | null\n\n    /**\n     * Render Text\n     */\n    renderText?:\n      | ((\n          this: {\n            name: string\n            options: Options\n            storage: Storage\n            parent: ParentConfig<NodeConfig<Options, Storage>>['renderText']\n            editor?: Editor\n          },\n          props: {\n            node: ProseMirrorNode\n            pos: number\n            parent: ProseMirrorNode\n            index: number\n          },\n        ) => string)\n      | null\n\n    /**\n     * Add Attributes\n     */\n    addAttributes?: (this: {\n      name: string\n      options: Options\n      storage: Storage\n      parent: ParentConfig<NodeConfig<Options, Storage>>['addAttributes']\n      editor?: Editor\n    }) => Attributes | {}\n  }\n}\n\nexport class Node<Options = any, Storage = any> {\n  type = 'node'\n\n  name = 'node'\n\n  parent: Node | null = null\n\n  child: Node | null = null\n\n  options: Options\n\n  storage: Storage\n\n  config: NodeConfig = {\n    name: this.name,\n    defaultOptions: {},\n  }\n\n  constructor(config: Partial<NodeConfig<Options, Storage>> = {}) {\n    this.config = {\n      ...this.config,\n      ...config,\n    }\n\n    this.name = this.config.name\n\n    if (config.defaultOptions) {\n      console.warn(\n        `[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${this.name}\".`,\n      )\n    }\n\n    // TODO: remove `addOptions` fallback\n    this.options = this.config.defaultOptions\n\n    if (this.config.addOptions) {\n      this.options = callOrReturn(\n        getExtensionField<AnyConfig['addOptions']>(this, 'addOptions', {\n          name: this.name,\n        }),\n      )\n    }\n\n    this.storage = callOrReturn(\n      getExtensionField<AnyConfig['addStorage']>(this, 'addStorage', {\n        name: this.name,\n        options: this.options,\n      }),\n    ) || {}\n  }\n\n  static create<O = any, S = any>(config: Partial<NodeConfig<O, S>> = {}) {\n    return new Node<O, S>(config)\n  }\n\n  configure(options: Partial<Options> = {}) {\n    // return a new instance so we can use the same extension\n    // with different calls of `configure`\n    const extension = this.extend()\n\n    extension.options = mergeDeep(this.options as Record<string, any>, options) as Options\n\n    extension.storage = callOrReturn(\n      getExtensionField<AnyConfig['addStorage']>(extension, 'addStorage', {\n        name: extension.name,\n        options: extension.options,\n      }),\n    )\n\n    return extension\n  }\n\n  extend<ExtendedOptions = Options, ExtendedStorage = Storage>(\n    extendedConfig: Partial<NodeConfig<ExtendedOptions, ExtendedStorage>> = {},\n  ) {\n    const extension = new Node<ExtendedOptions, ExtendedStorage>(extendedConfig)\n\n    extension.parent = this\n\n    this.child = extension\n\n    extension.name = extendedConfig.name ? extendedConfig.name : extension.parent.name\n\n    if (extendedConfig.defaultOptions) {\n      console.warn(\n        `[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${extension.name}\".`,\n      )\n    }\n\n    extension.options = callOrReturn(\n      getExtensionField<AnyConfig['addOptions']>(extension, 'addOptions', {\n        name: extension.name,\n      }),\n    )\n\n    extension.storage = callOrReturn(\n      getExtensionField<AnyConfig['addStorage']>(extension, 'addStorage', {\n        name: extension.name,\n        options: extension.options,\n      }),\n    )\n\n    return extension\n  }\n}\n", "import { Node as ProseMirrorNode } from '@tiptap/pm/model'\nimport { NodeSelection } from '@tiptap/pm/state'\nimport { NodeView as ProseMirrorNodeView } from '@tiptap/pm/view'\n\nimport { Editor as CoreEditor } from './Editor'\nimport { Node } from './Node'\nimport { DecorationWithType, NodeViewRendererOptions, NodeViewRendererProps } from './types'\nimport { isiOS } from './utilities/isiOS'\n\nexport class NodeView<\n  Component,\n  NodeEditor extends CoreEditor = CoreEditor,\n  Options extends NodeViewRendererOptions = NodeViewRendererOptions,\n> implements ProseMirrorNodeView {\n  component: Component\n\n  editor: NodeEditor\n\n  options: Options\n\n  extension: Node\n\n  node: ProseMirrorNode\n\n  decorations: DecorationWithType[]\n\n  getPos: any\n\n  isDragging = false\n\n  constructor(component: Component, props: NodeViewRendererProps, options?: Partial<Options>) {\n    this.component = component\n    this.editor = props.editor as NodeEditor\n    this.options = {\n      stopEvent: null,\n      ignoreMutation: null,\n      ...options,\n    } as Options\n    this.extension = props.extension\n    this.node = props.node\n    this.decorations = props.decorations as DecorationWithType[]\n    this.getPos = props.getPos\n    this.mount()\n  }\n\n  mount() {\n    // eslint-disable-next-line\n    return\n  }\n\n  get dom(): HTMLElement {\n    return this.editor.view.dom as HTMLElement\n  }\n\n  get contentDOM(): HTMLElement | null {\n    return null\n  }\n\n  onDragStart(event: DragEvent) {\n    const { view } = this.editor\n    const target = event.target as HTMLElement\n\n    // get the drag handle element\n    // `closest` is not available for text nodes so we may have to use its parent\n    const dragHandle = target.nodeType === 3\n      ? target.parentElement?.closest('[data-drag-handle]')\n      : target.closest('[data-drag-handle]')\n\n    if (!this.dom || this.contentDOM?.contains(target) || !dragHandle) {\n      return\n    }\n\n    let x = 0\n    let y = 0\n\n    // calculate offset for drag element if we use a different drag handle element\n    if (this.dom !== dragHandle) {\n      const domBox = this.dom.getBoundingClientRect()\n      const handleBox = dragHandle.getBoundingClientRect()\n\n      // In React, we have to go through nativeEvent to reach offsetX/offsetY.\n      const offsetX = event.offsetX ?? (event as any).nativeEvent?.offsetX\n      const offsetY = event.offsetY ?? (event as any).nativeEvent?.offsetY\n\n      x = handleBox.x - domBox.x + offsetX\n      y = handleBox.y - domBox.y + offsetY\n    }\n\n    event.dataTransfer?.setDragImage(this.dom, x, y)\n\n    // we need to tell ProseMirror that we want to move the whole node\n    // so we create a NodeSelection\n    const selection = NodeSelection.create(view.state.doc, this.getPos())\n    const transaction = view.state.tr.setSelection(selection)\n\n    view.dispatch(transaction)\n  }\n\n  stopEvent(event: Event) {\n    if (!this.dom) {\n      return false\n    }\n\n    if (typeof this.options.stopEvent === 'function') {\n      return this.options.stopEvent({ event })\n    }\n\n    const target = event.target as HTMLElement\n    const isInElement = this.dom.contains(target) && !this.contentDOM?.contains(target)\n\n    // any event from child nodes should be handled by ProseMirror\n    if (!isInElement) {\n      return false\n    }\n\n    const isDragEvent = event.type.startsWith('drag')\n    const isDropEvent = event.type === 'drop'\n    const isInput = ['INPUT', 'BUTTON', 'SELECT', 'TEXTAREA'].includes(target.tagName) || target.isContentEditable\n\n    // any input event within node views should be ignored by ProseMirror\n    if (isInput && !isDropEvent && !isDragEvent) {\n      return true\n    }\n\n    const { isEditable } = this.editor\n    const { isDragging } = this\n    const isDraggable = !!this.node.type.spec.draggable\n    const isSelectable = NodeSelection.isSelectable(this.node)\n    const isCopyEvent = event.type === 'copy'\n    const isPasteEvent = event.type === 'paste'\n    const isCutEvent = event.type === 'cut'\n    const isClickEvent = event.type === 'mousedown'\n\n    // ProseMirror tries to drag selectable nodes\n    // even if `draggable` is set to `false`\n    // this fix prevents that\n    if (!isDraggable && isSelectable && isDragEvent) {\n      event.preventDefault()\n    }\n\n    if (isDraggable && isDragEvent && !isDragging) {\n      event.preventDefault()\n      return false\n    }\n\n    // we have to store that dragging started\n    if (isDraggable && isEditable && !isDragging && isClickEvent) {\n      const dragHandle = target.closest('[data-drag-handle]')\n      const isValidDragHandle = dragHandle && (this.dom === dragHandle || this.dom.contains(dragHandle))\n\n      if (isValidDragHandle) {\n        this.isDragging = true\n\n        document.addEventListener(\n          'dragend',\n          () => {\n            this.isDragging = false\n          },\n          { once: true },\n        )\n\n        document.addEventListener(\n          'drop',\n          () => {\n            this.isDragging = false\n          },\n          { once: true },\n        )\n\n        document.addEventListener(\n          'mouseup',\n          () => {\n            this.isDragging = false\n          },\n          { once: true },\n        )\n      }\n    }\n\n    // these events are handled by prosemirror\n    if (\n      isDragging\n      || isDropEvent\n      || isCopyEvent\n      || isPasteEvent\n      || isCutEvent\n      || (isClickEvent && isSelectable)\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  ignoreMutation(mutation: MutationRecord | { type: 'selection'; target: Element }) {\n    if (!this.dom || !this.contentDOM) {\n      return true\n    }\n\n    if (typeof this.options.ignoreMutation === 'function') {\n      return this.options.ignoreMutation({ mutation })\n    }\n\n    // a leaf/atom node is like a black box for ProseMirror\n    // and should be fully handled by the node view\n    if (this.node.isLeaf || this.node.isAtom) {\n      return true\n    }\n\n    // ProseMirror should handle any selections\n    if (mutation.type === 'selection') {\n      return false\n    }\n\n    // try to prevent a bug on iOS that will break node views on enter\n    // this is because ProseMirror can\u2019t preventDispatch on enter\n    // this will lead to a re-render of the node view on enter\n    // see: https://github.com/ueberdosis/tiptap/issues/1214\n    if (\n      this.dom.contains(mutation.target)\n      && mutation.type === 'childList'\n      && isiOS()\n      && this.editor.isFocused\n    ) {\n      const changedNodes = [\n        ...Array.from(mutation.addedNodes),\n        ...Array.from(mutation.removedNodes),\n      ] as HTMLElement[]\n\n      // we\u2019ll check if every changed node is contentEditable\n      // to make sure it\u2019s probably mutated by ProseMirror\n      if (changedNodes.every(node => node.isContentEditable)) {\n        return false\n      }\n    }\n\n    // we will allow mutation contentDOM with attributes\n    // so we can for example adding classes within our node view\n    if (this.contentDOM === mutation.target && mutation.type === 'attributes') {\n      return true\n    }\n\n    // ProseMirror should handle any changes within contentDOM\n    if (this.contentDOM.contains(mutation.target)) {\n      return false\n    }\n\n    return true\n  }\n\n  updateAttributes(attributes: {}) {\n    this.editor.commands.command(({ tr }) => {\n      const pos = this.getPos()\n\n      tr.setNodeMarkup(pos, undefined, {\n        ...this.node.attrs,\n        ...attributes,\n      })\n\n      return true\n    })\n  }\n\n  deleteNode(): void {\n    const from = this.getPos()\n    const to = from + this.node.nodeSize\n\n    this.editor.commands.deleteRange({ from, to })\n  }\n}\n", "import { MarkType } from '@tiptap/pm/model'\n\nimport { getMarksBetween } from '../helpers/getMarksBetween'\nimport { PasteRule, PasteRuleFinder } from '../PasteRule'\nimport { ExtendedRegExpMatchArray } from '../types'\nimport { callOrReturn } from '../utilities/callOrReturn'\n\n/**\n * Build an paste rule that adds a mark when the\n * matched text is pasted into it.\n */\nexport function markPasteRule(config: {\n  find: PasteRuleFinder\n  type: MarkType\n  getAttributes?:\n    | Record<string, any>\n    | ((match: ExtendedRegExpMatchArray) => Record<string, any>)\n    | false\n    | null\n}) {\n  return new PasteRule({\n    find: config.find,\n    handler: ({ state, range, match }) => {\n      const attributes = callOrReturn(config.getAttributes, undefined, match)\n\n      if (attributes === false || attributes === null) {\n        return null\n      }\n\n      const { tr } = state\n      const captureGroup = match[match.length - 1]\n      const fullMatch = match[0]\n      let markEnd = range.to\n\n      if (captureGroup) {\n        const startSpaces = fullMatch.search(/\\S/)\n        const textStart = range.from + fullMatch.indexOf(captureGroup)\n        const textEnd = textStart + captureGroup.length\n\n        const excludedMarks = getMarksBetween(range.from, range.to, state.doc)\n          .filter(item => {\n            // @ts-ignore\n            const excluded = item.mark.type.excluded as MarkType[]\n\n            return excluded.find(type => type === config.type && type !== item.mark.type)\n          })\n          .filter(item => item.to > textStart)\n\n        if (excludedMarks.length) {\n          return null\n        }\n\n        if (textEnd < range.to) {\n          tr.delete(textEnd, range.to)\n        }\n\n        if (textStart > range.from) {\n          tr.delete(range.from + startSpaces, textStart)\n        }\n\n        markEnd = range.from + startSpaces + captureGroup.length\n\n        tr.addMark(range.from + startSpaces, markEnd, config.type.create(attributes || {}))\n\n        tr.removeStoredMark(config.type)\n      }\n    },\n  })\n}\n", "// source: https://stackoverflow.com/a/6969486\nexport function escapeForRegEx(string: string): string {\n  return string.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')\n}\n", "export function isString(value: any): value is string {\n  return typeof value === 'string'\n}\n", "import { NodeType } from '@tiptap/pm/model'\n\nimport { PasteRule, PasteRuleFinder } from '../PasteRule'\nimport { ExtendedRegExpMatchArray } from '../types'\nimport { callOrReturn } from '../utilities'\n\n/**\n * Build an paste rule that adds a node when the\n * matched text is pasted into it.\n */\nexport function nodePasteRule(config: {\n  find: PasteRuleFinder\n  type: NodeType\n  getAttributes?:\n    | Record<string, any>\n    | ((match: ExtendedRegExpMatchArray) => Record<string, any>)\n    | false\n    | null\n}) {\n  return new PasteRule({\n    find: config.find,\n    handler({ match, chain, range }) {\n      const attributes = callOrReturn(config.getAttributes, undefined, match)\n\n      if (attributes === false || attributes === null) {\n        return null\n      }\n\n      if (match.input) {\n        chain().deleteRange(range).insertContentAt(range.from, {\n          type: config.type.name,\n          attrs: attributes,\n        })\n      }\n    },\n  })\n}\n", "import { PasteRule, PasteRuleFinder } from '../PasteRule'\n\n/**\n * Build an paste rule that replaces text when the\n * matched text is pasted into it.\n */\nexport function textPasteRule(config: {\n  find: PasteRuleFinder,\n  replace: string,\n}) {\n  return new PasteRule({\n    find: config.find,\n    handler: ({ state, range, match }) => {\n      let insert = config.replace\n      let start = range.from\n      const end = range.to\n\n      if (match[1]) {\n        const offset = match[0].lastIndexOf(match[1])\n\n        insert += match[0].slice(offset + match[1].length)\n        start += offset\n\n        const cutOff = start - end\n\n        if (cutOff > 0) {\n          insert = match[0].slice(offset - cutOff, offset) + insert\n          start = end\n        }\n      }\n\n      state.tr.insertText(insert, start, end)\n    },\n  })\n}\n", "import { Transaction } from '@tiptap/pm/state'\n\nexport interface TrackerResult {\n  position: number\n  deleted: boolean\n}\n\nexport class Tracker {\n  transaction: Transaction\n\n  currentStep: number\n\n  constructor(transaction: Transaction) {\n    this.transaction = transaction\n    this.currentStep = this.transaction.steps.length\n  }\n\n  map(position: number): TrackerResult {\n    let deleted = false\n\n    const mappedPosition = this.transaction.steps\n      .slice(this.currentStep)\n      .reduce((newPosition, step) => {\n        const mapResult = step.getMap().mapResult(newPosition)\n\n        if (mapResult.deleted) {\n          deleted = true\n        }\n\n        return mapResult.pos\n      }, position)\n\n    return {\n      position: mappedPosition,\n      deleted,\n    }\n  }\n}\n", "// THIS FILE IS AUTOMATICALLY GENERATED DO NOT EDIT DIRECTLY\n// See update-tlds.js for encoding/decoding format\n// https://data.iana.org/TLD/tlds-alpha-by-domain.txt\nconst encodedTlds = 'aaa1rp3barth4b0ott3vie4c1le2ogado5udhabi7c0ademy5centure6ountant0s9o1tor4d0s1ult4e0g1ro2tna4f0l1rica5g0akhan5ency5i0g1rbus3force5tel5kdn3l0faromeo7ibaba4pay4lfinanz6state5y2sace3tom5m0azon4ericanexpress7family11x2fam3ica3sterdam8nalytics7droid5quan4z2o0l2partments8p0le4q0uarelle8r0ab1mco4chi3my2pa2t0e3s0da2ia2sociates9t0hleta5torney7u0ction5di0ble3o3spost5thor3o0s4vianca6w0s2x0a2z0ure5ba0by2idu3namex3narepublic11d1k2r0celona5laycard4s5efoot5gains6seball5ketball8uhaus5yern5b0c1t1va3cg1n2d1e0ats2uty4er2ntley5rlin4st0buy5t2f1g1h0arti5i0ble3d1ke2ng0o3o1z2j1lack0friday9ockbuster8g1omberg7ue3m0s1w2n0pparibas9o0ats3ehringer8fa2m1nd2o0k0ing5sch2tik2on4t1utique6x2r0adesco6idgestone9oadway5ker3ther5ussels7s1t1uild0ers6siness6y1zz3v1w1y1z0h3ca0b1fe2l0l1vinklein9m0era3p2non3petown5ital0one8r0avan4ds2e0er0s4s2sa1e1h1ino4t0ering5holic7ba1n1re2s2c1d1enter4o1rn3f0a1d2g1h0anel2nel4rity4se2t2eap3intai5ristmas6ome4urch5i0priani6rcle4sco3tadel4i0c2y0eats7k1l0aims4eaning6ick2nic1que6othing5ud3ub0med6m1n1o0ach3des3ffee4llege4ogne5m0cast4mbank4unity6pany2re3uter5sec4ndos3struction8ulting7tact3ractors9oking0channel11l1p2rsica5untry4pon0s4rses6pa2r0edit0card4union9icket5own3s1uise0s6u0isinella9v1w1x1y0mru3ou3z2dabur3d1nce3ta1e1ing3sun4y2clk3ds2e0al0er2s3gree4livery5l1oitte5ta3mocrat6ntal2ist5si0gn4v2hl2iamonds6et2gital5rect0ory7scount3ver5h2y2j1k1m1np2o0cs1tor4g1mains5t1wnload7rive4tv2ubai3nlop4pont4rban5vag2r2z2earth3t2c0o2deka3u0cation8e1g1mail3erck5nergy4gineer0ing9terprises10pson4quipment8r0icsson6ni3s0q1tate5t0isalat7u0rovision8s2vents5xchange6pert3osed4ress5traspace10fage2il1rwinds6th3mily4n0s2rm0ers5shion4t3edex3edback6rrari3ero6i0at2delity5o2lm2nal1nce1ial7re0stone6mdale6sh0ing5t0ness6j1k1lickr3ghts4r2orist4wers5y2m1o0o0d0network8tball6rd1ex2sale4um3undation8x2r0ee1senius7l1ogans4ntdoor4ier7tr2ujitsu5n0d2rniture7tbol5yi3ga0l0lery3o1up4me0s3p1rden4y2b0iz3d0n2e0a1nt0ing5orge5f1g0ee3h1i0ft0s3ves2ing5l0ass3e1obal2o4m0ail3bh2o1x2n1odaddy5ld0point6f2o0dyear5g0le4p1t1v2p1q1r0ainger5phics5tis4een3ipe3ocery4up4s1t1u0ardian6cci3ge2ide2tars5ru3w1y2hair2mburg5ngout5us3bo2dfc0bank7ealth0care8lp1sinki6re1mes5gtv3iphop4samitsu7tachi5v2k0t2m1n1ockey4ldings5iday5medepot5goods5s0ense7nda3rse3spital5t0ing5t0eles2s3mail5use3w2r1sbc3t1u0ghes5yatt3undai7ibm2cbc2e1u2d1e0ee3fm2kano4l1m0amat4db2mo0bilien9n0c1dustries8finiti5o2g1k1stitute6urance4e4t0ernational10uit4vestments10o1piranga7q1r0ish4s0maili5t0anbul7t0au2v3jaguar4va3cb2e0ep2tzt3welry6io2ll2m0p2nj2o0bs1urg4t1y2p0morgan6rs3uegos4niper7kaufen5ddi3e0rryhotels6logistics9properties14fh2g1h1i0a1ds2m1nder2le4tchen5wi3m1n1oeln3matsu5sher5p0mg2n2r0d1ed3uokgroup8w1y0oto4z2la0caixa5mborghini8er3ncaster5ia3d0rover6xess5salle5t0ino3robe5w0yer5b1c1ds2ease3clerc5frak4gal2o2xus4gbt3i0dl2fe0insurance9style7ghting6ke2lly3mited4o2ncoln4de2k2psy3ve1ing5k1lc1p2oan0s3cker3us3l1ndon4tte1o3ve3pl0financial11r1s1t0d0a3u0ndbeck6xe1ury5v1y2ma0cys3drid4if1son4keup4n0agement7go3p1rket0ing3s4riott5shalls7serati6ttel5ba2c0kinsey7d1e0d0ia3et2lbourne7me1orial6n0u2rckmsd7g1h1iami3crosoft7l1ni1t2t0subishi9k1l0b1s2m0a2n1o0bi0le4da2e1i1m1nash3ey2ster5rmon3tgage6scow4to0rcycles9v0ie4p1q1r1s0d2t0n1r2u0seum3ic3tual5v1w1x1y1z2na0b1goya4me2tura4vy3ba2c1e0c1t0bank4flix4work5ustar5w0s2xt0direct7us4f0l2g0o2hk2i0co2ke1on3nja3ssan1y5l1o0kia3rthwesternmutual14on4w0ruz3tv4p1r0a1w2tt2u1yc2z2obi1server7ffice5kinawa6layan0group9dnavy5lo3m0ega4ne1g1l0ine5oo2pen3racle3nge4g0anic5igins6saka4tsuka4t2vh3pa0ge2nasonic7ris2s1tners4s1y3ssagens7y2ccw3e0t2f0izer5g1h0armacy6d1ilips5one2to0graphy6s4ysio5ics1tet2ures6d1n0g1k2oneer5zza4k1l0ace2y0station9umbing5s3m1n0c2ohl2ker3litie5rn2st3r0america6xi3ess3ime3o0d0uctions8f1gressive8mo2perties3y5tection8u0dential9s1t1ub2w0c2y2qa1pon3uebec3st5racing4dio4e0ad1lestate6tor2y4cipes5d0stone5umbrella9hab3ise0n3t2liance6n0t0als5pair3ort3ublican8st0aurant8view0s5xroth6ich0ardli6oh3l1o1p2o0cher3ks3deo3gers4om3s0vp3u0gby3hr2n2w0e2yukyu6sa0arland6fe0ty4kura4le1on3msclub4ung5ndvik0coromant12ofi4p1rl2s1ve2xo3b0i1s2c0a1b1haeffler7midt4olarships8ol3ule3warz5ience5ot3d1e0arch3t2cure1ity6ek2lect4ner3rvices6ven3w1x0y3fr2g1h0angrila6rp2w2ell3ia1ksha5oes2p0ping5uji3w0time7i0lk2na1gles5te3j1k0i0n2y0pe4l0ing4m0art3ile4n0cf3o0ccer3ial4ftbank4ware6hu2lar2utions7ng1y2y2pa0ce3ort2t3r0l2s1t0ada2ples4r1tebank4farm7c0group6ockholm6rage3e3ream4udio2y3yle4u0cks3pplies3y2ort5rf1gery5zuki5v1watch4iss4x1y0dney4stems6z2tab1ipei4lk2obao4rget4tamotors6r2too4x0i3c0i2d0k2eam2ch0nology8l1masek5nnis4va3f1g1h0d1eater2re6iaa2ckets5enda4ffany5ps2res2ol4j0maxx4x2k0maxx5l1m0all4n1o0day3kyo3ols3p1ray3shiba5tal3urs3wn2yota3s3r0ade1ing4ining5vel0channel7ers0insurance16ust3v2t1ube2i1nes3shu4v0s2w1z2ua1bank3s2g1k1nicom3versity8o2ol2ps2s1y1z2va0cations7na1guard7c1e0gas3ntures6risign5m\u00F6gensberater2ung14sicherung10t2g1i0ajes4deo3g1king4llas4n1p1rgin4sa1ion4va1o3laanderen9n1odka3lkswagen7vo3te1ing3o2yage5u0elos6wales2mart4ter4ng0gou5tch0es6eather0channel12bcam3er2site5d0ding5ibo2r3f1hoswho6ien2ki2lliamhill9n0dows4e1ners6me2olterskluwer11odside6rk0s2ld3w2s1tc1f3xbox3erox4finity6ihuan4n2xx2yz3yachts4hoo3maxun5ndex5e1odobashi7ga2kohama6u0tube6t1un3za0ppos4ra3ero3ip2m1one3uerich6w2';\n// Internationalized domain names containing non-ASCII\nconst encodedUtlds = '\u03B5\u03BB1\u03C52\u0431\u04331\u0435\u043B3\u0434\u0435\u0442\u04384\u0435\u044E2\u043A\u0430\u0442\u043E\u043B\u0438\u043A6\u043E\u043C3\u043C\u043A\u04342\u043E\u043D1\u0441\u043A\u0432\u04306\u043E\u043D\u043B\u0430\u0439\u043D5\u0440\u04333\u0440\u0443\u04412\u04442\u0441\u0430\u0439\u04423\u0440\u04313\u0443\u043A\u04403\u049B\u0430\u04373\u0570\u0561\u05753\u05D9\u05E9\u05E8\u05D0\u05DC5\u05E7\u05D5\u05DD3\u0627\u0628\u0648\u0638\u0628\u064A5\u062A\u0635\u0627\u0644\u0627\u062A6\u0631\u0627\u0645\u0643\u06485\u0644\u0627\u0631\u062F\u06464\u0628\u062D\u0631\u064A\u06465\u062C\u0632\u0627\u0626\u06315\u0633\u0639\u0648\u062F\u064A\u06296\u0639\u0644\u064A\u0627\u06465\u0645\u063A\u0631\u06285\u0645\u0627\u0631\u0627\u062A5\u06CC\u0631\u0627\u06465\u0628\u0627\u0631\u062A2\u0632\u0627\u06314\u064A\u062A\u06433\u06BE\u0627\u0631\u062A5\u062A\u0648\u0646\u06334\u0633\u0648\u062F\u0627\u06463\u0631\u064A\u06295\u0634\u0628\u0643\u06294\u0639\u0631\u0627\u06422\u06282\u0645\u0627\u06464\u0641\u0644\u0633\u0637\u064A\u06466\u0642\u0637\u06313\u0643\u0627\u062B\u0648\u0644\u064A\u06436\u0648\u06453\u0645\u0635\u06312\u0644\u064A\u0633\u064A\u06275\u0648\u0631\u064A\u062A\u0627\u0646\u064A\u06277\u0642\u06394\u0647\u0645\u0631\u0627\u06475\u067E\u0627\u06A9\u0633\u062A\u0627\u06467\u0680\u0627\u0631\u062A4\u0915\u0949\u092E3\u0928\u0947\u091F3\u092D\u093E\u0930\u09240\u092E\u094D3\u094B\u09245\u0938\u0902\u0917\u0920\u09285\u09AC\u09BE\u0982\u09B2\u09BE5\u09AD\u09BE\u09B0\u09A42\u09F0\u09A44\u0A2D\u0A3E\u0A30\u0A244\u0AAD\u0ABE\u0AB0\u0AA44\u0B2D\u0B3E\u0B30\u0B244\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE6\u0BB2\u0B99\u0BCD\u0B95\u0BC86\u0B9A\u0BBF\u0B99\u0BCD\u0B95\u0BAA\u0BCD\u0BAA\u0BC2\u0BB0\u0BCD11\u0C2D\u0C3E\u0C30\u0C24\u0C4D5\u0CAD\u0CBE\u0CB0\u0CA44\u0D2D\u0D3E\u0D30\u0D24\u0D025\u0DBD\u0D82\u0D9A\u0DCF4\u0E04\u0E2D\u0E213\u0E44\u0E17\u0E223\u0EA5\u0EB2\u0EA73\u10D2\u10D42\u307F\u3093\u306A3\u30A2\u30DE\u30BE\u30F34\u30AF\u30E9\u30A6\u30C94\u30B0\u30FC\u30B0\u30EB4\u30B3\u30E02\u30B9\u30C8\u30A23\u30BB\u30FC\u30EB3\u30D5\u30A1\u30C3\u30B7\u30E7\u30F36\u30DD\u30A4\u30F3\u30C84\u4E16\u754C2\u4E2D\u4FE11\u56FD1\u570B1\u6587\u7F513\u4E9A\u9A6C\u900A3\u4F01\u4E1A2\u4F5B\u5C712\u4FE1\u606F2\u5065\u5EB72\u516B\u53662\u516C\u53F81\u76CA2\u53F0\u6E7E1\u70632\u5546\u57CE1\u5E971\u68072\u5609\u91CC0\u5927\u9152\u5E975\u5728\u7EBF2\u5927\u62FF2\u5929\u4E3B\u65593\u5A31\u4E502\u5BB6\u96FB2\u5E7F\u4E1C2\u5FAE\u535A2\u6148\u55842\u6211\u7231\u4F603\u624B\u673A2\u62DB\u80582\u653F\u52A11\u5E9C2\u65B0\u52A0\u57612\u95FB2\u65F6\u5C1A2\u66F8\u7C4D2\u673A\u67842\u6DE1\u9A6C\u95213\u6E38\u620F2\u6FB3\u95802\u70B9\u770B2\u79FB\u52A82\u7EC4\u7EC7\u673A\u67844\u7F51\u57401\u5E971\u7AD91\u7EDC2\u8054\u901A2\u8C37\u6B4C2\u8D2D\u72692\u901A\u8CA92\u96C6\u56E22\u96FB\u8A0A\u76C8\u79D14\u98DE\u5229\u6D663\u98DF\u54C12\u9910\u53852\u9999\u683C\u91CC\u62C93\u6E2F2\uB2F7\uB1371\uCEF42\uC0BC\uC1312\uD55C\uAD6D2';\n\n/**\n * @template A\n * @template B\n * @param {A} target\n * @param {B} properties\n * @return {A & B}\n */\nconst assign = (target, properties) => {\n  for (const key in properties) {\n    target[key] = properties[key];\n  }\n  return target;\n};\n\n/**\n * Finite State Machine generation utilities\n */\n\n/**\n * @template T\n * @typedef {{ [group: string]: T[] }} Collections\n */\n\n/**\n * @typedef {{ [group: string]: true }} Flags\n */\n\n// Keys in scanner Collections instances\nconst numeric = 'numeric';\nconst ascii = 'ascii';\nconst alpha = 'alpha';\nconst asciinumeric = 'asciinumeric';\nconst alphanumeric = 'alphanumeric';\nconst domain = 'domain';\nconst emoji = 'emoji';\nconst scheme = 'scheme';\nconst slashscheme = 'slashscheme';\nconst whitespace = 'whitespace';\n\n/**\n * @template T\n * @param {string} name\n * @param {Collections<T>} groups to register in\n * @returns {T[]} Current list of tokens in the given collection\n */\nfunction registerGroup(name, groups) {\n  if (!(name in groups)) {\n    groups[name] = [];\n  }\n  return groups[name];\n}\n\n/**\n * @template T\n * @param {T} t token to add\n * @param {Collections<T>} groups\n * @param {Flags} flags\n */\nfunction addToGroups(t, flags, groups) {\n  if (flags[numeric]) {\n    flags[asciinumeric] = true;\n    flags[alphanumeric] = true;\n  }\n  if (flags[ascii]) {\n    flags[asciinumeric] = true;\n    flags[alpha] = true;\n  }\n  if (flags[asciinumeric]) {\n    flags[alphanumeric] = true;\n  }\n  if (flags[alpha]) {\n    flags[alphanumeric] = true;\n  }\n  if (flags[alphanumeric]) {\n    flags[domain] = true;\n  }\n  if (flags[emoji]) {\n    flags[domain] = true;\n  }\n  for (const k in flags) {\n    const group = registerGroup(k, groups);\n    if (group.indexOf(t) < 0) {\n      group.push(t);\n    }\n  }\n}\n\n/**\n * @template T\n * @param {T} t token to check\n * @param {Collections<T>} groups\n * @returns {Flags} group flags that contain this token\n */\nfunction flagsForToken(t, groups) {\n  const result = {};\n  for (const c in groups) {\n    if (groups[c].indexOf(t) >= 0) {\n      result[c] = true;\n    }\n  }\n  return result;\n}\n\n/**\n * @template T\n * @typedef {null | T } Transition\n */\n\n/**\n * Define a basic state machine state. j is the list of character transitions,\n * jr is the list of regex-match transitions, jd is the default state to\n * transition to t is the accepting token type, if any. If this is the terminal\n * state, then it does not emit a token.\n *\n * The template type T represents the type of the token this state accepts. This\n * should be a string (such as of the token exports in `text.js`) or a\n * MultiToken subclass (from `multi.js`)\n *\n * @template T\n * @param {T} [token] Token that this state emits\n */\nfunction State(token) {\n  if (token === void 0) {\n    token = null;\n  }\n  // this.n = null; // DEBUG: State name\n  /** @type {{ [input: string]: State<T> }} j */\n  this.j = {}; // IMPLEMENTATION 1\n  // this.j = []; // IMPLEMENTATION 2\n  /** @type {[RegExp, State<T>][]} jr */\n  this.jr = [];\n  /** @type {?State<T>} jd */\n  this.jd = null;\n  /** @type {?T} t */\n  this.t = token;\n}\n\n/**\n * Scanner token groups\n * @type Collections<string>\n */\nState.groups = {};\nState.prototype = {\n  accepts() {\n    return !!this.t;\n  },\n  /**\n   * Follow an existing transition from the given input to the next state.\n   * Does not mutate.\n   * @param {string} input character or token type to transition on\n   * @returns {?State<T>} the next state, if any\n   */\n  go(input) {\n    const state = this;\n    const nextState = state.j[input];\n    if (nextState) {\n      return nextState;\n    }\n    for (let i = 0; i < state.jr.length; i++) {\n      const regex = state.jr[i][0];\n      const nextState = state.jr[i][1]; // note: might be empty to prevent default jump\n      if (nextState && regex.test(input)) {\n        return nextState;\n      }\n    }\n    // Nowhere left to jump! Return default, if any\n    return state.jd;\n  },\n  /**\n   * Whether the state has a transition for the given input. Set the second\n   * argument to true to only look for an exact match (and not a default or\n   * regular-expression-based transition)\n   * @param {string} input\n   * @param {boolean} exactOnly\n   */\n  has(input, exactOnly) {\n    if (exactOnly === void 0) {\n      exactOnly = false;\n    }\n    return exactOnly ? input in this.j : !!this.go(input);\n  },\n  /**\n   * Short for \"transition all\"; create a transition from the array of items\n   * in the given list to the same final resulting state.\n   * @param {string | string[]} inputs Group of inputs to transition on\n   * @param {Transition<T> | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   */\n  ta(inputs, next, flags, groups) {\n    for (let i = 0; i < inputs.length; i++) {\n      this.tt(inputs[i], next, flags, groups);\n    }\n  },\n  /**\n   * Short for \"take regexp transition\"; defines a transition for this state\n   * when it encounters a token which matches the given regular expression\n   * @param {RegExp} regexp Regular expression transition (populate first)\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   * @returns {State<T>} taken after the given input\n   */\n  tr(regexp, next, flags, groups) {\n    groups = groups || State.groups;\n    let nextState;\n    if (next && next.j) {\n      nextState = next;\n    } else {\n      // Token with maybe token groups\n      nextState = new State(next);\n      if (flags && groups) {\n        addToGroups(next, flags, groups);\n      }\n    }\n    this.jr.push([regexp, nextState]);\n    return nextState;\n  },\n  /**\n   * Short for \"take transitions\", will take as many sequential transitions as\n   * the length of the given input and returns the\n   * resulting final state.\n   * @param {string | string[]} input\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   * @returns {State<T>} taken after the given input\n   */\n  ts(input, next, flags, groups) {\n    let state = this;\n    const len = input.length;\n    if (!len) {\n      return state;\n    }\n    for (let i = 0; i < len - 1; i++) {\n      state = state.tt(input[i]);\n    }\n    return state.tt(input[len - 1], next, flags, groups);\n  },\n  /**\n   * Short for \"take transition\", this is a method for building/working with\n   * state machines.\n   *\n   * If a state already exists for the given input, returns it.\n   *\n   * If a token is specified, that state will emit that token when reached by\n   * the linkify engine.\n   *\n   * If no state exists, it will be initialized with some default transitions\n   * that resemble existing default transitions.\n   *\n   * If a state is given for the second argument, that state will be\n   * transitioned to on the given input regardless of what that input\n   * previously did.\n   *\n   * Specify a token group flags to define groups that this token belongs to.\n   * The token will be added to corresponding entires in the given groups\n   * object.\n   *\n   * @param {string} input character, token type to transition on\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of groups\n   * @returns {State<T>} taken after the given input\n   */\n  tt(input, next, flags, groups) {\n    groups = groups || State.groups;\n    const state = this;\n\n    // Check if existing state given, just a basic transition\n    if (next && next.j) {\n      state.j[input] = next;\n      return next;\n    }\n    const t = next;\n\n    // Take the transition with the usual default mechanisms and use that as\n    // a template for creating the next state\n    let nextState,\n      templateState = state.go(input);\n    if (templateState) {\n      nextState = new State();\n      assign(nextState.j, templateState.j);\n      nextState.jr.push.apply(nextState.jr, templateState.jr);\n      nextState.jd = templateState.jd;\n      nextState.t = templateState.t;\n    } else {\n      nextState = new State();\n    }\n    if (t) {\n      // Ensure newly token is in the same groups as the old token\n      if (groups) {\n        if (nextState.t && typeof nextState.t === 'string') {\n          const allFlags = assign(flagsForToken(nextState.t, groups), flags);\n          addToGroups(t, allFlags, groups);\n        } else if (flags) {\n          addToGroups(t, flags, groups);\n        }\n      }\n      nextState.t = t; // overwrite anything that was previously there\n    }\n\n    state.j[input] = nextState;\n    return nextState;\n  }\n};\n\n// Helper functions to improve minification (not exported outside linkifyjs module)\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string | string[]} input\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst ta = (state, input, next, flags, groups) => state.ta(input, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {RegExp} regexp\n * @param {T | State<T>} [next]\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst tr = (state, regexp, next, flags, groups) => state.tr(regexp, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string | string[]} input\n * @param {T | State<T>} [next]\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst ts = (state, input, next, flags, groups) => state.ts(input, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string} input\n * @param {T | State<T>} [next]\n * @param {Collections<T>} [groups]\n * @param {Flags} [flags]\n */\nconst tt = (state, input, next, flags, groups) => state.tt(input, next, flags, groups);\n\n/******************************************************************************\nText Tokens\nIdentifiers for token outputs from the regexp scanner\n******************************************************************************/\n\n// A valid web domain token\nconst WORD = 'WORD'; // only contains a-z\nconst UWORD = 'UWORD'; // contains letters other than a-z, used for IDN\n\n// Special case of word\nconst LOCALHOST = 'LOCALHOST';\n\n// Valid top-level domain, special case of WORD (see tlds.js)\nconst TLD = 'TLD';\n\n// Valid IDN TLD, special case of UWORD (see tlds.js)\nconst UTLD = 'UTLD';\n\n// The scheme portion of a web URI protocol. Supported types include: `mailto`,\n// `file`, and user-defined custom protocols. Limited to schemes that contain\n// only letters\nconst SCHEME = 'SCHEME';\n\n// Similar to SCHEME, except makes distinction for schemes that must always be\n// followed by `://`, not just `:`. Supported types include `http`, `https`,\n// `ftp`, `ftps`\nconst SLASH_SCHEME = 'SLASH_SCHEME';\n\n// Any sequence of digits 0-9\nconst NUM = 'NUM';\n\n// Any number of consecutive whitespace characters that are not newline\nconst WS = 'WS';\n\n// New line (unix style)\nconst NL$1 = 'NL'; // \\n\n\n// Opening/closing bracket classes\nconst OPENBRACE = 'OPENBRACE'; // {\nconst OPENBRACKET = 'OPENBRACKET'; // [\nconst OPENANGLEBRACKET = 'OPENANGLEBRACKET'; // <\nconst OPENPAREN = 'OPENPAREN'; // (\nconst CLOSEBRACE = 'CLOSEBRACE'; // }\nconst CLOSEBRACKET = 'CLOSEBRACKET'; // ]\nconst CLOSEANGLEBRACKET = 'CLOSEANGLEBRACKET'; // >\nconst CLOSEPAREN = 'CLOSEPAREN'; // )\n\n// Various symbols\nconst AMPERSAND = 'AMPERSAND'; // &\nconst APOSTROPHE = 'APOSTROPHE'; // '\nconst ASTERISK = 'ASTERISK'; // *\nconst AT = 'AT'; // @\nconst BACKSLASH = 'BACKSLASH'; // \\\nconst BACKTICK = 'BACKTICK'; // `\nconst CARET = 'CARET'; // ^\nconst COLON = 'COLON'; // :\nconst COMMA = 'COMMA'; // ,\nconst DOLLAR = 'DOLLAR'; // $\nconst DOT = 'DOT'; // .\nconst EQUALS = 'EQUALS'; // =\nconst EXCLAMATION = 'EXCLAMATION'; // !\nconst HYPHEN = 'HYPHEN'; // -\nconst PERCENT = 'PERCENT'; // %\nconst PIPE = 'PIPE'; // |\nconst PLUS = 'PLUS'; // +\nconst POUND = 'POUND'; // #\nconst QUERY = 'QUERY'; // ?\nconst QUOTE = 'QUOTE'; // \"\n\nconst SEMI = 'SEMI'; // ;\nconst SLASH = 'SLASH'; // /\nconst TILDE = 'TILDE'; // ~\nconst UNDERSCORE = 'UNDERSCORE'; // _\n\n// Emoji symbol\nconst EMOJI$1 = 'EMOJI';\n\n// Default token - anything that is not one of the above\nconst SYM = 'SYM';\n\nvar tk = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tWORD: WORD,\n\tUWORD: UWORD,\n\tLOCALHOST: LOCALHOST,\n\tTLD: TLD,\n\tUTLD: UTLD,\n\tSCHEME: SCHEME,\n\tSLASH_SCHEME: SLASH_SCHEME,\n\tNUM: NUM,\n\tWS: WS,\n\tNL: NL$1,\n\tOPENBRACE: OPENBRACE,\n\tOPENBRACKET: OPENBRACKET,\n\tOPENANGLEBRACKET: OPENANGLEBRACKET,\n\tOPENPAREN: OPENPAREN,\n\tCLOSEBRACE: CLOSEBRACE,\n\tCLOSEBRACKET: CLOSEBRACKET,\n\tCLOSEANGLEBRACKET: CLOSEANGLEBRACKET,\n\tCLOSEPAREN: CLOSEPAREN,\n\tAMPERSAND: AMPERSAND,\n\tAPOSTROPHE: APOSTROPHE,\n\tASTERISK: ASTERISK,\n\tAT: AT,\n\tBACKSLASH: BACKSLASH,\n\tBACKTICK: BACKTICK,\n\tCARET: CARET,\n\tCOLON: COLON,\n\tCOMMA: COMMA,\n\tDOLLAR: DOLLAR,\n\tDOT: DOT,\n\tEQUALS: EQUALS,\n\tEXCLAMATION: EXCLAMATION,\n\tHYPHEN: HYPHEN,\n\tPERCENT: PERCENT,\n\tPIPE: PIPE,\n\tPLUS: PLUS,\n\tPOUND: POUND,\n\tQUERY: QUERY,\n\tQUOTE: QUOTE,\n\tSEMI: SEMI,\n\tSLASH: SLASH,\n\tTILDE: TILDE,\n\tUNDERSCORE: UNDERSCORE,\n\tEMOJI: EMOJI$1,\n\tSYM: SYM\n});\n\n// Note that these two Unicode ones expand into a really big one with Babel\nconst ASCII_LETTER = /[a-z]/;\nconst LETTER = /\\p{L}/u; // Any Unicode character with letter data type\nconst EMOJI = /\\p{Emoji}/u; // Any Unicode emoji character\nconst EMOJI_VARIATION$1 = /\\ufe0f/;\nconst DIGIT = /\\d/;\nconst SPACE = /\\s/;\n\nvar regexp = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tASCII_LETTER: ASCII_LETTER,\n\tLETTER: LETTER,\n\tEMOJI: EMOJI,\n\tEMOJI_VARIATION: EMOJI_VARIATION$1,\n\tDIGIT: DIGIT,\n\tSPACE: SPACE\n});\n\n/**\n\tThe scanner provides an interface that takes a string of text as input, and\n\toutputs an array of tokens instances that can be used for easy URL parsing.\n*/\nconst NL = '\\n'; // New line character\nconst EMOJI_VARIATION = '\\ufe0f'; // Variation selector, follows heart and others\nconst EMOJI_JOINER = '\\u200d'; // zero-width joiner\n\nlet tlds = null,\n  utlds = null; // don't change so only have to be computed once\n\n/**\n * Scanner output token:\n * - `t` is the token name (e.g., 'NUM', 'EMOJI', 'TLD')\n * - `v` is the value of the token (e.g., '123', '\u2764\uFE0F', 'com')\n * - `s` is the start index of the token in the original string\n * - `e` is the end index of the token in the original string\n * @typedef {{t: string, v: string, s: number, e: number}} Token\n */\n\n/**\n * @template T\n * @typedef {{ [collection: string]: T[] }} Collections\n */\n\n/**\n * Initialize the scanner character-based state machine for the given start\n * state\n * @param {[string, boolean][]} customSchemes List of custom schemes, where each\n * item is a length-2 tuple with the first element set to the string scheme, and\n * the second element set to `true` if the `://` after the scheme is optional\n */\nfunction init$2(customSchemes) {\n  if (customSchemes === void 0) {\n    customSchemes = [];\n  }\n  // Frequently used states (name argument removed during minification)\n  /** @type Collections<string> */\n  const groups = {}; // of tokens\n  State.groups = groups;\n  /** @type State<string> */\n  const Start = new State();\n  if (tlds == null) {\n    tlds = decodeTlds(encodedTlds);\n  }\n  if (utlds == null) {\n    utlds = decodeTlds(encodedUtlds);\n  }\n\n  // States for special URL symbols that accept immediately after start\n  tt(Start, \"'\", APOSTROPHE);\n  tt(Start, '{', OPENBRACE);\n  tt(Start, '[', OPENBRACKET);\n  tt(Start, '<', OPENANGLEBRACKET);\n  tt(Start, '(', OPENPAREN);\n  tt(Start, '}', CLOSEBRACE);\n  tt(Start, ']', CLOSEBRACKET);\n  tt(Start, '>', CLOSEANGLEBRACKET);\n  tt(Start, ')', CLOSEPAREN);\n  tt(Start, '&', AMPERSAND);\n  tt(Start, '*', ASTERISK);\n  tt(Start, '@', AT);\n  tt(Start, '`', BACKTICK);\n  tt(Start, '^', CARET);\n  tt(Start, ':', COLON);\n  tt(Start, ',', COMMA);\n  tt(Start, '$', DOLLAR);\n  tt(Start, '.', DOT);\n  tt(Start, '=', EQUALS);\n  tt(Start, '!', EXCLAMATION);\n  tt(Start, '-', HYPHEN);\n  tt(Start, '%', PERCENT);\n  tt(Start, '|', PIPE);\n  tt(Start, '+', PLUS);\n  tt(Start, '#', POUND);\n  tt(Start, '?', QUERY);\n  tt(Start, '\"', QUOTE);\n  tt(Start, '/', SLASH);\n  tt(Start, ';', SEMI);\n  tt(Start, '~', TILDE);\n  tt(Start, '_', UNDERSCORE);\n  tt(Start, '\\\\', BACKSLASH);\n  const Num = tr(Start, DIGIT, NUM, {\n    [numeric]: true\n  });\n  tr(Num, DIGIT, Num);\n\n  // State which emits a word token\n  const Word = tr(Start, ASCII_LETTER, WORD, {\n    [ascii]: true\n  });\n  tr(Word, ASCII_LETTER, Word);\n\n  // Same as previous, but specific to non-fsm.ascii alphabet words\n  const UWord = tr(Start, LETTER, UWORD, {\n    [alpha]: true\n  });\n  tr(UWord, ASCII_LETTER); // Non-accepting\n  tr(UWord, LETTER, UWord);\n\n  // Whitespace jumps\n  // Tokens of only non-newline whitespace are arbitrarily long\n  // If any whitespace except newline, more whitespace!\n  const Ws = tr(Start, SPACE, WS, {\n    [whitespace]: true\n  });\n  tt(Start, NL, NL$1, {\n    [whitespace]: true\n  });\n  tt(Ws, NL); // non-accepting state to avoid mixing whitespaces\n  tr(Ws, SPACE, Ws);\n\n  // Emoji tokens. They are not grouped by the scanner except in cases where a\n  // zero-width joiner is present\n  const Emoji = tr(Start, EMOJI, EMOJI$1, {\n    [emoji]: true\n  });\n  tr(Emoji, EMOJI, Emoji);\n  tt(Emoji, EMOJI_VARIATION, Emoji);\n  // tt(Start, EMOJI_VARIATION, Emoji); // This one is sketchy\n\n  const EmojiJoiner = tt(Emoji, EMOJI_JOINER);\n  tr(EmojiJoiner, EMOJI, Emoji);\n  // tt(EmojiJoiner, EMOJI_VARIATION, Emoji); // also sketchy\n\n  // Generates states for top-level domains\n  // Note that this is most accurate when tlds are in alphabetical order\n  const wordjr = [[ASCII_LETTER, Word]];\n  const uwordjr = [[ASCII_LETTER, null], [LETTER, UWord]];\n  for (let i = 0; i < tlds.length; i++) {\n    fastts(Start, tlds[i], TLD, WORD, wordjr);\n  }\n  for (let i = 0; i < utlds.length; i++) {\n    fastts(Start, utlds[i], UTLD, UWORD, uwordjr);\n  }\n  addToGroups(TLD, {\n    tld: true,\n    ascii: true\n  }, groups);\n  addToGroups(UTLD, {\n    utld: true,\n    alpha: true\n  }, groups);\n\n  // Collect the states generated by different protocols. NOTE: If any new TLDs\n  // get added that are also protocols, set the token to be the same as the\n  // protocol to ensure parsing works as expected.\n  fastts(Start, 'file', SCHEME, WORD, wordjr);\n  fastts(Start, 'mailto', SCHEME, WORD, wordjr);\n  fastts(Start, 'http', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'https', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'ftp', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'ftps', SLASH_SCHEME, WORD, wordjr);\n  addToGroups(SCHEME, {\n    scheme: true,\n    ascii: true\n  }, groups);\n  addToGroups(SLASH_SCHEME, {\n    slashscheme: true,\n    ascii: true\n  }, groups);\n\n  // Register custom schemes. Assumes each scheme is asciinumeric with hyphens\n  customSchemes = customSchemes.sort((a, b) => a[0] > b[0] ? 1 : -1);\n  for (let i = 0; i < customSchemes.length; i++) {\n    const sch = customSchemes[i][0];\n    const optionalSlashSlash = customSchemes[i][1];\n    const flags = optionalSlashSlash ? {\n      [scheme]: true\n    } : {\n      [slashscheme]: true\n    };\n    if (sch.indexOf('-') >= 0) {\n      flags[domain] = true;\n    } else if (!ASCII_LETTER.test(sch)) {\n      flags[numeric] = true; // numbers only\n    } else if (DIGIT.test(sch)) {\n      flags[asciinumeric] = true;\n    } else {\n      flags[ascii] = true;\n    }\n    ts(Start, sch, sch, flags);\n  }\n\n  // Localhost token\n  ts(Start, 'localhost', LOCALHOST, {\n    ascii: true\n  });\n\n  // Set default transition for start state (some symbol)\n  Start.jd = new State(SYM);\n  return {\n    start: Start,\n    tokens: assign({\n      groups\n    }, tk)\n  };\n}\n\n/**\n\tGiven a string, returns an array of TOKEN instances representing the\n\tcomposition of that string.\n\n\t@method run\n\t@param {State<string>} start scanner starting state\n\t@param {string} str input string to scan\n\t@return {Token[]} list of tokens, each with a type and value\n*/\nfunction run$1(start, str) {\n  // State machine is not case sensitive, so input is tokenized in lowercased\n  // form (still returns regular case). Uses selective `toLowerCase` because\n  // lowercasing the entire string causes the length and character position to\n  // vary in some non-English strings with V8-based runtimes.\n  const iterable = stringToArray(str.replace(/[A-Z]/g, c => c.toLowerCase()));\n  const charCount = iterable.length; // <= len if there are emojis, etc\n  const tokens = []; // return value\n\n  // cursor through the string itself, accounting for characters that have\n  // width with length 2 such as emojis\n  let cursor = 0;\n\n  // Cursor through the array-representation of the string\n  let charCursor = 0;\n\n  // Tokenize the string\n  while (charCursor < charCount) {\n    let state = start;\n    let nextState = null;\n    let tokenLength = 0;\n    let latestAccepting = null;\n    let sinceAccepts = -1;\n    let charsSinceAccepts = -1;\n    while (charCursor < charCount && (nextState = state.go(iterable[charCursor]))) {\n      state = nextState;\n\n      // Keep track of the latest accepting state\n      if (state.accepts()) {\n        sinceAccepts = 0;\n        charsSinceAccepts = 0;\n        latestAccepting = state;\n      } else if (sinceAccepts >= 0) {\n        sinceAccepts += iterable[charCursor].length;\n        charsSinceAccepts++;\n      }\n      tokenLength += iterable[charCursor].length;\n      cursor += iterable[charCursor].length;\n      charCursor++;\n    }\n\n    // Roll back to the latest accepting state\n    cursor -= sinceAccepts;\n    charCursor -= charsSinceAccepts;\n    tokenLength -= sinceAccepts;\n\n    // No more jumps, just make a new token from the last accepting one\n    tokens.push({\n      t: latestAccepting.t,\n      // token type/name\n      v: str.slice(cursor - tokenLength, cursor),\n      // string value\n      s: cursor - tokenLength,\n      // start index\n      e: cursor // end index (excluding)\n    });\n  }\n\n  return tokens;\n}\n\n/**\n * Convert a String to an Array of characters, taking into account that some\n * characters like emojis take up two string indexes.\n *\n * Adapted from core-js (MIT license)\n * https://github.com/zloirock/core-js/blob/2d69cf5f99ab3ea3463c395df81e5a15b68f49d9/packages/core-js/internals/string-multibyte.js\n *\n * @function stringToArray\n * @param {string} str\n * @returns {string[]}\n */\nfunction stringToArray(str) {\n  const result = [];\n  const len = str.length;\n  let index = 0;\n  while (index < len) {\n    let first = str.charCodeAt(index);\n    let second;\n    let char = first < 0xd800 || first > 0xdbff || index + 1 === len || (second = str.charCodeAt(index + 1)) < 0xdc00 || second > 0xdfff ? str[index] // single character\n    : str.slice(index, index + 2); // two-index characters\n    result.push(char);\n    index += char.length;\n  }\n  return result;\n}\n\n/**\n * Fast version of ts function for when transition defaults are well known\n * @param {State<string>} state\n * @param {string} input\n * @param {string} t\n * @param {string} defaultt\n * @param {[RegExp, State<string>][]} jr\n * @returns {State<string>}\n */\nfunction fastts(state, input, t, defaultt, jr) {\n  let next;\n  const len = input.length;\n  for (let i = 0; i < len - 1; i++) {\n    const char = input[i];\n    if (state.j[char]) {\n      next = state.j[char];\n    } else {\n      next = new State(defaultt);\n      next.jr = jr.slice();\n      state.j[char] = next;\n    }\n    state = next;\n  }\n  next = new State(t);\n  next.jr = jr.slice();\n  state.j[input[len - 1]] = next;\n  return next;\n}\n\n/**\n * Converts a string of Top-Level Domain names encoded in update-tlds.js back\n * into a list of strings.\n * @param {str} encoded encoded TLDs string\n * @returns {str[]} original TLDs list\n */\nfunction decodeTlds(encoded) {\n  const words = [];\n  const stack = [];\n  let i = 0;\n  let digits = '0123456789';\n  while (i < encoded.length) {\n    let popDigitCount = 0;\n    while (digits.indexOf(encoded[i + popDigitCount]) >= 0) {\n      popDigitCount++; // encountered some digits, have to pop to go one level up trie\n    }\n\n    if (popDigitCount > 0) {\n      words.push(stack.join('')); // whatever preceded the pop digits must be a word\n      for (let popCount = parseInt(encoded.substring(i, i + popDigitCount), 10); popCount > 0; popCount--) {\n        stack.pop();\n      }\n      i += popDigitCount;\n    } else {\n      stack.push(encoded[i]); // drop down a level into the trie\n      i++;\n    }\n  }\n  return words;\n}\n\n/**\n * An object where each key is a valid DOM Event Name such as `click` or `focus`\n * and each value is an event handler function.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element#events\n * @typedef {?{ [event: string]: Function }} EventListeners\n */\n\n/**\n * All formatted properties required to render a link, including `tagName`,\n * `attributes`, `content` and `eventListeners`.\n * @typedef {{ tagName: any, attributes: {[attr: string]: any}, content: string,\n * eventListeners: EventListeners }} IntermediateRepresentation\n */\n\n/**\n * Specify either an object described by the template type `O` or a function.\n *\n * The function takes a string value (usually the link's href attribute), the\n * link type (`'url'`, `'hashtag`', etc.) and an internal token representation\n * of the link. It should return an object of the template type `O`\n * @template O\n * @typedef {O | ((value: string, type: string, token: MultiToken) => O)} OptObj\n */\n\n/**\n * Specify either a function described by template type `F` or an object.\n *\n * Each key in the object should be a link type (`'url'`, `'hashtag`', etc.). Each\n * value should be a function with template type `F` that is called when the\n * corresponding link type is encountered.\n * @template F\n * @typedef {F | { [type: string]: F}} OptFn\n */\n\n/**\n * Specify either a value with template type `V`, a function that returns `V` or\n * an object where each value resolves to `V`.\n *\n * The function takes a string value (usually the link's href attribute), the\n * link type (`'url'`, `'hashtag`', etc.) and an internal token representation\n * of the link. It should return an object of the template type `V`\n *\n * For the object, each key should be a link type (`'url'`, `'hashtag`', etc.).\n * Each value should either have type `V` or a function that returns V. This\n * function similarly takes a string value and a token.\n *\n * Example valid types for `Opt<string>`:\n *\n * ```js\n * 'hello'\n * (value, type, token) => 'world'\n * { url: 'hello', email: (value, token) => 'world'}\n * ```\n * @template V\n * @typedef {V | ((value: string, type: string, token: MultiToken) => V) | { [type: string]: V | ((value: string, token: MultiToken) => V) }} Opt\n */\n\n/**\n * See available options: https://linkify.js.org/docs/options.html\n * @typedef {{\n * \tdefaultProtocol?: string,\n *  events?: OptObj<EventListeners>,\n * \tformat?: Opt<string>,\n * \tformatHref?: Opt<string>,\n * \tnl2br?: boolean,\n * \ttagName?: Opt<any>,\n * \ttarget?: Opt<string>,\n * \trel?: Opt<string>,\n * \tvalidate?: Opt<boolean>,\n * \ttruncate?: Opt<number>,\n * \tclassName?: Opt<string>,\n * \tattributes?: OptObj<({ [attr: string]: any })>,\n *  ignoreTags?: string[],\n * \trender?: OptFn<((ir: IntermediateRepresentation) => any)>\n * }} Opts\n */\n\n/**\n * @type Required<Opts>\n */\nconst defaults = {\n  defaultProtocol: 'http',\n  events: null,\n  format: noop,\n  formatHref: noop,\n  nl2br: false,\n  tagName: 'a',\n  target: null,\n  rel: null,\n  validate: true,\n  truncate: Infinity,\n  className: null,\n  attributes: null,\n  ignoreTags: [],\n  render: null\n};\n\n/**\n * Utility class for linkify interfaces to apply specified\n * {@link Opts formatting and rendering options}.\n *\n * @param {Opts | Options} [opts] Option value overrides.\n * @param {(ir: IntermediateRepresentation) => any} [defaultRender] (For\n *   internal use) default render function that determines how to generate an\n *   HTML element based on a link token's derived tagName, attributes and HTML.\n *   Similar to render option\n */\nfunction Options(opts, defaultRender) {\n  if (defaultRender === void 0) {\n    defaultRender = null;\n  }\n  let o = assign({}, defaults);\n  if (opts) {\n    o = assign(o, opts instanceof Options ? opts.o : opts);\n  }\n\n  // Ensure all ignored tags are uppercase\n  const ignoredTags = o.ignoreTags;\n  const uppercaseIgnoredTags = [];\n  for (let i = 0; i < ignoredTags.length; i++) {\n    uppercaseIgnoredTags.push(ignoredTags[i].toUpperCase());\n  }\n  /** @protected */\n  this.o = o;\n  if (defaultRender) {\n    this.defaultRender = defaultRender;\n  }\n  this.ignoreTags = uppercaseIgnoredTags;\n}\nOptions.prototype = {\n  o: defaults,\n  /**\n   * @type string[]\n   */\n  ignoreTags: [],\n  /**\n   * @param {IntermediateRepresentation} ir\n   * @returns {any}\n   */\n  defaultRender(ir) {\n    return ir;\n  },\n  /**\n   * Returns true or false based on whether a token should be displayed as a\n   * link based on the user options.\n   * @param {MultiToken} token\n   * @returns {boolean}\n   */\n  check(token) {\n    return this.get('validate', token.toString(), token);\n  },\n  // Private methods\n\n  /**\n   * Resolve an option's value based on the value of the option and the given\n   * params. If operator and token are specified and the target option is\n   * callable, automatically calls the function with the given argument.\n   * @template {keyof Opts} K\n   * @param {K} key Name of option to use\n   * @param {string} [operator] will be passed to the target option if it's a\n   * function. If not specified, RAW function value gets returned\n   * @param {MultiToken} [token] The token from linkify.tokenize\n   * @returns {Opts[K] | any}\n   */\n  get(key, operator, token) {\n    const isCallable = operator != null;\n    let option = this.o[key];\n    if (!option) {\n      return option;\n    }\n    if (typeof option === 'object') {\n      option = token.t in option ? option[token.t] : defaults[key];\n      if (typeof option === 'function' && isCallable) {\n        option = option(operator, token);\n      }\n    } else if (typeof option === 'function' && isCallable) {\n      option = option(operator, token.t, token);\n    }\n    return option;\n  },\n  /**\n   * @template {keyof Opts} L\n   * @param {L} key Name of options object to use\n   * @param {string} [operator]\n   * @param {MultiToken} [token]\n   * @returns {Opts[L] | any}\n   */\n  getObj(key, operator, token) {\n    let obj = this.o[key];\n    if (typeof obj === 'function' && operator != null) {\n      obj = obj(operator, token.t, token);\n    }\n    return obj;\n  },\n  /**\n   * Convert the given token to a rendered element that may be added to the\n   * calling-interface's DOM\n   * @param {MultiToken} token Token to render to an HTML element\n   * @returns {any} Render result; e.g., HTML string, DOM element, React\n   *   Component, etc.\n   */\n  render(token) {\n    const ir = token.render(this); // intermediate representation\n    const renderFn = this.get('render', null, token) || this.defaultRender;\n    return renderFn(ir, token.t, token);\n  }\n};\nfunction noop(val) {\n  return val;\n}\n\nvar options = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tdefaults: defaults,\n\tOptions: Options,\n\tassign: assign\n});\n\n/******************************************************************************\n\tMulti-Tokens\n\tTokens composed of arrays of TextTokens\n******************************************************************************/\n\n/**\n * @param {string} value\n * @param {Token[]} tokens\n */\nfunction MultiToken(value, tokens) {\n  this.t = 'token';\n  this.v = value;\n  this.tk = tokens;\n}\n\n/**\n * Abstract class used for manufacturing tokens of text tokens. That is rather\n * than the value for a token being a small string of text, it's value an array\n * of text tokens.\n *\n * Used for grouping together URLs, emails, hashtags, and other potential\n * creations.\n * @class MultiToken\n * @property {string} t\n * @property {string} v\n * @property {Token[]} tk\n * @abstract\n */\nMultiToken.prototype = {\n  isLink: false,\n  /**\n   * Return the string this token represents.\n   * @return {string}\n   */\n  toString() {\n    return this.v;\n  },\n  /**\n   * What should the value for this token be in the `href` HTML attribute?\n   * Returns the `.toString` value by default.\n   * @param {string} [scheme]\n   * @return {string}\n  */\n  toHref(scheme) {\n    return this.toString();\n  },\n  /**\n   * @param {Options} options Formatting options\n   * @returns {string}\n   */\n  toFormattedString(options) {\n    const val = this.toString();\n    const truncate = options.get('truncate', val, this);\n    const formatted = options.get('format', val, this);\n    return truncate && formatted.length > truncate ? formatted.substring(0, truncate) + '\u2026' : formatted;\n  },\n  /**\n   *\n   * @param {Options} options\n   * @returns {string}\n   */\n  toFormattedHref(options) {\n    return options.get('formatHref', this.toHref(options.get('defaultProtocol')), this);\n  },\n  /**\n   * The start index of this token in the original input string\n   * @returns {number}\n   */\n  startIndex() {\n    return this.tk[0].s;\n  },\n  /**\n   * The end index of this token in the original input string (up to this\n   * index but not including it)\n   * @returns {number}\n   */\n  endIndex() {\n    return this.tk[this.tk.length - 1].e;\n  },\n  /**\n  \tReturns an object  of relevant values for this token, which includes keys\n  \t* type - Kind of token ('url', 'email', etc.)\n  \t* value - Original text\n  \t* href - The value that should be added to the anchor tag's href\n  \t\tattribute\n  \t\t@method toObject\n  \t@param {string} [protocol] `'http'` by default\n  */\n  toObject(protocol) {\n    if (protocol === void 0) {\n      protocol = defaults.defaultProtocol;\n    }\n    return {\n      type: this.t,\n      value: this.toString(),\n      isLink: this.isLink,\n      href: this.toHref(protocol),\n      start: this.startIndex(),\n      end: this.endIndex()\n    };\n  },\n  /**\n   *\n   * @param {Options} options Formatting option\n   */\n  toFormattedObject(options) {\n    return {\n      type: this.t,\n      value: this.toFormattedString(options),\n      isLink: this.isLink,\n      href: this.toFormattedHref(options),\n      start: this.startIndex(),\n      end: this.endIndex()\n    };\n  },\n  /**\n   * Whether this token should be rendered as a link according to the given options\n   * @param {Options} options\n   * @returns {boolean}\n   */\n  validate(options) {\n    return options.get('validate', this.toString(), this);\n  },\n  /**\n   * Return an object that represents how this link should be rendered.\n   * @param {Options} options Formattinng options\n   */\n  render(options) {\n    const token = this;\n    const href = this.toHref(options.get('defaultProtocol'));\n    const formattedHref = options.get('formatHref', href, this);\n    const tagName = options.get('tagName', href, token);\n    const content = this.toFormattedString(options);\n    const attributes = {};\n    const className = options.get('className', href, token);\n    const target = options.get('target', href, token);\n    const rel = options.get('rel', href, token);\n    const attrs = options.getObj('attributes', href, token);\n    const eventListeners = options.getObj('events', href, token);\n    attributes.href = formattedHref;\n    if (className) {\n      attributes.class = className;\n    }\n    if (target) {\n      attributes.target = target;\n    }\n    if (rel) {\n      attributes.rel = rel;\n    }\n    if (attrs) {\n      assign(attributes, attrs);\n    }\n    return {\n      tagName,\n      attributes,\n      content,\n      eventListeners\n    };\n  }\n};\n\n/**\n * Create a new token that can be emitted by the parser state machine\n * @param {string} type readable type of the token\n * @param {object} props properties to assign or override, including isLink = true or false\n * @returns {new (value: string, tokens: Token[]) => MultiToken} new token class\n */\nfunction createTokenClass(type, props) {\n  class Token extends MultiToken {\n    constructor(value, tokens) {\n      super(value, tokens);\n      this.t = type;\n    }\n  }\n  for (const p in props) {\n    Token.prototype[p] = props[p];\n  }\n  Token.t = type;\n  return Token;\n}\n\n/**\n\tRepresents a list of tokens making up a valid email address\n*/\nconst Email = createTokenClass('email', {\n  isLink: true,\n  toHref() {\n    return 'mailto:' + this.toString();\n  }\n});\n\n/**\n\tRepresents some plain text\n*/\nconst Text = createTokenClass('text');\n\n/**\n\tMulti-linebreak token - represents a line break\n\t@class Nl\n*/\nconst Nl = createTokenClass('nl');\n\n/**\n\tRepresents a list of text tokens making up a valid URL\n\t@class Url\n*/\nconst Url = createTokenClass('url', {\n  isLink: true,\n  /**\n  \tLowercases relevant parts of the domain and adds the protocol if\n  \trequired. Note that this will not escape unsafe HTML characters in the\n  \tURL.\n  \t\t@param {string} [scheme] default scheme (e.g., 'https')\n  \t@return {string} the full href\n  */\n  toHref(scheme) {\n    if (scheme === void 0) {\n      scheme = defaults.defaultProtocol;\n    }\n    // Check if already has a prefix scheme\n    return this.hasProtocol() ? this.v : `${scheme}://${this.v}`;\n  },\n  /**\n   * Check whether this URL token has a protocol\n   * @return {boolean}\n   */\n  hasProtocol() {\n    const tokens = this.tk;\n    return tokens.length >= 2 && tokens[0].t !== LOCALHOST && tokens[1].t === COLON;\n  }\n});\n\nvar multi = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tMultiToken: MultiToken,\n\tBase: MultiToken,\n\tcreateTokenClass: createTokenClass,\n\tEmail: Email,\n\tText: Text,\n\tNl: Nl,\n\tUrl: Url\n});\n\n/**\n\tNot exactly parser, more like the second-stage scanner (although we can\n\ttheoretically hotswap the code here with a real parser in the future... but\n\tfor a little URL-finding utility abstract syntax trees may be a little\n\toverkill).\n\n\tURL format: http://en.wikipedia.org/wiki/URI_scheme\n\tEmail format: http://en.wikipedia.org/wiki/EmailAddress (links to RFC in\n\treference)\n\n\t@module linkify\n\t@submodule parser\n\t@main run\n*/\nconst makeState = arg => new State(arg);\n\n/**\n * Generate the parser multi token-based state machine\n * @param {{ groups: Collections<string> }} tokens\n */\nfunction init$1(_ref) {\n  let {\n    groups\n  } = _ref;\n  // Types of characters the URL can definitely end in\n  const qsAccepting = groups.domain.concat([AMPERSAND, ASTERISK, AT, BACKSLASH, BACKTICK, CARET, DOLLAR, EQUALS, HYPHEN, NUM, PERCENT, PIPE, PLUS, POUND, SLASH, SYM, TILDE, UNDERSCORE]);\n\n  // Types of tokens that can follow a URL and be part of the query string\n  // but cannot be the very last characters\n  // Characters that cannot appear in the URL at all should be excluded\n  const qsNonAccepting = [APOSTROPHE, CLOSEANGLEBRACKET, CLOSEBRACE, CLOSEBRACKET, CLOSEPAREN, COLON, COMMA, DOT, EXCLAMATION, OPENANGLEBRACKET, OPENBRACE, OPENBRACKET, OPENPAREN, QUERY, QUOTE, SEMI];\n\n  // For addresses without the mailto prefix\n  // Tokens allowed in the localpart of the email\n  const localpartAccepting = [AMPERSAND, APOSTROPHE, ASTERISK, BACKSLASH, BACKTICK, CARET, CLOSEBRACE, DOLLAR, EQUALS, HYPHEN, OPENBRACE, PERCENT, PIPE, PLUS, POUND, QUERY, SLASH, SYM, TILDE, UNDERSCORE];\n\n  // The universal starting state.\n  /**\n   * @type State<Token>\n   */\n  const Start = makeState();\n  const Localpart = tt(Start, TILDE); // Local part of the email address\n  ta(Localpart, localpartAccepting, Localpart);\n  ta(Localpart, groups.domain, Localpart);\n  const Domain = makeState(),\n    Scheme = makeState(),\n    SlashScheme = makeState();\n  ta(Start, groups.domain, Domain); // parsed string ends with a potential domain name (A)\n  ta(Start, groups.scheme, Scheme); // e.g., 'mailto'\n  ta(Start, groups.slashscheme, SlashScheme); // e.g., 'http'\n\n  ta(Domain, localpartAccepting, Localpart);\n  ta(Domain, groups.domain, Domain);\n  const LocalpartAt = tt(Domain, AT); // Local part of the email address plus @\n\n  tt(Localpart, AT, LocalpartAt); // close to an email address now\n\n  // Local part of an email address can be e.g. 'http' or 'mailto'\n  tt(Scheme, AT, LocalpartAt);\n  tt(SlashScheme, AT, LocalpartAt);\n  const LocalpartDot = tt(Localpart, DOT); // Local part of the email address plus '.' (localpart cannot end in .)\n  ta(LocalpartDot, localpartAccepting, Localpart);\n  ta(LocalpartDot, groups.domain, Localpart);\n  const EmailDomain = makeState();\n  ta(LocalpartAt, groups.domain, EmailDomain); // parsed string starts with local email info + @ with a potential domain name\n  ta(EmailDomain, groups.domain, EmailDomain);\n  const EmailDomainDot = tt(EmailDomain, DOT); // domain followed by DOT\n  ta(EmailDomainDot, groups.domain, EmailDomain);\n  const Email$1 = makeState(Email); // Possible email address (could have more tlds)\n  ta(EmailDomainDot, groups.tld, Email$1);\n  ta(EmailDomainDot, groups.utld, Email$1);\n  tt(LocalpartAt, LOCALHOST, Email$1);\n\n  // Hyphen can jump back to a domain name\n  const EmailDomainHyphen = tt(EmailDomain, HYPHEN); // parsed string starts with local email info + @ with a potential domain name\n  ta(EmailDomainHyphen, groups.domain, EmailDomain);\n  ta(Email$1, groups.domain, EmailDomain);\n  tt(Email$1, DOT, EmailDomainDot);\n  tt(Email$1, HYPHEN, EmailDomainHyphen);\n\n  // Final possible email states\n  const EmailColon = tt(Email$1, COLON); // URL followed by colon (potential port number here)\n  /*const EmailColonPort = */\n  ta(EmailColon, groups.numeric, Email); // URL followed by colon and port numner\n\n  // Account for dots and hyphens. Hyphens are usually parts of domain names\n  // (but not TLDs)\n  const DomainHyphen = tt(Domain, HYPHEN); // domain followed by hyphen\n  const DomainDot = tt(Domain, DOT); // domain followed by DOT\n  ta(DomainHyphen, groups.domain, Domain);\n  ta(DomainDot, localpartAccepting, Localpart);\n  ta(DomainDot, groups.domain, Domain);\n  const DomainDotTld = makeState(Url); // Simplest possible URL with no query string\n  ta(DomainDot, groups.tld, DomainDotTld);\n  ta(DomainDot, groups.utld, DomainDotTld);\n  ta(DomainDotTld, groups.domain, Domain);\n  ta(DomainDotTld, localpartAccepting, Localpart);\n  tt(DomainDotTld, DOT, DomainDot);\n  tt(DomainDotTld, HYPHEN, DomainHyphen);\n  tt(DomainDotTld, AT, LocalpartAt);\n  const DomainDotTldColon = tt(DomainDotTld, COLON); // URL followed by colon (potential port number here)\n  const DomainDotTldColonPort = makeState(Url); // TLD followed by a port number\n  ta(DomainDotTldColon, groups.numeric, DomainDotTldColonPort);\n\n  // Long URL with optional port and maybe query string\n  const Url$1 = makeState(Url);\n\n  // URL with extra symbols at the end, followed by an opening bracket\n  const UrlNonaccept = makeState(); // URL followed by some symbols (will not be part of the final URL)\n\n  // Query strings\n  ta(Url$1, qsAccepting, Url$1);\n  ta(Url$1, qsNonAccepting, UrlNonaccept);\n  ta(UrlNonaccept, qsAccepting, Url$1);\n  ta(UrlNonaccept, qsNonAccepting, UrlNonaccept);\n\n  // Become real URLs after `SLASH` or `COLON NUM SLASH`\n  // Here works with or without scheme:// prefix\n  tt(DomainDotTld, SLASH, Url$1);\n  tt(DomainDotTldColonPort, SLASH, Url$1);\n\n  // Note that domains that begin with schemes are treated slighly differently\n  const SchemeColon = tt(Scheme, COLON); // e.g., 'mailto:'\n  const SlashSchemeColon = tt(SlashScheme, COLON); // e.g., 'http:'\n  const SlashSchemeColonSlash = tt(SlashSchemeColon, SLASH); // e.g., 'http:/'\n\n  const UriPrefix = tt(SlashSchemeColonSlash, SLASH); // e.g., 'http://'\n\n  // Scheme states can transition to domain states\n  ta(Scheme, groups.domain, Domain);\n  tt(Scheme, DOT, DomainDot);\n  tt(Scheme, HYPHEN, DomainHyphen);\n  ta(SlashScheme, groups.domain, Domain);\n  tt(SlashScheme, DOT, DomainDot);\n  tt(SlashScheme, HYPHEN, DomainHyphen);\n\n  // Force URL with scheme prefix followed by anything sane\n  ta(SchemeColon, groups.domain, Url$1);\n  tt(SchemeColon, SLASH, Url$1);\n  ta(UriPrefix, groups.domain, Url$1);\n  ta(UriPrefix, qsAccepting, Url$1);\n  tt(UriPrefix, SLASH, Url$1);\n\n  // URL, followed by an opening bracket\n  const UrlOpenbrace = tt(Url$1, OPENBRACE); // URL followed by {\n  const UrlOpenbracket = tt(Url$1, OPENBRACKET); // URL followed by [\n  const UrlOpenanglebracket = tt(Url$1, OPENANGLEBRACKET); // URL followed by <\n  const UrlOpenparen = tt(Url$1, OPENPAREN); // URL followed by (\n\n  tt(UrlNonaccept, OPENBRACE, UrlOpenbrace);\n  tt(UrlNonaccept, OPENBRACKET, UrlOpenbracket);\n  tt(UrlNonaccept, OPENANGLEBRACKET, UrlOpenanglebracket);\n  tt(UrlNonaccept, OPENPAREN, UrlOpenparen);\n\n  // Closing bracket component. This character WILL be included in the URL\n  tt(UrlOpenbrace, CLOSEBRACE, Url$1);\n  tt(UrlOpenbracket, CLOSEBRACKET, Url$1);\n  tt(UrlOpenanglebracket, CLOSEANGLEBRACKET, Url$1);\n  tt(UrlOpenparen, CLOSEPAREN, Url$1);\n  tt(UrlOpenbrace, CLOSEBRACE, Url$1);\n\n  // URL that beings with an opening bracket, followed by a symbols.\n  // Note that the final state can still be `UrlOpenbrace` (if the URL only\n  // has a single opening bracket for some reason).\n  const UrlOpenbraceQ = makeState(Url); // URL followed by { and some symbols that the URL can end it\n  const UrlOpenbracketQ = makeState(Url); // URL followed by [ and some symbols that the URL can end it\n  const UrlOpenanglebracketQ = makeState(Url); // URL followed by < and some symbols that the URL can end it\n  const UrlOpenparenQ = makeState(Url); // URL followed by ( and some symbols that the URL can end it\n  ta(UrlOpenbrace, qsAccepting, UrlOpenbraceQ);\n  ta(UrlOpenbracket, qsAccepting, UrlOpenbracketQ);\n  ta(UrlOpenanglebracket, qsAccepting, UrlOpenanglebracketQ);\n  ta(UrlOpenparen, qsAccepting, UrlOpenparenQ);\n  const UrlOpenbraceSyms = makeState(); // UrlOpenbrace followed by some symbols it cannot end it\n  const UrlOpenbracketSyms = makeState(); // UrlOpenbracketQ followed by some symbols it cannot end it\n  const UrlOpenanglebracketSyms = makeState(); // UrlOpenanglebracketQ followed by some symbols it cannot end it\n  const UrlOpenparenSyms = makeState(); // UrlOpenparenQ followed by some symbols it cannot end it\n  ta(UrlOpenbrace, qsNonAccepting);\n  ta(UrlOpenbracket, qsNonAccepting);\n  ta(UrlOpenanglebracket, qsNonAccepting);\n  ta(UrlOpenparen, qsNonAccepting);\n\n  // URL that begins with an opening bracket, followed by some symbols\n  ta(UrlOpenbraceQ, qsAccepting, UrlOpenbraceQ);\n  ta(UrlOpenbracketQ, qsAccepting, UrlOpenbracketQ);\n  ta(UrlOpenanglebracketQ, qsAccepting, UrlOpenanglebracketQ);\n  ta(UrlOpenparenQ, qsAccepting, UrlOpenparenQ);\n  ta(UrlOpenbraceQ, qsNonAccepting, UrlOpenbraceQ);\n  ta(UrlOpenbracketQ, qsNonAccepting, UrlOpenbracketQ);\n  ta(UrlOpenanglebracketQ, qsNonAccepting, UrlOpenanglebracketQ);\n  ta(UrlOpenparenQ, qsNonAccepting, UrlOpenparenQ);\n  ta(UrlOpenbraceSyms, qsAccepting, UrlOpenbraceSyms);\n  ta(UrlOpenbracketSyms, qsAccepting, UrlOpenbracketQ);\n  ta(UrlOpenanglebracketSyms, qsAccepting, UrlOpenanglebracketQ);\n  ta(UrlOpenparenSyms, qsAccepting, UrlOpenparenQ);\n  ta(UrlOpenbraceSyms, qsNonAccepting, UrlOpenbraceSyms);\n  ta(UrlOpenbracketSyms, qsNonAccepting, UrlOpenbracketSyms);\n  ta(UrlOpenanglebracketSyms, qsNonAccepting, UrlOpenanglebracketSyms);\n  ta(UrlOpenparenSyms, qsNonAccepting, UrlOpenparenSyms);\n\n  // Close brace/bracket to become regular URL\n  tt(UrlOpenbracketQ, CLOSEBRACKET, Url$1);\n  tt(UrlOpenanglebracketQ, CLOSEANGLEBRACKET, Url$1);\n  tt(UrlOpenparenQ, CLOSEPAREN, Url$1);\n  tt(UrlOpenbraceQ, CLOSEBRACE, Url$1);\n  tt(UrlOpenbracketSyms, CLOSEBRACKET, Url$1);\n  tt(UrlOpenanglebracketSyms, CLOSEANGLEBRACKET, Url$1);\n  tt(UrlOpenparenSyms, CLOSEPAREN, Url$1);\n  tt(UrlOpenbraceSyms, CLOSEPAREN, Url$1);\n  tt(Start, LOCALHOST, DomainDotTld); // localhost is a valid URL state\n  tt(Start, NL$1, Nl); // single new line\n\n  return {\n    start: Start,\n    tokens: tk\n  };\n}\n\n/**\n * Run the parser state machine on a list of scanned string-based tokens to\n * create a list of multi tokens, each of which represents a URL, email address,\n * plain text, etc.\n *\n * @param {State<MultiToken>} start parser start state\n * @param {string} input the original input used to generate the given tokens\n * @param {Token[]} tokens list of scanned tokens\n * @returns {MultiToken[]}\n */\nfunction run(start, input, tokens) {\n  let len = tokens.length;\n  let cursor = 0;\n  let multis = [];\n  let textTokens = [];\n  while (cursor < len) {\n    let state = start;\n    let secondState = null;\n    let nextState = null;\n    let multiLength = 0;\n    let latestAccepting = null;\n    let sinceAccepts = -1;\n    while (cursor < len && !(secondState = state.go(tokens[cursor].t))) {\n      // Starting tokens with nowhere to jump to.\n      // Consider these to be just plain text\n      textTokens.push(tokens[cursor++]);\n    }\n    while (cursor < len && (nextState = secondState || state.go(tokens[cursor].t))) {\n      // Get the next state\n      secondState = null;\n      state = nextState;\n\n      // Keep track of the latest accepting state\n      if (state.accepts()) {\n        sinceAccepts = 0;\n        latestAccepting = state;\n      } else if (sinceAccepts >= 0) {\n        sinceAccepts++;\n      }\n      cursor++;\n      multiLength++;\n    }\n    if (sinceAccepts < 0) {\n      // No accepting state was found, part of a regular text token add\n      // the first text token to the text tokens array and try again from\n      // the next\n      cursor -= multiLength;\n      if (cursor < len) {\n        textTokens.push(tokens[cursor]);\n        cursor++;\n      }\n    } else {\n      // Accepting state!\n      // First close off the textTokens (if available)\n      if (textTokens.length > 0) {\n        multis.push(initMultiToken(Text, input, textTokens));\n        textTokens = [];\n      }\n\n      // Roll back to the latest accepting state\n      cursor -= sinceAccepts;\n      multiLength -= sinceAccepts;\n\n      // Create a new multitoken\n      const Multi = latestAccepting.t;\n      const subtokens = tokens.slice(cursor - multiLength, cursor);\n      multis.push(initMultiToken(Multi, input, subtokens));\n    }\n  }\n\n  // Finally close off the textTokens (if available)\n  if (textTokens.length > 0) {\n    multis.push(initMultiToken(Text, input, textTokens));\n  }\n  return multis;\n}\n\n/**\n * Utility function for instantiating a new multitoken with all the relevant\n * fields during parsing.\n * @param {new (value: string, tokens: Token[]) => MultiToken} Multi class to instantiate\n * @param {string} input original input string\n * @param {Token[]} tokens consecutive tokens scanned from input string\n * @returns {MultiToken}\n */\nfunction initMultiToken(Multi, input, tokens) {\n  const startIdx = tokens[0].s;\n  const endIdx = tokens[tokens.length - 1].e;\n  const value = input.slice(startIdx, endIdx);\n  return new Multi(value, tokens);\n}\n\nconst warn = typeof console !== 'undefined' && console && console.warn || (() => {});\nconst warnAdvice = 'until manual call of linkify.init(). Register all schemes and plugins before invoking linkify the first time.';\n\n// Side-effect initialization state\nconst INIT = {\n  scanner: null,\n  parser: null,\n  tokenQueue: [],\n  pluginQueue: [],\n  customSchemes: [],\n  initialized: false\n};\n\n/**\n * @typedef {{\n * \tstart: State<string>,\n * \ttokens: { groups: Collections<string> } & typeof tk\n * }} ScannerInit\n */\n\n/**\n * @typedef {{\n * \tstart: State<MultiToken>,\n * \ttokens: typeof multi\n * }} ParserInit\n */\n\n/**\n * @typedef {(arg: { scanner: ScannerInit }) => void} TokenPlugin\n */\n\n/**\n * @typedef {(arg: { scanner: ScannerInit, parser: ParserInit }) => void} Plugin\n */\n\n/**\n * De-register all plugins and reset the internal state-machine. Used for\n * testing; not required in practice.\n * @private\n */\nfunction reset() {\n  State.groups = {};\n  INIT.scanner = null;\n  INIT.parser = null;\n  INIT.tokenQueue = [];\n  INIT.pluginQueue = [];\n  INIT.customSchemes = [];\n  INIT.initialized = false;\n}\n\n/**\n * Register a token plugin to allow the scanner to recognize additional token\n * types before the parser state machine is constructed from the results.\n * @param {string} name of plugin to register\n * @param {TokenPlugin} plugin function that accepts the scanner state machine\n * and available scanner tokens and collections and extends the state machine to\n * recognize additional tokens or groups.\n */\nfunction registerTokenPlugin(name, plugin) {\n  if (typeof plugin !== 'function') {\n    throw new Error(`linkifyjs: Invalid token plugin ${plugin} (expects function)`);\n  }\n  for (let i = 0; i < INIT.tokenQueue.length; i++) {\n    if (name === INIT.tokenQueue[i][0]) {\n      warn(`linkifyjs: token plugin \"${name}\" already registered - will be overwritten`);\n      INIT.tokenQueue[i] = [name, plugin];\n      return;\n    }\n  }\n  INIT.tokenQueue.push([name, plugin]);\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register token plugin \"${name}\" ${warnAdvice}`);\n  }\n}\n\n/**\n * Register a linkify plugin\n * @param {string} name of plugin to register\n * @param {Plugin} plugin function that accepts the parser state machine and\n * extends the parser to recognize additional link types\n */\nfunction registerPlugin(name, plugin) {\n  if (typeof plugin !== 'function') {\n    throw new Error(`linkifyjs: Invalid plugin ${plugin} (expects function)`);\n  }\n  for (let i = 0; i < INIT.pluginQueue.length; i++) {\n    if (name === INIT.pluginQueue[i][0]) {\n      warn(`linkifyjs: plugin \"${name}\" already registered - will be overwritten`);\n      INIT.pluginQueue[i] = [name, plugin];\n      return;\n    }\n  }\n  INIT.pluginQueue.push([name, plugin]);\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register plugin \"${name}\" ${warnAdvice}`);\n  }\n}\n\n/**\n * Detect URLs with the following additional protocol. Anything with format\n * \"protocol://...\" will be considered a link. If `optionalSlashSlash` is set to\n * `true`, anything with format \"protocol:...\" will be considered a link.\n * @param {string} protocol\n * @param {boolean} [optionalSlashSlash]\n */\nfunction registerCustomProtocol(scheme, optionalSlashSlash) {\n  if (optionalSlashSlash === void 0) {\n    optionalSlashSlash = false;\n  }\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register custom scheme \"${scheme}\" ${warnAdvice}`);\n  }\n  if (!/^[0-9a-z]+(-[0-9a-z]+)*$/.test(scheme)) {\n    throw new Error('linkifyjs: incorrect scheme format.\\n 1. Must only contain digits, lowercase ASCII letters or \"-\"\\n 2. Cannot start or end with \"-\"\\n 3. \"-\" cannot repeat');\n  }\n  INIT.customSchemes.push([scheme, optionalSlashSlash]);\n}\n\n/**\n * Initialize the linkify state machine. Called automatically the first time\n * linkify is called on a string, but may be called manually as well.\n */\nfunction init() {\n  // Initialize scanner state machine and plugins\n  INIT.scanner = init$2(INIT.customSchemes);\n  for (let i = 0; i < INIT.tokenQueue.length; i++) {\n    INIT.tokenQueue[i][1]({\n      scanner: INIT.scanner\n    });\n  }\n\n  // Initialize parser state machine and plugins\n  INIT.parser = init$1(INIT.scanner.tokens);\n  for (let i = 0; i < INIT.pluginQueue.length; i++) {\n    INIT.pluginQueue[i][1]({\n      scanner: INIT.scanner,\n      parser: INIT.parser\n    });\n  }\n  INIT.initialized = true;\n}\n\n/**\n * Parse a string into tokens that represent linkable and non-linkable sub-components\n * @param {string} str\n * @return {MultiToken[]} tokens\n */\nfunction tokenize(str) {\n  if (!INIT.initialized) {\n    init();\n  }\n  return run(INIT.parser.start, str, run$1(INIT.scanner.start, str));\n}\n\n/**\n * Find a list of linkable items in the given string.\n * @param {string} str string to find links in\n * @param {string | Opts} [type] either formatting options or specific type of\n * links to find, e.g., 'url' or 'email'\n * @param {Opts} [opts] formatting options for final output. Cannot be specified\n * if opts already provided in `type` argument\n*/\nfunction find(str, type, opts) {\n  if (type === void 0) {\n    type = null;\n  }\n  if (opts === void 0) {\n    opts = null;\n  }\n  if (type && typeof type === 'object') {\n    if (opts) {\n      throw Error(`linkifyjs: Invalid link type ${type}; must be a string`);\n    }\n    opts = type;\n    type = null;\n  }\n  const options = new Options(opts);\n  const tokens = tokenize(str);\n  const filtered = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.isLink && (!type || token.t === type)) {\n      filtered.push(token.toFormattedObject(options));\n    }\n  }\n  return filtered;\n}\n\n/**\n * Is the given string valid linkable text of some sort. Note that this does not\n * trim the text for you.\n *\n * Optionally pass in a second `type` param, which is the type of link to test\n * for.\n *\n * For example,\n *\n *     linkify.test(str, 'email');\n *\n * Returns `true` if str is a valid email.\n * @param {string} str string to test for links\n * @param {string} [type] optional specific link type to look for\n * @returns boolean true/false\n */\nfunction test(str, type) {\n  if (type === void 0) {\n    type = null;\n  }\n  const tokens = tokenize(str);\n  return tokens.length === 1 && tokens[0].isLink && (!type || tokens[0].t === type);\n}\n\nexport { MultiToken, Options, State, createTokenClass, find, init, multi, options, regexp, registerCustomProtocol, registerPlugin, registerTokenPlugin, reset, stringToArray, test, tokenize };\n", "import {\n  combineTransactionSteps,\n  findChildrenInRange,\n  getChangedRanges,\n  getMarksBetween,\n  NodeWithPos,\n} from '@tiptap/core'\nimport { MarkType } from '@tiptap/pm/model'\nimport { Plugin, PluginKey } from '@tiptap/pm/state'\nimport { find, test } from 'linkifyjs'\n\ntype AutolinkOptions = {\n  type: MarkType\n  validate?: (url: string) => boolean\n}\n\nexport function autolink(options: AutolinkOptions): Plugin {\n  return new Plugin({\n    key: new PluginKey('autolink'),\n    appendTransaction: (transactions, oldState, newState) => {\n      const docChanges = transactions.some(transaction => transaction.docChanged) && !oldState.doc.eq(newState.doc)\n      const preventAutolink = transactions.some(transaction => transaction.getMeta('preventAutolink'))\n\n      if (!docChanges || preventAutolink) {\n        return\n      }\n\n      const { tr } = newState\n      const transform = combineTransactionSteps(oldState.doc, [...transactions])\n      const { mapping } = transform\n      const changes = getChangedRanges(transform)\n\n      changes.forEach(({ oldRange, newRange }) => {\n        // at first we check if we have to remove links\n        getMarksBetween(oldRange.from, oldRange.to, oldState.doc)\n          .filter(item => item.mark.type === options.type)\n          .forEach(oldMark => {\n            const newFrom = mapping.map(oldMark.from)\n            const newTo = mapping.map(oldMark.to)\n            const newMarks = getMarksBetween(newFrom, newTo, newState.doc).filter(\n              item => item.mark.type === options.type,\n            )\n\n            if (!newMarks.length) {\n              return\n            }\n\n            const newMark = newMarks[0]\n            const oldLinkText = oldState.doc.textBetween(oldMark.from, oldMark.to, undefined, ' ')\n            const newLinkText = newState.doc.textBetween(newMark.from, newMark.to, undefined, ' ')\n            const wasLink = test(oldLinkText)\n            const isLink = test(newLinkText)\n\n            // remove only the link, if it was a link before too\n            // because we don\u2019t want to remove links that were set manually\n            if (wasLink && !isLink) {\n              tr.removeMark(newMark.from, newMark.to, options.type)\n            }\n          })\n\n        // now let\u2019s see if we can add new links\n        const nodesInChangedRanges = findChildrenInRange(\n          newState.doc,\n          newRange,\n          node => node.isTextblock,\n        )\n\n        let textBlock: NodeWithPos | undefined\n        let textBeforeWhitespace: string | undefined\n\n        if (nodesInChangedRanges.length > 1) {\n          // Grab the first node within the changed ranges (ex. the first of two paragraphs when hitting enter)\n          textBlock = nodesInChangedRanges[0]\n          textBeforeWhitespace = newState.doc.textBetween(\n            textBlock.pos,\n            textBlock.pos + textBlock.node.nodeSize,\n            undefined,\n            ' ',\n          )\n        } else if (\n          nodesInChangedRanges.length\n          // We want to make sure to include the block seperator argument to treat hard breaks like spaces\n          && newState.doc.textBetween(newRange.from, newRange.to, ' ', ' ').endsWith(' ')\n        ) {\n          textBlock = nodesInChangedRanges[0]\n          textBeforeWhitespace = newState.doc.textBetween(\n            textBlock.pos,\n            newRange.to,\n            undefined,\n            ' ',\n          )\n        }\n\n        if (textBlock && textBeforeWhitespace) {\n          const wordsBeforeWhitespace = textBeforeWhitespace.split(' ').filter(s => s !== '')\n\n          if (wordsBeforeWhitespace.length <= 0) {\n            return false\n          }\n\n          const lastWordBeforeSpace = wordsBeforeWhitespace[wordsBeforeWhitespace.length - 1]\n          const lastWordAndBlockOffset = textBlock.pos + textBeforeWhitespace.lastIndexOf(lastWordBeforeSpace)\n\n          if (!lastWordBeforeSpace) {\n            return false\n          }\n\n          find(lastWordBeforeSpace)\n            .filter(link => link.isLink)\n            .filter(link => {\n              if (options.validate) {\n                return options.validate(link.value)\n              }\n              return true\n            })\n            // calculate link position\n            .map(link => ({\n              ...link,\n              from: lastWordAndBlockOffset + link.start + 1,\n              to: lastWordAndBlockOffset + link.end + 1,\n            }))\n            // add link mark\n            .forEach(link => {\n              tr.addMark(\n                link.from,\n                link.to,\n                options.type.create({\n                  href: link.href,\n                }),\n              )\n            })\n        }\n      })\n\n      if (!tr.steps.length) {\n        return\n      }\n\n      return tr\n    },\n  })\n}\n", "import { getAttributes } from '@tiptap/core'\nimport { MarkType } from '@tiptap/pm/model'\nimport { Plugin, PluginKey } from '@tiptap/pm/state'\n\ntype ClickHandlerOptions = {\n  type: MarkType\n}\n\nexport function clickHandler(options: ClickHandlerOptions): Plugin {\n  return new Plugin({\n    key: new PluginKey('handleClickLink'),\n    props: {\n      handleClick: (view, pos, event) => {\n        if (event.button !== 0) {\n          return false\n        }\n\n        const attrs = getAttributes(view.state, options.type.name)\n        const link = (event.target as HTMLElement)?.closest('a')\n\n        const href = link?.href ?? attrs.href\n        const target = link?.target ?? attrs.target\n\n        if (link && href) {\n          window.open(href, target)\n\n          return true\n        }\n\n        return false\n      },\n    },\n  })\n}\n", "import { Editor } from '@tiptap/core'\nimport { MarkType } from '@tiptap/pm/model'\nimport { Plugin, PluginKey } from '@tiptap/pm/state'\nimport { find } from 'linkifyjs'\n\ntype PasteHandlerOptions = {\n  editor: Editor\n  type: MarkType\n}\n\nexport function pasteHandler(options: PasteHandlerOptions): Plugin {\n  return new Plugin({\n    key: new PluginKey('handlePasteLink'),\n    props: {\n      handlePaste: (view, event, slice) => {\n        const { state } = view\n        const { selection } = state\n        const { empty } = selection\n\n        if (empty) {\n          return false\n        }\n\n        let textContent = ''\n\n        slice.content.forEach(node => {\n          textContent += node.textContent\n        })\n\n        const link = find(textContent).find(item => item.isLink && item.value === textContent)\n\n        if (!textContent || !link) {\n          return false\n        }\n\n        options.editor.commands.setMark(options.type, {\n          href: link.href,\n        })\n\n        return true\n      },\n    },\n  })\n}\n", "import { Mark, markPasteRule, mergeAttributes } from '@tiptap/core'\nimport { Plugin } from '@tiptap/pm/state'\nimport { find, registerCustomProtocol, reset } from 'linkifyjs'\n\nimport { autolink } from './helpers/autolink'\nimport { clickHandler } from './helpers/clickHandler'\nimport { pasteHandler } from './helpers/pasteHandler'\n\nexport interface LinkProtocolOptions {\n  scheme: string;\n  optionalSlashes?: boolean;\n}\n\nexport interface LinkOptions {\n  /**\n   * If enabled, it adds links as you type.\n   */\n  autolink: boolean\n  /**\n   * An array of custom protocols to be registered with linkifyjs.\n   */\n  protocols: Array<LinkProtocolOptions | string>\n  /**\n   * If enabled, links will be opened on click.\n   */\n  openOnClick: boolean\n  /**\n   * Adds a link to the current selection if the pasted content only contains an url.\n   */\n  linkOnPaste: boolean\n  /**\n   * A list of HTML attributes to be rendered.\n   */\n  HTMLAttributes: Record<string, any>\n  /**\n   * A validation function that modifies link verification for the auto linker.\n   * @param url - The url to be validated.\n   * @returns - True if the url is valid, false otherwise.\n   */\n  validate?: (url: string) => boolean\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    link: {\n      /**\n       * Set a link mark\n       */\n      setLink: (attributes: { href: string; target?: string | null }) => ReturnType\n      /**\n       * Toggle a link mark\n       */\n      toggleLink: (attributes: { href: string; target?: string | null }) => ReturnType\n      /**\n       * Unset a link mark\n       */\n      unsetLink: () => ReturnType\n    }\n  }\n}\n\nexport const Link = Mark.create<LinkOptions>({\n  name: 'link',\n\n  priority: 1000,\n\n  keepOnSplit: false,\n\n  onCreate() {\n    this.options.protocols.forEach(protocol => {\n      if (typeof protocol === 'string') {\n        registerCustomProtocol(protocol)\n        return\n      }\n      registerCustomProtocol(protocol.scheme, protocol.optionalSlashes)\n    })\n  },\n\n  onDestroy() {\n    reset()\n  },\n\n  inclusive() {\n    return this.options.autolink\n  },\n\n  addOptions() {\n    return {\n      openOnClick: true,\n      linkOnPaste: true,\n      autolink: true,\n      protocols: [],\n      HTMLAttributes: {\n        target: '_blank',\n        rel: 'noopener noreferrer nofollow',\n        class: null,\n      },\n      validate: undefined,\n    }\n  },\n\n  addAttributes() {\n    return {\n      href: {\n        default: null,\n      },\n      target: {\n        default: this.options.HTMLAttributes.target,\n      },\n      class: {\n        default: this.options.HTMLAttributes.class,\n      },\n    }\n  },\n\n  parseHTML() {\n    return [{ tag: 'a[href]:not([href *= \"javascript:\" i])' }]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['a', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setLink:\n        attributes => ({ chain }) => {\n          return chain().setMark(this.name, attributes).setMeta('preventAutolink', true).run()\n        },\n\n      toggleLink:\n        attributes => ({ chain }) => {\n          return chain()\n            .toggleMark(this.name, attributes, { extendEmptyMarkRange: true })\n            .setMeta('preventAutolink', true)\n            .run()\n        },\n\n      unsetLink:\n        () => ({ chain }) => {\n          return chain()\n            .unsetMark(this.name, { extendEmptyMarkRange: true })\n            .setMeta('preventAutolink', true)\n            .run()\n        },\n    }\n  },\n\n  addPasteRules() {\n    return [\n      markPasteRule({\n        find: text => find(text)\n          .filter(link => {\n            if (this.options.validate) {\n              return this.options.validate(link.value)\n            }\n\n            return true\n          })\n          .filter(link => link.isLink)\n          .map(link => ({\n            text: link.value,\n            index: link.start,\n            data: link,\n          })),\n        type: this.type,\n        getAttributes: match => ({\n          href: match.data?.href,\n        }),\n      }),\n    ]\n  },\n\n  addProseMirrorPlugins() {\n    const plugins: Plugin[] = []\n\n    if (this.options.autolink) {\n      plugins.push(\n        autolink({\n          type: this.type,\n          validate: this.options.validate,\n        }),\n      )\n    }\n\n    if (this.options.openOnClick) {\n      plugins.push(\n        clickHandler({\n          type: this.type,\n        }),\n      )\n    }\n\n    if (this.options.linkOnPaste) {\n      plugins.push(\n        pasteHandler({\n          editor: this.editor,\n          type: this.type,\n        }),\n      )\n    }\n\n    return plugins\n  },\n})\n", "import {\n  mergeAttributes,\n  Node,\n  nodeInputRule,\n} from '@tiptap/core'\n\nexport interface ImageOptions {\n  inline: boolean,\n  allowBase64: boolean,\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    image: {\n      /**\n       * Add an image\n       */\n      setImage: (options: { src: string, alt?: string, title?: string }) => ReturnType,\n    }\n  }\n}\n\nexport const inputRegex = /(?:^|\\s)(!\\[(.+|:?)]\\((\\S+)(?:(?:\\s+)[\"'](\\S+)[\"'])?\\))$/\n\nexport const Image = Node.create<ImageOptions>({\n  name: 'image',\n\n  addOptions() {\n    return {\n      inline: false,\n      allowBase64: false,\n      HTMLAttributes: {},\n    }\n  },\n\n  inline() {\n    return this.options.inline\n  },\n\n  group() {\n    return this.options.inline ? 'inline' : 'block'\n  },\n\n  draggable: true,\n\n  addAttributes() {\n    return {\n      src: {\n        default: null,\n      },\n      alt: {\n        default: null,\n      },\n      title: {\n        default: null,\n      },\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: this.options.allowBase64\n          ? 'img[src]'\n          : 'img[src]:not([src^=\"data:\"])',\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['img', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)]\n  },\n\n  addCommands() {\n    return {\n      setImage: options => ({ commands }) => {\n        return commands.insertContent({\n          type: this.name,\n          attrs: options,\n        })\n      },\n    }\n  },\n\n  addInputRules() {\n    return [\n      nodeInputRule({\n        find: inputRegex,\n        type: this.type,\n        getAttributes: match => {\n          const [,, alt, src, title] = match\n\n          return { src, alt, title }\n        },\n      }),\n    ]\n  },\n})\n", "// src/index.ts\nimport { Plugin as Plugin2 } from \"prosemirror-state\";\n\n// src/cellselection.ts\nimport { Fragment, Slice } from \"prosemirror-model\";\nimport {\n  NodeSelection as NodeSelection2,\n  Selection,\n  SelectionRange,\n  TextSelection\n} from \"prosemirror-state\";\nimport { Decoration, DecorationSet } from \"prosemirror-view\";\n\n// src/tablemap.ts\nvar readFromCache;\nvar addToCache;\nif (typeof WeakMap != \"undefined\") {\n  let cache = /* @__PURE__ */ new WeakMap();\n  readFromCache = (key) => cache.get(key);\n  addToCache = (key, value) => {\n    cache.set(key, value);\n    return value;\n  };\n} else {\n  const cache = [];\n  const cacheSize = 10;\n  let cachePos = 0;\n  readFromCache = (key) => {\n    for (let i = 0; i < cache.length; i += 2)\n      if (cache[i] == key)\n        return cache[i + 1];\n  };\n  addToCache = (key, value) => {\n    if (cachePos == cacheSize)\n      cachePos = 0;\n    cache[cachePos++] = key;\n    return cache[cachePos++] = value;\n  };\n}\nvar TableMap = class {\n  constructor(width, height, map, problems) {\n    this.width = width;\n    this.height = height;\n    this.map = map;\n    this.problems = problems;\n  }\n  findCell(pos) {\n    for (let i = 0; i < this.map.length; i++) {\n      const curPos = this.map[i];\n      if (curPos != pos)\n        continue;\n      const left = i % this.width;\n      const top = i / this.width | 0;\n      let right = left + 1;\n      let bottom = top + 1;\n      for (let j = 1; right < this.width && this.map[i + j] == curPos; j++) {\n        right++;\n      }\n      for (let j = 1; bottom < this.height && this.map[i + this.width * j] == curPos; j++) {\n        bottom++;\n      }\n      return { left, top, right, bottom };\n    }\n    throw new RangeError(`No cell with offset ${pos} found`);\n  }\n  colCount(pos) {\n    for (let i = 0; i < this.map.length; i++) {\n      if (this.map[i] == pos) {\n        return i % this.width;\n      }\n    }\n    throw new RangeError(`No cell with offset ${pos} found`);\n  }\n  nextCell(pos, axis, dir) {\n    const { left, right, top, bottom } = this.findCell(pos);\n    if (axis == \"horiz\") {\n      if (dir < 0 ? left == 0 : right == this.width)\n        return null;\n      return this.map[top * this.width + (dir < 0 ? left - 1 : right)];\n    } else {\n      if (dir < 0 ? top == 0 : bottom == this.height)\n        return null;\n      return this.map[left + this.width * (dir < 0 ? top - 1 : bottom)];\n    }\n  }\n  rectBetween(a, b) {\n    const {\n      left: leftA,\n      right: rightA,\n      top: topA,\n      bottom: bottomA\n    } = this.findCell(a);\n    const {\n      left: leftB,\n      right: rightB,\n      top: topB,\n      bottom: bottomB\n    } = this.findCell(b);\n    return {\n      left: Math.min(leftA, leftB),\n      top: Math.min(topA, topB),\n      right: Math.max(rightA, rightB),\n      bottom: Math.max(bottomA, bottomB)\n    };\n  }\n  cellsInRect(rect) {\n    const result = [];\n    const seen = {};\n    for (let row = rect.top; row < rect.bottom; row++) {\n      for (let col = rect.left; col < rect.right; col++) {\n        const index = row * this.width + col;\n        const pos = this.map[index];\n        if (seen[pos])\n          continue;\n        seen[pos] = true;\n        if (col == rect.left && col && this.map[index - 1] == pos || row == rect.top && row && this.map[index - this.width] == pos) {\n          continue;\n        }\n        result.push(pos);\n      }\n    }\n    return result;\n  }\n  positionAt(row, col, table) {\n    for (let i = 0, rowStart = 0; ; i++) {\n      const rowEnd = rowStart + table.child(i).nodeSize;\n      if (i == row) {\n        let index = col + row * this.width;\n        const rowEndIndex = (row + 1) * this.width;\n        while (index < rowEndIndex && this.map[index] < rowStart)\n          index++;\n        return index == rowEndIndex ? rowEnd - 1 : this.map[index];\n      }\n      rowStart = rowEnd;\n    }\n  }\n  static get(table) {\n    return readFromCache(table) || addToCache(table, computeMap(table));\n  }\n};\nfunction computeMap(table) {\n  if (table.type.spec.tableRole != \"table\")\n    throw new RangeError(\"Not a table node: \" + table.type.name);\n  const width = findWidth(table), height = table.childCount;\n  const map = [];\n  let mapPos = 0;\n  let problems = null;\n  const colWidths = [];\n  for (let i = 0, e = width * height; i < e; i++)\n    map[i] = 0;\n  for (let row = 0, pos = 0; row < height; row++) {\n    const rowNode = table.child(row);\n    pos++;\n    for (let i = 0; ; i++) {\n      while (mapPos < map.length && map[mapPos] != 0)\n        mapPos++;\n      if (i == rowNode.childCount)\n        break;\n      const cellNode = rowNode.child(i);\n      const { colspan, rowspan, colwidth } = cellNode.attrs;\n      for (let h = 0; h < rowspan; h++) {\n        if (h + row >= height) {\n          (problems || (problems = [])).push({\n            type: \"overlong_rowspan\",\n            pos,\n            n: rowspan - h\n          });\n          break;\n        }\n        const start = mapPos + h * width;\n        for (let w = 0; w < colspan; w++) {\n          if (map[start + w] == 0)\n            map[start + w] = pos;\n          else\n            (problems || (problems = [])).push({\n              type: \"collision\",\n              row,\n              pos,\n              n: colspan - w\n            });\n          const colW = colwidth && colwidth[w];\n          if (colW) {\n            const widthIndex = (start + w) % width * 2, prev = colWidths[widthIndex];\n            if (prev == null || prev != colW && colWidths[widthIndex + 1] == 1) {\n              colWidths[widthIndex] = colW;\n              colWidths[widthIndex + 1] = 1;\n            } else if (prev == colW) {\n              colWidths[widthIndex + 1]++;\n            }\n          }\n        }\n      }\n      mapPos += colspan;\n      pos += cellNode.nodeSize;\n    }\n    const expectedPos = (row + 1) * width;\n    let missing = 0;\n    while (mapPos < expectedPos)\n      if (map[mapPos++] == 0)\n        missing++;\n    if (missing)\n      (problems || (problems = [])).push({ type: \"missing\", row, n: missing });\n    pos++;\n  }\n  const tableMap = new TableMap(width, height, map, problems);\n  let badWidths = false;\n  for (let i = 0; !badWidths && i < colWidths.length; i += 2)\n    if (colWidths[i] != null && colWidths[i + 1] < height)\n      badWidths = true;\n  if (badWidths)\n    findBadColWidths(tableMap, colWidths, table);\n  return tableMap;\n}\nfunction findWidth(table) {\n  let width = -1;\n  let hasRowSpan = false;\n  for (let row = 0; row < table.childCount; row++) {\n    const rowNode = table.child(row);\n    let rowWidth = 0;\n    if (hasRowSpan)\n      for (let j = 0; j < row; j++) {\n        const prevRow = table.child(j);\n        for (let i = 0; i < prevRow.childCount; i++) {\n          const cell = prevRow.child(i);\n          if (j + cell.attrs.rowspan > row)\n            rowWidth += cell.attrs.colspan;\n        }\n      }\n    for (let i = 0; i < rowNode.childCount; i++) {\n      const cell = rowNode.child(i);\n      rowWidth += cell.attrs.colspan;\n      if (cell.attrs.rowspan > 1)\n        hasRowSpan = true;\n    }\n    if (width == -1)\n      width = rowWidth;\n    else if (width != rowWidth)\n      width = Math.max(width, rowWidth);\n  }\n  return width;\n}\nfunction findBadColWidths(map, colWidths, table) {\n  if (!map.problems)\n    map.problems = [];\n  const seen = {};\n  for (let i = 0; i < map.map.length; i++) {\n    const pos = map.map[i];\n    if (seen[pos])\n      continue;\n    seen[pos] = true;\n    const node = table.nodeAt(pos);\n    if (!node) {\n      throw new RangeError(`No cell with offset ${pos} found`);\n    }\n    let updated = null;\n    const attrs = node.attrs;\n    for (let j = 0; j < attrs.colspan; j++) {\n      const col = (i + j) % map.width;\n      const colWidth = colWidths[col * 2];\n      if (colWidth != null && (!attrs.colwidth || attrs.colwidth[j] != colWidth))\n        (updated || (updated = freshColWidth(attrs)))[j] = colWidth;\n    }\n    if (updated)\n      map.problems.unshift({\n        type: \"colwidth mismatch\",\n        pos,\n        colwidth: updated\n      });\n  }\n}\nfunction freshColWidth(attrs) {\n  if (attrs.colwidth)\n    return attrs.colwidth.slice();\n  const result = [];\n  for (let i = 0; i < attrs.colspan; i++)\n    result.push(0);\n  return result;\n}\n\n// src/util.ts\nimport { PluginKey } from \"prosemirror-state\";\n\n// src/schema.ts\nfunction getCellAttrs(dom, extraAttrs) {\n  if (typeof dom === \"string\") {\n    return {};\n  }\n  const widthAttr = dom.getAttribute(\"data-colwidth\");\n  const widths = widthAttr && /^\\d+(,\\d+)*$/.test(widthAttr) ? widthAttr.split(\",\").map((s) => Number(s)) : null;\n  const colspan = Number(dom.getAttribute(\"colspan\") || 1);\n  const result = {\n    colspan,\n    rowspan: Number(dom.getAttribute(\"rowspan\") || 1),\n    colwidth: widths && widths.length == colspan ? widths : null\n  };\n  for (const prop in extraAttrs) {\n    const getter = extraAttrs[prop].getFromDOM;\n    const value = getter && getter(dom);\n    if (value != null) {\n      result[prop] = value;\n    }\n  }\n  return result;\n}\nfunction setCellAttrs(node, extraAttrs) {\n  const attrs = {};\n  if (node.attrs.colspan != 1)\n    attrs.colspan = node.attrs.colspan;\n  if (node.attrs.rowspan != 1)\n    attrs.rowspan = node.attrs.rowspan;\n  if (node.attrs.colwidth)\n    attrs[\"data-colwidth\"] = node.attrs.colwidth.join(\",\");\n  for (const prop in extraAttrs) {\n    const setter = extraAttrs[prop].setDOMAttr;\n    if (setter)\n      setter(node.attrs[prop], attrs);\n  }\n  return attrs;\n}\nfunction tableNodes(options) {\n  const extraAttrs = options.cellAttributes || {};\n  const cellAttrs = {\n    colspan: { default: 1 },\n    rowspan: { default: 1 },\n    colwidth: { default: null }\n  };\n  for (const prop in extraAttrs)\n    cellAttrs[prop] = { default: extraAttrs[prop].default };\n  return {\n    table: {\n      content: \"table_row+\",\n      tableRole: \"table\",\n      isolating: true,\n      group: options.tableGroup,\n      parseDOM: [{ tag: \"table\" }],\n      toDOM() {\n        return [\"table\", [\"tbody\", 0]];\n      }\n    },\n    table_row: {\n      content: \"(table_cell | table_header)*\",\n      tableRole: \"row\",\n      parseDOM: [{ tag: \"tr\" }],\n      toDOM() {\n        return [\"tr\", 0];\n      }\n    },\n    table_cell: {\n      content: options.cellContent,\n      attrs: cellAttrs,\n      tableRole: \"cell\",\n      isolating: true,\n      parseDOM: [\n        { tag: \"td\", getAttrs: (dom) => getCellAttrs(dom, extraAttrs) }\n      ],\n      toDOM(node) {\n        return [\"td\", setCellAttrs(node, extraAttrs), 0];\n      }\n    },\n    table_header: {\n      content: options.cellContent,\n      attrs: cellAttrs,\n      tableRole: \"header_cell\",\n      isolating: true,\n      parseDOM: [\n        { tag: \"th\", getAttrs: (dom) => getCellAttrs(dom, extraAttrs) }\n      ],\n      toDOM(node) {\n        return [\"th\", setCellAttrs(node, extraAttrs), 0];\n      }\n    }\n  };\n}\nfunction tableNodeTypes(schema) {\n  let result = schema.cached.tableNodeTypes;\n  if (!result) {\n    result = schema.cached.tableNodeTypes = {};\n    for (const name in schema.nodes) {\n      const type = schema.nodes[name], role = type.spec.tableRole;\n      if (role)\n        result[role] = type;\n    }\n  }\n  return result;\n}\n\n// src/util.ts\nvar tableEditingKey = new PluginKey(\"selectingCells\");\nfunction cellAround($pos) {\n  for (let d = $pos.depth - 1; d > 0; d--)\n    if ($pos.node(d).type.spec.tableRole == \"row\")\n      return $pos.node(0).resolve($pos.before(d + 1));\n  return null;\n}\nfunction cellWrapping($pos) {\n  for (let d = $pos.depth; d > 0; d--) {\n    const role = $pos.node(d).type.spec.tableRole;\n    if (role === \"cell\" || role === \"header_cell\")\n      return $pos.node(d);\n  }\n  return null;\n}\nfunction isInTable(state) {\n  const $head = state.selection.$head;\n  for (let d = $head.depth; d > 0; d--)\n    if ($head.node(d).type.spec.tableRole == \"row\")\n      return true;\n  return false;\n}\nfunction selectionCell(state) {\n  const sel = state.selection;\n  if (\"$anchorCell\" in sel && sel.$anchorCell) {\n    return sel.$anchorCell.pos > sel.$headCell.pos ? sel.$anchorCell : sel.$headCell;\n  } else if (\"node\" in sel && sel.node && sel.node.type.spec.tableRole == \"cell\") {\n    return sel.$anchor;\n  }\n  const $cell = cellAround(sel.$head) || cellNear(sel.$head);\n  if ($cell) {\n    return $cell;\n  }\n  throw new RangeError(`No cell found around position ${sel.head}`);\n}\nfunction cellNear($pos) {\n  for (let after = $pos.nodeAfter, pos = $pos.pos; after; after = after.firstChild, pos++) {\n    const role = after.type.spec.tableRole;\n    if (role == \"cell\" || role == \"header_cell\")\n      return $pos.doc.resolve(pos);\n  }\n  for (let before = $pos.nodeBefore, pos = $pos.pos; before; before = before.lastChild, pos--) {\n    const role = before.type.spec.tableRole;\n    if (role == \"cell\" || role == \"header_cell\")\n      return $pos.doc.resolve(pos - before.nodeSize);\n  }\n}\nfunction pointsAtCell($pos) {\n  return $pos.parent.type.spec.tableRole == \"row\" && !!$pos.nodeAfter;\n}\nfunction moveCellForward($pos) {\n  return $pos.node(0).resolve($pos.pos + $pos.nodeAfter.nodeSize);\n}\nfunction inSameTable($cellA, $cellB) {\n  return $cellA.depth == $cellB.depth && $cellA.pos >= $cellB.start(-1) && $cellA.pos <= $cellB.end(-1);\n}\nfunction findCell($pos) {\n  return TableMap.get($pos.node(-1)).findCell($pos.pos - $pos.start(-1));\n}\nfunction colCount($pos) {\n  return TableMap.get($pos.node(-1)).colCount($pos.pos - $pos.start(-1));\n}\nfunction nextCell($pos, axis, dir) {\n  const table = $pos.node(-1);\n  const map = TableMap.get(table);\n  const tableStart = $pos.start(-1);\n  const moved = map.nextCell($pos.pos - tableStart, axis, dir);\n  return moved == null ? null : $pos.node(0).resolve(tableStart + moved);\n}\nfunction removeColSpan(attrs, pos, n = 1) {\n  const result = { ...attrs, colspan: attrs.colspan - n };\n  if (result.colwidth) {\n    result.colwidth = result.colwidth.slice();\n    result.colwidth.splice(pos, n);\n    if (!result.colwidth.some((w) => w > 0))\n      result.colwidth = null;\n  }\n  return result;\n}\nfunction addColSpan(attrs, pos, n = 1) {\n  const result = { ...attrs, colspan: attrs.colspan + n };\n  if (result.colwidth) {\n    result.colwidth = result.colwidth.slice();\n    for (let i = 0; i < n; i++)\n      result.colwidth.splice(pos, 0, 0);\n  }\n  return result;\n}\nfunction columnIsHeader(map, table, col) {\n  const headerCell = tableNodeTypes(table.type.schema).header_cell;\n  for (let row = 0; row < map.height; row++)\n    if (table.nodeAt(map.map[col + row * map.width]).type != headerCell)\n      return false;\n  return true;\n}\n\n// src/cellselection.ts\nvar CellSelection = class extends Selection {\n  constructor($anchorCell, $headCell = $anchorCell) {\n    const table = $anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = $anchorCell.start(-1);\n    const rect = map.rectBetween(\n      $anchorCell.pos - tableStart,\n      $headCell.pos - tableStart\n    );\n    const doc = $anchorCell.node(0);\n    const cells = map.cellsInRect(rect).filter((p) => p != $headCell.pos - tableStart);\n    cells.unshift($headCell.pos - tableStart);\n    const ranges = cells.map((pos) => {\n      const cell = table.nodeAt(pos);\n      if (!cell) {\n        throw RangeError(`No cell with offset ${pos} found`);\n      }\n      const from = tableStart + pos + 1;\n      return new SelectionRange(\n        doc.resolve(from),\n        doc.resolve(from + cell.content.size)\n      );\n    });\n    super(ranges[0].$from, ranges[0].$to, ranges);\n    this.$anchorCell = $anchorCell;\n    this.$headCell = $headCell;\n  }\n  map(doc, mapping) {\n    const $anchorCell = doc.resolve(mapping.map(this.$anchorCell.pos));\n    const $headCell = doc.resolve(mapping.map(this.$headCell.pos));\n    if (pointsAtCell($anchorCell) && pointsAtCell($headCell) && inSameTable($anchorCell, $headCell)) {\n      const tableChanged = this.$anchorCell.node(-1) != $anchorCell.node(-1);\n      if (tableChanged && this.isRowSelection())\n        return CellSelection.rowSelection($anchorCell, $headCell);\n      else if (tableChanged && this.isColSelection())\n        return CellSelection.colSelection($anchorCell, $headCell);\n      else\n        return new CellSelection($anchorCell, $headCell);\n    }\n    return TextSelection.between($anchorCell, $headCell);\n  }\n  content() {\n    const table = this.$anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = this.$anchorCell.start(-1);\n    const rect = map.rectBetween(\n      this.$anchorCell.pos - tableStart,\n      this.$headCell.pos - tableStart\n    );\n    const seen = {};\n    const rows = [];\n    for (let row = rect.top; row < rect.bottom; row++) {\n      const rowContent = [];\n      for (let index = row * map.width + rect.left, col = rect.left; col < rect.right; col++, index++) {\n        const pos = map.map[index];\n        if (seen[pos])\n          continue;\n        seen[pos] = true;\n        const cellRect = map.findCell(pos);\n        let cell = table.nodeAt(pos);\n        if (!cell) {\n          throw RangeError(`No cell with offset ${pos} found`);\n        }\n        const extraLeft = rect.left - cellRect.left;\n        const extraRight = cellRect.right - rect.right;\n        if (extraLeft > 0 || extraRight > 0) {\n          let attrs = cell.attrs;\n          if (extraLeft > 0) {\n            attrs = removeColSpan(attrs, 0, extraLeft);\n          }\n          if (extraRight > 0) {\n            attrs = removeColSpan(\n              attrs,\n              attrs.colspan - extraRight,\n              extraRight\n            );\n          }\n          if (cellRect.left < rect.left) {\n            cell = cell.type.createAndFill(attrs);\n            if (!cell) {\n              throw RangeError(\n                `Could not create cell with attrs ${JSON.stringify(attrs)}`\n              );\n            }\n          } else {\n            cell = cell.type.create(attrs, cell.content);\n          }\n        }\n        if (cellRect.top < rect.top || cellRect.bottom > rect.bottom) {\n          const attrs = {\n            ...cell.attrs,\n            rowspan: Math.min(cellRect.bottom, rect.bottom) - Math.max(cellRect.top, rect.top)\n          };\n          if (cellRect.top < rect.top) {\n            cell = cell.type.createAndFill(attrs);\n          } else {\n            cell = cell.type.create(attrs, cell.content);\n          }\n        }\n        rowContent.push(cell);\n      }\n      rows.push(table.child(row).copy(Fragment.from(rowContent)));\n    }\n    const fragment = this.isColSelection() && this.isRowSelection() ? table : rows;\n    return new Slice(Fragment.from(fragment), 1, 1);\n  }\n  replace(tr, content = Slice.empty) {\n    const mapFrom = tr.steps.length, ranges = this.ranges;\n    for (let i = 0; i < ranges.length; i++) {\n      const { $from, $to } = ranges[i], mapping = tr.mapping.slice(mapFrom);\n      tr.replace(\n        mapping.map($from.pos),\n        mapping.map($to.pos),\n        i ? Slice.empty : content\n      );\n    }\n    const sel = Selection.findFrom(\n      tr.doc.resolve(tr.mapping.slice(mapFrom).map(this.to)),\n      -1\n    );\n    if (sel)\n      tr.setSelection(sel);\n  }\n  replaceWith(tr, node) {\n    this.replace(tr, new Slice(Fragment.from(node), 0, 0));\n  }\n  forEachCell(f) {\n    const table = this.$anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = this.$anchorCell.start(-1);\n    const cells = map.cellsInRect(\n      map.rectBetween(\n        this.$anchorCell.pos - tableStart,\n        this.$headCell.pos - tableStart\n      )\n    );\n    for (let i = 0; i < cells.length; i++) {\n      f(table.nodeAt(cells[i]), tableStart + cells[i]);\n    }\n  }\n  isColSelection() {\n    const anchorTop = this.$anchorCell.index(-1);\n    const headTop = this.$headCell.index(-1);\n    if (Math.min(anchorTop, headTop) > 0)\n      return false;\n    const anchorBottom = anchorTop + this.$anchorCell.nodeAfter.attrs.rowspan;\n    const headBottom = headTop + this.$headCell.nodeAfter.attrs.rowspan;\n    return Math.max(anchorBottom, headBottom) == this.$headCell.node(-1).childCount;\n  }\n  static colSelection($anchorCell, $headCell = $anchorCell) {\n    const table = $anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = $anchorCell.start(-1);\n    const anchorRect = map.findCell($anchorCell.pos - tableStart);\n    const headRect = map.findCell($headCell.pos - tableStart);\n    const doc = $anchorCell.node(0);\n    if (anchorRect.top <= headRect.top) {\n      if (anchorRect.top > 0)\n        $anchorCell = doc.resolve(tableStart + map.map[anchorRect.left]);\n      if (headRect.bottom < map.height)\n        $headCell = doc.resolve(\n          tableStart + map.map[map.width * (map.height - 1) + headRect.right - 1]\n        );\n    } else {\n      if (headRect.top > 0)\n        $headCell = doc.resolve(tableStart + map.map[headRect.left]);\n      if (anchorRect.bottom < map.height)\n        $anchorCell = doc.resolve(\n          tableStart + map.map[map.width * (map.height - 1) + anchorRect.right - 1]\n        );\n    }\n    return new CellSelection($anchorCell, $headCell);\n  }\n  isRowSelection() {\n    const table = this.$anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = this.$anchorCell.start(-1);\n    const anchorLeft = map.colCount(this.$anchorCell.pos - tableStart);\n    const headLeft = map.colCount(this.$headCell.pos - tableStart);\n    if (Math.min(anchorLeft, headLeft) > 0)\n      return false;\n    const anchorRight = anchorLeft + this.$anchorCell.nodeAfter.attrs.colspan;\n    const headRight = headLeft + this.$headCell.nodeAfter.attrs.colspan;\n    return Math.max(anchorRight, headRight) == map.width;\n  }\n  eq(other) {\n    return other instanceof CellSelection && other.$anchorCell.pos == this.$anchorCell.pos && other.$headCell.pos == this.$headCell.pos;\n  }\n  static rowSelection($anchorCell, $headCell = $anchorCell) {\n    const table = $anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = $anchorCell.start(-1);\n    const anchorRect = map.findCell($anchorCell.pos - tableStart);\n    const headRect = map.findCell($headCell.pos - tableStart);\n    const doc = $anchorCell.node(0);\n    if (anchorRect.left <= headRect.left) {\n      if (anchorRect.left > 0)\n        $anchorCell = doc.resolve(\n          tableStart + map.map[anchorRect.top * map.width]\n        );\n      if (headRect.right < map.width)\n        $headCell = doc.resolve(\n          tableStart + map.map[map.width * (headRect.top + 1) - 1]\n        );\n    } else {\n      if (headRect.left > 0)\n        $headCell = doc.resolve(tableStart + map.map[headRect.top * map.width]);\n      if (anchorRect.right < map.width)\n        $anchorCell = doc.resolve(\n          tableStart + map.map[map.width * (anchorRect.top + 1) - 1]\n        );\n    }\n    return new CellSelection($anchorCell, $headCell);\n  }\n  toJSON() {\n    return {\n      type: \"cell\",\n      anchor: this.$anchorCell.pos,\n      head: this.$headCell.pos\n    };\n  }\n  static fromJSON(doc, json) {\n    return new CellSelection(doc.resolve(json.anchor), doc.resolve(json.head));\n  }\n  static create(doc, anchorCell, headCell = anchorCell) {\n    return new CellSelection(doc.resolve(anchorCell), doc.resolve(headCell));\n  }\n  getBookmark() {\n    return new CellBookmark(this.$anchorCell.pos, this.$headCell.pos);\n  }\n};\nCellSelection.prototype.visible = false;\nSelection.jsonID(\"cell\", CellSelection);\nvar CellBookmark = class {\n  constructor(anchor, head) {\n    this.anchor = anchor;\n    this.head = head;\n  }\n  map(mapping) {\n    return new CellBookmark(mapping.map(this.anchor), mapping.map(this.head));\n  }\n  resolve(doc) {\n    const $anchorCell = doc.resolve(this.anchor), $headCell = doc.resolve(this.head);\n    if ($anchorCell.parent.type.spec.tableRole == \"row\" && $headCell.parent.type.spec.tableRole == \"row\" && $anchorCell.index() < $anchorCell.parent.childCount && $headCell.index() < $headCell.parent.childCount && inSameTable($anchorCell, $headCell))\n      return new CellSelection($anchorCell, $headCell);\n    else\n      return Selection.near($headCell, 1);\n  }\n};\nfunction drawCellSelection(state) {\n  if (!(state.selection instanceof CellSelection))\n    return null;\n  const cells = [];\n  state.selection.forEachCell((node, pos) => {\n    cells.push(\n      Decoration.node(pos, pos + node.nodeSize, { class: \"selectedCell\" })\n    );\n  });\n  return DecorationSet.create(state.doc, cells);\n}\nfunction isCellBoundarySelection({ $from, $to }) {\n  if ($from.pos == $to.pos || $from.pos < $from.pos - 6)\n    return false;\n  let afterFrom = $from.pos;\n  let beforeTo = $to.pos;\n  let depth = $from.depth;\n  for (; depth >= 0; depth--, afterFrom++)\n    if ($from.after(depth + 1) < $from.end(depth))\n      break;\n  for (let d = $to.depth; d >= 0; d--, beforeTo--)\n    if ($to.before(d + 1) > $to.start(d))\n      break;\n  return afterFrom == beforeTo && /row|table/.test($from.node(depth).type.spec.tableRole);\n}\nfunction isTextSelectionAcrossCells({ $from, $to }) {\n  let fromCellBoundaryNode;\n  let toCellBoundaryNode;\n  for (let i = $from.depth; i > 0; i--) {\n    const node = $from.node(i);\n    if (node.type.spec.tableRole === \"cell\" || node.type.spec.tableRole === \"header_cell\") {\n      fromCellBoundaryNode = node;\n      break;\n    }\n  }\n  for (let i = $to.depth; i > 0; i--) {\n    const node = $to.node(i);\n    if (node.type.spec.tableRole === \"cell\" || node.type.spec.tableRole === \"header_cell\") {\n      toCellBoundaryNode = node;\n      break;\n    }\n  }\n  return fromCellBoundaryNode !== toCellBoundaryNode && $to.parentOffset === 0;\n}\nfunction normalizeSelection(state, tr, allowTableNodeSelection) {\n  const sel = (tr || state).selection;\n  const doc = (tr || state).doc;\n  let normalize;\n  let role;\n  if (sel instanceof NodeSelection2 && (role = sel.node.type.spec.tableRole)) {\n    if (role == \"cell\" || role == \"header_cell\") {\n      normalize = CellSelection.create(doc, sel.from);\n    } else if (role == \"row\") {\n      const $cell = doc.resolve(sel.from + 1);\n      normalize = CellSelection.rowSelection($cell, $cell);\n    } else if (!allowTableNodeSelection) {\n      const map = TableMap.get(sel.node);\n      const start = sel.from + 1;\n      const lastCell = start + map.map[map.width * map.height - 1];\n      normalize = CellSelection.create(doc, start + 1, lastCell);\n    }\n  } else if (sel instanceof TextSelection && isCellBoundarySelection(sel)) {\n    normalize = TextSelection.create(doc, sel.from);\n  } else if (sel instanceof TextSelection && isTextSelectionAcrossCells(sel)) {\n    normalize = TextSelection.create(doc, sel.$from.start(), sel.$from.end());\n  }\n  if (normalize)\n    (tr || (tr = state.tr)).setSelection(normalize);\n  return tr;\n}\n\n// src/fixtables.ts\nimport { PluginKey as PluginKey2 } from \"prosemirror-state\";\nvar fixTablesKey = new PluginKey2(\"fix-tables\");\nfunction changedDescendants(old, cur, offset, f) {\n  const oldSize = old.childCount, curSize = cur.childCount;\n  outer:\n    for (let i = 0, j = 0; i < curSize; i++) {\n      const child = cur.child(i);\n      for (let scan = j, e = Math.min(oldSize, i + 3); scan < e; scan++) {\n        if (old.child(scan) == child) {\n          j = scan + 1;\n          offset += child.nodeSize;\n          continue outer;\n        }\n      }\n      f(child, offset);\n      if (j < oldSize && old.child(j).sameMarkup(child))\n        changedDescendants(old.child(j), child, offset + 1, f);\n      else\n        child.nodesBetween(0, child.content.size, f, offset + 1);\n      offset += child.nodeSize;\n    }\n}\nfunction fixTables(state, oldState) {\n  let tr;\n  const check = (node, pos) => {\n    if (node.type.spec.tableRole == \"table\")\n      tr = fixTable(state, node, pos, tr);\n  };\n  if (!oldState)\n    state.doc.descendants(check);\n  else if (oldState.doc != state.doc)\n    changedDescendants(oldState.doc, state.doc, 0, check);\n  return tr;\n}\nfunction fixTable(state, table, tablePos, tr) {\n  const map = TableMap.get(table);\n  if (!map.problems)\n    return tr;\n  if (!tr)\n    tr = state.tr;\n  const mustAdd = [];\n  for (let i = 0; i < map.height; i++)\n    mustAdd.push(0);\n  for (let i = 0; i < map.problems.length; i++) {\n    const prob = map.problems[i];\n    if (prob.type == \"collision\") {\n      const cell = table.nodeAt(prob.pos);\n      if (!cell)\n        continue;\n      const attrs = cell.attrs;\n      for (let j = 0; j < attrs.rowspan; j++)\n        mustAdd[prob.row + j] += prob.n;\n      tr.setNodeMarkup(\n        tr.mapping.map(tablePos + 1 + prob.pos),\n        null,\n        removeColSpan(attrs, attrs.colspan - prob.n, prob.n)\n      );\n    } else if (prob.type == \"missing\") {\n      mustAdd[prob.row] += prob.n;\n    } else if (prob.type == \"overlong_rowspan\") {\n      const cell = table.nodeAt(prob.pos);\n      if (!cell)\n        continue;\n      tr.setNodeMarkup(tr.mapping.map(tablePos + 1 + prob.pos), null, {\n        ...cell.attrs,\n        rowspan: cell.attrs.rowspan - prob.n\n      });\n    } else if (prob.type == \"colwidth mismatch\") {\n      const cell = table.nodeAt(prob.pos);\n      if (!cell)\n        continue;\n      tr.setNodeMarkup(tr.mapping.map(tablePos + 1 + prob.pos), null, {\n        ...cell.attrs,\n        colwidth: prob.colwidth\n      });\n    }\n  }\n  let first, last;\n  for (let i = 0; i < mustAdd.length; i++)\n    if (mustAdd[i]) {\n      if (first == null)\n        first = i;\n      last = i;\n    }\n  for (let i = 0, pos = tablePos + 1; i < map.height; i++) {\n    const row = table.child(i);\n    const end = pos + row.nodeSize;\n    const add = mustAdd[i];\n    if (add > 0) {\n      let role = \"cell\";\n      if (row.firstChild) {\n        role = row.firstChild.type.spec.tableRole;\n      }\n      const nodes = [];\n      for (let j = 0; j < add; j++) {\n        const node = tableNodeTypes(state.schema)[role].createAndFill();\n        if (node)\n          nodes.push(node);\n      }\n      const side = (i == 0 || first == i - 1) && last == i ? pos + 1 : end - 1;\n      tr.insert(tr.mapping.map(side), nodes);\n    }\n    pos = end;\n  }\n  return tr.setMeta(fixTablesKey, { fixTables: true });\n}\n\n// src/input.ts\nimport { Fragment as Fragment3, Slice as Slice3 } from \"prosemirror-model\";\nimport {\n  Selection as Selection2,\n  TextSelection as TextSelection2\n} from \"prosemirror-state\";\nimport { keydownHandler } from \"prosemirror-keymap\";\n\n// src/copypaste.ts\nimport { Fragment as Fragment2, Slice as Slice2 } from \"prosemirror-model\";\nimport { Transform } from \"prosemirror-transform\";\nfunction pastedCells(slice) {\n  if (!slice.size)\n    return null;\n  let { content, openStart, openEnd } = slice;\n  while (content.childCount == 1 && (openStart > 0 && openEnd > 0 || content.child(0).type.spec.tableRole == \"table\")) {\n    openStart--;\n    openEnd--;\n    content = content.child(0).content;\n  }\n  const first = content.child(0);\n  const role = first.type.spec.tableRole;\n  const schema = first.type.schema, rows = [];\n  if (role == \"row\") {\n    for (let i = 0; i < content.childCount; i++) {\n      let cells = content.child(i).content;\n      const left = i ? 0 : Math.max(0, openStart - 1);\n      const right = i < content.childCount - 1 ? 0 : Math.max(0, openEnd - 1);\n      if (left || right)\n        cells = fitSlice(\n          tableNodeTypes(schema).row,\n          new Slice2(cells, left, right)\n        ).content;\n      rows.push(cells);\n    }\n  } else if (role == \"cell\" || role == \"header_cell\") {\n    rows.push(\n      openStart || openEnd ? fitSlice(\n        tableNodeTypes(schema).row,\n        new Slice2(content, openStart, openEnd)\n      ).content : content\n    );\n  } else {\n    return null;\n  }\n  return ensureRectangular(schema, rows);\n}\nfunction ensureRectangular(schema, rows) {\n  const widths = [];\n  for (let i = 0; i < rows.length; i++) {\n    const row = rows[i];\n    for (let j = row.childCount - 1; j >= 0; j--) {\n      const { rowspan, colspan } = row.child(j).attrs;\n      for (let r = i; r < i + rowspan; r++)\n        widths[r] = (widths[r] || 0) + colspan;\n    }\n  }\n  let width = 0;\n  for (let r = 0; r < widths.length; r++)\n    width = Math.max(width, widths[r]);\n  for (let r = 0; r < widths.length; r++) {\n    if (r >= rows.length)\n      rows.push(Fragment2.empty);\n    if (widths[r] < width) {\n      const empty = tableNodeTypes(schema).cell.createAndFill();\n      const cells = [];\n      for (let i = widths[r]; i < width; i++) {\n        cells.push(empty);\n      }\n      rows[r] = rows[r].append(Fragment2.from(cells));\n    }\n  }\n  return { height: rows.length, width, rows };\n}\nfunction fitSlice(nodeType, slice) {\n  const node = nodeType.createAndFill();\n  const tr = new Transform(node).replace(0, node.content.size, slice);\n  return tr.doc;\n}\nfunction clipCells({ width, height, rows }, newWidth, newHeight) {\n  if (width != newWidth) {\n    const added = [];\n    const newRows = [];\n    for (let row = 0; row < rows.length; row++) {\n      const frag = rows[row], cells = [];\n      for (let col = added[row] || 0, i = 0; col < newWidth; i++) {\n        let cell = frag.child(i % frag.childCount);\n        if (col + cell.attrs.colspan > newWidth)\n          cell = cell.type.createChecked(\n            removeColSpan(\n              cell.attrs,\n              cell.attrs.colspan,\n              col + cell.attrs.colspan - newWidth\n            ),\n            cell.content\n          );\n        cells.push(cell);\n        col += cell.attrs.colspan;\n        for (let j = 1; j < cell.attrs.rowspan; j++)\n          added[row + j] = (added[row + j] || 0) + cell.attrs.colspan;\n      }\n      newRows.push(Fragment2.from(cells));\n    }\n    rows = newRows;\n    width = newWidth;\n  }\n  if (height != newHeight) {\n    const newRows = [];\n    for (let row = 0, i = 0; row < newHeight; row++, i++) {\n      const cells = [], source = rows[i % height];\n      for (let j = 0; j < source.childCount; j++) {\n        let cell = source.child(j);\n        if (row + cell.attrs.rowspan > newHeight)\n          cell = cell.type.create(\n            {\n              ...cell.attrs,\n              rowspan: Math.max(1, newHeight - cell.attrs.rowspan)\n            },\n            cell.content\n          );\n        cells.push(cell);\n      }\n      newRows.push(Fragment2.from(cells));\n    }\n    rows = newRows;\n    height = newHeight;\n  }\n  return { width, height, rows };\n}\nfunction growTable(tr, map, table, start, width, height, mapFrom) {\n  const schema = tr.doc.type.schema;\n  const types = tableNodeTypes(schema);\n  let empty;\n  let emptyHead;\n  if (width > map.width) {\n    for (let row = 0, rowEnd = 0; row < map.height; row++) {\n      const rowNode = table.child(row);\n      rowEnd += rowNode.nodeSize;\n      const cells = [];\n      let add;\n      if (rowNode.lastChild == null || rowNode.lastChild.type == types.cell)\n        add = empty || (empty = types.cell.createAndFill());\n      else\n        add = emptyHead || (emptyHead = types.header_cell.createAndFill());\n      for (let i = map.width; i < width; i++)\n        cells.push(add);\n      tr.insert(tr.mapping.slice(mapFrom).map(rowEnd - 1 + start), cells);\n    }\n  }\n  if (height > map.height) {\n    const cells = [];\n    for (let i = 0, start2 = (map.height - 1) * map.width; i < Math.max(map.width, width); i++) {\n      const header = i >= map.width ? false : table.nodeAt(map.map[start2 + i]).type == types.header_cell;\n      cells.push(\n        header ? emptyHead || (emptyHead = types.header_cell.createAndFill()) : empty || (empty = types.cell.createAndFill())\n      );\n    }\n    const emptyRow = types.row.create(null, Fragment2.from(cells)), rows = [];\n    for (let i = map.height; i < height; i++)\n      rows.push(emptyRow);\n    tr.insert(tr.mapping.slice(mapFrom).map(start + table.nodeSize - 2), rows);\n  }\n  return !!(empty || emptyHead);\n}\nfunction isolateHorizontal(tr, map, table, start, left, right, top, mapFrom) {\n  if (top == 0 || top == map.height)\n    return false;\n  let found = false;\n  for (let col = left; col < right; col++) {\n    const index = top * map.width + col, pos = map.map[index];\n    if (map.map[index - map.width] == pos) {\n      found = true;\n      const cell = table.nodeAt(pos);\n      const { top: cellTop, left: cellLeft } = map.findCell(pos);\n      tr.setNodeMarkup(tr.mapping.slice(mapFrom).map(pos + start), null, {\n        ...cell.attrs,\n        rowspan: top - cellTop\n      });\n      tr.insert(\n        tr.mapping.slice(mapFrom).map(map.positionAt(top, cellLeft, table)),\n        cell.type.createAndFill({\n          ...cell.attrs,\n          rowspan: cellTop + cell.attrs.rowspan - top\n        })\n      );\n      col += cell.attrs.colspan - 1;\n    }\n  }\n  return found;\n}\nfunction isolateVertical(tr, map, table, start, top, bottom, left, mapFrom) {\n  if (left == 0 || left == map.width)\n    return false;\n  let found = false;\n  for (let row = top; row < bottom; row++) {\n    const index = row * map.width + left, pos = map.map[index];\n    if (map.map[index - 1] == pos) {\n      found = true;\n      const cell = table.nodeAt(pos);\n      const cellLeft = map.colCount(pos);\n      const updatePos = tr.mapping.slice(mapFrom).map(pos + start);\n      tr.setNodeMarkup(\n        updatePos,\n        null,\n        removeColSpan(\n          cell.attrs,\n          left - cellLeft,\n          cell.attrs.colspan - (left - cellLeft)\n        )\n      );\n      tr.insert(\n        updatePos + cell.nodeSize,\n        cell.type.createAndFill(\n          removeColSpan(cell.attrs, 0, left - cellLeft)\n        )\n      );\n      row += cell.attrs.rowspan - 1;\n    }\n  }\n  return found;\n}\nfunction insertCells(state, dispatch, tableStart, rect, cells) {\n  let table = tableStart ? state.doc.nodeAt(tableStart - 1) : state.doc;\n  if (!table) {\n    throw new Error(\"No table found\");\n  }\n  let map = TableMap.get(table);\n  const { top, left } = rect;\n  const right = left + cells.width, bottom = top + cells.height;\n  const tr = state.tr;\n  let mapFrom = 0;\n  function recomp() {\n    table = tableStart ? tr.doc.nodeAt(tableStart - 1) : tr.doc;\n    if (!table) {\n      throw new Error(\"No table found\");\n    }\n    map = TableMap.get(table);\n    mapFrom = tr.mapping.maps.length;\n  }\n  if (growTable(tr, map, table, tableStart, right, bottom, mapFrom))\n    recomp();\n  if (isolateHorizontal(tr, map, table, tableStart, left, right, top, mapFrom))\n    recomp();\n  if (isolateHorizontal(tr, map, table, tableStart, left, right, bottom, mapFrom))\n    recomp();\n  if (isolateVertical(tr, map, table, tableStart, top, bottom, left, mapFrom))\n    recomp();\n  if (isolateVertical(tr, map, table, tableStart, top, bottom, right, mapFrom))\n    recomp();\n  for (let row = top; row < bottom; row++) {\n    const from = map.positionAt(row, left, table), to = map.positionAt(row, right, table);\n    tr.replace(\n      tr.mapping.slice(mapFrom).map(from + tableStart),\n      tr.mapping.slice(mapFrom).map(to + tableStart),\n      new Slice2(cells.rows[row - top], 0, 0)\n    );\n  }\n  recomp();\n  tr.setSelection(\n    new CellSelection(\n      tr.doc.resolve(tableStart + map.positionAt(top, left, table)),\n      tr.doc.resolve(tableStart + map.positionAt(bottom - 1, right - 1, table))\n    )\n  );\n  dispatch(tr);\n}\n\n// src/input.ts\nvar handleKeyDown = keydownHandler({\n  ArrowLeft: arrow(\"horiz\", -1),\n  ArrowRight: arrow(\"horiz\", 1),\n  ArrowUp: arrow(\"vert\", -1),\n  ArrowDown: arrow(\"vert\", 1),\n  \"Shift-ArrowLeft\": shiftArrow(\"horiz\", -1),\n  \"Shift-ArrowRight\": shiftArrow(\"horiz\", 1),\n  \"Shift-ArrowUp\": shiftArrow(\"vert\", -1),\n  \"Shift-ArrowDown\": shiftArrow(\"vert\", 1),\n  Backspace: deleteCellSelection,\n  \"Mod-Backspace\": deleteCellSelection,\n  Delete: deleteCellSelection,\n  \"Mod-Delete\": deleteCellSelection\n});\nfunction maybeSetSelection(state, dispatch, selection) {\n  if (selection.eq(state.selection))\n    return false;\n  if (dispatch)\n    dispatch(state.tr.setSelection(selection).scrollIntoView());\n  return true;\n}\nfunction arrow(axis, dir) {\n  return (state, dispatch, view) => {\n    if (!view)\n      return false;\n    const sel = state.selection;\n    if (sel instanceof CellSelection) {\n      return maybeSetSelection(\n        state,\n        dispatch,\n        Selection2.near(sel.$headCell, dir)\n      );\n    }\n    if (axis != \"horiz\" && !sel.empty)\n      return false;\n    const end = atEndOfCell(view, axis, dir);\n    if (end == null)\n      return false;\n    if (axis == \"horiz\") {\n      return maybeSetSelection(\n        state,\n        dispatch,\n        Selection2.near(state.doc.resolve(sel.head + dir), dir)\n      );\n    } else {\n      const $cell = state.doc.resolve(end);\n      const $next = nextCell($cell, axis, dir);\n      let newSel;\n      if ($next)\n        newSel = Selection2.near($next, 1);\n      else if (dir < 0)\n        newSel = Selection2.near(state.doc.resolve($cell.before(-1)), -1);\n      else\n        newSel = Selection2.near(state.doc.resolve($cell.after(-1)), 1);\n      return maybeSetSelection(state, dispatch, newSel);\n    }\n  };\n}\nfunction shiftArrow(axis, dir) {\n  return (state, dispatch, view) => {\n    if (!view)\n      return false;\n    const sel = state.selection;\n    let cellSel;\n    if (sel instanceof CellSelection) {\n      cellSel = sel;\n    } else {\n      const end = atEndOfCell(view, axis, dir);\n      if (end == null)\n        return false;\n      cellSel = new CellSelection(state.doc.resolve(end));\n    }\n    const $head = nextCell(cellSel.$headCell, axis, dir);\n    if (!$head)\n      return false;\n    return maybeSetSelection(\n      state,\n      dispatch,\n      new CellSelection(cellSel.$anchorCell, $head)\n    );\n  };\n}\nfunction deleteCellSelection(state, dispatch) {\n  const sel = state.selection;\n  if (!(sel instanceof CellSelection))\n    return false;\n  if (dispatch) {\n    const tr = state.tr;\n    const baseContent = tableNodeTypes(state.schema).cell.createAndFill().content;\n    sel.forEachCell((cell, pos) => {\n      if (!cell.content.eq(baseContent))\n        tr.replace(\n          tr.mapping.map(pos + 1),\n          tr.mapping.map(pos + cell.nodeSize - 1),\n          new Slice3(baseContent, 0, 0)\n        );\n    });\n    if (tr.docChanged)\n      dispatch(tr);\n  }\n  return true;\n}\nfunction handleTripleClick(view, pos) {\n  const doc = view.state.doc, $cell = cellAround(doc.resolve(pos));\n  if (!$cell)\n    return false;\n  view.dispatch(view.state.tr.setSelection(new CellSelection($cell)));\n  return true;\n}\nfunction handlePaste(view, _, slice) {\n  if (!isInTable(view.state))\n    return false;\n  let cells = pastedCells(slice);\n  const sel = view.state.selection;\n  if (sel instanceof CellSelection) {\n    if (!cells)\n      cells = {\n        width: 1,\n        height: 1,\n        rows: [\n          Fragment3.from(\n            fitSlice(tableNodeTypes(view.state.schema).cell, slice)\n          )\n        ]\n      };\n    const table = sel.$anchorCell.node(-1);\n    const start = sel.$anchorCell.start(-1);\n    const rect = TableMap.get(table).rectBetween(\n      sel.$anchorCell.pos - start,\n      sel.$headCell.pos - start\n    );\n    cells = clipCells(cells, rect.right - rect.left, rect.bottom - rect.top);\n    insertCells(view.state, view.dispatch, start, rect, cells);\n    return true;\n  } else if (cells) {\n    const $cell = selectionCell(view.state);\n    const start = $cell.start(-1);\n    insertCells(\n      view.state,\n      view.dispatch,\n      start,\n      TableMap.get($cell.node(-1)).findCell($cell.pos - start),\n      cells\n    );\n    return true;\n  } else {\n    return false;\n  }\n}\nfunction handleMouseDown(view, startEvent) {\n  var _a;\n  if (startEvent.ctrlKey || startEvent.metaKey)\n    return;\n  const startDOMCell = domInCell(view, startEvent.target);\n  let $anchor;\n  if (startEvent.shiftKey && view.state.selection instanceof CellSelection) {\n    setCellSelection(view.state.selection.$anchorCell, startEvent);\n    startEvent.preventDefault();\n  } else if (startEvent.shiftKey && startDOMCell && ($anchor = cellAround(view.state.selection.$anchor)) != null && ((_a = cellUnderMouse(view, startEvent)) == null ? void 0 : _a.pos) != $anchor.pos) {\n    setCellSelection($anchor, startEvent);\n    startEvent.preventDefault();\n  } else if (!startDOMCell) {\n    return;\n  }\n  function setCellSelection($anchor2, event) {\n    let $head = cellUnderMouse(view, event);\n    const starting = tableEditingKey.getState(view.state) == null;\n    if (!$head || !inSameTable($anchor2, $head)) {\n      if (starting)\n        $head = $anchor2;\n      else\n        return;\n    }\n    const selection = new CellSelection($anchor2, $head);\n    if (starting || !view.state.selection.eq(selection)) {\n      const tr = view.state.tr.setSelection(selection);\n      if (starting)\n        tr.setMeta(tableEditingKey, $anchor2.pos);\n      view.dispatch(tr);\n    }\n  }\n  function stop() {\n    view.root.removeEventListener(\"mouseup\", stop);\n    view.root.removeEventListener(\"dragstart\", stop);\n    view.root.removeEventListener(\"mousemove\", move);\n    if (tableEditingKey.getState(view.state) != null)\n      view.dispatch(view.state.tr.setMeta(tableEditingKey, -1));\n  }\n  function move(_event) {\n    const event = _event;\n    const anchor = tableEditingKey.getState(view.state);\n    let $anchor2;\n    if (anchor != null) {\n      $anchor2 = view.state.doc.resolve(anchor);\n    } else if (domInCell(view, event.target) != startDOMCell) {\n      $anchor2 = cellUnderMouse(view, startEvent);\n      if (!$anchor2)\n        return stop();\n    }\n    if ($anchor2)\n      setCellSelection($anchor2, event);\n  }\n  view.root.addEventListener(\"mouseup\", stop);\n  view.root.addEventListener(\"dragstart\", stop);\n  view.root.addEventListener(\"mousemove\", move);\n}\nfunction atEndOfCell(view, axis, dir) {\n  if (!(view.state.selection instanceof TextSelection2))\n    return null;\n  const { $head } = view.state.selection;\n  for (let d = $head.depth - 1; d >= 0; d--) {\n    const parent = $head.node(d), index = dir < 0 ? $head.index(d) : $head.indexAfter(d);\n    if (index != (dir < 0 ? 0 : parent.childCount))\n      return null;\n    if (parent.type.spec.tableRole == \"cell\" || parent.type.spec.tableRole == \"header_cell\") {\n      const cellPos = $head.before(d);\n      const dirStr = axis == \"vert\" ? dir > 0 ? \"down\" : \"up\" : dir > 0 ? \"right\" : \"left\";\n      return view.endOfTextblock(dirStr) ? cellPos : null;\n    }\n  }\n  return null;\n}\nfunction domInCell(view, dom) {\n  for (; dom && dom != view.dom; dom = dom.parentNode) {\n    if (dom.nodeName == \"TD\" || dom.nodeName == \"TH\") {\n      return dom;\n    }\n  }\n  return null;\n}\nfunction cellUnderMouse(view, event) {\n  const mousePos = view.posAtCoords({\n    left: event.clientX,\n    top: event.clientY\n  });\n  if (!mousePos)\n    return null;\n  return mousePos ? cellAround(view.state.doc.resolve(mousePos.pos)) : null;\n}\n\n// src/columnresizing.ts\nimport { Plugin, PluginKey as PluginKey3 } from \"prosemirror-state\";\nimport {\n  Decoration as Decoration2,\n  DecorationSet as DecorationSet2\n} from \"prosemirror-view\";\n\n// src/tableview.ts\nvar TableView = class {\n  constructor(node, cellMinWidth) {\n    this.node = node;\n    this.cellMinWidth = cellMinWidth;\n    this.dom = document.createElement(\"div\");\n    this.dom.className = \"tableWrapper\";\n    this.table = this.dom.appendChild(document.createElement(\"table\"));\n    this.colgroup = this.table.appendChild(document.createElement(\"colgroup\"));\n    updateColumnsOnResize(node, this.colgroup, this.table, cellMinWidth);\n    this.contentDOM = this.table.appendChild(document.createElement(\"tbody\"));\n  }\n  update(node) {\n    if (node.type != this.node.type)\n      return false;\n    this.node = node;\n    updateColumnsOnResize(node, this.colgroup, this.table, this.cellMinWidth);\n    return true;\n  }\n  ignoreMutation(record) {\n    return record.type == \"attributes\" && (record.target == this.table || this.colgroup.contains(record.target));\n  }\n};\nfunction updateColumnsOnResize(node, colgroup, table, cellMinWidth, overrideCol, overrideValue) {\n  var _a;\n  let totalWidth = 0;\n  let fixedWidth = true;\n  let nextDOM = colgroup.firstChild;\n  const row = node.firstChild;\n  if (!row)\n    return;\n  for (let i = 0, col = 0; i < row.childCount; i++) {\n    const { colspan, colwidth } = row.child(i).attrs;\n    for (let j = 0; j < colspan; j++, col++) {\n      const hasWidth = overrideCol == col ? overrideValue : colwidth && colwidth[j];\n      const cssWidth = hasWidth ? hasWidth + \"px\" : \"\";\n      totalWidth += hasWidth || cellMinWidth;\n      if (!hasWidth)\n        fixedWidth = false;\n      if (!nextDOM) {\n        colgroup.appendChild(document.createElement(\"col\")).style.width = cssWidth;\n      } else {\n        if (nextDOM.style.width != cssWidth)\n          nextDOM.style.width = cssWidth;\n        nextDOM = nextDOM.nextSibling;\n      }\n    }\n  }\n  while (nextDOM) {\n    const after = nextDOM.nextSibling;\n    (_a = nextDOM.parentNode) == null ? void 0 : _a.removeChild(nextDOM);\n    nextDOM = after;\n  }\n  if (fixedWidth) {\n    table.style.width = totalWidth + \"px\";\n    table.style.minWidth = \"\";\n  } else {\n    table.style.width = \"\";\n    table.style.minWidth = totalWidth + \"px\";\n  }\n}\n\n// src/columnresizing.ts\nvar columnResizingPluginKey = new PluginKey3(\n  \"tableColumnResizing\"\n);\nfunction columnResizing({\n  handleWidth = 5,\n  cellMinWidth = 25,\n  View = TableView,\n  lastColumnResizable = true\n} = {}) {\n  const plugin = new Plugin({\n    key: columnResizingPluginKey,\n    state: {\n      init(_, state) {\n        plugin.spec.props.nodeViews[tableNodeTypes(state.schema).table.name] = (node, view) => new View(node, cellMinWidth, view);\n        return new ResizeState(-1, false);\n      },\n      apply(tr, prev) {\n        return prev.apply(tr);\n      }\n    },\n    props: {\n      attributes: (state) => {\n        const pluginState = columnResizingPluginKey.getState(state);\n        return pluginState && pluginState.activeHandle > -1 ? { class: \"resize-cursor\" } : {};\n      },\n      handleDOMEvents: {\n        mousemove: (view, event) => {\n          handleMouseMove(\n            view,\n            event,\n            handleWidth,\n            cellMinWidth,\n            lastColumnResizable\n          );\n        },\n        mouseleave: (view) => {\n          handleMouseLeave(view);\n        },\n        mousedown: (view, event) => {\n          handleMouseDown2(view, event, cellMinWidth);\n        }\n      },\n      decorations: (state) => {\n        const pluginState = columnResizingPluginKey.getState(state);\n        if (pluginState && pluginState.activeHandle > -1) {\n          return handleDecorations(state, pluginState.activeHandle);\n        }\n      },\n      nodeViews: {}\n    }\n  });\n  return plugin;\n}\nvar ResizeState = class {\n  constructor(activeHandle, dragging) {\n    this.activeHandle = activeHandle;\n    this.dragging = dragging;\n  }\n  apply(tr) {\n    const state = this;\n    const action = tr.getMeta(columnResizingPluginKey);\n    if (action && action.setHandle != null)\n      return new ResizeState(action.setHandle, false);\n    if (action && action.setDragging !== void 0)\n      return new ResizeState(state.activeHandle, action.setDragging);\n    if (state.activeHandle > -1 && tr.docChanged) {\n      let handle = tr.mapping.map(state.activeHandle, -1);\n      if (!pointsAtCell(tr.doc.resolve(handle))) {\n        handle = -1;\n      }\n      return new ResizeState(handle, state.dragging);\n    }\n    return state;\n  }\n};\nfunction handleMouseMove(view, event, handleWidth, cellMinWidth, lastColumnResizable) {\n  const pluginState = columnResizingPluginKey.getState(view.state);\n  if (!pluginState)\n    return;\n  if (!pluginState.dragging) {\n    const target = domCellAround(event.target);\n    let cell = -1;\n    if (target) {\n      const { left, right } = target.getBoundingClientRect();\n      if (event.clientX - left <= handleWidth)\n        cell = edgeCell(view, event, \"left\");\n      else if (right - event.clientX <= handleWidth)\n        cell = edgeCell(view, event, \"right\");\n    }\n    if (cell != pluginState.activeHandle) {\n      if (!lastColumnResizable && cell !== -1) {\n        const $cell = view.state.doc.resolve(cell);\n        const table = $cell.node(-1);\n        const map = TableMap.get(table);\n        const tableStart = $cell.start(-1);\n        const col = map.colCount($cell.pos - tableStart) + $cell.nodeAfter.attrs.colspan - 1;\n        if (col == map.width - 1) {\n          return;\n        }\n      }\n      updateHandle(view, cell);\n    }\n  }\n}\nfunction handleMouseLeave(view) {\n  const pluginState = columnResizingPluginKey.getState(view.state);\n  if (pluginState && pluginState.activeHandle > -1 && !pluginState.dragging)\n    updateHandle(view, -1);\n}\nfunction handleMouseDown2(view, event, cellMinWidth) {\n  const pluginState = columnResizingPluginKey.getState(view.state);\n  if (!pluginState || pluginState.activeHandle == -1 || pluginState.dragging)\n    return false;\n  const cell = view.state.doc.nodeAt(pluginState.activeHandle);\n  const width = currentColWidth(view, pluginState.activeHandle, cell.attrs);\n  view.dispatch(\n    view.state.tr.setMeta(columnResizingPluginKey, {\n      setDragging: { startX: event.clientX, startWidth: width }\n    })\n  );\n  function finish(event2) {\n    window.removeEventListener(\"mouseup\", finish);\n    window.removeEventListener(\"mousemove\", move);\n    const pluginState2 = columnResizingPluginKey.getState(view.state);\n    if (pluginState2 == null ? void 0 : pluginState2.dragging) {\n      updateColumnWidth(\n        view,\n        pluginState2.activeHandle,\n        draggedWidth(pluginState2.dragging, event2, cellMinWidth)\n      );\n      view.dispatch(\n        view.state.tr.setMeta(columnResizingPluginKey, { setDragging: null })\n      );\n    }\n  }\n  function move(event2) {\n    if (!event2.which)\n      return finish(event2);\n    const pluginState2 = columnResizingPluginKey.getState(view.state);\n    if (!pluginState2)\n      return;\n    if (pluginState2.dragging) {\n      const dragged = draggedWidth(pluginState2.dragging, event2, cellMinWidth);\n      displayColumnWidth(view, pluginState2.activeHandle, dragged, cellMinWidth);\n    }\n  }\n  window.addEventListener(\"mouseup\", finish);\n  window.addEventListener(\"mousemove\", move);\n  event.preventDefault();\n  return true;\n}\nfunction currentColWidth(view, cellPos, { colspan, colwidth }) {\n  const width = colwidth && colwidth[colwidth.length - 1];\n  if (width)\n    return width;\n  const dom = view.domAtPos(cellPos);\n  const node = dom.node.childNodes[dom.offset];\n  let domWidth = node.offsetWidth, parts = colspan;\n  if (colwidth) {\n    for (let i = 0; i < colspan; i++)\n      if (colwidth[i]) {\n        domWidth -= colwidth[i];\n        parts--;\n      }\n  }\n  return domWidth / parts;\n}\nfunction domCellAround(target) {\n  while (target && target.nodeName != \"TD\" && target.nodeName != \"TH\")\n    target = target.classList && target.classList.contains(\"ProseMirror\") ? null : target.parentNode;\n  return target;\n}\nfunction edgeCell(view, event, side) {\n  const found = view.posAtCoords({ left: event.clientX, top: event.clientY });\n  if (!found)\n    return -1;\n  const { pos } = found;\n  const $cell = cellAround(view.state.doc.resolve(pos));\n  if (!$cell)\n    return -1;\n  if (side == \"right\")\n    return $cell.pos;\n  const map = TableMap.get($cell.node(-1)), start = $cell.start(-1);\n  const index = map.map.indexOf($cell.pos - start);\n  return index % map.width == 0 ? -1 : start + map.map[index - 1];\n}\nfunction draggedWidth(dragging, event, cellMinWidth) {\n  const offset = event.clientX - dragging.startX;\n  return Math.max(cellMinWidth, dragging.startWidth + offset);\n}\nfunction updateHandle(view, value) {\n  view.dispatch(\n    view.state.tr.setMeta(columnResizingPluginKey, { setHandle: value })\n  );\n}\nfunction updateColumnWidth(view, cell, width) {\n  const $cell = view.state.doc.resolve(cell);\n  const table = $cell.node(-1), map = TableMap.get(table), start = $cell.start(-1);\n  const col = map.colCount($cell.pos - start) + $cell.nodeAfter.attrs.colspan - 1;\n  const tr = view.state.tr;\n  for (let row = 0; row < map.height; row++) {\n    const mapIndex = row * map.width + col;\n    if (row && map.map[mapIndex] == map.map[mapIndex - map.width])\n      continue;\n    const pos = map.map[mapIndex];\n    const attrs = table.nodeAt(pos).attrs;\n    const index = attrs.colspan == 1 ? 0 : col - map.colCount(pos);\n    if (attrs.colwidth && attrs.colwidth[index] == width)\n      continue;\n    const colwidth = attrs.colwidth ? attrs.colwidth.slice() : zeroes(attrs.colspan);\n    colwidth[index] = width;\n    tr.setNodeMarkup(start + pos, null, { ...attrs, colwidth });\n  }\n  if (tr.docChanged)\n    view.dispatch(tr);\n}\nfunction displayColumnWidth(view, cell, width, cellMinWidth) {\n  const $cell = view.state.doc.resolve(cell);\n  const table = $cell.node(-1), start = $cell.start(-1);\n  const col = TableMap.get(table).colCount($cell.pos - start) + $cell.nodeAfter.attrs.colspan - 1;\n  let dom = view.domAtPos($cell.start(-1)).node;\n  while (dom && dom.nodeName != \"TABLE\") {\n    dom = dom.parentNode;\n  }\n  if (!dom)\n    return;\n  updateColumnsOnResize(\n    table,\n    dom.firstChild,\n    dom,\n    cellMinWidth,\n    col,\n    width\n  );\n}\nfunction zeroes(n) {\n  return Array(n).fill(0);\n}\nfunction handleDecorations(state, cell) {\n  const decorations = [];\n  const $cell = state.doc.resolve(cell);\n  const table = $cell.node(-1);\n  if (!table) {\n    return DecorationSet2.empty;\n  }\n  const map = TableMap.get(table);\n  const start = $cell.start(-1);\n  const col = map.colCount($cell.pos - start) + $cell.nodeAfter.attrs.colspan;\n  for (let row = 0; row < map.height; row++) {\n    const index = col + row * map.width - 1;\n    if ((col == map.width || map.map[index] != map.map[index + 1]) && (row == 0 || map.map[index - 1] != map.map[index - 1 - map.width])) {\n      const cellPos = map.map[index];\n      const pos = start + cellPos + table.nodeAt(cellPos).nodeSize - 1;\n      const dom = document.createElement(\"div\");\n      dom.className = \"column-resize-handle\";\n      decorations.push(Decoration2.widget(pos, dom));\n    }\n  }\n  return DecorationSet2.create(state.doc, decorations);\n}\n\n// src/commands.ts\nimport { Fragment as Fragment4 } from \"prosemirror-model\";\nimport {\n  TextSelection as TextSelection3\n} from \"prosemirror-state\";\nfunction selectedRect(state) {\n  const sel = state.selection;\n  const $pos = selectionCell(state);\n  const table = $pos.node(-1);\n  const tableStart = $pos.start(-1);\n  const map = TableMap.get(table);\n  const rect = sel instanceof CellSelection ? map.rectBetween(\n    sel.$anchorCell.pos - tableStart,\n    sel.$headCell.pos - tableStart\n  ) : map.findCell($pos.pos - tableStart);\n  return { ...rect, tableStart, map, table };\n}\nfunction addColumn(tr, { map, tableStart, table }, col) {\n  let refColumn = col > 0 ? -1 : 0;\n  if (columnIsHeader(map, table, col + refColumn)) {\n    refColumn = col == 0 || col == map.width ? null : 0;\n  }\n  for (let row = 0; row < map.height; row++) {\n    const index = row * map.width + col;\n    if (col > 0 && col < map.width && map.map[index - 1] == map.map[index]) {\n      const pos = map.map[index];\n      const cell = table.nodeAt(pos);\n      tr.setNodeMarkup(\n        tr.mapping.map(tableStart + pos),\n        null,\n        addColSpan(cell.attrs, col - map.colCount(pos))\n      );\n      row += cell.attrs.rowspan - 1;\n    } else {\n      const type = refColumn == null ? tableNodeTypes(table.type.schema).cell : table.nodeAt(map.map[index + refColumn]).type;\n      const pos = map.positionAt(row, col, table);\n      tr.insert(tr.mapping.map(tableStart + pos), type.createAndFill());\n    }\n  }\n  return tr;\n}\nfunction addColumnBefore(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    dispatch(addColumn(state.tr, rect, rect.left));\n  }\n  return true;\n}\nfunction addColumnAfter(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    dispatch(addColumn(state.tr, rect, rect.right));\n  }\n  return true;\n}\nfunction removeColumn(tr, { map, table, tableStart }, col) {\n  const mapStart = tr.mapping.maps.length;\n  for (let row = 0; row < map.height; ) {\n    const index = row * map.width + col;\n    const pos = map.map[index];\n    const cell = table.nodeAt(pos);\n    const attrs = cell.attrs;\n    if (col > 0 && map.map[index - 1] == pos || col < map.width - 1 && map.map[index + 1] == pos) {\n      tr.setNodeMarkup(\n        tr.mapping.slice(mapStart).map(tableStart + pos),\n        null,\n        removeColSpan(attrs, col - map.colCount(pos))\n      );\n    } else {\n      const start = tr.mapping.slice(mapStart).map(tableStart + pos);\n      tr.delete(start, start + cell.nodeSize);\n    }\n    row += attrs.rowspan;\n  }\n}\nfunction deleteColumn(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    const tr = state.tr;\n    if (rect.left == 0 && rect.right == rect.map.width)\n      return false;\n    for (let i = rect.right - 1; ; i--) {\n      removeColumn(tr, rect, i);\n      if (i == rect.left)\n        break;\n      const table = rect.tableStart ? tr.doc.nodeAt(rect.tableStart - 1) : tr.doc;\n      if (!table) {\n        throw RangeError(\"No table found\");\n      }\n      rect.table = table;\n      rect.map = TableMap.get(table);\n    }\n    dispatch(tr);\n  }\n  return true;\n}\nfunction rowIsHeader(map, table, row) {\n  var _a;\n  const headerCell = tableNodeTypes(table.type.schema).header_cell;\n  for (let col = 0; col < map.width; col++)\n    if (((_a = table.nodeAt(map.map[col + row * map.width])) == null ? void 0 : _a.type) != headerCell)\n      return false;\n  return true;\n}\nfunction addRow(tr, { map, tableStart, table }, row) {\n  var _a;\n  let rowPos = tableStart;\n  for (let i = 0; i < row; i++)\n    rowPos += table.child(i).nodeSize;\n  const cells = [];\n  let refRow = row > 0 ? -1 : 0;\n  if (rowIsHeader(map, table, row + refRow))\n    refRow = row == 0 || row == map.height ? null : 0;\n  for (let col = 0, index = map.width * row; col < map.width; col++, index++) {\n    if (row > 0 && row < map.height && map.map[index] == map.map[index - map.width]) {\n      const pos = map.map[index];\n      const attrs = table.nodeAt(pos).attrs;\n      tr.setNodeMarkup(tableStart + pos, null, {\n        ...attrs,\n        rowspan: attrs.rowspan + 1\n      });\n      col += attrs.colspan - 1;\n    } else {\n      const type = refRow == null ? tableNodeTypes(table.type.schema).cell : (_a = table.nodeAt(map.map[index + refRow * map.width])) == null ? void 0 : _a.type;\n      const node = type == null ? void 0 : type.createAndFill();\n      if (node)\n        cells.push(node);\n    }\n  }\n  tr.insert(rowPos, tableNodeTypes(table.type.schema).row.create(null, cells));\n  return tr;\n}\nfunction addRowBefore(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    dispatch(addRow(state.tr, rect, rect.top));\n  }\n  return true;\n}\nfunction addRowAfter(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    dispatch(addRow(state.tr, rect, rect.bottom));\n  }\n  return true;\n}\nfunction removeRow(tr, { map, table, tableStart }, row) {\n  let rowPos = 0;\n  for (let i = 0; i < row; i++)\n    rowPos += table.child(i).nodeSize;\n  const nextRow = rowPos + table.child(row).nodeSize;\n  const mapFrom = tr.mapping.maps.length;\n  tr.delete(rowPos + tableStart, nextRow + tableStart);\n  for (let col = 0, index = row * map.width; col < map.width; col++, index++) {\n    const pos = map.map[index];\n    if (row > 0 && pos == map.map[index - map.width]) {\n      const attrs = table.nodeAt(pos).attrs;\n      tr.setNodeMarkup(tr.mapping.slice(mapFrom).map(pos + tableStart), null, {\n        ...attrs,\n        rowspan: attrs.rowspan - 1\n      });\n      col += attrs.colspan - 1;\n    } else if (row < map.width && pos == map.map[index + map.width]) {\n      const cell = table.nodeAt(pos);\n      const attrs = cell.attrs;\n      const copy = cell.type.create(\n        { ...attrs, rowspan: cell.attrs.rowspan - 1 },\n        cell.content\n      );\n      const newPos = map.positionAt(row + 1, col, table);\n      tr.insert(tr.mapping.slice(mapFrom).map(tableStart + newPos), copy);\n      col += attrs.colspan - 1;\n    }\n  }\n}\nfunction deleteRow(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state), tr = state.tr;\n    if (rect.top == 0 && rect.bottom == rect.map.height)\n      return false;\n    for (let i = rect.bottom - 1; ; i--) {\n      removeRow(tr, rect, i);\n      if (i == rect.top)\n        break;\n      const table = rect.tableStart ? tr.doc.nodeAt(rect.tableStart - 1) : tr.doc;\n      if (!table) {\n        throw RangeError(\"No table found\");\n      }\n      rect.table = table;\n      rect.map = TableMap.get(rect.table);\n    }\n    dispatch(tr);\n  }\n  return true;\n}\nfunction isEmpty(cell) {\n  const c = cell.content;\n  return c.childCount == 1 && c.child(0).isTextblock && c.child(0).childCount == 0;\n}\nfunction cellsOverlapRectangle({ width, height, map }, rect) {\n  let indexTop = rect.top * width + rect.left, indexLeft = indexTop;\n  let indexBottom = (rect.bottom - 1) * width + rect.left, indexRight = indexTop + (rect.right - rect.left - 1);\n  for (let i = rect.top; i < rect.bottom; i++) {\n    if (rect.left > 0 && map[indexLeft] == map[indexLeft - 1] || rect.right < width && map[indexRight] == map[indexRight + 1])\n      return true;\n    indexLeft += width;\n    indexRight += width;\n  }\n  for (let i = rect.left; i < rect.right; i++) {\n    if (rect.top > 0 && map[indexTop] == map[indexTop - width] || rect.bottom < height && map[indexBottom] == map[indexBottom + width])\n      return true;\n    indexTop++;\n    indexBottom++;\n  }\n  return false;\n}\nfunction mergeCells(state, dispatch) {\n  const sel = state.selection;\n  if (!(sel instanceof CellSelection) || sel.$anchorCell.pos == sel.$headCell.pos)\n    return false;\n  const rect = selectedRect(state), { map } = rect;\n  if (cellsOverlapRectangle(map, rect))\n    return false;\n  if (dispatch) {\n    const tr = state.tr;\n    const seen = {};\n    let content = Fragment4.empty;\n    let mergedPos;\n    let mergedCell;\n    for (let row = rect.top; row < rect.bottom; row++) {\n      for (let col = rect.left; col < rect.right; col++) {\n        const cellPos = map.map[row * map.width + col];\n        const cell = rect.table.nodeAt(cellPos);\n        if (seen[cellPos] || !cell)\n          continue;\n        seen[cellPos] = true;\n        if (mergedPos == null) {\n          mergedPos = cellPos;\n          mergedCell = cell;\n        } else {\n          if (!isEmpty(cell))\n            content = content.append(cell.content);\n          const mapped = tr.mapping.map(cellPos + rect.tableStart);\n          tr.delete(mapped, mapped + cell.nodeSize);\n        }\n      }\n    }\n    if (mergedPos == null || mergedCell == null) {\n      return true;\n    }\n    tr.setNodeMarkup(mergedPos + rect.tableStart, null, {\n      ...addColSpan(\n        mergedCell.attrs,\n        mergedCell.attrs.colspan,\n        rect.right - rect.left - mergedCell.attrs.colspan\n      ),\n      rowspan: rect.bottom - rect.top\n    });\n    if (content.size) {\n      const end = mergedPos + 1 + mergedCell.content.size;\n      const start = isEmpty(mergedCell) ? mergedPos + 1 : end;\n      tr.replaceWith(start + rect.tableStart, end + rect.tableStart, content);\n    }\n    tr.setSelection(\n      new CellSelection(tr.doc.resolve(mergedPos + rect.tableStart))\n    );\n    dispatch(tr);\n  }\n  return true;\n}\nfunction splitCell(state, dispatch) {\n  const nodeTypes = tableNodeTypes(state.schema);\n  return splitCellWithType(({ node }) => {\n    return nodeTypes[node.type.spec.tableRole];\n  })(state, dispatch);\n}\nfunction splitCellWithType(getCellType) {\n  return (state, dispatch) => {\n    var _a;\n    const sel = state.selection;\n    let cellNode;\n    let cellPos;\n    if (!(sel instanceof CellSelection)) {\n      cellNode = cellWrapping(sel.$from);\n      if (!cellNode)\n        return false;\n      cellPos = (_a = cellAround(sel.$from)) == null ? void 0 : _a.pos;\n    } else {\n      if (sel.$anchorCell.pos != sel.$headCell.pos)\n        return false;\n      cellNode = sel.$anchorCell.nodeAfter;\n      cellPos = sel.$anchorCell.pos;\n    }\n    if (cellNode == null || cellPos == null) {\n      return false;\n    }\n    if (cellNode.attrs.colspan == 1 && cellNode.attrs.rowspan == 1) {\n      return false;\n    }\n    if (dispatch) {\n      let baseAttrs = cellNode.attrs;\n      const attrs = [];\n      const colwidth = baseAttrs.colwidth;\n      if (baseAttrs.rowspan > 1)\n        baseAttrs = { ...baseAttrs, rowspan: 1 };\n      if (baseAttrs.colspan > 1)\n        baseAttrs = { ...baseAttrs, colspan: 1 };\n      const rect = selectedRect(state), tr = state.tr;\n      for (let i = 0; i < rect.right - rect.left; i++)\n        attrs.push(\n          colwidth ? {\n            ...baseAttrs,\n            colwidth: colwidth && colwidth[i] ? [colwidth[i]] : null\n          } : baseAttrs\n        );\n      let lastCell;\n      for (let row = rect.top; row < rect.bottom; row++) {\n        let pos = rect.map.positionAt(row, rect.left, rect.table);\n        if (row == rect.top)\n          pos += cellNode.nodeSize;\n        for (let col = rect.left, i = 0; col < rect.right; col++, i++) {\n          if (col == rect.left && row == rect.top)\n            continue;\n          tr.insert(\n            lastCell = tr.mapping.map(pos + rect.tableStart, 1),\n            getCellType({ node: cellNode, row, col }).createAndFill(attrs[i])\n          );\n        }\n      }\n      tr.setNodeMarkup(\n        cellPos,\n        getCellType({ node: cellNode, row: rect.top, col: rect.left }),\n        attrs[0]\n      );\n      if (sel instanceof CellSelection)\n        tr.setSelection(\n          new CellSelection(\n            tr.doc.resolve(sel.$anchorCell.pos),\n            lastCell ? tr.doc.resolve(lastCell) : void 0\n          )\n        );\n      dispatch(tr);\n    }\n    return true;\n  };\n}\nfunction setCellAttr(name, value) {\n  return function(state, dispatch) {\n    if (!isInTable(state))\n      return false;\n    const $cell = selectionCell(state);\n    if ($cell.nodeAfter.attrs[name] === value)\n      return false;\n    if (dispatch) {\n      const tr = state.tr;\n      if (state.selection instanceof CellSelection)\n        state.selection.forEachCell((node, pos) => {\n          if (node.attrs[name] !== value)\n            tr.setNodeMarkup(pos, null, {\n              ...node.attrs,\n              [name]: value\n            });\n        });\n      else\n        tr.setNodeMarkup($cell.pos, null, {\n          ...$cell.nodeAfter.attrs,\n          [name]: value\n        });\n      dispatch(tr);\n    }\n    return true;\n  };\n}\nfunction deprecated_toggleHeader(type) {\n  return function(state, dispatch) {\n    if (!isInTable(state))\n      return false;\n    if (dispatch) {\n      const types = tableNodeTypes(state.schema);\n      const rect = selectedRect(state), tr = state.tr;\n      const cells = rect.map.cellsInRect(\n        type == \"column\" ? {\n          left: rect.left,\n          top: 0,\n          right: rect.right,\n          bottom: rect.map.height\n        } : type == \"row\" ? {\n          left: 0,\n          top: rect.top,\n          right: rect.map.width,\n          bottom: rect.bottom\n        } : rect\n      );\n      const nodes = cells.map((pos) => rect.table.nodeAt(pos));\n      for (let i = 0; i < cells.length; i++)\n        if (nodes[i].type == types.header_cell)\n          tr.setNodeMarkup(\n            rect.tableStart + cells[i],\n            types.cell,\n            nodes[i].attrs\n          );\n      if (tr.steps.length == 0)\n        for (let i = 0; i < cells.length; i++)\n          tr.setNodeMarkup(\n            rect.tableStart + cells[i],\n            types.header_cell,\n            nodes[i].attrs\n          );\n      dispatch(tr);\n    }\n    return true;\n  };\n}\nfunction isHeaderEnabledByType(type, rect, types) {\n  const cellPositions = rect.map.cellsInRect({\n    left: 0,\n    top: 0,\n    right: type == \"row\" ? rect.map.width : 1,\n    bottom: type == \"column\" ? rect.map.height : 1\n  });\n  for (let i = 0; i < cellPositions.length; i++) {\n    const cell = rect.table.nodeAt(cellPositions[i]);\n    if (cell && cell.type !== types.header_cell) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction toggleHeader(type, options) {\n  options = options || { useDeprecatedLogic: false };\n  if (options.useDeprecatedLogic)\n    return deprecated_toggleHeader(type);\n  return function(state, dispatch) {\n    if (!isInTable(state))\n      return false;\n    if (dispatch) {\n      const types = tableNodeTypes(state.schema);\n      const rect = selectedRect(state), tr = state.tr;\n      const isHeaderRowEnabled = isHeaderEnabledByType(\"row\", rect, types);\n      const isHeaderColumnEnabled = isHeaderEnabledByType(\n        \"column\",\n        rect,\n        types\n      );\n      const isHeaderEnabled = type === \"column\" ? isHeaderRowEnabled : type === \"row\" ? isHeaderColumnEnabled : false;\n      const selectionStartsAt = isHeaderEnabled ? 1 : 0;\n      const cellsRect = type == \"column\" ? {\n        left: 0,\n        top: selectionStartsAt,\n        right: 1,\n        bottom: rect.map.height\n      } : type == \"row\" ? {\n        left: selectionStartsAt,\n        top: 0,\n        right: rect.map.width,\n        bottom: 1\n      } : rect;\n      const newType = type == \"column\" ? isHeaderColumnEnabled ? types.cell : types.header_cell : type == \"row\" ? isHeaderRowEnabled ? types.cell : types.header_cell : types.cell;\n      rect.map.cellsInRect(cellsRect).forEach((relativeCellPos) => {\n        const cellPos = relativeCellPos + rect.tableStart;\n        const cell = tr.doc.nodeAt(cellPos);\n        if (cell) {\n          tr.setNodeMarkup(cellPos, newType, cell.attrs);\n        }\n      });\n      dispatch(tr);\n    }\n    return true;\n  };\n}\nvar toggleHeaderRow = toggleHeader(\"row\", {\n  useDeprecatedLogic: true\n});\nvar toggleHeaderColumn = toggleHeader(\"column\", {\n  useDeprecatedLogic: true\n});\nvar toggleHeaderCell = toggleHeader(\"cell\", {\n  useDeprecatedLogic: true\n});\nfunction findNextCell($cell, dir) {\n  if (dir < 0) {\n    const before = $cell.nodeBefore;\n    if (before)\n      return $cell.pos - before.nodeSize;\n    for (let row = $cell.index(-1) - 1, rowEnd = $cell.before(); row >= 0; row--) {\n      const rowNode = $cell.node(-1).child(row);\n      const lastChild = rowNode.lastChild;\n      if (lastChild) {\n        return rowEnd - 1 - lastChild.nodeSize;\n      }\n      rowEnd -= rowNode.nodeSize;\n    }\n  } else {\n    if ($cell.index() < $cell.parent.childCount - 1) {\n      return $cell.pos + $cell.nodeAfter.nodeSize;\n    }\n    const table = $cell.node(-1);\n    for (let row = $cell.indexAfter(-1), rowStart = $cell.after(); row < table.childCount; row++) {\n      const rowNode = table.child(row);\n      if (rowNode.childCount)\n        return rowStart + 1;\n      rowStart += rowNode.nodeSize;\n    }\n  }\n  return null;\n}\nfunction goToNextCell(direction) {\n  return function(state, dispatch) {\n    if (!isInTable(state))\n      return false;\n    const cell = findNextCell(selectionCell(state), direction);\n    if (cell == null)\n      return false;\n    if (dispatch) {\n      const $cell = state.doc.resolve(cell);\n      dispatch(\n        state.tr.setSelection(TextSelection3.between($cell, moveCellForward($cell))).scrollIntoView()\n      );\n    }\n    return true;\n  };\n}\nfunction deleteTable(state, dispatch) {\n  const $pos = state.selection.$anchor;\n  for (let d = $pos.depth; d > 0; d--) {\n    const node = $pos.node(d);\n    if (node.type.spec.tableRole == \"table\") {\n      if (dispatch)\n        dispatch(\n          state.tr.delete($pos.before(d), $pos.after(d)).scrollIntoView()\n        );\n      return true;\n    }\n  }\n  return false;\n}\n\n// src/index.ts\nfunction tableEditing({\n  allowTableNodeSelection = false\n} = {}) {\n  return new Plugin2({\n    key: tableEditingKey,\n    state: {\n      init() {\n        return null;\n      },\n      apply(tr, cur) {\n        const set = tr.getMeta(tableEditingKey);\n        if (set != null)\n          return set == -1 ? null : set;\n        if (cur == null || !tr.docChanged)\n          return cur;\n        const { deleted, pos } = tr.mapping.mapResult(cur);\n        return deleted ? null : pos;\n      }\n    },\n    props: {\n      decorations: drawCellSelection,\n      handleDOMEvents: {\n        mousedown: handleMouseDown\n      },\n      createSelectionBetween(view) {\n        return tableEditingKey.getState(view.state) != null ? view.state.selection : null;\n      },\n      handleTripleClick,\n      handleKeyDown,\n      handlePaste\n    },\n    appendTransaction(_, oldState, state) {\n      return normalizeSelection(\n        state,\n        fixTables(state, oldState),\n        allowTableNodeSelection\n      );\n    }\n  });\n}\nexport {\n  CellBookmark,\n  CellSelection,\n  ResizeState,\n  TableMap,\n  TableView,\n  clipCells as __clipCells,\n  insertCells as __insertCells,\n  pastedCells as __pastedCells,\n  addColSpan,\n  addColumn,\n  addColumnAfter,\n  addColumnBefore,\n  addRow,\n  addRowAfter,\n  addRowBefore,\n  cellAround,\n  colCount,\n  columnIsHeader,\n  columnResizing,\n  columnResizingPluginKey,\n  deleteColumn,\n  deleteRow,\n  deleteTable,\n  findCell,\n  fixTables,\n  fixTablesKey,\n  goToNextCell,\n  handlePaste,\n  inSameTable,\n  isInTable,\n  mergeCells,\n  moveCellForward,\n  nextCell,\n  pointsAtCell,\n  removeColSpan,\n  removeColumn,\n  removeRow,\n  rowIsHeader,\n  selectedRect,\n  selectionCell,\n  setCellAttr,\n  splitCell,\n  splitCellWithType,\n  tableEditing,\n  tableEditingKey,\n  tableNodeTypes,\n  tableNodes,\n  toggleHeader,\n  toggleHeaderCell,\n  toggleHeaderColumn,\n  toggleHeaderRow,\n  updateColumnsOnResize\n};\n", "// @ts-nocheck\nimport { Node as ProseMirrorNode } from '@tiptap/pm/model'\nimport { NodeView } from '@tiptap/pm/view'\n\nexport function updateColumns(\n  node: ProseMirrorNode,\n  colgroup: Element,\n  table: Element,\n  cellMinWidth: number,\n  overrideCol?: number,\n  overrideValue?: any,\n) {\n  let totalWidth = 0\n  let fixedWidth = true\n  let nextDOM = colgroup.firstChild\n  const row = node.firstChild\n\n  for (let i = 0, col = 0; i < row.childCount; i += 1) {\n    const { colspan, colwidth } = row.child(i).attrs\n\n    for (let j = 0; j < colspan; j += 1, col += 1) {\n      const hasWidth = overrideCol === col ? overrideValue : colwidth && colwidth[j]\n      const cssWidth = hasWidth ? `${hasWidth}px` : ''\n\n      totalWidth += hasWidth || cellMinWidth\n\n      if (!hasWidth) {\n        fixedWidth = false\n      }\n\n      if (!nextDOM) {\n        colgroup.appendChild(document.createElement('col')).style.width = cssWidth\n      } else {\n        if (nextDOM.style.width !== cssWidth) {\n          nextDOM.style.width = cssWidth\n        }\n\n        nextDOM = nextDOM.nextSibling\n      }\n    }\n  }\n\n  while (nextDOM) {\n    const after = nextDOM.nextSibling\n\n    nextDOM.parentNode.removeChild(nextDOM)\n    nextDOM = after\n  }\n\n  if (fixedWidth) {\n    table.style.width = `${totalWidth}px`\n    table.style.minWidth = ''\n  } else {\n    table.style.width = ''\n    table.style.minWidth = `${totalWidth}px`\n  }\n}\n\nexport class TableView implements NodeView {\n  node: ProseMirrorNode\n\n  cellMinWidth: number\n\n  dom: Element\n\n  table: Element\n\n  colgroup: Element\n\n  contentDOM: Element\n\n  constructor(node: ProseMirrorNode, cellMinWidth: number) {\n    this.node = node\n    this.cellMinWidth = cellMinWidth\n    this.dom = document.createElement('div')\n    this.dom.className = 'tableWrapper'\n    this.table = this.dom.appendChild(document.createElement('table'))\n    this.colgroup = this.table.appendChild(document.createElement('colgroup'))\n    updateColumns(node, this.colgroup, this.table, cellMinWidth)\n    this.contentDOM = this.table.appendChild(document.createElement('tbody'))\n  }\n\n  update(node: ProseMirrorNode) {\n    if (node.type !== this.node.type) {\n      return false\n    }\n\n    this.node = node\n    updateColumns(node, this.colgroup, this.table, this.cellMinWidth)\n\n    return true\n  }\n\n  ignoreMutation(mutation: MutationRecord | { type: 'selection'; target: Element }) {\n    return (\n      mutation.type === 'attributes'\n      && (mutation.target === this.table || this.colgroup.contains(mutation.target))\n    )\n  }\n}\n", "import { Fragment, Node as ProsemirrorNode, NodeType } from '@tiptap/pm/model'\n\nexport function createCell(\n  cellType: NodeType,\n  cellContent?: Fragment | ProsemirrorNode | Array<ProsemirrorNode>,\n): ProsemirrorNode | null | undefined {\n  if (cellContent) {\n    return cellType.createChecked(null, cellContent)\n  }\n\n  return cellType.createAndFill()\n}\n", "import { NodeType, Schema } from '@tiptap/pm/model'\n\nexport function getTableNodeTypes(schema: Schema): { [key: string]: NodeType } {\n  if (schema.cached.tableNodeTypes) {\n    return schema.cached.tableNodeTypes\n  }\n\n  const roles: { [key: string]: NodeType } = {}\n\n  Object.keys(schema.nodes).forEach(type => {\n    const nodeType = schema.nodes[type]\n\n    if (nodeType.spec.tableRole) {\n      roles[nodeType.spec.tableRole] = nodeType\n    }\n  })\n\n  schema.cached.tableNodeTypes = roles\n\n  return roles\n}\n", "import { Fragment, Node as ProsemirrorNode, Schema } from '@tiptap/pm/model'\n\nimport { createCell } from './createCell'\nimport { getTableNodeTypes } from './getTableNodeTypes'\n\nexport function createTable(\n  schema: Schema,\n  rowsCount: number,\n  colsCount: number,\n  withHeaderRow: boolean,\n  cellContent?: Fragment | ProsemirrorNode | Array<ProsemirrorNode>,\n): ProsemirrorNode {\n  const types = getTableNodeTypes(schema)\n  const headerCells: ProsemirrorNode[] = []\n  const cells: ProsemirrorNode[] = []\n\n  for (let index = 0; index < colsCount; index += 1) {\n    const cell = createCell(types.cell, cellContent)\n\n    if (cell) {\n      cells.push(cell)\n    }\n\n    if (withHeaderRow) {\n      const headerCell = createCell(types.header_cell, cellContent)\n\n      if (headerCell) {\n        headerCells.push(headerCell)\n      }\n    }\n  }\n\n  const rows: ProsemirrorNode[] = []\n\n  for (let index = 0; index < rowsCount; index += 1) {\n    rows.push(types.row.createChecked(null, withHeaderRow && index === 0 ? headerCells : cells))\n  }\n\n  return types.table.createChecked(null, rows)\n}\n", "import { CellSelection } from '@tiptap/pm/tables'\n\nexport function isCellSelection(value: unknown): value is CellSelection {\n  return value instanceof CellSelection\n}\n", "import { findParentNodeClosestToPos, KeyboardShortcutCommand } from '@tiptap/core'\n\nimport { isCellSelection } from './isCellSelection'\n\nexport const deleteTableWhenAllCellsSelected: KeyboardShortcutCommand = ({ editor }) => {\n  const { selection } = editor.state\n\n  if (!isCellSelection(selection)) {\n    return false\n  }\n\n  let cellCount = 0\n  const table = findParentNodeClosestToPos(selection.ranges[0].$from, node => {\n    return node.type.name === 'table'\n  })\n\n  table?.node.descendants(node => {\n    if (node.type.name === 'table') {\n      return false\n    }\n\n    if (['tableCell', 'tableHeader'].includes(node.type.name)) {\n      cellCount += 1\n    }\n  })\n\n  const allCellsSelected = cellCount === selection.ranges.length\n\n  if (!allCellsSelected) {\n    return false\n  }\n\n  editor.commands.deleteTable()\n\n  return true\n}\n", "import {\n  callOrReturn, getExtensionField, mergeAttributes, Node, ParentConfig,\n} from '@tiptap/core'\nimport { TextSelection } from '@tiptap/pm/state'\nimport {\n  addColumnAfter,\n  addColumnBefore,\n  addRowAfter,\n  addRowBefore,\n  CellSelection,\n  columnResizing,\n  deleteColumn,\n  deleteRow,\n  deleteTable,\n  fixTables,\n  goToNextCell,\n  mergeCells,\n  setCellAttr,\n  splitCell,\n  tableEditing,\n  toggleHeader,\n  toggleHeaderCell,\n} from '@tiptap/pm/tables'\nimport { NodeView } from '@tiptap/pm/view'\n\nimport { TableView } from './TableView'\nimport { createTable } from './utilities/createTable'\nimport { deleteTableWhenAllCellsSelected } from './utilities/deleteTableWhenAllCellsSelected'\n\nexport interface TableOptions {\n  HTMLAttributes: Record<string, any>\n  resizable: boolean\n  handleWidth: number\n  cellMinWidth: number\n  View: NodeView\n  lastColumnResizable: boolean\n  allowTableNodeSelection: boolean\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    table: {\n      insertTable: (options?: {\n        rows?: number\n        cols?: number\n        withHeaderRow?: boolean\n      }) => ReturnType\n      addColumnBefore: () => ReturnType\n      addColumnAfter: () => ReturnType\n      deleteColumn: () => ReturnType\n      addRowBefore: () => ReturnType\n      addRowAfter: () => ReturnType\n      deleteRow: () => ReturnType\n      deleteTable: () => ReturnType\n      mergeCells: () => ReturnType\n      splitCell: () => ReturnType\n      toggleHeaderColumn: () => ReturnType\n      toggleHeaderRow: () => ReturnType\n      toggleHeaderCell: () => ReturnType\n      mergeOrSplit: () => ReturnType\n      setCellAttribute: (name: string, value: any) => ReturnType\n      goToNextCell: () => ReturnType\n      goToPreviousCell: () => ReturnType\n      fixTables: () => ReturnType\n      setCellSelection: (position: { anchorCell: number; headCell?: number }) => ReturnType\n    }\n  }\n\n  interface NodeConfig<Options, Storage> {\n    /**\n     * Table Role\n     */\n    tableRole?:\n      | string\n      | ((this: {\n          name: string\n          options: Options\n          storage: Storage\n          parent: ParentConfig<NodeConfig<Options>>['tableRole']\n        }) => string)\n  }\n}\n\nexport const Table = Node.create<TableOptions>({\n  name: 'table',\n\n  // @ts-ignore\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n      resizable: false,\n      handleWidth: 5,\n      cellMinWidth: 25,\n      // TODO: fix\n      View: TableView,\n      lastColumnResizable: true,\n      allowTableNodeSelection: false,\n    }\n  },\n\n  content: 'tableRow+',\n\n  tableRole: 'table',\n\n  isolating: true,\n\n  group: 'block',\n\n  parseHTML() {\n    return [{ tag: 'table' }]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['table', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), ['tbody', 0]]\n  },\n\n  addCommands() {\n    return {\n      insertTable:\n        ({ rows = 3, cols = 3, withHeaderRow = true } = {}) => ({ tr, dispatch, editor }) => {\n          const node = createTable(editor.schema, rows, cols, withHeaderRow)\n\n          if (dispatch) {\n            const offset = tr.selection.anchor + 1\n\n            tr.replaceSelectionWith(node)\n              .scrollIntoView()\n              .setSelection(TextSelection.near(tr.doc.resolve(offset)))\n          }\n\n          return true\n        },\n      addColumnBefore:\n        () => ({ state, dispatch }) => {\n          return addColumnBefore(state, dispatch)\n        },\n      addColumnAfter:\n        () => ({ state, dispatch }) => {\n          return addColumnAfter(state, dispatch)\n        },\n      deleteColumn:\n        () => ({ state, dispatch }) => {\n          return deleteColumn(state, dispatch)\n        },\n      addRowBefore:\n        () => ({ state, dispatch }) => {\n          return addRowBefore(state, dispatch)\n        },\n      addRowAfter:\n        () => ({ state, dispatch }) => {\n          return addRowAfter(state, dispatch)\n        },\n      deleteRow:\n        () => ({ state, dispatch }) => {\n          return deleteRow(state, dispatch)\n        },\n      deleteTable:\n        () => ({ state, dispatch }) => {\n          return deleteTable(state, dispatch)\n        },\n      mergeCells:\n        () => ({ state, dispatch }) => {\n          return mergeCells(state, dispatch)\n        },\n      splitCell:\n        () => ({ state, dispatch }) => {\n          return splitCell(state, dispatch)\n        },\n      toggleHeaderColumn:\n        () => ({ state, dispatch }) => {\n          return toggleHeader('column')(state, dispatch)\n        },\n      toggleHeaderRow:\n        () => ({ state, dispatch }) => {\n          return toggleHeader('row')(state, dispatch)\n        },\n      toggleHeaderCell:\n        () => ({ state, dispatch }) => {\n          return toggleHeaderCell(state, dispatch)\n        },\n      mergeOrSplit:\n        () => ({ state, dispatch }) => {\n          if (mergeCells(state, dispatch)) {\n            return true\n          }\n\n          return splitCell(state, dispatch)\n        },\n      setCellAttribute:\n        (name, value) => ({ state, dispatch }) => {\n          return setCellAttr(name, value)(state, dispatch)\n        },\n      goToNextCell:\n        () => ({ state, dispatch }) => {\n          return goToNextCell(1)(state, dispatch)\n        },\n      goToPreviousCell:\n        () => ({ state, dispatch }) => {\n          return goToNextCell(-1)(state, dispatch)\n        },\n      fixTables:\n        () => ({ state, dispatch }) => {\n          if (dispatch) {\n            fixTables(state)\n          }\n\n          return true\n        },\n      setCellSelection:\n        position => ({ tr, dispatch }) => {\n          if (dispatch) {\n            const selection = CellSelection.create(tr.doc, position.anchorCell, position.headCell)\n\n            // @ts-ignore\n            tr.setSelection(selection)\n          }\n\n          return true\n        },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      Tab: () => {\n        if (this.editor.commands.goToNextCell()) {\n          return true\n        }\n\n        if (!this.editor.can().addRowAfter()) {\n          return false\n        }\n\n        return this.editor.chain().addRowAfter().goToNextCell().run()\n      },\n      'Shift-Tab': () => this.editor.commands.goToPreviousCell(),\n      Backspace: deleteTableWhenAllCellsSelected,\n      'Mod-Backspace': deleteTableWhenAllCellsSelected,\n      Delete: deleteTableWhenAllCellsSelected,\n      'Mod-Delete': deleteTableWhenAllCellsSelected,\n    }\n  },\n\n  addProseMirrorPlugins() {\n    const isResizable = this.options.resizable && this.editor.isEditable\n\n    return [\n      ...(isResizable\n        ? [\n          columnResizing({\n            handleWidth: this.options.handleWidth,\n            cellMinWidth: this.options.cellMinWidth,\n            // @ts-ignore (incorrect type)\n            View: this.options.View,\n            // TODO: PR for @types/prosemirror-tables\n            // @ts-ignore (incorrect type)\n            lastColumnResizable: this.options.lastColumnResizable,\n          }),\n        ]\n        : []),\n      tableEditing({\n        allowTableNodeSelection: this.options.allowTableNodeSelection,\n      }),\n    ]\n  },\n\n  extendNodeSchema(extension) {\n    const context = {\n      name: extension.name,\n      options: extension.options,\n      storage: extension.storage,\n    }\n\n    return {\n      tableRole: callOrReturn(getExtensionField(extension, 'tableRole', context)),\n    }\n  },\n})\n", "import { mergeAttributes, Node, wrappingInputRule } from '@tiptap/core'\n\nexport interface BlockquoteOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    blockQuote: {\n      /**\n       * Set a blockquote node\n       */\n      setBlockquote: () => ReturnType,\n      /**\n       * Toggle a blockquote node\n       */\n      toggleBlockquote: () => ReturnType,\n      /**\n       * Unset a blockquote node\n       */\n      unsetBlockquote: () => ReturnType,\n    }\n  }\n}\n\nexport const inputRegex = /^\\s*>\\s$/\n\nexport const Blockquote = Node.create<BlockquoteOptions>({\n\n  name: 'blockquote',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  content: 'block+',\n\n  group: 'block',\n\n  defining: true,\n\n  parseHTML() {\n    return [\n      { tag: 'blockquote' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['blockquote', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setBlockquote: () => ({ commands }) => {\n        return commands.wrapIn(this.name)\n      },\n      toggleBlockquote: () => ({ commands }) => {\n        return commands.toggleWrap(this.name)\n      },\n      unsetBlockquote: () => ({ commands }) => {\n        return commands.lift(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-b': () => this.editor.commands.toggleBlockquote(),\n    }\n  },\n\n  addInputRules() {\n    return [\n      wrappingInputRule({\n        find: inputRegex,\n        type: this.type,\n      }),\n    ]\n  },\n})\n", "import {\n  Mark,\n  markInputRule,\n  markPasteRule,\n  mergeAttributes,\n} from '@tiptap/core'\n\nexport interface BoldOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    bold: {\n      /**\n       * Set a bold mark\n       */\n      setBold: () => ReturnType,\n      /**\n       * Toggle a bold mark\n       */\n      toggleBold: () => ReturnType,\n      /**\n       * Unset a bold mark\n       */\n      unsetBold: () => ReturnType,\n    }\n  }\n}\n\nexport const starInputRegex = /(?:^|\\s)((?:\\*\\*)((?:[^*]+))(?:\\*\\*))$/\nexport const starPasteRegex = /(?:^|\\s)((?:\\*\\*)((?:[^*]+))(?:\\*\\*))/g\nexport const underscoreInputRegex = /(?:^|\\s)((?:__)((?:[^__]+))(?:__))$/\nexport const underscorePasteRegex = /(?:^|\\s)((?:__)((?:[^__]+))(?:__))/g\n\nexport const Bold = Mark.create<BoldOptions>({\n  name: 'bold',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'strong',\n      },\n      {\n        tag: 'b',\n        getAttrs: node => (node as HTMLElement).style.fontWeight !== 'normal' && null,\n      },\n      {\n        style: 'font-weight',\n        getAttrs: value => /^(bold(er)?|[5-9]\\d{2,})$/.test(value as string) && null,\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['strong', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setBold: () => ({ commands }) => {\n        return commands.setMark(this.name)\n      },\n      toggleBold: () => ({ commands }) => {\n        return commands.toggleMark(this.name)\n      },\n      unsetBold: () => ({ commands }) => {\n        return commands.unsetMark(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-b': () => this.editor.commands.toggleBold(),\n      'Mod-B': () => this.editor.commands.toggleBold(),\n    }\n  },\n\n  addInputRules() {\n    return [\n      markInputRule({\n        find: starInputRegex,\n        type: this.type,\n      }),\n      markInputRule({\n        find: underscoreInputRegex,\n        type: this.type,\n      }),\n    ]\n  },\n\n  addPasteRules() {\n    return [\n      markPasteRule({\n        find: starPasteRegex,\n        type: this.type,\n      }),\n      markPasteRule({\n        find: underscorePasteRegex,\n        type: this.type,\n      }),\n    ]\n  },\n})\n", "import { mergeAttributes, Node } from '@tiptap/core'\n\nexport interface ListItemOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\nexport const ListItem = Node.create<ListItemOptions>({\n  name: 'listItem',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  content: 'paragraph block*',\n\n  defining: true,\n\n  parseHTML() {\n    return [\n      {\n        tag: 'li',\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['li', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      Enter: () => this.editor.commands.splitListItem(this.name),\n      Tab: () => this.editor.commands.sinkListItem(this.name),\n      'Shift-Tab': () => this.editor.commands.liftListItem(this.name),\n    }\n  },\n})\n", "import {\n  getMarkAttributes,\n  Mark,\n  mergeAttributes,\n} from '@tiptap/core'\n\nexport interface TextStyleOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    textStyle: {\n      /**\n       * Remove spans without inline style attributes.\n       */\n      removeEmptyTextStyle: () => ReturnType,\n    }\n  }\n}\n\nexport const TextStyle = Mark.create<TextStyleOptions>({\n  name: 'textStyle',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'span',\n        getAttrs: element => {\n          const hasStyles = (element as HTMLElement).hasAttribute('style')\n\n          if (!hasStyles) {\n            return false\n          }\n\n          return {}\n        },\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['span', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      removeEmptyTextStyle: () => ({ state, commands }) => {\n        const attributes = getMarkAttributes(state, this.type)\n        const hasStyles = Object.entries(attributes).some(([, value]) => !!value)\n\n        if (hasStyles) {\n          return true\n        }\n\n        return commands.unsetMark(this.name)\n      },\n    }\n  },\n\n})\n", "import { mergeAttributes, Node, wrappingInputRule } from '@tiptap/core'\n\nimport ListItem from '../../extension-list-item/src'\nimport TextStyle from '../../extension-text-style/src'\n\nexport interface BulletListOptions {\n  itemTypeName: string,\n  HTMLAttributes: Record<string, any>,\n  keepMarks: boolean,\n  keepAttributes: boolean,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    bulletList: {\n      /**\n       * Toggle a bullet list\n       */\n      toggleBulletList: () => ReturnType,\n    }\n  }\n}\n\nexport const inputRegex = /^\\s*([-+*])\\s$/\n\nexport const BulletList = Node.create<BulletListOptions>({\n  name: 'bulletList',\n\n  addOptions() {\n    return {\n      itemTypeName: 'listItem',\n      HTMLAttributes: {},\n      keepMarks: false,\n      keepAttributes: false,\n    }\n  },\n\n  group: 'block list',\n\n  content() {\n    return `${this.options.itemTypeName}+`\n  },\n\n  parseHTML() {\n    return [\n      { tag: 'ul' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['ul', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      toggleBulletList: () => ({ commands, chain }) => {\n        if (this.options.keepAttributes) {\n          return chain().toggleList(this.name, this.options.itemTypeName, this.options.keepMarks).updateAttributes(ListItem.name, this.editor.getAttributes(TextStyle.name)).run()\n        }\n        return commands.toggleList(this.name, this.options.itemTypeName, this.options.keepMarks)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-8': () => this.editor.commands.toggleBulletList(),\n    }\n  },\n\n  addInputRules() {\n    let inputRule = wrappingInputRule({\n      find: inputRegex,\n      type: this.type,\n    })\n\n    if (this.options.keepMarks || this.options.keepAttributes) {\n      inputRule = wrappingInputRule({\n        find: inputRegex,\n        type: this.type,\n        keepMarks: this.options.keepMarks,\n        keepAttributes: this.options.keepAttributes,\n        getAttributes: () => { return this.editor.getAttributes(TextStyle.name) },\n        editor: this.editor,\n      })\n    }\n    return [\n      inputRule,\n    ]\n  },\n})\n", "import {\n  Mark,\n  markInputRule,\n  markPasteRule,\n  mergeAttributes,\n} from '@tiptap/core'\n\nexport interface CodeOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    code: {\n      /**\n       * Set a code mark\n       */\n      setCode: () => ReturnType,\n      /**\n       * Toggle inline code\n       */\n      toggleCode: () => ReturnType,\n      /**\n       * Unset a code mark\n       */\n      unsetCode: () => ReturnType,\n    }\n  }\n}\n\nexport const inputRegex = /(?:^|\\s)((?:`)((?:[^`]+))(?:`))$/\nexport const pasteRegex = /(?:^|\\s)((?:`)((?:[^`]+))(?:`))/g\n\nexport const Code = Mark.create<CodeOptions>({\n  name: 'code',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  excludes: '_',\n\n  code: true,\n\n  exitable: true,\n\n  parseHTML() {\n    return [\n      { tag: 'code' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['code', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setCode: () => ({ commands }) => {\n        return commands.setMark(this.name)\n      },\n      toggleCode: () => ({ commands }) => {\n        return commands.toggleMark(this.name)\n      },\n      unsetCode: () => ({ commands }) => {\n        return commands.unsetMark(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-e': () => this.editor.commands.toggleCode(),\n    }\n  },\n\n  addInputRules() {\n    return [\n      markInputRule({\n        find: inputRegex,\n        type: this.type,\n      }),\n    ]\n  },\n\n  addPasteRules() {\n    return [\n      markPasteRule({\n        find: pasteRegex,\n        type: this.type,\n      }),\n    ]\n  },\n})\n", "import { mergeAttributes, Node, textblockTypeInputRule } from '@tiptap/core'\nimport { Plugin, PluginKey, TextSelection } from '@tiptap/pm/state'\n\nexport interface CodeBlockOptions {\n  /**\n   * Adds a prefix to language classes that are applied to code tags.\n   * Defaults to `'language-'`.\n   */\n  languageClassPrefix: string\n  /**\n   * Define whether the node should be exited on triple enter.\n   * Defaults to `true`.\n   */\n  exitOnTripleEnter: boolean\n  /**\n   * Define whether the node should be exited on arrow down if there is no node after it.\n   * Defaults to `true`.\n   */\n  exitOnArrowDown: boolean\n  /**\n   * Custom HTML attributes that should be added to the rendered HTML tag.\n   */\n  HTMLAttributes: Record<string, any>\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    codeBlock: {\n      /**\n       * Set a code block\n       */\n      setCodeBlock: (attributes?: { language: string }) => ReturnType\n      /**\n       * Toggle a code block\n       */\n      toggleCodeBlock: (attributes?: { language: string }) => ReturnType\n    }\n  }\n}\n\nexport const backtickInputRegex = /^```([a-z]+)?[\\s\\n]$/\nexport const tildeInputRegex = /^~~~([a-z]+)?[\\s\\n]$/\n\nexport const CodeBlock = Node.create<CodeBlockOptions>({\n  name: 'codeBlock',\n\n  addOptions() {\n    return {\n      languageClassPrefix: 'language-',\n      exitOnTripleEnter: true,\n      exitOnArrowDown: true,\n      HTMLAttributes: {},\n    }\n  },\n\n  content: 'text*',\n\n  marks: '',\n\n  group: 'block',\n\n  code: true,\n\n  defining: true,\n\n  addAttributes() {\n    return {\n      language: {\n        default: null,\n        parseHTML: element => {\n          const { languageClassPrefix } = this.options\n          const classNames = [...(element.firstElementChild?.classList || [])]\n          const languages = classNames\n            .filter(className => className.startsWith(languageClassPrefix))\n            .map(className => className.replace(languageClassPrefix, ''))\n          const language = languages[0]\n\n          if (!language) {\n            return null\n          }\n\n          return language\n        },\n        rendered: false,\n      },\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'pre',\n        preserveWhitespace: 'full',\n      },\n    ]\n  },\n\n  renderHTML({ node, HTMLAttributes }) {\n    return [\n      'pre',\n      mergeAttributes(this.options.HTMLAttributes, HTMLAttributes),\n      [\n        'code',\n        {\n          class: node.attrs.language\n            ? this.options.languageClassPrefix + node.attrs.language\n            : null,\n        },\n        0,\n      ],\n    ]\n  },\n\n  addCommands() {\n    return {\n      setCodeBlock:\n        attributes => ({ commands }) => {\n          return commands.setNode(this.name, attributes)\n        },\n      toggleCodeBlock:\n        attributes => ({ commands }) => {\n          return commands.toggleNode(this.name, 'paragraph', attributes)\n        },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Alt-c': () => this.editor.commands.toggleCodeBlock(),\n\n      // remove code block when at start of document or code block is empty\n      Backspace: () => {\n        const { empty, $anchor } = this.editor.state.selection\n        const isAtStart = $anchor.pos === 1\n\n        if (!empty || $anchor.parent.type.name !== this.name) {\n          return false\n        }\n\n        if (isAtStart || !$anchor.parent.textContent.length) {\n          return this.editor.commands.clearNodes()\n        }\n\n        return false\n      },\n\n      // exit node on triple enter\n      Enter: ({ editor }) => {\n        if (!this.options.exitOnTripleEnter) {\n          return false\n        }\n\n        const { state } = editor\n        const { selection } = state\n        const { $from, empty } = selection\n\n        if (!empty || $from.parent.type !== this.type) {\n          return false\n        }\n\n        const isAtEnd = $from.parentOffset === $from.parent.nodeSize - 2\n        const endsWithDoubleNewline = $from.parent.textContent.endsWith('\\n\\n')\n\n        if (!isAtEnd || !endsWithDoubleNewline) {\n          return false\n        }\n\n        return editor\n          .chain()\n          .command(({ tr }) => {\n            tr.delete($from.pos - 2, $from.pos)\n\n            return true\n          })\n          .exitCode()\n          .run()\n      },\n\n      // exit node on arrow down\n      ArrowDown: ({ editor }) => {\n        if (!this.options.exitOnArrowDown) {\n          return false\n        }\n\n        const { state } = editor\n        const { selection, doc } = state\n        const { $from, empty } = selection\n\n        if (!empty || $from.parent.type !== this.type) {\n          return false\n        }\n\n        const isAtEnd = $from.parentOffset === $from.parent.nodeSize - 2\n\n        if (!isAtEnd) {\n          return false\n        }\n\n        const after = $from.after()\n\n        if (after === undefined) {\n          return false\n        }\n\n        const nodeAfter = doc.nodeAt(after)\n\n        if (nodeAfter) {\n          return false\n        }\n\n        return editor.commands.exitCode()\n      },\n    }\n  },\n\n  addInputRules() {\n    return [\n      textblockTypeInputRule({\n        find: backtickInputRegex,\n        type: this.type,\n        getAttributes: match => ({\n          language: match[1],\n        }),\n      }),\n      textblockTypeInputRule({\n        find: tildeInputRegex,\n        type: this.type,\n        getAttributes: match => ({\n          language: match[1],\n        }),\n      }),\n    ]\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      // this plugin creates a code block for pasted content from VS Code\n      // we can also detect the copied code language\n      new Plugin({\n        key: new PluginKey('codeBlockVSCodeHandler'),\n        props: {\n          handlePaste: (view, event) => {\n            if (!event.clipboardData) {\n              return false\n            }\n\n            // don\u2019t create a new code block within code blocks\n            if (this.editor.isActive(this.type.name)) {\n              return false\n            }\n\n            const text = event.clipboardData.getData('text/plain')\n            const vscode = event.clipboardData.getData('vscode-editor-data')\n            const vscodeData = vscode ? JSON.parse(vscode) : undefined\n            const language = vscodeData?.mode\n\n            if (!text || !language) {\n              return false\n            }\n\n            const { tr } = view.state\n\n            // create an empty code block\n            tr.replaceSelectionWith(this.type.create({ language }))\n\n            // put cursor inside the newly created code block\n            tr.setSelection(TextSelection.near(tr.doc.resolve(Math.max(0, tr.selection.from - 2))))\n\n            // add text to code block\n            // strip carriage return chars from text pasted as code\n            // see: https://github.com/ProseMirror/prosemirror-view/commit/a50a6bcceb4ce52ac8fcc6162488d8875613aacd\n            tr.insertText(text.replace(/\\r\\n?/g, '\\n'))\n\n            // store meta information\n            // this is useful for other plugins that depends on the paste event\n            // like the paste rule plugin\n            tr.setMeta('paste', true)\n\n            view.dispatch(tr)\n\n            return true\n          },\n        },\n      }),\n    ]\n  },\n})\n", "import { Node } from '@tiptap/core'\n\nexport const Document = Node.create({\n  name: 'doc',\n  topNode: true,\n  content: 'block+',\n})\n", "import { Plugin } from 'prosemirror-state';\nimport { dropPoint } from 'prosemirror-transform';\n\n/**\nCreate a plugin that, when added to a ProseMirror instance,\ncauses a decoration to show up at the drop position when something\nis dragged over the editor.\n\nNodes may add a `disableDropCursor` property to their spec to\ncontrol the showing of a drop cursor inside them. This may be a\nboolean or a function, which will be called with a view and a\nposition, and should return a boolean.\n*/\nfunction dropCursor(options = {}) {\n    return new Plugin({\n        view(editorView) { return new DropCursorView(editorView, options); }\n    });\n}\nclass DropCursorView {\n    constructor(editorView, options) {\n        var _a;\n        this.editorView = editorView;\n        this.cursorPos = null;\n        this.element = null;\n        this.timeout = -1;\n        this.width = (_a = options.width) !== null && _a !== void 0 ? _a : 1;\n        this.color = options.color === false ? undefined : (options.color || \"black\");\n        this.class = options.class;\n        this.handlers = [\"dragover\", \"dragend\", \"drop\", \"dragleave\"].map(name => {\n            let handler = (e) => { this[name](e); };\n            editorView.dom.addEventListener(name, handler);\n            return { name, handler };\n        });\n    }\n    destroy() {\n        this.handlers.forEach(({ name, handler }) => this.editorView.dom.removeEventListener(name, handler));\n    }\n    update(editorView, prevState) {\n        if (this.cursorPos != null && prevState.doc != editorView.state.doc) {\n            if (this.cursorPos > editorView.state.doc.content.size)\n                this.setCursor(null);\n            else\n                this.updateOverlay();\n        }\n    }\n    setCursor(pos) {\n        if (pos == this.cursorPos)\n            return;\n        this.cursorPos = pos;\n        if (pos == null) {\n            this.element.parentNode.removeChild(this.element);\n            this.element = null;\n        }\n        else {\n            this.updateOverlay();\n        }\n    }\n    updateOverlay() {\n        let $pos = this.editorView.state.doc.resolve(this.cursorPos);\n        let isBlock = !$pos.parent.inlineContent, rect;\n        if (isBlock) {\n            let before = $pos.nodeBefore, after = $pos.nodeAfter;\n            if (before || after) {\n                let node = this.editorView.nodeDOM(this.cursorPos - (before ? before.nodeSize : 0));\n                if (node) {\n                    let nodeRect = node.getBoundingClientRect();\n                    let top = before ? nodeRect.bottom : nodeRect.top;\n                    if (before && after)\n                        top = (top + this.editorView.nodeDOM(this.cursorPos).getBoundingClientRect().top) / 2;\n                    rect = { left: nodeRect.left, right: nodeRect.right, top: top - this.width / 2, bottom: top + this.width / 2 };\n                }\n            }\n        }\n        if (!rect) {\n            let coords = this.editorView.coordsAtPos(this.cursorPos);\n            rect = { left: coords.left - this.width / 2, right: coords.left + this.width / 2, top: coords.top, bottom: coords.bottom };\n        }\n        let parent = this.editorView.dom.offsetParent;\n        if (!this.element) {\n            this.element = parent.appendChild(document.createElement(\"div\"));\n            if (this.class)\n                this.element.className = this.class;\n            this.element.style.cssText = \"position: absolute; z-index: 50; pointer-events: none;\";\n            if (this.color) {\n                this.element.style.backgroundColor = this.color;\n            }\n        }\n        this.element.classList.toggle(\"prosemirror-dropcursor-block\", isBlock);\n        this.element.classList.toggle(\"prosemirror-dropcursor-inline\", !isBlock);\n        let parentLeft, parentTop;\n        if (!parent || parent == document.body && getComputedStyle(parent).position == \"static\") {\n            parentLeft = -pageXOffset;\n            parentTop = -pageYOffset;\n        }\n        else {\n            let rect = parent.getBoundingClientRect();\n            parentLeft = rect.left - parent.scrollLeft;\n            parentTop = rect.top - parent.scrollTop;\n        }\n        this.element.style.left = (rect.left - parentLeft) + \"px\";\n        this.element.style.top = (rect.top - parentTop) + \"px\";\n        this.element.style.width = (rect.right - rect.left) + \"px\";\n        this.element.style.height = (rect.bottom - rect.top) + \"px\";\n    }\n    scheduleRemoval(timeout) {\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => this.setCursor(null), timeout);\n    }\n    dragover(event) {\n        if (!this.editorView.editable)\n            return;\n        let pos = this.editorView.posAtCoords({ left: event.clientX, top: event.clientY });\n        let node = pos && pos.inside >= 0 && this.editorView.state.doc.nodeAt(pos.inside);\n        let disableDropCursor = node && node.type.spec.disableDropCursor;\n        let disabled = typeof disableDropCursor == \"function\" ? disableDropCursor(this.editorView, pos, event) : disableDropCursor;\n        if (pos && !disabled) {\n            let target = pos.pos;\n            if (this.editorView.dragging && this.editorView.dragging.slice) {\n                let point = dropPoint(this.editorView.state.doc, target, this.editorView.dragging.slice);\n                if (point != null)\n                    target = point;\n            }\n            this.setCursor(target);\n            this.scheduleRemoval(5000);\n        }\n    }\n    dragend() {\n        this.scheduleRemoval(20);\n    }\n    drop() {\n        this.scheduleRemoval(20);\n    }\n    dragleave(event) {\n        if (event.target == this.editorView.dom || !this.editorView.dom.contains(event.relatedTarget))\n            this.setCursor(null);\n    }\n}\n\nexport { dropCursor };\n", "import { Extension } from '@tiptap/core'\nimport { dropCursor } from '@tiptap/pm/dropcursor'\n\nexport interface DropcursorOptions {\n  color: string | undefined,\n  width: number | undefined,\n  class: string | undefined,\n}\n\nexport const Dropcursor = Extension.create<DropcursorOptions>({\n  name: 'dropCursor',\n\n  addOptions() {\n    return {\n      color: 'currentColor',\n      width: 1,\n      class: undefined,\n    }\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      dropCursor(this.options),\n    ]\n  },\n})\n", "import { keydownHandler } from 'prosemirror-keymap';\nimport { Selection, NodeSelection, TextSelection, Plugin } from 'prosemirror-state';\nimport { Slice, Fragment } from 'prosemirror-model';\nimport { DecorationSet, Decoration } from 'prosemirror-view';\n\n/**\nGap cursor selections are represented using this class. Its\n`$anchor` and `$head` properties both point at the cursor position.\n*/\nclass GapCursor extends Selection {\n    /**\n    Create a gap cursor.\n    */\n    constructor($pos) {\n        super($pos, $pos);\n    }\n    map(doc, mapping) {\n        let $pos = doc.resolve(mapping.map(this.head));\n        return GapCursor.valid($pos) ? new GapCursor($pos) : Selection.near($pos);\n    }\n    content() { return Slice.empty; }\n    eq(other) {\n        return other instanceof GapCursor && other.head == this.head;\n    }\n    toJSON() {\n        return { type: \"gapcursor\", pos: this.head };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(doc, json) {\n        if (typeof json.pos != \"number\")\n            throw new RangeError(\"Invalid input for GapCursor.fromJSON\");\n        return new GapCursor(doc.resolve(json.pos));\n    }\n    /**\n    @internal\n    */\n    getBookmark() { return new GapBookmark(this.anchor); }\n    /**\n    @internal\n    */\n    static valid($pos) {\n        let parent = $pos.parent;\n        if (parent.isTextblock || !closedBefore($pos) || !closedAfter($pos))\n            return false;\n        let override = parent.type.spec.allowGapCursor;\n        if (override != null)\n            return override;\n        let deflt = parent.contentMatchAt($pos.index()).defaultType;\n        return deflt && deflt.isTextblock;\n    }\n    /**\n    @internal\n    */\n    static findGapCursorFrom($pos, dir, mustMove = false) {\n        search: for (;;) {\n            if (!mustMove && GapCursor.valid($pos))\n                return $pos;\n            let pos = $pos.pos, next = null;\n            // Scan up from this position\n            for (let d = $pos.depth;; d--) {\n                let parent = $pos.node(d);\n                if (dir > 0 ? $pos.indexAfter(d) < parent.childCount : $pos.index(d) > 0) {\n                    next = parent.child(dir > 0 ? $pos.indexAfter(d) : $pos.index(d) - 1);\n                    break;\n                }\n                else if (d == 0) {\n                    return null;\n                }\n                pos += dir;\n                let $cur = $pos.doc.resolve(pos);\n                if (GapCursor.valid($cur))\n                    return $cur;\n            }\n            // And then down into the next node\n            for (;;) {\n                let inside = dir > 0 ? next.firstChild : next.lastChild;\n                if (!inside) {\n                    if (next.isAtom && !next.isText && !NodeSelection.isSelectable(next)) {\n                        $pos = $pos.doc.resolve(pos + next.nodeSize * dir);\n                        mustMove = false;\n                        continue search;\n                    }\n                    break;\n                }\n                next = inside;\n                pos += dir;\n                let $cur = $pos.doc.resolve(pos);\n                if (GapCursor.valid($cur))\n                    return $cur;\n            }\n            return null;\n        }\n    }\n}\nGapCursor.prototype.visible = false;\nGapCursor.findFrom = GapCursor.findGapCursorFrom;\nSelection.jsonID(\"gapcursor\", GapCursor);\nclass GapBookmark {\n    constructor(pos) {\n        this.pos = pos;\n    }\n    map(mapping) {\n        return new GapBookmark(mapping.map(this.pos));\n    }\n    resolve(doc) {\n        let $pos = doc.resolve(this.pos);\n        return GapCursor.valid($pos) ? new GapCursor($pos) : Selection.near($pos);\n    }\n}\nfunction closedBefore($pos) {\n    for (let d = $pos.depth; d >= 0; d--) {\n        let index = $pos.index(d), parent = $pos.node(d);\n        // At the start of this parent, look at next one\n        if (index == 0) {\n            if (parent.type.spec.isolating)\n                return true;\n            continue;\n        }\n        // See if the node before (or its first ancestor) is closed\n        for (let before = parent.child(index - 1);; before = before.lastChild) {\n            if ((before.childCount == 0 && !before.inlineContent) || before.isAtom || before.type.spec.isolating)\n                return true;\n            if (before.inlineContent)\n                return false;\n        }\n    }\n    // Hit start of document\n    return true;\n}\nfunction closedAfter($pos) {\n    for (let d = $pos.depth; d >= 0; d--) {\n        let index = $pos.indexAfter(d), parent = $pos.node(d);\n        if (index == parent.childCount) {\n            if (parent.type.spec.isolating)\n                return true;\n            continue;\n        }\n        for (let after = parent.child(index);; after = after.firstChild) {\n            if ((after.childCount == 0 && !after.inlineContent) || after.isAtom || after.type.spec.isolating)\n                return true;\n            if (after.inlineContent)\n                return false;\n        }\n    }\n    return true;\n}\n\n/**\nCreate a gap cursor plugin. When enabled, this will capture clicks\nnear and arrow-key-motion past places that don't have a normally\nselectable position nearby, and create a gap cursor selection for\nthem. The cursor is drawn as an element with class\n`ProseMirror-gapcursor`. You can either include\n`style/gapcursor.css` from the package's directory or add your own\nstyles to make it visible.\n*/\nfunction gapCursor() {\n    return new Plugin({\n        props: {\n            decorations: drawGapCursor,\n            createSelectionBetween(_view, $anchor, $head) {\n                return $anchor.pos == $head.pos && GapCursor.valid($head) ? new GapCursor($head) : null;\n            },\n            handleClick,\n            handleKeyDown,\n            handleDOMEvents: { beforeinput: beforeinput }\n        }\n    });\n}\nconst handleKeyDown = keydownHandler({\n    \"ArrowLeft\": arrow(\"horiz\", -1),\n    \"ArrowRight\": arrow(\"horiz\", 1),\n    \"ArrowUp\": arrow(\"vert\", -1),\n    \"ArrowDown\": arrow(\"vert\", 1)\n});\nfunction arrow(axis, dir) {\n    const dirStr = axis == \"vert\" ? (dir > 0 ? \"down\" : \"up\") : (dir > 0 ? \"right\" : \"left\");\n    return function (state, dispatch, view) {\n        let sel = state.selection;\n        let $start = dir > 0 ? sel.$to : sel.$from, mustMove = sel.empty;\n        if (sel instanceof TextSelection) {\n            if (!view.endOfTextblock(dirStr) || $start.depth == 0)\n                return false;\n            mustMove = false;\n            $start = state.doc.resolve(dir > 0 ? $start.after() : $start.before());\n        }\n        let $found = GapCursor.findGapCursorFrom($start, dir, mustMove);\n        if (!$found)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.setSelection(new GapCursor($found)));\n        return true;\n    };\n}\nfunction handleClick(view, pos, event) {\n    if (!view || !view.editable)\n        return false;\n    let $pos = view.state.doc.resolve(pos);\n    if (!GapCursor.valid($pos))\n        return false;\n    let clickPos = view.posAtCoords({ left: event.clientX, top: event.clientY });\n    if (clickPos && clickPos.inside > -1 && NodeSelection.isSelectable(view.state.doc.nodeAt(clickPos.inside)))\n        return false;\n    view.dispatch(view.state.tr.setSelection(new GapCursor($pos)));\n    return true;\n}\n// This is a hack that, when a composition starts while a gap cursor\n// is active, quickly creates an inline context for the composition to\n// happen in, to avoid it being aborted by the DOM selection being\n// moved into a valid position.\nfunction beforeinput(view, event) {\n    if (event.inputType != \"insertCompositionText\" || !(view.state.selection instanceof GapCursor))\n        return false;\n    let { $from } = view.state.selection;\n    let insert = $from.parent.contentMatchAt($from.index()).findWrapping(view.state.schema.nodes.text);\n    if (!insert)\n        return false;\n    let frag = Fragment.empty;\n    for (let i = insert.length - 1; i >= 0; i--)\n        frag = Fragment.from(insert[i].createAndFill(null, frag));\n    let tr = view.state.tr.replace($from.pos, $from.pos, new Slice(frag, 0, 0));\n    tr.setSelection(TextSelection.near(tr.doc.resolve($from.pos + 1)));\n    view.dispatch(tr);\n    return false;\n}\nfunction drawGapCursor(state) {\n    if (!(state.selection instanceof GapCursor))\n        return null;\n    let node = document.createElement(\"div\");\n    node.className = \"ProseMirror-gapcursor\";\n    return DecorationSet.create(state.doc, [Decoration.widget(state.selection.head, node, { key: \"gapcursor\" })]);\n}\n\nexport { GapCursor, gapCursor };\n", "import {\n  callOrReturn,\n  Extension,\n  getExtensionField,\n  ParentConfig,\n} from '@tiptap/core'\nimport { gapCursor } from '@tiptap/pm/gapcursor'\n\ndeclare module '@tiptap/core' {\n  interface NodeConfig<Options, Storage> {\n    /**\n     * Allow gap cursor\n     */\n    allowGapCursor?:\n      | boolean\n      | null\n      | ((this: {\n        name: string,\n        options: Options,\n        storage: Storage,\n        parent: ParentConfig<NodeConfig<Options>>['allowGapCursor'],\n      }) => boolean | null),\n  }\n}\n\nexport const Gapcursor = Extension.create({\n  name: 'gapCursor',\n\n  addProseMirrorPlugins() {\n    return [\n      gapCursor(),\n    ]\n  },\n\n  extendNodeSchema(extension) {\n    const context = {\n      name: extension.name,\n      options: extension.options,\n      storage: extension.storage,\n    }\n\n    return {\n      allowGapCursor: callOrReturn(getExtensionField(extension, 'allowGapCursor', context)) ?? null,\n    }\n  },\n})\n", "import { mergeAttributes, Node } from '@tiptap/core'\n\nexport interface HardBreakOptions {\n  keepMarks: boolean,\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    hardBreak: {\n      /**\n       * Add a hard break\n       */\n      setHardBreak: () => ReturnType,\n    }\n  }\n}\n\nexport const HardBreak = Node.create<HardBreakOptions>({\n  name: 'hardBreak',\n\n  addOptions() {\n    return {\n      keepMarks: true,\n      HTMLAttributes: {},\n    }\n  },\n\n  inline: true,\n\n  group: 'inline',\n\n  selectable: false,\n\n  parseHTML() {\n    return [\n      { tag: 'br' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['br', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)]\n  },\n\n  renderText() {\n    return '\\n'\n  },\n\n  addCommands() {\n    return {\n      setHardBreak: () => ({\n        commands,\n        chain,\n        state,\n        editor,\n      }) => {\n        return commands.first([\n          () => commands.exitCode(),\n          () => commands.command(() => {\n            const { selection, storedMarks } = state\n\n            if (selection.$from.parent.type.spec.isolating) {\n              return false\n            }\n\n            const { keepMarks } = this.options\n            const { splittableMarks } = editor.extensionManager\n            const marks = storedMarks\n              || (selection.$to.parentOffset && selection.$from.marks())\n\n            return chain()\n              .insertContent({ type: this.name })\n              .command(({ tr, dispatch }) => {\n                if (dispatch && marks && keepMarks) {\n                  const filteredMarks = marks\n                    .filter(mark => splittableMarks.includes(mark.type.name))\n\n                  tr.ensureMarks(filteredMarks)\n                }\n\n                return true\n              })\n              .run()\n          }),\n        ])\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Enter': () => this.editor.commands.setHardBreak(),\n      'Shift-Enter': () => this.editor.commands.setHardBreak(),\n    }\n  },\n})\n", "import { mergeAttributes, Node, textblockTypeInputRule } from '@tiptap/core'\n\nexport type Level = 1 | 2 | 3 | 4 | 5 | 6\n\nexport interface HeadingOptions {\n  levels: Level[],\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    heading: {\n      /**\n       * Set a heading node\n       */\n      setHeading: (attributes: { level: Level }) => ReturnType,\n      /**\n       * Toggle a heading node\n       */\n      toggleHeading: (attributes: { level: Level }) => ReturnType,\n    }\n  }\n}\n\nexport const Heading = Node.create<HeadingOptions>({\n  name: 'heading',\n\n  addOptions() {\n    return {\n      levels: [1, 2, 3, 4, 5, 6],\n      HTMLAttributes: {},\n    }\n  },\n\n  content: 'inline*',\n\n  group: 'block',\n\n  defining: true,\n\n  addAttributes() {\n    return {\n      level: {\n        default: 1,\n        rendered: false,\n      },\n    }\n  },\n\n  parseHTML() {\n    return this.options.levels\n      .map((level: Level) => ({\n        tag: `h${level}`,\n        attrs: { level },\n      }))\n  },\n\n  renderHTML({ node, HTMLAttributes }) {\n    const hasLevel = this.options.levels.includes(node.attrs.level)\n    const level = hasLevel\n      ? node.attrs.level\n      : this.options.levels[0]\n\n    return [`h${level}`, mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setHeading: attributes => ({ commands }) => {\n        if (!this.options.levels.includes(attributes.level)) {\n          return false\n        }\n\n        return commands.setNode(this.name, attributes)\n      },\n      toggleHeading: attributes => ({ commands }) => {\n        if (!this.options.levels.includes(attributes.level)) {\n          return false\n        }\n\n        return commands.toggleNode(this.name, 'paragraph', attributes)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return this.options.levels.reduce((items, level) => ({\n      ...items,\n      ...{\n        [`Mod-Alt-${level}`]: () => this.editor.commands.toggleHeading({ level }),\n      },\n    }), {})\n  },\n\n  addInputRules() {\n    return this.options.levels.map(level => {\n      return textblockTypeInputRule({\n        find: new RegExp(`^(#{1,${level}})\\\\s$`),\n        type: this.type,\n        getAttributes: {\n          level,\n        },\n      })\n    })\n  },\n})\n", "var GOOD_LEAF_SIZE = 200;\n\n// :: class<T> A rope sequence is a persistent sequence data structure\n// that supports appending, prepending, and slicing without doing a\n// full copy. It is represented as a mostly-balanced tree.\nvar RopeSequence = function RopeSequence () {};\n\nRopeSequence.prototype.append = function append (other) {\n  if (!other.length) { return this }\n  other = RopeSequence.from(other);\n\n  return (!this.length && other) ||\n    (other.length < GOOD_LEAF_SIZE && this.leafAppend(other)) ||\n    (this.length < GOOD_LEAF_SIZE && other.leafPrepend(this)) ||\n    this.appendInner(other)\n};\n\n// :: (union<[T], RopeSequence<T>>) \u2192 RopeSequence<T>\n// Prepend an array or other rope to this one, returning a new rope.\nRopeSequence.prototype.prepend = function prepend (other) {\n  if (!other.length) { return this }\n  return RopeSequence.from(other).append(this)\n};\n\nRopeSequence.prototype.appendInner = function appendInner (other) {\n  return new Append(this, other)\n};\n\n// :: (?number, ?number) \u2192 RopeSequence<T>\n// Create a rope repesenting a sub-sequence of this rope.\nRopeSequence.prototype.slice = function slice (from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  if (from >= to) { return RopeSequence.empty }\n  return this.sliceInner(Math.max(0, from), Math.min(this.length, to))\n};\n\n// :: (number) \u2192 T\n// Retrieve the element at the given position from this rope.\nRopeSequence.prototype.get = function get (i) {\n  if (i < 0 || i >= this.length) { return undefined }\n  return this.getInner(i)\n};\n\n// :: ((element: T, index: number) \u2192 ?bool, ?number, ?number)\n// Call the given function for each element between the given\n// indices. This tends to be more efficient than looping over the\n// indices and calling `get`, because it doesn't have to descend the\n// tree for every element.\nRopeSequence.prototype.forEach = function forEach (f, from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  if (from <= to)\n    { this.forEachInner(f, from, to, 0); }\n  else\n    { this.forEachInvertedInner(f, from, to, 0); }\n};\n\n// :: ((element: T, index: number) \u2192 U, ?number, ?number) \u2192 [U]\n// Map the given functions over the elements of the rope, producing\n// a flat array.\nRopeSequence.prototype.map = function map (f, from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  var result = [];\n  this.forEach(function (elt, i) { return result.push(f(elt, i)); }, from, to);\n  return result\n};\n\n// :: (?union<[T], RopeSequence<T>>) \u2192 RopeSequence<T>\n// Create a rope representing the given array, or return the rope\n// itself if a rope was given.\nRopeSequence.from = function from (values) {\n  if (values instanceof RopeSequence) { return values }\n  return values && values.length ? new Leaf(values) : RopeSequence.empty\n};\n\nvar Leaf = /*@__PURE__*/(function (RopeSequence) {\n  function Leaf(values) {\n    RopeSequence.call(this);\n    this.values = values;\n  }\n\n  if ( RopeSequence ) Leaf.__proto__ = RopeSequence;\n  Leaf.prototype = Object.create( RopeSequence && RopeSequence.prototype );\n  Leaf.prototype.constructor = Leaf;\n\n  var prototypeAccessors = { length: { configurable: true },depth: { configurable: true } };\n\n  Leaf.prototype.flatten = function flatten () {\n    return this.values\n  };\n\n  Leaf.prototype.sliceInner = function sliceInner (from, to) {\n    if (from == 0 && to == this.length) { return this }\n    return new Leaf(this.values.slice(from, to))\n  };\n\n  Leaf.prototype.getInner = function getInner (i) {\n    return this.values[i]\n  };\n\n  Leaf.prototype.forEachInner = function forEachInner (f, from, to, start) {\n    for (var i = from; i < to; i++)\n      { if (f(this.values[i], start + i) === false) { return false } }\n  };\n\n  Leaf.prototype.forEachInvertedInner = function forEachInvertedInner (f, from, to, start) {\n    for (var i = from - 1; i >= to; i--)\n      { if (f(this.values[i], start + i) === false) { return false } }\n  };\n\n  Leaf.prototype.leafAppend = function leafAppend (other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE)\n      { return new Leaf(this.values.concat(other.flatten())) }\n  };\n\n  Leaf.prototype.leafPrepend = function leafPrepend (other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE)\n      { return new Leaf(other.flatten().concat(this.values)) }\n  };\n\n  prototypeAccessors.length.get = function () { return this.values.length };\n\n  prototypeAccessors.depth.get = function () { return 0 };\n\n  Object.defineProperties( Leaf.prototype, prototypeAccessors );\n\n  return Leaf;\n}(RopeSequence));\n\n// :: RopeSequence\n// The empty rope sequence.\nRopeSequence.empty = new Leaf([]);\n\nvar Append = /*@__PURE__*/(function (RopeSequence) {\n  function Append(left, right) {\n    RopeSequence.call(this);\n    this.left = left;\n    this.right = right;\n    this.length = left.length + right.length;\n    this.depth = Math.max(left.depth, right.depth) + 1;\n  }\n\n  if ( RopeSequence ) Append.__proto__ = RopeSequence;\n  Append.prototype = Object.create( RopeSequence && RopeSequence.prototype );\n  Append.prototype.constructor = Append;\n\n  Append.prototype.flatten = function flatten () {\n    return this.left.flatten().concat(this.right.flatten())\n  };\n\n  Append.prototype.getInner = function getInner (i) {\n    return i < this.left.length ? this.left.get(i) : this.right.get(i - this.left.length)\n  };\n\n  Append.prototype.forEachInner = function forEachInner (f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from < leftLen &&\n        this.left.forEachInner(f, from, Math.min(to, leftLen), start) === false)\n      { return false }\n    if (to > leftLen &&\n        this.right.forEachInner(f, Math.max(from - leftLen, 0), Math.min(this.length, to) - leftLen, start + leftLen) === false)\n      { return false }\n  };\n\n  Append.prototype.forEachInvertedInner = function forEachInvertedInner (f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from > leftLen &&\n        this.right.forEachInvertedInner(f, from - leftLen, Math.max(to, leftLen) - leftLen, start + leftLen) === false)\n      { return false }\n    if (to < leftLen &&\n        this.left.forEachInvertedInner(f, Math.min(from, leftLen), to, start) === false)\n      { return false }\n  };\n\n  Append.prototype.sliceInner = function sliceInner (from, to) {\n    if (from == 0 && to == this.length) { return this }\n    var leftLen = this.left.length;\n    if (to <= leftLen) { return this.left.slice(from, to) }\n    if (from >= leftLen) { return this.right.slice(from - leftLen, to - leftLen) }\n    return this.left.slice(from, leftLen).append(this.right.slice(0, to - leftLen))\n  };\n\n  Append.prototype.leafAppend = function leafAppend (other) {\n    var inner = this.right.leafAppend(other);\n    if (inner) { return new Append(this.left, inner) }\n  };\n\n  Append.prototype.leafPrepend = function leafPrepend (other) {\n    var inner = this.left.leafPrepend(other);\n    if (inner) { return new Append(inner, this.right) }\n  };\n\n  Append.prototype.appendInner = function appendInner (other) {\n    if (this.left.depth >= Math.max(this.right.depth, other.depth) + 1)\n      { return new Append(this.left, new Append(this.right, other)) }\n    return new Append(this, other)\n  };\n\n  return Append;\n}(RopeSequence));\n\nvar ropeSequence = RopeSequence;\n\nexport default ropeSequence;\n", "import RopeSequence from 'rope-sequence';\nimport { Mapping } from 'prosemirror-transform';\nimport { PluginKey, Plugin } from 'prosemirror-state';\n\n// ProseMirror's history isn't simply a way to roll back to a previous\n// state, because ProseMirror supports applying changes without adding\n// them to the history (for example during collaboration).\n//\n// To this end, each 'Branch' (one for the undo history and one for\n// the redo history) keeps an array of 'Items', which can optionally\n// hold a step (an actual undoable change), and always hold a position\n// map (which is needed to move changes below them to apply to the\n// current document).\n//\n// An item that has both a step and a selection bookmark is the start\n// of an 'event' \u2014 a group of changes that will be undone or redone at\n// once. (It stores only the bookmark, since that way we don't have to\n// provide a document until the selection is actually applied, which\n// is useful when compressing.)\n// Used to schedule history compression\nconst max_empty_items = 500;\nclass Branch {\n    constructor(items, eventCount) {\n        this.items = items;\n        this.eventCount = eventCount;\n    }\n    // Pop the latest event off the branch's history and apply it\n    // to a document transform.\n    popEvent(state, preserveItems) {\n        if (this.eventCount == 0)\n            return null;\n        let end = this.items.length;\n        for (;; end--) {\n            let next = this.items.get(end - 1);\n            if (next.selection) {\n                --end;\n                break;\n            }\n        }\n        let remap, mapFrom;\n        if (preserveItems) {\n            remap = this.remapping(end, this.items.length);\n            mapFrom = remap.maps.length;\n        }\n        let transform = state.tr;\n        let selection, remaining;\n        let addAfter = [], addBefore = [];\n        this.items.forEach((item, i) => {\n            if (!item.step) {\n                if (!remap) {\n                    remap = this.remapping(end, i + 1);\n                    mapFrom = remap.maps.length;\n                }\n                mapFrom--;\n                addBefore.push(item);\n                return;\n            }\n            if (remap) {\n                addBefore.push(new Item(item.map));\n                let step = item.step.map(remap.slice(mapFrom)), map;\n                if (step && transform.maybeStep(step).doc) {\n                    map = transform.mapping.maps[transform.mapping.maps.length - 1];\n                    addAfter.push(new Item(map, undefined, undefined, addAfter.length + addBefore.length));\n                }\n                mapFrom--;\n                if (map)\n                    remap.appendMap(map, mapFrom);\n            }\n            else {\n                transform.maybeStep(item.step);\n            }\n            if (item.selection) {\n                selection = remap ? item.selection.map(remap.slice(mapFrom)) : item.selection;\n                remaining = new Branch(this.items.slice(0, end).append(addBefore.reverse().concat(addAfter)), this.eventCount - 1);\n                return false;\n            }\n        }, this.items.length, 0);\n        return { remaining: remaining, transform, selection: selection };\n    }\n    // Create a new branch with the given transform added.\n    addTransform(transform, selection, histOptions, preserveItems) {\n        let newItems = [], eventCount = this.eventCount;\n        let oldItems = this.items, lastItem = !preserveItems && oldItems.length ? oldItems.get(oldItems.length - 1) : null;\n        for (let i = 0; i < transform.steps.length; i++) {\n            let step = transform.steps[i].invert(transform.docs[i]);\n            let item = new Item(transform.mapping.maps[i], step, selection), merged;\n            if (merged = lastItem && lastItem.merge(item)) {\n                item = merged;\n                if (i)\n                    newItems.pop();\n                else\n                    oldItems = oldItems.slice(0, oldItems.length - 1);\n            }\n            newItems.push(item);\n            if (selection) {\n                eventCount++;\n                selection = undefined;\n            }\n            if (!preserveItems)\n                lastItem = item;\n        }\n        let overflow = eventCount - histOptions.depth;\n        if (overflow > DEPTH_OVERFLOW) {\n            oldItems = cutOffEvents(oldItems, overflow);\n            eventCount -= overflow;\n        }\n        return new Branch(oldItems.append(newItems), eventCount);\n    }\n    remapping(from, to) {\n        let maps = new Mapping;\n        this.items.forEach((item, i) => {\n            let mirrorPos = item.mirrorOffset != null && i - item.mirrorOffset >= from\n                ? maps.maps.length - item.mirrorOffset : undefined;\n            maps.appendMap(item.map, mirrorPos);\n        }, from, to);\n        return maps;\n    }\n    addMaps(array) {\n        if (this.eventCount == 0)\n            return this;\n        return new Branch(this.items.append(array.map(map => new Item(map))), this.eventCount);\n    }\n    // When the collab module receives remote changes, the history has\n    // to know about those, so that it can adjust the steps that were\n    // rebased on top of the remote changes, and include the position\n    // maps for the remote changes in its array of items.\n    rebased(rebasedTransform, rebasedCount) {\n        if (!this.eventCount)\n            return this;\n        let rebasedItems = [], start = Math.max(0, this.items.length - rebasedCount);\n        let mapping = rebasedTransform.mapping;\n        let newUntil = rebasedTransform.steps.length;\n        let eventCount = this.eventCount;\n        this.items.forEach(item => { if (item.selection)\n            eventCount--; }, start);\n        let iRebased = rebasedCount;\n        this.items.forEach(item => {\n            let pos = mapping.getMirror(--iRebased);\n            if (pos == null)\n                return;\n            newUntil = Math.min(newUntil, pos);\n            let map = mapping.maps[pos];\n            if (item.step) {\n                let step = rebasedTransform.steps[pos].invert(rebasedTransform.docs[pos]);\n                let selection = item.selection && item.selection.map(mapping.slice(iRebased + 1, pos));\n                if (selection)\n                    eventCount++;\n                rebasedItems.push(new Item(map, step, selection));\n            }\n            else {\n                rebasedItems.push(new Item(map));\n            }\n        }, start);\n        let newMaps = [];\n        for (let i = rebasedCount; i < newUntil; i++)\n            newMaps.push(new Item(mapping.maps[i]));\n        let items = this.items.slice(0, start).append(newMaps).append(rebasedItems);\n        let branch = new Branch(items, eventCount);\n        if (branch.emptyItemCount() > max_empty_items)\n            branch = branch.compress(this.items.length - rebasedItems.length);\n        return branch;\n    }\n    emptyItemCount() {\n        let count = 0;\n        this.items.forEach(item => { if (!item.step)\n            count++; });\n        return count;\n    }\n    // Compressing a branch means rewriting it to push the air (map-only\n    // items) out. During collaboration, these naturally accumulate\n    // because each remote change adds one. The `upto` argument is used\n    // to ensure that only the items below a given level are compressed,\n    // because `rebased` relies on a clean, untouched set of items in\n    // order to associate old items with rebased steps.\n    compress(upto = this.items.length) {\n        let remap = this.remapping(0, upto), mapFrom = remap.maps.length;\n        let items = [], events = 0;\n        this.items.forEach((item, i) => {\n            if (i >= upto) {\n                items.push(item);\n                if (item.selection)\n                    events++;\n            }\n            else if (item.step) {\n                let step = item.step.map(remap.slice(mapFrom)), map = step && step.getMap();\n                mapFrom--;\n                if (map)\n                    remap.appendMap(map, mapFrom);\n                if (step) {\n                    let selection = item.selection && item.selection.map(remap.slice(mapFrom));\n                    if (selection)\n                        events++;\n                    let newItem = new Item(map.invert(), step, selection), merged, last = items.length - 1;\n                    if (merged = items.length && items[last].merge(newItem))\n                        items[last] = merged;\n                    else\n                        items.push(newItem);\n                }\n            }\n            else if (item.map) {\n                mapFrom--;\n            }\n        }, this.items.length, 0);\n        return new Branch(RopeSequence.from(items.reverse()), events);\n    }\n}\nBranch.empty = new Branch(RopeSequence.empty, 0);\nfunction cutOffEvents(items, n) {\n    let cutPoint;\n    items.forEach((item, i) => {\n        if (item.selection && (n-- == 0)) {\n            cutPoint = i;\n            return false;\n        }\n    });\n    return items.slice(cutPoint);\n}\nclass Item {\n    constructor(\n    // The (forward) step map for this item.\n    map, \n    // The inverted step\n    step, \n    // If this is non-null, this item is the start of a group, and\n    // this selection is the starting selection for the group (the one\n    // that was active before the first step was applied)\n    selection, \n    // If this item is the inverse of a previous mapping on the stack,\n    // this points at the inverse's offset\n    mirrorOffset) {\n        this.map = map;\n        this.step = step;\n        this.selection = selection;\n        this.mirrorOffset = mirrorOffset;\n    }\n    merge(other) {\n        if (this.step && other.step && !other.selection) {\n            let step = other.step.merge(this.step);\n            if (step)\n                return new Item(step.getMap().invert(), step, this.selection);\n        }\n    }\n}\n// The value of the state field that tracks undo/redo history for that\n// state. Will be stored in the plugin state when the history plugin\n// is active.\nclass HistoryState {\n    constructor(done, undone, prevRanges, prevTime) {\n        this.done = done;\n        this.undone = undone;\n        this.prevRanges = prevRanges;\n        this.prevTime = prevTime;\n    }\n}\nconst DEPTH_OVERFLOW = 20;\n// Record a transformation in undo history.\nfunction applyTransaction(history, state, tr, options) {\n    let historyTr = tr.getMeta(historyKey), rebased;\n    if (historyTr)\n        return historyTr.historyState;\n    if (tr.getMeta(closeHistoryKey))\n        history = new HistoryState(history.done, history.undone, null, 0);\n    let appended = tr.getMeta(\"appendedTransaction\");\n    if (tr.steps.length == 0) {\n        return history;\n    }\n    else if (appended && appended.getMeta(historyKey)) {\n        if (appended.getMeta(historyKey).redo)\n            return new HistoryState(history.done.addTransform(tr, undefined, options, mustPreserveItems(state)), history.undone, rangesFor(tr.mapping.maps[tr.steps.length - 1]), history.prevTime);\n        else\n            return new HistoryState(history.done, history.undone.addTransform(tr, undefined, options, mustPreserveItems(state)), null, history.prevTime);\n    }\n    else if (tr.getMeta(\"addToHistory\") !== false && !(appended && appended.getMeta(\"addToHistory\") === false)) {\n        // Group transforms that occur in quick succession into one event.\n        let newGroup = history.prevTime == 0 || !appended && (history.prevTime < (tr.time || 0) - options.newGroupDelay ||\n            !isAdjacentTo(tr, history.prevRanges));\n        let prevRanges = appended ? mapRanges(history.prevRanges, tr.mapping) : rangesFor(tr.mapping.maps[tr.steps.length - 1]);\n        return new HistoryState(history.done.addTransform(tr, newGroup ? state.selection.getBookmark() : undefined, options, mustPreserveItems(state)), Branch.empty, prevRanges, tr.time);\n    }\n    else if (rebased = tr.getMeta(\"rebased\")) {\n        // Used by the collab module to tell the history that some of its\n        // content has been rebased.\n        return new HistoryState(history.done.rebased(tr, rebased), history.undone.rebased(tr, rebased), mapRanges(history.prevRanges, tr.mapping), history.prevTime);\n    }\n    else {\n        return new HistoryState(history.done.addMaps(tr.mapping.maps), history.undone.addMaps(tr.mapping.maps), mapRanges(history.prevRanges, tr.mapping), history.prevTime);\n    }\n}\nfunction isAdjacentTo(transform, prevRanges) {\n    if (!prevRanges)\n        return false;\n    if (!transform.docChanged)\n        return true;\n    let adjacent = false;\n    transform.mapping.maps[0].forEach((start, end) => {\n        for (let i = 0; i < prevRanges.length; i += 2)\n            if (start <= prevRanges[i + 1] && end >= prevRanges[i])\n                adjacent = true;\n    });\n    return adjacent;\n}\nfunction rangesFor(map) {\n    let result = [];\n    map.forEach((_from, _to, from, to) => result.push(from, to));\n    return result;\n}\nfunction mapRanges(ranges, mapping) {\n    if (!ranges)\n        return null;\n    let result = [];\n    for (let i = 0; i < ranges.length; i += 2) {\n        let from = mapping.map(ranges[i], 1), to = mapping.map(ranges[i + 1], -1);\n        if (from <= to)\n            result.push(from, to);\n    }\n    return result;\n}\n// Apply the latest event from one branch to the document and shift the event\n// onto the other branch.\nfunction histTransaction(history, state, dispatch, redo) {\n    let preserveItems = mustPreserveItems(state);\n    let histOptions = historyKey.get(state).spec.config;\n    let pop = (redo ? history.undone : history.done).popEvent(state, preserveItems);\n    if (!pop)\n        return;\n    let selection = pop.selection.resolve(pop.transform.doc);\n    let added = (redo ? history.done : history.undone).addTransform(pop.transform, state.selection.getBookmark(), histOptions, preserveItems);\n    let newHist = new HistoryState(redo ? added : pop.remaining, redo ? pop.remaining : added, null, 0);\n    dispatch(pop.transform.setSelection(selection).setMeta(historyKey, { redo, historyState: newHist }).scrollIntoView());\n}\nlet cachedPreserveItems = false, cachedPreserveItemsPlugins = null;\n// Check whether any plugin in the given state has a\n// `historyPreserveItems` property in its spec, in which case we must\n// preserve steps exactly as they came in, so that they can be\n// rebased.\nfunction mustPreserveItems(state) {\n    let plugins = state.plugins;\n    if (cachedPreserveItemsPlugins != plugins) {\n        cachedPreserveItems = false;\n        cachedPreserveItemsPlugins = plugins;\n        for (let i = 0; i < plugins.length; i++)\n            if (plugins[i].spec.historyPreserveItems) {\n                cachedPreserveItems = true;\n                break;\n            }\n    }\n    return cachedPreserveItems;\n}\n/**\nSet a flag on the given transaction that will prevent further steps\nfrom being appended to an existing history event (so that they\nrequire a separate undo command to undo).\n*/\nfunction closeHistory(tr) {\n    return tr.setMeta(closeHistoryKey, true);\n}\nconst historyKey = new PluginKey(\"history\");\nconst closeHistoryKey = new PluginKey(\"closeHistory\");\n/**\nReturns a plugin that enables the undo history for an editor. The\nplugin will track undo and redo stacks, which can be used with the\n[`undo`](https://prosemirror.net/docs/ref/#history.undo) and [`redo`](https://prosemirror.net/docs/ref/#history.redo) commands.\n\nYou can set an `\"addToHistory\"` [metadata\nproperty](https://prosemirror.net/docs/ref/#state.Transaction.setMeta) of `false` on a transaction\nto prevent it from being rolled back by undo.\n*/\nfunction history(config = {}) {\n    config = { depth: config.depth || 100,\n        newGroupDelay: config.newGroupDelay || 500 };\n    return new Plugin({\n        key: historyKey,\n        state: {\n            init() {\n                return new HistoryState(Branch.empty, Branch.empty, null, 0);\n            },\n            apply(tr, hist, state) {\n                return applyTransaction(hist, state, tr, config);\n            }\n        },\n        config,\n        props: {\n            handleDOMEvents: {\n                beforeinput(view, e) {\n                    let inputType = e.inputType;\n                    let command = inputType == \"historyUndo\" ? undo : inputType == \"historyRedo\" ? redo : null;\n                    if (!command)\n                        return false;\n                    e.preventDefault();\n                    return command(view.state, view.dispatch);\n                }\n            }\n        }\n    });\n}\n/**\nA command function that undoes the last change, if any.\n*/\nconst undo = (state, dispatch) => {\n    let hist = historyKey.getState(state);\n    if (!hist || hist.done.eventCount == 0)\n        return false;\n    if (dispatch)\n        histTransaction(hist, state, dispatch, false);\n    return true;\n};\n/**\nA command function that redoes the last undone change, if any.\n*/\nconst redo = (state, dispatch) => {\n    let hist = historyKey.getState(state);\n    if (!hist || hist.undone.eventCount == 0)\n        return false;\n    if (dispatch)\n        histTransaction(hist, state, dispatch, true);\n    return true;\n};\n/**\nThe amount of undoable events available in a given state.\n*/\nfunction undoDepth(state) {\n    let hist = historyKey.getState(state);\n    return hist ? hist.done.eventCount : 0;\n}\n/**\nThe amount of redoable events available in a given editor state.\n*/\nfunction redoDepth(state) {\n    let hist = historyKey.getState(state);\n    return hist ? hist.undone.eventCount : 0;\n}\n\nexport { closeHistory, history, redo, redoDepth, undo, undoDepth };\n", "import { Extension } from '@tiptap/core'\nimport { history, redo, undo } from '@tiptap/pm/history'\n\nexport interface HistoryOptions {\n  depth: number,\n  newGroupDelay: number,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    history: {\n      /**\n       * Undo recent changes\n       */\n      undo: () => ReturnType,\n      /**\n       * Reapply reverted changes\n       */\n      redo: () => ReturnType,\n    }\n  }\n}\n\nexport const History = Extension.create<HistoryOptions>({\n  name: 'history',\n\n  addOptions() {\n    return {\n      depth: 100,\n      newGroupDelay: 500,\n    }\n  },\n\n  addCommands() {\n    return {\n      undo: () => ({ state, dispatch }) => {\n        return undo(state, dispatch)\n      },\n      redo: () => ({ state, dispatch }) => {\n        return redo(state, dispatch)\n      },\n    }\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      history(this.options),\n    ]\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-z': () => this.editor.commands.undo(),\n      'Mod-y': () => this.editor.commands.redo(),\n      'Shift-Mod-z': () => this.editor.commands.redo(),\n\n      // Russian keyboard layouts\n      'Mod-\u044F': () => this.editor.commands.undo(),\n      'Shift-Mod-\u044F': () => this.editor.commands.redo(),\n    }\n  },\n})\n", "import { mergeAttributes, Node, nodeInputRule } from '@tiptap/core'\nimport { TextSelection } from '@tiptap/pm/state'\n\nexport interface HorizontalRuleOptions {\n  HTMLAttributes: Record<string, any>\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    horizontalRule: {\n      /**\n       * Add a horizontal rule\n       */\n      setHorizontalRule: () => ReturnType\n    }\n  }\n}\n\nexport const HorizontalRule = Node.create<HorizontalRuleOptions>({\n  name: 'horizontalRule',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  group: 'block',\n\n  parseHTML() {\n    return [{ tag: 'hr' }]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['hr', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)]\n  },\n\n  addCommands() {\n    return {\n      setHorizontalRule:\n        () => ({ chain }) => {\n          return (\n            chain()\n              .insertContent({ type: this.name })\n              // set cursor after horizontal rule\n              .command(({ tr, dispatch }) => {\n                if (dispatch) {\n                  const { $to } = tr.selection\n                  const posAfter = $to.end()\n\n                  if ($to.nodeAfter) {\n                    tr.setSelection(TextSelection.create(tr.doc, $to.pos))\n                  } else {\n                    // add node after horizontal rule if it\u2019s the end of the document\n                    const node = $to.parent.type.contentMatch.defaultType?.create()\n\n                    if (node) {\n                      tr.insert(posAfter, node)\n                      tr.setSelection(TextSelection.create(tr.doc, posAfter))\n                    }\n                  }\n\n                  tr.scrollIntoView()\n                }\n\n                return true\n              })\n              .run()\n          )\n        },\n    }\n  },\n\n  addInputRules() {\n    return [\n      nodeInputRule({\n        find: /^(?:---|\u2014-|___\\s|\\*\\*\\*\\s)$/,\n        type: this.type,\n      }),\n    ]\n  },\n})\n", "import {\n  Mark,\n  markInputRule,\n  markPasteRule,\n  mergeAttributes,\n} from '@tiptap/core'\n\nexport interface ItalicOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    italic: {\n      /**\n       * Set an italic mark\n       */\n      setItalic: () => ReturnType,\n      /**\n       * Toggle an italic mark\n       */\n      toggleItalic: () => ReturnType,\n      /**\n       * Unset an italic mark\n       */\n      unsetItalic: () => ReturnType,\n    }\n  }\n}\n\nexport const starInputRegex = /(?:^|\\s)((?:\\*)((?:[^*]+))(?:\\*))$/\nexport const starPasteRegex = /(?:^|\\s)((?:\\*)((?:[^*]+))(?:\\*))/g\nexport const underscoreInputRegex = /(?:^|\\s)((?:_)((?:[^_]+))(?:_))$/\nexport const underscorePasteRegex = /(?:^|\\s)((?:_)((?:[^_]+))(?:_))/g\n\nexport const Italic = Mark.create<ItalicOptions>({\n  name: 'italic',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'em',\n      },\n      {\n        tag: 'i',\n        getAttrs: node => (node as HTMLElement).style.fontStyle !== 'normal' && null,\n      },\n      {\n        style: 'font-style=italic',\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['em', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setItalic: () => ({ commands }) => {\n        return commands.setMark(this.name)\n      },\n      toggleItalic: () => ({ commands }) => {\n        return commands.toggleMark(this.name)\n      },\n      unsetItalic: () => ({ commands }) => {\n        return commands.unsetMark(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-i': () => this.editor.commands.toggleItalic(),\n      'Mod-I': () => this.editor.commands.toggleItalic(),\n    }\n  },\n\n  addInputRules() {\n    return [\n      markInputRule({\n        find: starInputRegex,\n        type: this.type,\n      }),\n      markInputRule({\n        find: underscoreInputRegex,\n        type: this.type,\n      }),\n    ]\n  },\n\n  addPasteRules() {\n    return [\n      markPasteRule({\n        find: starPasteRegex,\n        type: this.type,\n      }),\n      markPasteRule({\n        find: underscorePasteRegex,\n        type: this.type,\n      }),\n    ]\n  },\n})\n", "import { mergeAttributes, Node } from '@tiptap/core'\n\nexport interface ListItemOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\nexport const ListItem = Node.create<ListItemOptions>({\n  name: 'listItem',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  content: 'paragraph block*',\n\n  defining: true,\n\n  parseHTML() {\n    return [\n      {\n        tag: 'li',\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['li', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      Enter: () => this.editor.commands.splitListItem(this.name),\n      Tab: () => this.editor.commands.sinkListItem(this.name),\n      'Shift-Tab': () => this.editor.commands.liftListItem(this.name),\n    }\n  },\n})\n", "import { mergeAttributes, Node } from '@tiptap/core'\n\nexport interface ListItemOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\nexport const ListItem = Node.create<ListItemOptions>({\n  name: 'listItem',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  content: 'paragraph block*',\n\n  defining: true,\n\n  parseHTML() {\n    return [\n      {\n        tag: 'li',\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['li', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      Enter: () => this.editor.commands.splitListItem(this.name),\n      Tab: () => this.editor.commands.sinkListItem(this.name),\n      'Shift-Tab': () => this.editor.commands.liftListItem(this.name),\n    }\n  },\n})\n", "import {\n  getMarkAttributes,\n  Mark,\n  mergeAttributes,\n} from '@tiptap/core'\n\nexport interface TextStyleOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    textStyle: {\n      /**\n       * Remove spans without inline style attributes.\n       */\n      removeEmptyTextStyle: () => ReturnType,\n    }\n  }\n}\n\nexport const TextStyle = Mark.create<TextStyleOptions>({\n  name: 'textStyle',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'span',\n        getAttrs: element => {\n          const hasStyles = (element as HTMLElement).hasAttribute('style')\n\n          if (!hasStyles) {\n            return false\n          }\n\n          return {}\n        },\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['span', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      removeEmptyTextStyle: () => ({ state, commands }) => {\n        const attributes = getMarkAttributes(state, this.type)\n        const hasStyles = Object.entries(attributes).some(([, value]) => !!value)\n\n        if (hasStyles) {\n          return true\n        }\n\n        return commands.unsetMark(this.name)\n      },\n    }\n  },\n\n})\n", "import { mergeAttributes, Node, wrappingInputRule } from '@tiptap/core'\n\nimport ListItem from '../../extension-list-item/src'\nimport TextStyle from '../../extension-text-style/src'\n\nexport interface OrderedListOptions {\n  itemTypeName: string,\n  HTMLAttributes: Record<string, any>,\n  keepMarks: boolean,\n  keepAttributes: boolean,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    orderedList: {\n      /**\n       * Toggle an ordered list\n       */\n      toggleOrderedList: () => ReturnType,\n    }\n  }\n}\n\nexport const inputRegex = /^(\\d+)\\.\\s$/\n\nexport const OrderedList = Node.create<OrderedListOptions>({\n  name: 'orderedList',\n\n  addOptions() {\n    return {\n      itemTypeName: 'listItem',\n      HTMLAttributes: {},\n      keepMarks: false,\n      keepAttributes: false,\n    }\n  },\n\n  group: 'block list',\n\n  content() {\n    return `${this.options.itemTypeName}+`\n  },\n\n  addAttributes() {\n    return {\n      start: {\n        default: 1,\n        parseHTML: element => {\n          return element.hasAttribute('start')\n            ? parseInt(element.getAttribute('start') || '', 10)\n            : 1\n        },\n      },\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'ol',\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    const { start, ...attributesWithoutStart } = HTMLAttributes\n\n    return start === 1\n      ? ['ol', mergeAttributes(this.options.HTMLAttributes, attributesWithoutStart), 0]\n      : ['ol', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      toggleOrderedList: () => ({ commands, chain }) => {\n        if (this.options.keepAttributes) {\n          return chain().toggleList(this.name, this.options.itemTypeName, this.options.keepMarks).updateAttributes(ListItem.name, this.editor.getAttributes(TextStyle.name)).run()\n        }\n        return commands.toggleList(this.name, this.options.itemTypeName, this.options.keepMarks)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-7': () => this.editor.commands.toggleOrderedList(),\n    }\n  },\n\n  addInputRules() {\n    let inputRule = wrappingInputRule({\n      find: inputRegex,\n      type: this.type,\n      getAttributes: match => ({ start: +match[1] }),\n      joinPredicate: (match, node) => node.childCount + node.attrs.start === +match[1],\n    })\n\n    if (this.options.keepMarks || this.options.keepAttributes) {\n      inputRule = wrappingInputRule({\n        find: inputRegex,\n        type: this.type,\n        keepMarks: this.options.keepMarks,\n        keepAttributes: this.options.keepAttributes,\n        getAttributes: match => ({ start: +match[1], ...this.editor.getAttributes(TextStyle.name) }),\n        joinPredicate: (match, node) => node.childCount + node.attrs.start === +match[1],\n        editor: this.editor,\n      })\n    }\n    return [\n      inputRule,\n    ]\n  },\n})\n", "import { mergeAttributes, Node } from '@tiptap/core'\n\nexport interface ParagraphOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    paragraph: {\n      /**\n       * Toggle a paragraph\n       */\n      setParagraph: () => ReturnType,\n    }\n  }\n}\n\nexport const Paragraph = Node.create<ParagraphOptions>({\n  name: 'paragraph',\n\n  priority: 1000,\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  group: 'block',\n\n  content: 'inline*',\n\n  parseHTML() {\n    return [\n      { tag: 'p' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['p', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setParagraph: () => ({ commands }) => {\n        return commands.setNode(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Alt-0': () => this.editor.commands.setParagraph(),\n    }\n  },\n})\n", "import {\n  Mark,\n  markInputRule,\n  markPasteRule,\n  mergeAttributes,\n} from '@tiptap/core'\n\nexport interface StrikeOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    strike: {\n      /**\n       * Set a strike mark\n       */\n      setStrike: () => ReturnType,\n      /**\n       * Toggle a strike mark\n       */\n      toggleStrike: () => ReturnType,\n      /**\n       * Unset a strike mark\n       */\n      unsetStrike: () => ReturnType,\n    }\n  }\n}\n\nexport const inputRegex = /(?:^|\\s)((?:~~)((?:[^~]+))(?:~~))$/\nexport const pasteRegex = /(?:^|\\s)((?:~~)((?:[^~]+))(?:~~))/g\n\nexport const Strike = Mark.create<StrikeOptions>({\n  name: 'strike',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 's',\n      },\n      {\n        tag: 'del',\n      },\n      {\n        tag: 'strike',\n      },\n      {\n        style: 'text-decoration',\n        consuming: false,\n        getAttrs: style => ((style as string).includes('line-through') ? {} : false),\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['s', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setStrike: () => ({ commands }) => {\n        return commands.setMark(this.name)\n      },\n      toggleStrike: () => ({ commands }) => {\n        return commands.toggleMark(this.name)\n      },\n      unsetStrike: () => ({ commands }) => {\n        return commands.unsetMark(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-x': () => this.editor.commands.toggleStrike(),\n    }\n  },\n\n  addInputRules() {\n    return [\n      markInputRule({\n        find: inputRegex,\n        type: this.type,\n      }),\n    ]\n  },\n\n  addPasteRules() {\n    return [\n      markPasteRule({\n        find: pasteRegex,\n        type: this.type,\n      }),\n    ]\n  },\n})\n", "import { Node } from '@tiptap/core'\n\nexport const Text = Node.create({\n  name: 'text',\n  group: 'inline',\n})\n", "import { Extension } from '@tiptap/core'\nimport { Blockquote, BlockquoteOptions } from '@tiptap/extension-blockquote'\nimport { Bold, BoldOptions } from '@tiptap/extension-bold'\nimport { BulletList, BulletListOptions } from '@tiptap/extension-bullet-list'\nimport { Code, CodeOptions } from '@tiptap/extension-code'\nimport { CodeBlock, CodeBlockOptions } from '@tiptap/extension-code-block'\nimport { Document } from '@tiptap/extension-document'\nimport { Dropcursor, DropcursorOptions } from '@tiptap/extension-dropcursor'\nimport { Gapcursor } from '@tiptap/extension-gapcursor'\nimport { HardBreak, HardBreakOptions } from '@tiptap/extension-hard-break'\nimport { Heading, HeadingOptions } from '@tiptap/extension-heading'\nimport { History, HistoryOptions } from '@tiptap/extension-history'\nimport { HorizontalRule, HorizontalRuleOptions } from '@tiptap/extension-horizontal-rule'\nimport { Italic, ItalicOptions } from '@tiptap/extension-italic'\nimport { ListItem, ListItemOptions } from '@tiptap/extension-list-item'\nimport { OrderedList, OrderedListOptions } from '@tiptap/extension-ordered-list'\nimport { Paragraph, ParagraphOptions } from '@tiptap/extension-paragraph'\nimport { Strike, StrikeOptions } from '@tiptap/extension-strike'\nimport { Text } from '@tiptap/extension-text'\n\nexport interface StarterKitOptions {\n  blockquote: Partial<BlockquoteOptions> | false,\n  bold: Partial<BoldOptions> | false,\n  bulletList: Partial<BulletListOptions> | false,\n  code: Partial<CodeOptions> | false,\n  codeBlock: Partial<CodeBlockOptions> | false,\n  document: false,\n  dropcursor: Partial<DropcursorOptions> | false,\n  gapcursor: false,\n  hardBreak: Partial<HardBreakOptions> | false,\n  heading: Partial<HeadingOptions> | false,\n  history: Partial<HistoryOptions> | false,\n  horizontalRule: Partial<HorizontalRuleOptions> | false,\n  italic: Partial<ItalicOptions> | false,\n  listItem: Partial<ListItemOptions> | false,\n  orderedList: Partial<OrderedListOptions> | false,\n  paragraph: Partial<ParagraphOptions> | false,\n  strike: Partial<StrikeOptions> | false,\n  text: false,\n}\n\nexport const StarterKit = Extension.create<StarterKitOptions>({\n  name: 'starterKit',\n\n  addExtensions() {\n    const extensions = []\n\n    if (this.options.blockquote !== false) {\n      extensions.push(Blockquote.configure(this.options?.blockquote))\n    }\n\n    if (this.options.bold !== false) {\n      extensions.push(Bold.configure(this.options?.bold))\n    }\n\n    if (this.options.bulletList !== false) {\n      extensions.push(BulletList.configure(this.options?.bulletList))\n    }\n\n    if (this.options.code !== false) {\n      extensions.push(Code.configure(this.options?.code))\n    }\n\n    if (this.options.codeBlock !== false) {\n      extensions.push(CodeBlock.configure(this.options?.codeBlock))\n    }\n\n    if (this.options.document !== false) {\n      extensions.push(Document.configure(this.options?.document))\n    }\n\n    if (this.options.dropcursor !== false) {\n      extensions.push(Dropcursor.configure(this.options?.dropcursor))\n    }\n\n    if (this.options.gapcursor !== false) {\n      extensions.push(Gapcursor.configure(this.options?.gapcursor))\n    }\n\n    if (this.options.hardBreak !== false) {\n      extensions.push(HardBreak.configure(this.options?.hardBreak))\n    }\n\n    if (this.options.heading !== false) {\n      extensions.push(Heading.configure(this.options?.heading))\n    }\n\n    if (this.options.history !== false) {\n      extensions.push(History.configure(this.options?.history))\n    }\n\n    if (this.options.horizontalRule !== false) {\n      extensions.push(HorizontalRule.configure(this.options?.horizontalRule))\n    }\n\n    if (this.options.italic !== false) {\n      extensions.push(Italic.configure(this.options?.italic))\n    }\n\n    if (this.options.listItem !== false) {\n      extensions.push(ListItem.configure(this.options?.listItem))\n    }\n\n    if (this.options.orderedList !== false) {\n      extensions.push(OrderedList.configure(this.options?.orderedList))\n    }\n\n    if (this.options.paragraph !== false) {\n      extensions.push(Paragraph.configure(this.options?.paragraph))\n    }\n\n    if (this.options.strike !== false) {\n      extensions.push(Strike.configure(this.options?.strike))\n    }\n\n    if (this.options.text !== false) {\n      extensions.push(Text.configure(this.options?.text))\n    }\n\n    return extensions\n  },\n})\n", "import { mergeAttributes, Node } from '@tiptap/core'\n\nexport interface TableRowOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\nexport const TableRow = Node.create<TableRowOptions>({\n  name: 'tableRow',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  content: '(tableCell | tableHeader)*',\n\n  tableRole: 'row',\n\n  parseHTML() {\n    return [\n      { tag: 'tr' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['tr', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n})\n", "import { Extension } from '@tiptap/core'\n\nexport interface TextAlignOptions {\n  types: string[],\n  alignments: string[],\n  defaultAlignment: string,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    textAlign: {\n      /**\n       * Set the text align attribute\n       */\n      setTextAlign: (alignment: string) => ReturnType,\n      /**\n       * Unset the text align attribute\n       */\n      unsetTextAlign: () => ReturnType,\n    }\n  }\n}\n\nexport const TextAlign = Extension.create<TextAlignOptions>({\n  name: 'textAlign',\n\n  addOptions() {\n    return {\n      types: [],\n      alignments: ['left', 'center', 'right', 'justify'],\n      defaultAlignment: 'left',\n    }\n  },\n\n  addGlobalAttributes() {\n    return [\n      {\n        types: this.options.types,\n        attributes: {\n          textAlign: {\n            default: this.options.defaultAlignment,\n            parseHTML: element => element.style.textAlign || this.options.defaultAlignment,\n            renderHTML: attributes => {\n              if (attributes.textAlign === this.options.defaultAlignment) {\n                return {}\n              }\n\n              return { style: `text-align: ${attributes.textAlign}` }\n            },\n          },\n        },\n      },\n    ]\n  },\n\n  addCommands() {\n    return {\n      setTextAlign: (alignment: string) => ({ commands }) => {\n        if (!this.options.alignments.includes(alignment)) {\n          return false\n        }\n\n        return this.options.types.every(type => commands.updateAttributes(type, { textAlign: alignment }))\n      },\n\n      unsetTextAlign: () => ({ commands }) => {\n        return this.options.types.every(type => commands.resetAttributes(type, 'textAlign'))\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-l': () => this.editor.commands.setTextAlign('left'),\n      'Mod-Shift-e': () => this.editor.commands.setTextAlign('center'),\n      'Mod-Shift-r': () => this.editor.commands.setTextAlign('right'),\n      'Mod-Shift-j': () => this.editor.commands.setTextAlign('justify'),\n    }\n  },\n})\n", "import { mergeAttributes, Node } from '@tiptap/core'\n\nexport interface TableCellOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\nexport const TableCell = Node.create<TableCellOptions>({\n  name: 'tableCell',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  content: 'block+',\n\n  addAttributes() {\n    return {\n      colspan: {\n        default: 1,\n      },\n      rowspan: {\n        default: 1,\n      },\n      colwidth: {\n        default: null,\n        parseHTML: element => {\n          const colwidth = element.getAttribute('colwidth')\n          const value = colwidth\n            ? [parseInt(colwidth, 10)]\n            : null\n\n          return value\n        },\n      },\n    }\n  },\n\n  tableRole: 'cell',\n\n  isolating: true,\n\n  parseHTML() {\n    return [\n      { tag: 'td' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['td', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n})\n", "import { Editor, Extension } from '@tiptap/core'\nimport { Node as ProsemirrorNode } from '@tiptap/pm/model'\nimport { Plugin, PluginKey } from '@tiptap/pm/state'\nimport { Decoration, DecorationSet } from '@tiptap/pm/view'\n\nexport interface PlaceholderOptions {\n  emptyEditorClass: string\n  emptyNodeClass: string\n  placeholder:\n    | ((PlaceholderProps: {\n        editor: Editor\n        node: ProsemirrorNode\n        pos: number\n        hasAnchor: boolean\n      }) => string)\n    | string\n  showOnlyWhenEditable: boolean\n  showOnlyCurrent: boolean\n  includeChildren: boolean\n}\n\nexport const Placeholder = Extension.create<PlaceholderOptions>({\n  name: 'placeholder',\n\n  addOptions() {\n    return {\n      emptyEditorClass: 'is-editor-empty',\n      emptyNodeClass: 'is-empty',\n      placeholder: 'Write something \u2026',\n      showOnlyWhenEditable: true,\n      showOnlyCurrent: true,\n      includeChildren: false,\n    }\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      new Plugin({\n        key: new PluginKey('placeholder'),\n        props: {\n          decorations: ({ doc, selection }) => {\n            const active = this.editor.isEditable || !this.options.showOnlyWhenEditable\n            const { anchor } = selection\n            const decorations: Decoration[] = []\n\n            if (!active) {\n              return null\n            }\n\n            // only calculate isEmpty once due to its performance impacts (see issue #3360)\n            const emptyDocInstance = doc.type.createAndFill()\n            const isEditorEmpty = emptyDocInstance?.sameMarkup(doc)\n              && emptyDocInstance.content.findDiffStart(doc.content) === null\n\n            doc.descendants((node, pos) => {\n              const hasAnchor = anchor >= pos && anchor <= pos + node.nodeSize\n              const isEmpty = !node.isLeaf && !node.childCount\n\n              if ((hasAnchor || !this.options.showOnlyCurrent) && isEmpty) {\n                const classes = [this.options.emptyNodeClass]\n\n                if (isEditorEmpty) {\n                  classes.push(this.options.emptyEditorClass)\n                }\n\n                const decoration = Decoration.node(pos, pos + node.nodeSize, {\n                  class: classes.join(' '),\n                  'data-placeholder':\n                    typeof this.options.placeholder === 'function'\n                      ? this.options.placeholder({\n                        editor: this.editor,\n                        node,\n                        pos,\n                        hasAnchor,\n                      })\n                      : this.options.placeholder,\n                })\n\n                decorations.push(decoration)\n              }\n\n              return this.options.includeChildren\n            })\n\n            return DecorationSet.create(doc, decorations)\n          },\n        },\n      }),\n    ]\n  },\n})\n", "import { mergeAttributes, Node } from '@tiptap/core'\n\nexport interface TableHeaderOptions {\n  HTMLAttributes: Record<string, any>,\n}\nexport const TableHeader = Node.create<TableHeaderOptions>({\n  name: 'tableHeader',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  content: 'block+',\n\n  addAttributes() {\n    return {\n      colspan: {\n        default: 1,\n      },\n      rowspan: {\n        default: 1,\n      },\n      colwidth: {\n        default: null,\n        parseHTML: element => {\n          const colwidth = element.getAttribute('colwidth')\n          const value = colwidth\n            ? [parseInt(colwidth, 10)]\n            : null\n\n          return value\n        },\n      },\n    }\n  },\n\n  tableRole: 'header_cell',\n\n  isolating: true,\n\n  parseHTML() {\n    return [\n      { tag: 'th' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['th', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n})\n", "var deepFreezeEs6 = {exports: {}};\n\nfunction deepFreeze(obj) {\n    if (obj instanceof Map) {\n        obj.clear = obj.delete = obj.set = function () {\n            throw new Error('map is read-only');\n        };\n    } else if (obj instanceof Set) {\n        obj.add = obj.clear = obj.delete = function () {\n            throw new Error('set is read-only');\n        };\n    }\n\n    // Freeze self\n    Object.freeze(obj);\n\n    Object.getOwnPropertyNames(obj).forEach(function (name) {\n        var prop = obj[name];\n\n        // Freeze prop if it is an object\n        if (typeof prop == 'object' && !Object.isFrozen(prop)) {\n            deepFreeze(prop);\n        }\n    });\n\n    return obj;\n}\n\ndeepFreezeEs6.exports = deepFreeze;\ndeepFreezeEs6.exports.default = deepFreeze;\n\n/** @typedef {import('highlight.js').CallbackResponse} CallbackResponse */\n/** @typedef {import('highlight.js').CompiledMode} CompiledMode */\n/** @implements CallbackResponse */\n\nclass Response {\n  /**\n   * @param {CompiledMode} mode\n   */\n  constructor(mode) {\n    // eslint-disable-next-line no-undefined\n    if (mode.data === undefined) mode.data = {};\n\n    this.data = mode.data;\n    this.isMatchIgnored = false;\n  }\n\n  ignoreMatch() {\n    this.isMatchIgnored = true;\n  }\n}\n\n/**\n * @param {string} value\n * @returns {string}\n */\nfunction escapeHTML(value) {\n  return value\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#x27;');\n}\n\n/**\n * performs a shallow merge of multiple objects into one\n *\n * @template T\n * @param {T} original\n * @param {Record<string,any>[]} objects\n * @returns {T} a single new object\n */\nfunction inherit$1(original, ...objects) {\n  /** @type Record<string,any> */\n  const result = Object.create(null);\n\n  for (const key in original) {\n    result[key] = original[key];\n  }\n  objects.forEach(function(obj) {\n    for (const key in obj) {\n      result[key] = obj[key];\n    }\n  });\n  return /** @type {T} */ (result);\n}\n\n/**\n * @typedef {object} Renderer\n * @property {(text: string) => void} addText\n * @property {(node: Node) => void} openNode\n * @property {(node: Node) => void} closeNode\n * @property {() => string} value\n */\n\n/** @typedef {{scope?: string, language?: string, sublanguage?: boolean}} Node */\n/** @typedef {{walk: (r: Renderer) => void}} Tree */\n/** */\n\nconst SPAN_CLOSE = '</span>';\n\n/**\n * Determines if a node needs to be wrapped in <span>\n *\n * @param {Node} node */\nconst emitsWrappingTags = (node) => {\n  // rarely we can have a sublanguage where language is undefined\n  // TODO: track down why\n  return !!node.scope || (node.sublanguage && node.language);\n};\n\n/**\n *\n * @param {string} name\n * @param {{prefix:string}} options\n */\nconst scopeToCSSClass = (name, { prefix }) => {\n  if (name.includes(\".\")) {\n    const pieces = name.split(\".\");\n    return [\n      `${prefix}${pieces.shift()}`,\n      ...(pieces.map((x, i) => `${x}${\"_\".repeat(i + 1)}`))\n    ].join(\" \");\n  }\n  return `${prefix}${name}`;\n};\n\n/** @type {Renderer} */\nclass HTMLRenderer {\n  /**\n   * Creates a new HTMLRenderer\n   *\n   * @param {Tree} parseTree - the parse tree (must support `walk` API)\n   * @param {{classPrefix: string}} options\n   */\n  constructor(parseTree, options) {\n    this.buffer = \"\";\n    this.classPrefix = options.classPrefix;\n    parseTree.walk(this);\n  }\n\n  /**\n   * Adds texts to the output stream\n   *\n   * @param {string} text */\n  addText(text) {\n    this.buffer += escapeHTML(text);\n  }\n\n  /**\n   * Adds a node open to the output stream (if needed)\n   *\n   * @param {Node} node */\n  openNode(node) {\n    if (!emitsWrappingTags(node)) return;\n\n    let className = \"\";\n    if (node.sublanguage) {\n      className = `language-${node.language}`;\n    } else {\n      className = scopeToCSSClass(node.scope, { prefix: this.classPrefix });\n    }\n    this.span(className);\n  }\n\n  /**\n   * Adds a node close to the output stream (if needed)\n   *\n   * @param {Node} node */\n  closeNode(node) {\n    if (!emitsWrappingTags(node)) return;\n\n    this.buffer += SPAN_CLOSE;\n  }\n\n  /**\n   * returns the accumulated buffer\n  */\n  value() {\n    return this.buffer;\n  }\n\n  // helpers\n\n  /**\n   * Builds a span element\n   *\n   * @param {string} className */\n  span(className) {\n    this.buffer += `<span class=\"${className}\">`;\n  }\n}\n\n/** @typedef {{scope?: string, language?: string, sublanguage?: boolean, children: Node[]} | string} Node */\n/** @typedef {{scope?: string, language?: string, sublanguage?: boolean, children: Node[]} } DataNode */\n/** @typedef {import('highlight.js').Emitter} Emitter */\n/**  */\n\n/** @returns {DataNode} */\nconst newNode = (opts = {}) => {\n  /** @type DataNode */\n  const result = { children: [] };\n  Object.assign(result, opts);\n  return result;\n};\n\nclass TokenTree {\n  constructor() {\n    /** @type DataNode */\n    this.rootNode = newNode();\n    this.stack = [this.rootNode];\n  }\n\n  get top() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  get root() { return this.rootNode; }\n\n  /** @param {Node} node */\n  add(node) {\n    this.top.children.push(node);\n  }\n\n  /** @param {string} scope */\n  openNode(scope) {\n    /** @type Node */\n    const node = newNode({ scope });\n    this.add(node);\n    this.stack.push(node);\n  }\n\n  closeNode() {\n    if (this.stack.length > 1) {\n      return this.stack.pop();\n    }\n    // eslint-disable-next-line no-undefined\n    return undefined;\n  }\n\n  closeAllNodes() {\n    while (this.closeNode());\n  }\n\n  toJSON() {\n    return JSON.stringify(this.rootNode, null, 4);\n  }\n\n  /**\n   * @typedef { import(\"./html_renderer\").Renderer } Renderer\n   * @param {Renderer} builder\n   */\n  walk(builder) {\n    // this does not\n    return this.constructor._walk(builder, this.rootNode);\n    // this works\n    // return TokenTree._walk(builder, this.rootNode);\n  }\n\n  /**\n   * @param {Renderer} builder\n   * @param {Node} node\n   */\n  static _walk(builder, node) {\n    if (typeof node === \"string\") {\n      builder.addText(node);\n    } else if (node.children) {\n      builder.openNode(node);\n      node.children.forEach((child) => this._walk(builder, child));\n      builder.closeNode(node);\n    }\n    return builder;\n  }\n\n  /**\n   * @param {Node} node\n   */\n  static _collapse(node) {\n    if (typeof node === \"string\") return;\n    if (!node.children) return;\n\n    if (node.children.every(el => typeof el === \"string\")) {\n      // node.text = node.children.join(\"\");\n      // delete node.children;\n      node.children = [node.children.join(\"\")];\n    } else {\n      node.children.forEach((child) => {\n        TokenTree._collapse(child);\n      });\n    }\n  }\n}\n\n/**\n  Currently this is all private API, but this is the minimal API necessary\n  that an Emitter must implement to fully support the parser.\n\n  Minimal interface:\n\n  - addKeyword(text, scope)\n  - addText(text)\n  - addSublanguage(emitter, subLanguageName)\n  - finalize()\n  - openNode(scope)\n  - closeNode()\n  - closeAllNodes()\n  - toHTML()\n\n*/\n\n/**\n * @implements {Emitter}\n */\nclass TokenTreeEmitter extends TokenTree {\n  /**\n   * @param {*} options\n   */\n  constructor(options) {\n    super();\n    this.options = options;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} scope\n   */\n  addKeyword(text, scope) {\n    if (text === \"\") { return; }\n\n    this.openNode(scope);\n    this.addText(text);\n    this.closeNode();\n  }\n\n  /**\n   * @param {string} text\n   */\n  addText(text) {\n    if (text === \"\") { return; }\n\n    this.add(text);\n  }\n\n  /**\n   * @param {Emitter & {root: DataNode}} emitter\n   * @param {string} name\n   */\n  addSublanguage(emitter, name) {\n    /** @type DataNode */\n    const node = emitter.root;\n    node.sublanguage = true;\n    node.language = name;\n    this.add(node);\n  }\n\n  toHTML() {\n    const renderer = new HTMLRenderer(this, this.options);\n    return renderer.value();\n  }\n\n  finalize() {\n    return true;\n  }\n}\n\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction anyNumberOfTimes(re) {\n  return concat('(?:', re, ')*');\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction optional(re) {\n  return concat('(?:', re, ')?');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/**\n * @param { Array<string | RegExp | Object> } args\n * @returns {object}\n */\nfunction stripOptionsFromArgs(args) {\n  const opts = args[args.length - 1];\n\n  if (typeof opts === 'object' && opts.constructor === Object) {\n    args.splice(args.length - 1, 1);\n    return opts;\n  } else {\n    return {};\n  }\n}\n\n/** @typedef { {capture?: boolean} } RegexEitherOptions */\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] | [...(RegExp | string)[], RegexEitherOptions]} args\n * @returns {string}\n */\nfunction either(...args) {\n  /** @type { object & {capture?: boolean} }  */\n  const opts = stripOptionsFromArgs(args);\n  const joined = '('\n    + (opts.capture ? \"\" : \"?:\")\n    + args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/**\n * @param {RegExp | string} re\n * @returns {number}\n */\nfunction countMatchGroups(re) {\n  return (new RegExp(re.toString() + '|')).exec('').length - 1;\n}\n\n/**\n * Does lexeme start with a regular expression match at the beginning\n * @param {RegExp} re\n * @param {string} lexeme\n */\nfunction startsWith(re, lexeme) {\n  const match = re && re.exec(lexeme);\n  return match && match.index === 0;\n}\n\n// BACKREF_RE matches an open parenthesis or backreference. To avoid\n// an incorrect parse, it additionally matches the following:\n// - [...] elements, where the meaning of parentheses and escapes change\n// - other escape sequences, so we do not misparse escape sequences as\n//   interesting elements\n// - non-matching or lookahead parentheses, which do not capture. These\n//   follow the '(' with a '?'.\nconst BACKREF_RE = /\\[(?:[^\\\\\\]]|\\\\.)*\\]|\\(\\??|\\\\([1-9][0-9]*)|\\\\./;\n\n// **INTERNAL** Not intended for outside usage\n// join logically computes regexps.join(separator), but fixes the\n// backreferences so they continue to match.\n// it also places each individual regular expression into it's own\n// match group, keeping track of the sequencing of those match groups\n// is currently an exercise for the caller. :-)\n/**\n * @param {(string | RegExp)[]} regexps\n * @param {{joinWith: string}} opts\n * @returns {string}\n */\nfunction _rewriteBackreferences(regexps, { joinWith }) {\n  let numCaptures = 0;\n\n  return regexps.map((regex) => {\n    numCaptures += 1;\n    const offset = numCaptures;\n    let re = source(regex);\n    let out = '';\n\n    while (re.length > 0) {\n      const match = BACKREF_RE.exec(re);\n      if (!match) {\n        out += re;\n        break;\n      }\n      out += re.substring(0, match.index);\n      re = re.substring(match.index + match[0].length);\n      if (match[0][0] === '\\\\' && match[1]) {\n        // Adjust the backreference.\n        out += '\\\\' + String(Number(match[1]) + offset);\n      } else {\n        out += match[0];\n        if (match[0] === '(') {\n          numCaptures++;\n        }\n      }\n    }\n    return out;\n  }).map(re => `(${re})`).join(joinWith);\n}\n\n/** @typedef {import('highlight.js').Mode} Mode */\n/** @typedef {import('highlight.js').ModeCallback} ModeCallback */\n\n// Common regexps\nconst MATCH_NOTHING_RE = /\\b\\B/;\nconst IDENT_RE = '[a-zA-Z]\\\\w*';\nconst UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\\\w*';\nconst NUMBER_RE = '\\\\b\\\\d+(\\\\.\\\\d+)?';\nconst C_NUMBER_RE = '(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)'; // 0x..., 0..., decimal, float\nconst BINARY_NUMBER_RE = '\\\\b(0b[01]+)'; // 0b...\nconst RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~';\n\n/**\n* @param { Partial<Mode> & {binary?: string | RegExp} } opts\n*/\nconst SHEBANG = (opts = {}) => {\n  const beginShebang = /^#![ ]*\\//;\n  if (opts.binary) {\n    opts.begin = concat(\n      beginShebang,\n      /.*\\b/,\n      opts.binary,\n      /\\b.*/);\n  }\n  return inherit$1({\n    scope: 'meta',\n    begin: beginShebang,\n    end: /$/,\n    relevance: 0,\n    /** @type {ModeCallback} */\n    \"on:begin\": (m, resp) => {\n      if (m.index !== 0) resp.ignoreMatch();\n    }\n  }, opts);\n};\n\n// Common modes\nconst BACKSLASH_ESCAPE = {\n  begin: '\\\\\\\\[\\\\s\\\\S]', relevance: 0\n};\nconst APOS_STRING_MODE = {\n  scope: 'string',\n  begin: '\\'',\n  end: '\\'',\n  illegal: '\\\\n',\n  contains: [BACKSLASH_ESCAPE]\n};\nconst QUOTE_STRING_MODE = {\n  scope: 'string',\n  begin: '\"',\n  end: '\"',\n  illegal: '\\\\n',\n  contains: [BACKSLASH_ESCAPE]\n};\nconst PHRASAL_WORDS_MODE = {\n  begin: /\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b/\n};\n/**\n * Creates a comment mode\n *\n * @param {string | RegExp} begin\n * @param {string | RegExp} end\n * @param {Mode | {}} [modeOptions]\n * @returns {Partial<Mode>}\n */\nconst COMMENT = function(begin, end, modeOptions = {}) {\n  const mode = inherit$1(\n    {\n      scope: 'comment',\n      begin,\n      end,\n      contains: []\n    },\n    modeOptions\n  );\n  mode.contains.push({\n    scope: 'doctag',\n    // hack to avoid the space from being included. the space is necessary to\n    // match here to prevent the plain text rule below from gobbling up doctags\n    begin: '[ ]*(?=(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):)',\n    end: /(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):/,\n    excludeBegin: true,\n    relevance: 0\n  });\n  const ENGLISH_WORD = either(\n    // list of common 1 and 2 letter words in English\n    \"I\",\n    \"a\",\n    \"is\",\n    \"so\",\n    \"us\",\n    \"to\",\n    \"at\",\n    \"if\",\n    \"in\",\n    \"it\",\n    \"on\",\n    // note: this is not an exhaustive list of contractions, just popular ones\n    /[A-Za-z]+['](d|ve|re|ll|t|s|n)/, // contractions - can't we'd they're let's, etc\n    /[A-Za-z]+[-][a-z]+/, // `no-way`, etc.\n    /[A-Za-z][a-z]{2,}/ // allow capitalized words at beginning of sentences\n  );\n  // looking like plain text, more likely to be a comment\n  mode.contains.push(\n    {\n      // TODO: how to include \", (, ) without breaking grammars that use these for\n      // comment delimiters?\n      // begin: /[ ]+([()\"]?([A-Za-z'-]{3,}|is|a|I|so|us|[tT][oO]|at|if|in|it|on)[.]?[()\":]?([.][ ]|[ ]|\\))){3}/\n      // ---\n\n      // this tries to find sequences of 3 english words in a row (without any\n      // \"programming\" type syntax) this gives us a strong signal that we've\n      // TRULY found a comment - vs perhaps scanning with the wrong language.\n      // It's possible to find something that LOOKS like the start of the\n      // comment - but then if there is no readable text - good chance it is a\n      // false match and not a comment.\n      //\n      // for a visual example please see:\n      // https://github.com/highlightjs/highlight.js/issues/2827\n\n      begin: concat(\n        /[ ]+/, // necessary to prevent us gobbling up doctags like /* @author Bob Mcgill */\n        '(',\n        ENGLISH_WORD,\n        /[.]?[:]?([.][ ]|[ ])/,\n        '){3}') // look for 3 words in a row\n    }\n  );\n  return mode;\n};\nconst C_LINE_COMMENT_MODE = COMMENT('//', '$');\nconst C_BLOCK_COMMENT_MODE = COMMENT('/\\\\*', '\\\\*/');\nconst HASH_COMMENT_MODE = COMMENT('#', '$');\nconst NUMBER_MODE = {\n  scope: 'number',\n  begin: NUMBER_RE,\n  relevance: 0\n};\nconst C_NUMBER_MODE = {\n  scope: 'number',\n  begin: C_NUMBER_RE,\n  relevance: 0\n};\nconst BINARY_NUMBER_MODE = {\n  scope: 'number',\n  begin: BINARY_NUMBER_RE,\n  relevance: 0\n};\nconst REGEXP_MODE = {\n  // this outer rule makes sure we actually have a WHOLE regex and not simply\n  // an expression such as:\n  //\n  //     3 / something\n  //\n  // (which will then blow up when regex's `illegal` sees the newline)\n  begin: /(?=\\/[^/\\n]*\\/)/,\n  contains: [{\n    scope: 'regexp',\n    begin: /\\//,\n    end: /\\/[gimuy]*/,\n    illegal: /\\n/,\n    contains: [\n      BACKSLASH_ESCAPE,\n      {\n        begin: /\\[/,\n        end: /\\]/,\n        relevance: 0,\n        contains: [BACKSLASH_ESCAPE]\n      }\n    ]\n  }]\n};\nconst TITLE_MODE = {\n  scope: 'title',\n  begin: IDENT_RE,\n  relevance: 0\n};\nconst UNDERSCORE_TITLE_MODE = {\n  scope: 'title',\n  begin: UNDERSCORE_IDENT_RE,\n  relevance: 0\n};\nconst METHOD_GUARD = {\n  // excludes method names from keyword processing\n  begin: '\\\\.\\\\s*' + UNDERSCORE_IDENT_RE,\n  relevance: 0\n};\n\n/**\n * Adds end same as begin mechanics to a mode\n *\n * Your mode must include at least a single () match group as that first match\n * group is what is used for comparison\n * @param {Partial<Mode>} mode\n */\nconst END_SAME_AS_BEGIN = function(mode) {\n  return Object.assign(mode,\n    {\n      /** @type {ModeCallback} */\n      'on:begin': (m, resp) => { resp.data._beginMatch = m[1]; },\n      /** @type {ModeCallback} */\n      'on:end': (m, resp) => { if (resp.data._beginMatch !== m[1]) resp.ignoreMatch(); }\n    });\n};\n\nvar MODES = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    MATCH_NOTHING_RE: MATCH_NOTHING_RE,\n    IDENT_RE: IDENT_RE,\n    UNDERSCORE_IDENT_RE: UNDERSCORE_IDENT_RE,\n    NUMBER_RE: NUMBER_RE,\n    C_NUMBER_RE: C_NUMBER_RE,\n    BINARY_NUMBER_RE: BINARY_NUMBER_RE,\n    RE_STARTERS_RE: RE_STARTERS_RE,\n    SHEBANG: SHEBANG,\n    BACKSLASH_ESCAPE: BACKSLASH_ESCAPE,\n    APOS_STRING_MODE: APOS_STRING_MODE,\n    QUOTE_STRING_MODE: QUOTE_STRING_MODE,\n    PHRASAL_WORDS_MODE: PHRASAL_WORDS_MODE,\n    COMMENT: COMMENT,\n    C_LINE_COMMENT_MODE: C_LINE_COMMENT_MODE,\n    C_BLOCK_COMMENT_MODE: C_BLOCK_COMMENT_MODE,\n    HASH_COMMENT_MODE: HASH_COMMENT_MODE,\n    NUMBER_MODE: NUMBER_MODE,\n    C_NUMBER_MODE: C_NUMBER_MODE,\n    BINARY_NUMBER_MODE: BINARY_NUMBER_MODE,\n    REGEXP_MODE: REGEXP_MODE,\n    TITLE_MODE: TITLE_MODE,\n    UNDERSCORE_TITLE_MODE: UNDERSCORE_TITLE_MODE,\n    METHOD_GUARD: METHOD_GUARD,\n    END_SAME_AS_BEGIN: END_SAME_AS_BEGIN\n});\n\n/**\n@typedef {import('highlight.js').CallbackResponse} CallbackResponse\n@typedef {import('highlight.js').CompilerExt} CompilerExt\n*/\n\n// Grammar extensions / plugins\n// See: https://github.com/highlightjs/highlight.js/issues/2833\n\n// Grammar extensions allow \"syntactic sugar\" to be added to the grammar modes\n// without requiring any underlying changes to the compiler internals.\n\n// `compileMatch` being the perfect small example of now allowing a grammar\n// author to write `match` when they desire to match a single expression rather\n// than being forced to use `begin`.  The extension then just moves `match` into\n// `begin` when it runs.  Ie, no features have been added, but we've just made\n// the experience of writing (and reading grammars) a little bit nicer.\n\n// ------\n\n// TODO: We need negative look-behind support to do this properly\n/**\n * Skip a match if it has a preceding dot\n *\n * This is used for `beginKeywords` to prevent matching expressions such as\n * `bob.keyword.do()`. The mode compiler automatically wires this up as a\n * special _internal_ 'on:begin' callback for modes with `beginKeywords`\n * @param {RegExpMatchArray} match\n * @param {CallbackResponse} response\n */\nfunction skipIfHasPrecedingDot(match, response) {\n  const before = match.input[match.index - 1];\n  if (before === \".\") {\n    response.ignoreMatch();\n  }\n}\n\n/**\n *\n * @type {CompilerExt}\n */\nfunction scopeClassName(mode, _parent) {\n  // eslint-disable-next-line no-undefined\n  if (mode.className !== undefined) {\n    mode.scope = mode.className;\n    delete mode.className;\n  }\n}\n\n/**\n * `beginKeywords` syntactic sugar\n * @type {CompilerExt}\n */\nfunction beginKeywords(mode, parent) {\n  if (!parent) return;\n  if (!mode.beginKeywords) return;\n\n  // for languages with keywords that include non-word characters checking for\n  // a word boundary is not sufficient, so instead we check for a word boundary\n  // or whitespace - this does no harm in any case since our keyword engine\n  // doesn't allow spaces in keywords anyways and we still check for the boundary\n  // first\n  mode.begin = '\\\\b(' + mode.beginKeywords.split(' ').join('|') + ')(?!\\\\.)(?=\\\\b|\\\\s)';\n  mode.__beforeBegin = skipIfHasPrecedingDot;\n  mode.keywords = mode.keywords || mode.beginKeywords;\n  delete mode.beginKeywords;\n\n  // prevents double relevance, the keywords themselves provide\n  // relevance, the mode doesn't need to double it\n  // eslint-disable-next-line no-undefined\n  if (mode.relevance === undefined) mode.relevance = 0;\n}\n\n/**\n * Allow `illegal` to contain an array of illegal values\n * @type {CompilerExt}\n */\nfunction compileIllegal(mode, _parent) {\n  if (!Array.isArray(mode.illegal)) return;\n\n  mode.illegal = either(...mode.illegal);\n}\n\n/**\n * `match` to match a single expression for readability\n * @type {CompilerExt}\n */\nfunction compileMatch(mode, _parent) {\n  if (!mode.match) return;\n  if (mode.begin || mode.end) throw new Error(\"begin & end are not supported with match\");\n\n  mode.begin = mode.match;\n  delete mode.match;\n}\n\n/**\n * provides the default 1 relevance to all modes\n * @type {CompilerExt}\n */\nfunction compileRelevance(mode, _parent) {\n  // eslint-disable-next-line no-undefined\n  if (mode.relevance === undefined) mode.relevance = 1;\n}\n\n// allow beforeMatch to act as a \"qualifier\" for the match\n// the full match begin must be [beforeMatch][begin]\nconst beforeMatchExt = (mode, parent) => {\n  if (!mode.beforeMatch) return;\n  // starts conflicts with endsParent which we need to make sure the child\n  // rule is not matched multiple times\n  if (mode.starts) throw new Error(\"beforeMatch cannot be used with starts\");\n\n  const originalMode = Object.assign({}, mode);\n  Object.keys(mode).forEach((key) => { delete mode[key]; });\n\n  mode.keywords = originalMode.keywords;\n  mode.begin = concat(originalMode.beforeMatch, lookahead(originalMode.begin));\n  mode.starts = {\n    relevance: 0,\n    contains: [\n      Object.assign(originalMode, { endsParent: true })\n    ]\n  };\n  mode.relevance = 0;\n\n  delete originalMode.beforeMatch;\n};\n\n// keywords that should have no default relevance value\nconst COMMON_KEYWORDS = [\n  'of',\n  'and',\n  'for',\n  'in',\n  'not',\n  'or',\n  'if',\n  'then',\n  'parent', // common variable name\n  'list', // common variable name\n  'value' // common variable name\n];\n\nconst DEFAULT_KEYWORD_SCOPE = \"keyword\";\n\n/**\n * Given raw keywords from a language definition, compile them.\n *\n * @param {string | Record<string,string|string[]> | Array<string>} rawKeywords\n * @param {boolean} caseInsensitive\n */\nfunction compileKeywords(rawKeywords, caseInsensitive, scopeName = DEFAULT_KEYWORD_SCOPE) {\n  /** @type KeywordDict */\n  const compiledKeywords = Object.create(null);\n\n  // input can be a string of keywords, an array of keywords, or a object with\n  // named keys representing scopeName (which can then point to a string or array)\n  if (typeof rawKeywords === 'string') {\n    compileList(scopeName, rawKeywords.split(\" \"));\n  } else if (Array.isArray(rawKeywords)) {\n    compileList(scopeName, rawKeywords);\n  } else {\n    Object.keys(rawKeywords).forEach(function(scopeName) {\n      // collapse all our objects back into the parent object\n      Object.assign(\n        compiledKeywords,\n        compileKeywords(rawKeywords[scopeName], caseInsensitive, scopeName)\n      );\n    });\n  }\n  return compiledKeywords;\n\n  // ---\n\n  /**\n   * Compiles an individual list of keywords\n   *\n   * Ex: \"for if when while|5\"\n   *\n   * @param {string} scopeName\n   * @param {Array<string>} keywordList\n   */\n  function compileList(scopeName, keywordList) {\n    if (caseInsensitive) {\n      keywordList = keywordList.map(x => x.toLowerCase());\n    }\n    keywordList.forEach(function(keyword) {\n      const pair = keyword.split('|');\n      compiledKeywords[pair[0]] = [scopeName, scoreForKeyword(pair[0], pair[1])];\n    });\n  }\n}\n\n/**\n * Returns the proper score for a given keyword\n *\n * Also takes into account comment keywords, which will be scored 0 UNLESS\n * another score has been manually assigned.\n * @param {string} keyword\n * @param {string} [providedScore]\n */\nfunction scoreForKeyword(keyword, providedScore) {\n  // manual scores always win over common keywords\n  // so you can force a score of 1 if you really insist\n  if (providedScore) {\n    return Number(providedScore);\n  }\n\n  return commonKeyword(keyword) ? 0 : 1;\n}\n\n/**\n * Determines if a given keyword is common or not\n *\n * @param {string} keyword */\nfunction commonKeyword(keyword) {\n  return COMMON_KEYWORDS.includes(keyword.toLowerCase());\n}\n\n/*\n\nFor the reasoning behind this please see:\nhttps://github.com/highlightjs/highlight.js/issues/2880#issuecomment-747275419\n\n*/\n\n/**\n * @type {Record<string, boolean>}\n */\nconst seenDeprecations = {};\n\n/**\n * @param {string} message\n */\nconst error = (message) => {\n  console.error(message);\n};\n\n/**\n * @param {string} message\n * @param {any} args\n */\nconst warn = (message, ...args) => {\n  console.log(`WARN: ${message}`, ...args);\n};\n\n/**\n * @param {string} version\n * @param {string} message\n */\nconst deprecated = (version, message) => {\n  if (seenDeprecations[`${version}/${message}`]) return;\n\n  console.log(`Deprecated as of ${version}. ${message}`);\n  seenDeprecations[`${version}/${message}`] = true;\n};\n\n/* eslint-disable no-throw-literal */\n\n/**\n@typedef {import('highlight.js').CompiledMode} CompiledMode\n*/\n\nconst MultiClassError = new Error();\n\n/**\n * Renumbers labeled scope names to account for additional inner match\n * groups that otherwise would break everything.\n *\n * Lets say we 3 match scopes:\n *\n *   { 1 => ..., 2 => ..., 3 => ... }\n *\n * So what we need is a clean match like this:\n *\n *   (a)(b)(c) => [ \"a\", \"b\", \"c\" ]\n *\n * But this falls apart with inner match groups:\n *\n * (a)(((b)))(c) => [\"a\", \"b\", \"b\", \"b\", \"c\" ]\n *\n * Our scopes are now \"out of alignment\" and we're repeating `b` 3 times.\n * What needs to happen is the numbers are remapped:\n *\n *   { 1 => ..., 2 => ..., 5 => ... }\n *\n * We also need to know that the ONLY groups that should be output\n * are 1, 2, and 5.  This function handles this behavior.\n *\n * @param {CompiledMode} mode\n * @param {Array<RegExp | string>} regexes\n * @param {{key: \"beginScope\"|\"endScope\"}} opts\n */\nfunction remapScopeNames(mode, regexes, { key }) {\n  let offset = 0;\n  const scopeNames = mode[key];\n  /** @type Record<number,boolean> */\n  const emit = {};\n  /** @type Record<number,string> */\n  const positions = {};\n\n  for (let i = 1; i <= regexes.length; i++) {\n    positions[i + offset] = scopeNames[i];\n    emit[i + offset] = true;\n    offset += countMatchGroups(regexes[i - 1]);\n  }\n  // we use _emit to keep track of which match groups are \"top-level\" to avoid double\n  // output from inside match groups\n  mode[key] = positions;\n  mode[key]._emit = emit;\n  mode[key]._multi = true;\n}\n\n/**\n * @param {CompiledMode} mode\n */\nfunction beginMultiClass(mode) {\n  if (!Array.isArray(mode.begin)) return;\n\n  if (mode.skip || mode.excludeBegin || mode.returnBegin) {\n    error(\"skip, excludeBegin, returnBegin not compatible with beginScope: {}\");\n    throw MultiClassError;\n  }\n\n  if (typeof mode.beginScope !== \"object\" || mode.beginScope === null) {\n    error(\"beginScope must be object\");\n    throw MultiClassError;\n  }\n\n  remapScopeNames(mode, mode.begin, { key: \"beginScope\" });\n  mode.begin = _rewriteBackreferences(mode.begin, { joinWith: \"\" });\n}\n\n/**\n * @param {CompiledMode} mode\n */\nfunction endMultiClass(mode) {\n  if (!Array.isArray(mode.end)) return;\n\n  if (mode.skip || mode.excludeEnd || mode.returnEnd) {\n    error(\"skip, excludeEnd, returnEnd not compatible with endScope: {}\");\n    throw MultiClassError;\n  }\n\n  if (typeof mode.endScope !== \"object\" || mode.endScope === null) {\n    error(\"endScope must be object\");\n    throw MultiClassError;\n  }\n\n  remapScopeNames(mode, mode.end, { key: \"endScope\" });\n  mode.end = _rewriteBackreferences(mode.end, { joinWith: \"\" });\n}\n\n/**\n * this exists only to allow `scope: {}` to be used beside `match:`\n * Otherwise `beginScope` would necessary and that would look weird\n\n  {\n    match: [ /def/, /\\w+/ ]\n    scope: { 1: \"keyword\" , 2: \"title\" }\n  }\n\n * @param {CompiledMode} mode\n */\nfunction scopeSugar(mode) {\n  if (mode.scope && typeof mode.scope === \"object\" && mode.scope !== null) {\n    mode.beginScope = mode.scope;\n    delete mode.scope;\n  }\n}\n\n/**\n * @param {CompiledMode} mode\n */\nfunction MultiClass(mode) {\n  scopeSugar(mode);\n\n  if (typeof mode.beginScope === \"string\") {\n    mode.beginScope = { _wrap: mode.beginScope };\n  }\n  if (typeof mode.endScope === \"string\") {\n    mode.endScope = { _wrap: mode.endScope };\n  }\n\n  beginMultiClass(mode);\n  endMultiClass(mode);\n}\n\n/**\n@typedef {import('highlight.js').Mode} Mode\n@typedef {import('highlight.js').CompiledMode} CompiledMode\n@typedef {import('highlight.js').Language} Language\n@typedef {import('highlight.js').HLJSPlugin} HLJSPlugin\n@typedef {import('highlight.js').CompiledLanguage} CompiledLanguage\n*/\n\n// compilation\n\n/**\n * Compiles a language definition result\n *\n * Given the raw result of a language definition (Language), compiles this so\n * that it is ready for highlighting code.\n * @param {Language} language\n * @returns {CompiledLanguage}\n */\nfunction compileLanguage(language) {\n  /**\n   * Builds a regex with the case sensitivity of the current language\n   *\n   * @param {RegExp | string} value\n   * @param {boolean} [global]\n   */\n  function langRe(value, global) {\n    return new RegExp(\n      source(value),\n      'm'\n      + (language.case_insensitive ? 'i' : '')\n      + (language.unicodeRegex ? 'u' : '')\n      + (global ? 'g' : '')\n    );\n  }\n\n  /**\n    Stores multiple regular expressions and allows you to quickly search for\n    them all in a string simultaneously - returning the first match.  It does\n    this by creating a huge (a|b|c) regex - each individual item wrapped with ()\n    and joined by `|` - using match groups to track position.  When a match is\n    found checking which position in the array has content allows us to figure\n    out which of the original regexes / match groups triggered the match.\n\n    The match object itself (the result of `Regex.exec`) is returned but also\n    enhanced by merging in any meta-data that was registered with the regex.\n    This is how we keep track of which mode matched, and what type of rule\n    (`illegal`, `begin`, end, etc).\n  */\n  class MultiRegex {\n    constructor() {\n      this.matchIndexes = {};\n      // @ts-ignore\n      this.regexes = [];\n      this.matchAt = 1;\n      this.position = 0;\n    }\n\n    // @ts-ignore\n    addRule(re, opts) {\n      opts.position = this.position++;\n      // @ts-ignore\n      this.matchIndexes[this.matchAt] = opts;\n      this.regexes.push([opts, re]);\n      this.matchAt += countMatchGroups(re) + 1;\n    }\n\n    compile() {\n      if (this.regexes.length === 0) {\n        // avoids the need to check length every time exec is called\n        // @ts-ignore\n        this.exec = () => null;\n      }\n      const terminators = this.regexes.map(el => el[1]);\n      this.matcherRe = langRe(_rewriteBackreferences(terminators, { joinWith: '|' }), true);\n      this.lastIndex = 0;\n    }\n\n    /** @param {string} s */\n    exec(s) {\n      this.matcherRe.lastIndex = this.lastIndex;\n      const match = this.matcherRe.exec(s);\n      if (!match) { return null; }\n\n      // eslint-disable-next-line no-undefined\n      const i = match.findIndex((el, i) => i > 0 && el !== undefined);\n      // @ts-ignore\n      const matchData = this.matchIndexes[i];\n      // trim off any earlier non-relevant match groups (ie, the other regex\n      // match groups that make up the multi-matcher)\n      match.splice(0, i);\n\n      return Object.assign(match, matchData);\n    }\n  }\n\n  /*\n    Created to solve the key deficiently with MultiRegex - there is no way to\n    test for multiple matches at a single location.  Why would we need to do\n    that?  In the future a more dynamic engine will allow certain matches to be\n    ignored.  An example: if we matched say the 3rd regex in a large group but\n    decided to ignore it - we'd need to started testing again at the 4th\n    regex... but MultiRegex itself gives us no real way to do that.\n\n    So what this class creates MultiRegexs on the fly for whatever search\n    position they are needed.\n\n    NOTE: These additional MultiRegex objects are created dynamically.  For most\n    grammars most of the time we will never actually need anything more than the\n    first MultiRegex - so this shouldn't have too much overhead.\n\n    Say this is our search group, and we match regex3, but wish to ignore it.\n\n      regex1 | regex2 | regex3 | regex4 | regex5    ' ie, startAt = 0\n\n    What we need is a new MultiRegex that only includes the remaining\n    possibilities:\n\n      regex4 | regex5                               ' ie, startAt = 3\n\n    This class wraps all that complexity up in a simple API... `startAt` decides\n    where in the array of expressions to start doing the matching. It\n    auto-increments, so if a match is found at position 2, then startAt will be\n    set to 3.  If the end is reached startAt will return to 0.\n\n    MOST of the time the parser will be setting startAt manually to 0.\n  */\n  class ResumableMultiRegex {\n    constructor() {\n      // @ts-ignore\n      this.rules = [];\n      // @ts-ignore\n      this.multiRegexes = [];\n      this.count = 0;\n\n      this.lastIndex = 0;\n      this.regexIndex = 0;\n    }\n\n    // @ts-ignore\n    getMatcher(index) {\n      if (this.multiRegexes[index]) return this.multiRegexes[index];\n\n      const matcher = new MultiRegex();\n      this.rules.slice(index).forEach(([re, opts]) => matcher.addRule(re, opts));\n      matcher.compile();\n      this.multiRegexes[index] = matcher;\n      return matcher;\n    }\n\n    resumingScanAtSamePosition() {\n      return this.regexIndex !== 0;\n    }\n\n    considerAll() {\n      this.regexIndex = 0;\n    }\n\n    // @ts-ignore\n    addRule(re, opts) {\n      this.rules.push([re, opts]);\n      if (opts.type === \"begin\") this.count++;\n    }\n\n    /** @param {string} s */\n    exec(s) {\n      const m = this.getMatcher(this.regexIndex);\n      m.lastIndex = this.lastIndex;\n      let result = m.exec(s);\n\n      // The following is because we have no easy way to say \"resume scanning at the\n      // existing position but also skip the current rule ONLY\". What happens is\n      // all prior rules are also skipped which can result in matching the wrong\n      // thing. Example of matching \"booger\":\n\n      // our matcher is [string, \"booger\", number]\n      //\n      // ....booger....\n\n      // if \"booger\" is ignored then we'd really need a regex to scan from the\n      // SAME position for only: [string, number] but ignoring \"booger\" (if it\n      // was the first match), a simple resume would scan ahead who knows how\n      // far looking only for \"number\", ignoring potential string matches (or\n      // future \"booger\" matches that might be valid.)\n\n      // So what we do: We execute two matchers, one resuming at the same\n      // position, but the second full matcher starting at the position after:\n\n      //     /--- resume first regex match here (for [number])\n      //     |/---- full match here for [string, \"booger\", number]\n      //     vv\n      // ....booger....\n\n      // Which ever results in a match first is then used. So this 3-4 step\n      // process essentially allows us to say \"match at this position, excluding\n      // a prior rule that was ignored\".\n      //\n      // 1. Match \"booger\" first, ignore. Also proves that [string] does non match.\n      // 2. Resume matching for [number]\n      // 3. Match at index + 1 for [string, \"booger\", number]\n      // 4. If #2 and #3 result in matches, which came first?\n      if (this.resumingScanAtSamePosition()) {\n        if (result && result.index === this.lastIndex) ; else { // use the second matcher result\n          const m2 = this.getMatcher(0);\n          m2.lastIndex = this.lastIndex + 1;\n          result = m2.exec(s);\n        }\n      }\n\n      if (result) {\n        this.regexIndex += result.position + 1;\n        if (this.regexIndex === this.count) {\n          // wrap-around to considering all matches again\n          this.considerAll();\n        }\n      }\n\n      return result;\n    }\n  }\n\n  /**\n   * Given a mode, builds a huge ResumableMultiRegex that can be used to walk\n   * the content and find matches.\n   *\n   * @param {CompiledMode} mode\n   * @returns {ResumableMultiRegex}\n   */\n  function buildModeRegex(mode) {\n    const mm = new ResumableMultiRegex();\n\n    mode.contains.forEach(term => mm.addRule(term.begin, { rule: term, type: \"begin\" }));\n\n    if (mode.terminatorEnd) {\n      mm.addRule(mode.terminatorEnd, { type: \"end\" });\n    }\n    if (mode.illegal) {\n      mm.addRule(mode.illegal, { type: \"illegal\" });\n    }\n\n    return mm;\n  }\n\n  /** skip vs abort vs ignore\n   *\n   * @skip   - The mode is still entered and exited normally (and contains rules apply),\n   *           but all content is held and added to the parent buffer rather than being\n   *           output when the mode ends.  Mostly used with `sublanguage` to build up\n   *           a single large buffer than can be parsed by sublanguage.\n   *\n   *             - The mode begin ands ends normally.\n   *             - Content matched is added to the parent mode buffer.\n   *             - The parser cursor is moved forward normally.\n   *\n   * @abort  - A hack placeholder until we have ignore.  Aborts the mode (as if it\n   *           never matched) but DOES NOT continue to match subsequent `contains`\n   *           modes.  Abort is bad/suboptimal because it can result in modes\n   *           farther down not getting applied because an earlier rule eats the\n   *           content but then aborts.\n   *\n   *             - The mode does not begin.\n   *             - Content matched by `begin` is added to the mode buffer.\n   *             - The parser cursor is moved forward accordingly.\n   *\n   * @ignore - Ignores the mode (as if it never matched) and continues to match any\n   *           subsequent `contains` modes.  Ignore isn't technically possible with\n   *           the current parser implementation.\n   *\n   *             - The mode does not begin.\n   *             - Content matched by `begin` is ignored.\n   *             - The parser cursor is not moved forward.\n   */\n\n  /**\n   * Compiles an individual mode\n   *\n   * This can raise an error if the mode contains certain detectable known logic\n   * issues.\n   * @param {Mode} mode\n   * @param {CompiledMode | null} [parent]\n   * @returns {CompiledMode | never}\n   */\n  function compileMode(mode, parent) {\n    const cmode = /** @type CompiledMode */ (mode);\n    if (mode.isCompiled) return cmode;\n\n    [\n      scopeClassName,\n      // do this early so compiler extensions generally don't have to worry about\n      // the distinction between match/begin\n      compileMatch,\n      MultiClass,\n      beforeMatchExt\n    ].forEach(ext => ext(mode, parent));\n\n    language.compilerExtensions.forEach(ext => ext(mode, parent));\n\n    // __beforeBegin is considered private API, internal use only\n    mode.__beforeBegin = null;\n\n    [\n      beginKeywords,\n      // do this later so compiler extensions that come earlier have access to the\n      // raw array if they wanted to perhaps manipulate it, etc.\n      compileIllegal,\n      // default to 1 relevance if not specified\n      compileRelevance\n    ].forEach(ext => ext(mode, parent));\n\n    mode.isCompiled = true;\n\n    let keywordPattern = null;\n    if (typeof mode.keywords === \"object\" && mode.keywords.$pattern) {\n      // we need a copy because keywords might be compiled multiple times\n      // so we can't go deleting $pattern from the original on the first\n      // pass\n      mode.keywords = Object.assign({}, mode.keywords);\n      keywordPattern = mode.keywords.$pattern;\n      delete mode.keywords.$pattern;\n    }\n    keywordPattern = keywordPattern || /\\w+/;\n\n    if (mode.keywords) {\n      mode.keywords = compileKeywords(mode.keywords, language.case_insensitive);\n    }\n\n    cmode.keywordPatternRe = langRe(keywordPattern, true);\n\n    if (parent) {\n      if (!mode.begin) mode.begin = /\\B|\\b/;\n      cmode.beginRe = langRe(cmode.begin);\n      if (!mode.end && !mode.endsWithParent) mode.end = /\\B|\\b/;\n      if (mode.end) cmode.endRe = langRe(cmode.end);\n      cmode.terminatorEnd = source(cmode.end) || '';\n      if (mode.endsWithParent && parent.terminatorEnd) {\n        cmode.terminatorEnd += (mode.end ? '|' : '') + parent.terminatorEnd;\n      }\n    }\n    if (mode.illegal) cmode.illegalRe = langRe(/** @type {RegExp | string} */ (mode.illegal));\n    if (!mode.contains) mode.contains = [];\n\n    mode.contains = [].concat(...mode.contains.map(function(c) {\n      return expandOrCloneMode(c === 'self' ? mode : c);\n    }));\n    mode.contains.forEach(function(c) { compileMode(/** @type Mode */ (c), cmode); });\n\n    if (mode.starts) {\n      compileMode(mode.starts, parent);\n    }\n\n    cmode.matcher = buildModeRegex(cmode);\n    return cmode;\n  }\n\n  if (!language.compilerExtensions) language.compilerExtensions = [];\n\n  // self is not valid at the top-level\n  if (language.contains && language.contains.includes('self')) {\n    throw new Error(\"ERR: contains `self` is not supported at the top-level of a language.  See documentation.\");\n  }\n\n  // we need a null object, which inherit will guarantee\n  language.classNameAliases = inherit$1(language.classNameAliases || {});\n\n  return compileMode(/** @type Mode */ (language));\n}\n\n/**\n * Determines if a mode has a dependency on it's parent or not\n *\n * If a mode does have a parent dependency then often we need to clone it if\n * it's used in multiple places so that each copy points to the correct parent,\n * where-as modes without a parent can often safely be re-used at the bottom of\n * a mode chain.\n *\n * @param {Mode | null} mode\n * @returns {boolean} - is there a dependency on the parent?\n * */\nfunction dependencyOnParent(mode) {\n  if (!mode) return false;\n\n  return mode.endsWithParent || dependencyOnParent(mode.starts);\n}\n\n/**\n * Expands a mode or clones it if necessary\n *\n * This is necessary for modes with parental dependenceis (see notes on\n * `dependencyOnParent`) and for nodes that have `variants` - which must then be\n * exploded into their own individual modes at compile time.\n *\n * @param {Mode} mode\n * @returns {Mode | Mode[]}\n * */\nfunction expandOrCloneMode(mode) {\n  if (mode.variants && !mode.cachedVariants) {\n    mode.cachedVariants = mode.variants.map(function(variant) {\n      return inherit$1(mode, { variants: null }, variant);\n    });\n  }\n\n  // EXPAND\n  // if we have variants then essentially \"replace\" the mode with the variants\n  // this happens in compileMode, where this function is called from\n  if (mode.cachedVariants) {\n    return mode.cachedVariants;\n  }\n\n  // CLONE\n  // if we have dependencies on parents then we need a unique\n  // instance of ourselves, so we can be reused with many\n  // different parents without issue\n  if (dependencyOnParent(mode)) {\n    return inherit$1(mode, { starts: mode.starts ? inherit$1(mode.starts) : null });\n  }\n\n  if (Object.isFrozen(mode)) {\n    return inherit$1(mode);\n  }\n\n  // no special dependency issues, just return ourselves\n  return mode;\n}\n\nvar version = \"11.6.0\";\n\nclass HTMLInjectionError extends Error {\n  constructor(reason, html) {\n    super(reason);\n    this.name = \"HTMLInjectionError\";\n    this.html = html;\n  }\n}\n\n/*\nSyntax highlighting with language autodetection.\nhttps://highlightjs.org/\n*/\n\n/**\n@typedef {import('highlight.js').Mode} Mode\n@typedef {import('highlight.js').CompiledMode} CompiledMode\n@typedef {import('highlight.js').CompiledScope} CompiledScope\n@typedef {import('highlight.js').Language} Language\n@typedef {import('highlight.js').HLJSApi} HLJSApi\n@typedef {import('highlight.js').HLJSPlugin} HLJSPlugin\n@typedef {import('highlight.js').PluginEvent} PluginEvent\n@typedef {import('highlight.js').HLJSOptions} HLJSOptions\n@typedef {import('highlight.js').LanguageFn} LanguageFn\n@typedef {import('highlight.js').HighlightedHTMLElement} HighlightedHTMLElement\n@typedef {import('highlight.js').BeforeHighlightContext} BeforeHighlightContext\n@typedef {import('highlight.js/private').MatchType} MatchType\n@typedef {import('highlight.js/private').KeywordData} KeywordData\n@typedef {import('highlight.js/private').EnhancedMatch} EnhancedMatch\n@typedef {import('highlight.js/private').AnnotatedError} AnnotatedError\n@typedef {import('highlight.js').AutoHighlightResult} AutoHighlightResult\n@typedef {import('highlight.js').HighlightOptions} HighlightOptions\n@typedef {import('highlight.js').HighlightResult} HighlightResult\n*/\n\n\nconst escape = escapeHTML;\nconst inherit = inherit$1;\nconst NO_MATCH = Symbol(\"nomatch\");\nconst MAX_KEYWORD_HITS = 7;\n\n/**\n * @param {any} hljs - object that is extended (legacy)\n * @returns {HLJSApi}\n */\nconst HLJS = function(hljs) {\n  // Global internal variables used within the highlight.js library.\n  /** @type {Record<string, Language>} */\n  const languages = Object.create(null);\n  /** @type {Record<string, string>} */\n  const aliases = Object.create(null);\n  /** @type {HLJSPlugin[]} */\n  const plugins = [];\n\n  // safe/production mode - swallows more errors, tries to keep running\n  // even if a single syntax or parse hits a fatal error\n  let SAFE_MODE = true;\n  const LANGUAGE_NOT_FOUND = \"Could not find the language '{}', did you forget to load/include a language module?\";\n  /** @type {Language} */\n  const PLAINTEXT_LANGUAGE = { disableAutodetect: true, name: 'Plain text', contains: [] };\n\n  // Global options used when within external APIs. This is modified when\n  // calling the `hljs.configure` function.\n  /** @type HLJSOptions */\n  let options = {\n    ignoreUnescapedHTML: false,\n    throwUnescapedHTML: false,\n    noHighlightRe: /^(no-?highlight)$/i,\n    languageDetectRe: /\\blang(?:uage)?-([\\w-]+)\\b/i,\n    classPrefix: 'hljs-',\n    cssSelector: 'pre code',\n    languages: null,\n    // beta configuration options, subject to change, welcome to discuss\n    // https://github.com/highlightjs/highlight.js/issues/1086\n    __emitter: TokenTreeEmitter\n  };\n\n  /* Utility functions */\n\n  /**\n   * Tests a language name to see if highlighting should be skipped\n   * @param {string} languageName\n   */\n  function shouldNotHighlight(languageName) {\n    return options.noHighlightRe.test(languageName);\n  }\n\n  /**\n   * @param {HighlightedHTMLElement} block - the HTML element to determine language for\n   */\n  function blockLanguage(block) {\n    let classes = block.className + ' ';\n\n    classes += block.parentNode ? block.parentNode.className : '';\n\n    // language-* takes precedence over non-prefixed class names.\n    const match = options.languageDetectRe.exec(classes);\n    if (match) {\n      const language = getLanguage(match[1]);\n      if (!language) {\n        warn(LANGUAGE_NOT_FOUND.replace(\"{}\", match[1]));\n        warn(\"Falling back to no-highlight mode for this block.\", block);\n      }\n      return language ? match[1] : 'no-highlight';\n    }\n\n    return classes\n      .split(/\\s+/)\n      .find((_class) => shouldNotHighlight(_class) || getLanguage(_class));\n  }\n\n  /**\n   * Core highlighting function.\n   *\n   * OLD API\n   * highlight(lang, code, ignoreIllegals, continuation)\n   *\n   * NEW API\n   * highlight(code, {lang, ignoreIllegals})\n   *\n   * @param {string} codeOrLanguageName - the language to use for highlighting\n   * @param {string | HighlightOptions} optionsOrCode - the code to highlight\n   * @param {boolean} [ignoreIllegals] - whether to ignore illegal matches, default is to bail\n   *\n   * @returns {HighlightResult} Result - an object that represents the result\n   * @property {string} language - the language name\n   * @property {number} relevance - the relevance score\n   * @property {string} value - the highlighted HTML code\n   * @property {string} code - the original raw code\n   * @property {CompiledMode} top - top of the current mode stack\n   * @property {boolean} illegal - indicates whether any illegal matches were found\n  */\n  function highlight(codeOrLanguageName, optionsOrCode, ignoreIllegals) {\n    let code = \"\";\n    let languageName = \"\";\n    if (typeof optionsOrCode === \"object\") {\n      code = codeOrLanguageName;\n      ignoreIllegals = optionsOrCode.ignoreIllegals;\n      languageName = optionsOrCode.language;\n    } else {\n      // old API\n      deprecated(\"10.7.0\", \"highlight(lang, code, ...args) has been deprecated.\");\n      deprecated(\"10.7.0\", \"Please use highlight(code, options) instead.\\nhttps://github.com/highlightjs/highlight.js/issues/2277\");\n      languageName = codeOrLanguageName;\n      code = optionsOrCode;\n    }\n\n    // https://github.com/highlightjs/highlight.js/issues/3149\n    // eslint-disable-next-line no-undefined\n    if (ignoreIllegals === undefined) { ignoreIllegals = true; }\n\n    /** @type {BeforeHighlightContext} */\n    const context = {\n      code,\n      language: languageName\n    };\n    // the plugin can change the desired language or the code to be highlighted\n    // just be changing the object it was passed\n    fire(\"before:highlight\", context);\n\n    // a before plugin can usurp the result completely by providing it's own\n    // in which case we don't even need to call highlight\n    const result = context.result\n      ? context.result\n      : _highlight(context.language, context.code, ignoreIllegals);\n\n    result.code = context.code;\n    // the plugin can change anything in result to suite it\n    fire(\"after:highlight\", result);\n\n    return result;\n  }\n\n  /**\n   * private highlight that's used internally and does not fire callbacks\n   *\n   * @param {string} languageName - the language to use for highlighting\n   * @param {string} codeToHighlight - the code to highlight\n   * @param {boolean?} [ignoreIllegals] - whether to ignore illegal matches, default is to bail\n   * @param {CompiledMode?} [continuation] - current continuation mode, if any\n   * @returns {HighlightResult} - result of the highlight operation\n  */\n  function _highlight(languageName, codeToHighlight, ignoreIllegals, continuation) {\n    const keywordHits = Object.create(null);\n\n    /**\n     * Return keyword data if a match is a keyword\n     * @param {CompiledMode} mode - current mode\n     * @param {string} matchText - the textual match\n     * @returns {KeywordData | false}\n     */\n    function keywordData(mode, matchText) {\n      return mode.keywords[matchText];\n    }\n\n    function processKeywords() {\n      if (!top.keywords) {\n        emitter.addText(modeBuffer);\n        return;\n      }\n\n      let lastIndex = 0;\n      top.keywordPatternRe.lastIndex = 0;\n      let match = top.keywordPatternRe.exec(modeBuffer);\n      let buf = \"\";\n\n      while (match) {\n        buf += modeBuffer.substring(lastIndex, match.index);\n        const word = language.case_insensitive ? match[0].toLowerCase() : match[0];\n        const data = keywordData(top, word);\n        if (data) {\n          const [kind, keywordRelevance] = data;\n          emitter.addText(buf);\n          buf = \"\";\n\n          keywordHits[word] = (keywordHits[word] || 0) + 1;\n          if (keywordHits[word] <= MAX_KEYWORD_HITS) relevance += keywordRelevance;\n          if (kind.startsWith(\"_\")) {\n            // _ implied for relevance only, do not highlight\n            // by applying a class name\n            buf += match[0];\n          } else {\n            const cssClass = language.classNameAliases[kind] || kind;\n            emitter.addKeyword(match[0], cssClass);\n          }\n        } else {\n          buf += match[0];\n        }\n        lastIndex = top.keywordPatternRe.lastIndex;\n        match = top.keywordPatternRe.exec(modeBuffer);\n      }\n      buf += modeBuffer.substring(lastIndex);\n      emitter.addText(buf);\n    }\n\n    function processSubLanguage() {\n      if (modeBuffer === \"\") return;\n      /** @type HighlightResult */\n      let result = null;\n\n      if (typeof top.subLanguage === 'string') {\n        if (!languages[top.subLanguage]) {\n          emitter.addText(modeBuffer);\n          return;\n        }\n        result = _highlight(top.subLanguage, modeBuffer, true, continuations[top.subLanguage]);\n        continuations[top.subLanguage] = /** @type {CompiledMode} */ (result._top);\n      } else {\n        result = highlightAuto(modeBuffer, top.subLanguage.length ? top.subLanguage : null);\n      }\n\n      // Counting embedded language score towards the host language may be disabled\n      // with zeroing the containing mode relevance. Use case in point is Markdown that\n      // allows XML everywhere and makes every XML snippet to have a much larger Markdown\n      // score.\n      if (top.relevance > 0) {\n        relevance += result.relevance;\n      }\n      emitter.addSublanguage(result._emitter, result.language);\n    }\n\n    function processBuffer() {\n      if (top.subLanguage != null) {\n        processSubLanguage();\n      } else {\n        processKeywords();\n      }\n      modeBuffer = '';\n    }\n\n    /**\n     * @param {CompiledScope} scope\n     * @param {RegExpMatchArray} match\n     */\n    function emitMultiClass(scope, match) {\n      let i = 1;\n      const max = match.length - 1;\n      while (i <= max) {\n        if (!scope._emit[i]) { i++; continue; }\n        const klass = language.classNameAliases[scope[i]] || scope[i];\n        const text = match[i];\n        if (klass) {\n          emitter.addKeyword(text, klass);\n        } else {\n          modeBuffer = text;\n          processKeywords();\n          modeBuffer = \"\";\n        }\n        i++;\n      }\n    }\n\n    /**\n     * @param {CompiledMode} mode - new mode to start\n     * @param {RegExpMatchArray} match\n     */\n    function startNewMode(mode, match) {\n      if (mode.scope && typeof mode.scope === \"string\") {\n        emitter.openNode(language.classNameAliases[mode.scope] || mode.scope);\n      }\n      if (mode.beginScope) {\n        // beginScope just wraps the begin match itself in a scope\n        if (mode.beginScope._wrap) {\n          emitter.addKeyword(modeBuffer, language.classNameAliases[mode.beginScope._wrap] || mode.beginScope._wrap);\n          modeBuffer = \"\";\n        } else if (mode.beginScope._multi) {\n          // at this point modeBuffer should just be the match\n          emitMultiClass(mode.beginScope, match);\n          modeBuffer = \"\";\n        }\n      }\n\n      top = Object.create(mode, { parent: { value: top } });\n      return top;\n    }\n\n    /**\n     * @param {CompiledMode } mode - the mode to potentially end\n     * @param {RegExpMatchArray} match - the latest match\n     * @param {string} matchPlusRemainder - match plus remainder of content\n     * @returns {CompiledMode | void} - the next mode, or if void continue on in current mode\n     */\n    function endOfMode(mode, match, matchPlusRemainder) {\n      let matched = startsWith(mode.endRe, matchPlusRemainder);\n\n      if (matched) {\n        if (mode[\"on:end\"]) {\n          const resp = new Response(mode);\n          mode[\"on:end\"](match, resp);\n          if (resp.isMatchIgnored) matched = false;\n        }\n\n        if (matched) {\n          while (mode.endsParent && mode.parent) {\n            mode = mode.parent;\n          }\n          return mode;\n        }\n      }\n      // even if on:end fires an `ignore` it's still possible\n      // that we might trigger the end node because of a parent mode\n      if (mode.endsWithParent) {\n        return endOfMode(mode.parent, match, matchPlusRemainder);\n      }\n    }\n\n    /**\n     * Handle matching but then ignoring a sequence of text\n     *\n     * @param {string} lexeme - string containing full match text\n     */\n    function doIgnore(lexeme) {\n      if (top.matcher.regexIndex === 0) {\n        // no more regexes to potentially match here, so we move the cursor forward one\n        // space\n        modeBuffer += lexeme[0];\n        return 1;\n      } else {\n        // no need to move the cursor, we still have additional regexes to try and\n        // match at this very spot\n        resumeScanAtSamePosition = true;\n        return 0;\n      }\n    }\n\n    /**\n     * Handle the start of a new potential mode match\n     *\n     * @param {EnhancedMatch} match - the current match\n     * @returns {number} how far to advance the parse cursor\n     */\n    function doBeginMatch(match) {\n      const lexeme = match[0];\n      const newMode = match.rule;\n\n      const resp = new Response(newMode);\n      // first internal before callbacks, then the public ones\n      const beforeCallbacks = [newMode.__beforeBegin, newMode[\"on:begin\"]];\n      for (const cb of beforeCallbacks) {\n        if (!cb) continue;\n        cb(match, resp);\n        if (resp.isMatchIgnored) return doIgnore(lexeme);\n      }\n\n      if (newMode.skip) {\n        modeBuffer += lexeme;\n      } else {\n        if (newMode.excludeBegin) {\n          modeBuffer += lexeme;\n        }\n        processBuffer();\n        if (!newMode.returnBegin && !newMode.excludeBegin) {\n          modeBuffer = lexeme;\n        }\n      }\n      startNewMode(newMode, match);\n      return newMode.returnBegin ? 0 : lexeme.length;\n    }\n\n    /**\n     * Handle the potential end of mode\n     *\n     * @param {RegExpMatchArray} match - the current match\n     */\n    function doEndMatch(match) {\n      const lexeme = match[0];\n      const matchPlusRemainder = codeToHighlight.substring(match.index);\n\n      const endMode = endOfMode(top, match, matchPlusRemainder);\n      if (!endMode) { return NO_MATCH; }\n\n      const origin = top;\n      if (top.endScope && top.endScope._wrap) {\n        processBuffer();\n        emitter.addKeyword(lexeme, top.endScope._wrap);\n      } else if (top.endScope && top.endScope._multi) {\n        processBuffer();\n        emitMultiClass(top.endScope, match);\n      } else if (origin.skip) {\n        modeBuffer += lexeme;\n      } else {\n        if (!(origin.returnEnd || origin.excludeEnd)) {\n          modeBuffer += lexeme;\n        }\n        processBuffer();\n        if (origin.excludeEnd) {\n          modeBuffer = lexeme;\n        }\n      }\n      do {\n        if (top.scope) {\n          emitter.closeNode();\n        }\n        if (!top.skip && !top.subLanguage) {\n          relevance += top.relevance;\n        }\n        top = top.parent;\n      } while (top !== endMode.parent);\n      if (endMode.starts) {\n        startNewMode(endMode.starts, match);\n      }\n      return origin.returnEnd ? 0 : lexeme.length;\n    }\n\n    function processContinuations() {\n      const list = [];\n      for (let current = top; current !== language; current = current.parent) {\n        if (current.scope) {\n          list.unshift(current.scope);\n        }\n      }\n      list.forEach(item => emitter.openNode(item));\n    }\n\n    /** @type {{type?: MatchType, index?: number, rule?: Mode}}} */\n    let lastMatch = {};\n\n    /**\n     *  Process an individual match\n     *\n     * @param {string} textBeforeMatch - text preceding the match (since the last match)\n     * @param {EnhancedMatch} [match] - the match itself\n     */\n    function processLexeme(textBeforeMatch, match) {\n      const lexeme = match && match[0];\n\n      // add non-matched text to the current mode buffer\n      modeBuffer += textBeforeMatch;\n\n      if (lexeme == null) {\n        processBuffer();\n        return 0;\n      }\n\n      // we've found a 0 width match and we're stuck, so we need to advance\n      // this happens when we have badly behaved rules that have optional matchers to the degree that\n      // sometimes they can end up matching nothing at all\n      // Ref: https://github.com/highlightjs/highlight.js/issues/2140\n      if (lastMatch.type === \"begin\" && match.type === \"end\" && lastMatch.index === match.index && lexeme === \"\") {\n        // spit the \"skipped\" character that our regex choked on back into the output sequence\n        modeBuffer += codeToHighlight.slice(match.index, match.index + 1);\n        if (!SAFE_MODE) {\n          /** @type {AnnotatedError} */\n          const err = new Error(`0 width match regex (${languageName})`);\n          err.languageName = languageName;\n          err.badRule = lastMatch.rule;\n          throw err;\n        }\n        return 1;\n      }\n      lastMatch = match;\n\n      if (match.type === \"begin\") {\n        return doBeginMatch(match);\n      } else if (match.type === \"illegal\" && !ignoreIllegals) {\n        // illegal match, we do not continue processing\n        /** @type {AnnotatedError} */\n        const err = new Error('Illegal lexeme \"' + lexeme + '\" for mode \"' + (top.scope || '<unnamed>') + '\"');\n        err.mode = top;\n        throw err;\n      } else if (match.type === \"end\") {\n        const processed = doEndMatch(match);\n        if (processed !== NO_MATCH) {\n          return processed;\n        }\n      }\n\n      // edge case for when illegal matches $ (end of line) which is technically\n      // a 0 width match but not a begin/end match so it's not caught by the\n      // first handler (when ignoreIllegals is true)\n      if (match.type === \"illegal\" && lexeme === \"\") {\n        // advance so we aren't stuck in an infinite loop\n        return 1;\n      }\n\n      // infinite loops are BAD, this is a last ditch catch all. if we have a\n      // decent number of iterations yet our index (cursor position in our\n      // parsing) still 3x behind our index then something is very wrong\n      // so we bail\n      if (iterations > 100000 && iterations > match.index * 3) {\n        const err = new Error('potential infinite loop, way more iterations than matches');\n        throw err;\n      }\n\n      /*\n      Why might be find ourselves here?  An potential end match that was\n      triggered but could not be completed.  IE, `doEndMatch` returned NO_MATCH.\n      (this could be because a callback requests the match be ignored, etc)\n\n      This causes no real harm other than stopping a few times too many.\n      */\n\n      modeBuffer += lexeme;\n      return lexeme.length;\n    }\n\n    const language = getLanguage(languageName);\n    if (!language) {\n      error(LANGUAGE_NOT_FOUND.replace(\"{}\", languageName));\n      throw new Error('Unknown language: \"' + languageName + '\"');\n    }\n\n    const md = compileLanguage(language);\n    let result = '';\n    /** @type {CompiledMode} */\n    let top = continuation || md;\n    /** @type Record<string,CompiledMode> */\n    const continuations = {}; // keep continuations for sub-languages\n    const emitter = new options.__emitter(options);\n    processContinuations();\n    let modeBuffer = '';\n    let relevance = 0;\n    let index = 0;\n    let iterations = 0;\n    let resumeScanAtSamePosition = false;\n\n    try {\n      top.matcher.considerAll();\n\n      for (;;) {\n        iterations++;\n        if (resumeScanAtSamePosition) {\n          // only regexes not matched previously will now be\n          // considered for a potential match\n          resumeScanAtSamePosition = false;\n        } else {\n          top.matcher.considerAll();\n        }\n        top.matcher.lastIndex = index;\n\n        const match = top.matcher.exec(codeToHighlight);\n        // console.log(\"match\", match[0], match.rule && match.rule.begin)\n\n        if (!match) break;\n\n        const beforeMatch = codeToHighlight.substring(index, match.index);\n        const processedCount = processLexeme(beforeMatch, match);\n        index = match.index + processedCount;\n      }\n      processLexeme(codeToHighlight.substring(index));\n      emitter.closeAllNodes();\n      emitter.finalize();\n      result = emitter.toHTML();\n\n      return {\n        language: languageName,\n        value: result,\n        relevance: relevance,\n        illegal: false,\n        _emitter: emitter,\n        _top: top\n      };\n    } catch (err) {\n      if (err.message && err.message.includes('Illegal')) {\n        return {\n          language: languageName,\n          value: escape(codeToHighlight),\n          illegal: true,\n          relevance: 0,\n          _illegalBy: {\n            message: err.message,\n            index: index,\n            context: codeToHighlight.slice(index - 100, index + 100),\n            mode: err.mode,\n            resultSoFar: result\n          },\n          _emitter: emitter\n        };\n      } else if (SAFE_MODE) {\n        return {\n          language: languageName,\n          value: escape(codeToHighlight),\n          illegal: false,\n          relevance: 0,\n          errorRaised: err,\n          _emitter: emitter,\n          _top: top\n        };\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  /**\n   * returns a valid highlight result, without actually doing any actual work,\n   * auto highlight starts with this and it's possible for small snippets that\n   * auto-detection may not find a better match\n   * @param {string} code\n   * @returns {HighlightResult}\n   */\n  function justTextHighlightResult(code) {\n    const result = {\n      value: escape(code),\n      illegal: false,\n      relevance: 0,\n      _top: PLAINTEXT_LANGUAGE,\n      _emitter: new options.__emitter(options)\n    };\n    result._emitter.addText(code);\n    return result;\n  }\n\n  /**\n  Highlighting with language detection. Accepts a string with the code to\n  highlight. Returns an object with the following properties:\n\n  - language (detected language)\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n  - secondBest (object with the same structure for second-best heuristically\n    detected language, may be absent)\n\n    @param {string} code\n    @param {Array<string>} [languageSubset]\n    @returns {AutoHighlightResult}\n  */\n  function highlightAuto(code, languageSubset) {\n    languageSubset = languageSubset || options.languages || Object.keys(languages);\n    const plaintext = justTextHighlightResult(code);\n\n    const results = languageSubset.filter(getLanguage).filter(autoDetection).map(name =>\n      _highlight(name, code, false)\n    );\n    results.unshift(plaintext); // plaintext is always an option\n\n    const sorted = results.sort((a, b) => {\n      // sort base on relevance\n      if (a.relevance !== b.relevance) return b.relevance - a.relevance;\n\n      // always award the tie to the base language\n      // ie if C++ and Arduino are tied, it's more likely to be C++\n      if (a.language && b.language) {\n        if (getLanguage(a.language).supersetOf === b.language) {\n          return 1;\n        } else if (getLanguage(b.language).supersetOf === a.language) {\n          return -1;\n        }\n      }\n\n      // otherwise say they are equal, which has the effect of sorting on\n      // relevance while preserving the original ordering - which is how ties\n      // have historically been settled, ie the language that comes first always\n      // wins in the case of a tie\n      return 0;\n    });\n\n    const [best, secondBest] = sorted;\n\n    /** @type {AutoHighlightResult} */\n    const result = best;\n    result.secondBest = secondBest;\n\n    return result;\n  }\n\n  /**\n   * Builds new class name for block given the language name\n   *\n   * @param {HTMLElement} element\n   * @param {string} [currentLang]\n   * @param {string} [resultLang]\n   */\n  function updateClassName(element, currentLang, resultLang) {\n    const language = (currentLang && aliases[currentLang]) || resultLang;\n\n    element.classList.add(\"hljs\");\n    element.classList.add(`language-${language}`);\n  }\n\n  /**\n   * Applies highlighting to a DOM node containing code.\n   *\n   * @param {HighlightedHTMLElement} element - the HTML element to highlight\n  */\n  function highlightElement(element) {\n    /** @type HTMLElement */\n    let node = null;\n    const language = blockLanguage(element);\n\n    if (shouldNotHighlight(language)) return;\n\n    fire(\"before:highlightElement\",\n      { el: element, language: language });\n\n    // we should be all text, no child nodes (unescaped HTML) - this is possibly\n    // an HTML injection attack - it's likely too late if this is already in\n    // production (the code has likely already done its damage by the time\n    // we're seeing it)... but we yell loudly about this so that hopefully it's\n    // more likely to be caught in development before making it to production\n    if (element.children.length > 0) {\n      if (!options.ignoreUnescapedHTML) {\n        console.warn(\"One of your code blocks includes unescaped HTML. This is a potentially serious security risk.\");\n        console.warn(\"https://github.com/highlightjs/highlight.js/wiki/security\");\n        console.warn(\"The element with unescaped HTML:\");\n        console.warn(element);\n      }\n      if (options.throwUnescapedHTML) {\n        const err = new HTMLInjectionError(\n          \"One of your code blocks includes unescaped HTML.\",\n          element.innerHTML\n        );\n        throw err;\n      }\n    }\n\n    node = element;\n    const text = node.textContent;\n    const result = language ? highlight(text, { language, ignoreIllegals: true }) : highlightAuto(text);\n\n    element.innerHTML = result.value;\n    updateClassName(element, language, result.language);\n    element.result = {\n      language: result.language,\n      // TODO: remove with version 11.0\n      re: result.relevance,\n      relevance: result.relevance\n    };\n    if (result.secondBest) {\n      element.secondBest = {\n        language: result.secondBest.language,\n        relevance: result.secondBest.relevance\n      };\n    }\n\n    fire(\"after:highlightElement\", { el: element, result, text });\n  }\n\n  /**\n   * Updates highlight.js global options with the passed options\n   *\n   * @param {Partial<HLJSOptions>} userOptions\n   */\n  function configure(userOptions) {\n    options = inherit(options, userOptions);\n  }\n\n  // TODO: remove v12, deprecated\n  const initHighlighting = () => {\n    highlightAll();\n    deprecated(\"10.6.0\", \"initHighlighting() deprecated.  Use highlightAll() now.\");\n  };\n\n  // TODO: remove v12, deprecated\n  function initHighlightingOnLoad() {\n    highlightAll();\n    deprecated(\"10.6.0\", \"initHighlightingOnLoad() deprecated.  Use highlightAll() now.\");\n  }\n\n  let wantsHighlight = false;\n\n  /**\n   * auto-highlights all pre>code elements on the page\n   */\n  function highlightAll() {\n    // if we are called too early in the loading process\n    if (document.readyState === \"loading\") {\n      wantsHighlight = true;\n      return;\n    }\n\n    const blocks = document.querySelectorAll(options.cssSelector);\n    blocks.forEach(highlightElement);\n  }\n\n  function boot() {\n    // if a highlight was requested before DOM was loaded, do now\n    if (wantsHighlight) highlightAll();\n  }\n\n  // make sure we are in the browser environment\n  if (typeof window !== 'undefined' && window.addEventListener) {\n    window.addEventListener('DOMContentLoaded', boot, false);\n  }\n\n  /**\n   * Register a language grammar module\n   *\n   * @param {string} languageName\n   * @param {LanguageFn} languageDefinition\n   */\n  function registerLanguage(languageName, languageDefinition) {\n    let lang = null;\n    try {\n      lang = languageDefinition(hljs);\n    } catch (error$1) {\n      error(\"Language definition for '{}' could not be registered.\".replace(\"{}\", languageName));\n      // hard or soft error\n      if (!SAFE_MODE) { throw error$1; } else { error(error$1); }\n      // languages that have serious errors are replaced with essentially a\n      // \"plaintext\" stand-in so that the code blocks will still get normal\n      // css classes applied to them - and one bad language won't break the\n      // entire highlighter\n      lang = PLAINTEXT_LANGUAGE;\n    }\n    // give it a temporary name if it doesn't have one in the meta-data\n    if (!lang.name) lang.name = languageName;\n    languages[languageName] = lang;\n    lang.rawDefinition = languageDefinition.bind(null, hljs);\n\n    if (lang.aliases) {\n      registerAliases(lang.aliases, { languageName });\n    }\n  }\n\n  /**\n   * Remove a language grammar module\n   *\n   * @param {string} languageName\n   */\n  function unregisterLanguage(languageName) {\n    delete languages[languageName];\n    for (const alias of Object.keys(aliases)) {\n      if (aliases[alias] === languageName) {\n        delete aliases[alias];\n      }\n    }\n  }\n\n  /**\n   * @returns {string[]} List of language internal names\n   */\n  function listLanguages() {\n    return Object.keys(languages);\n  }\n\n  /**\n   * @param {string} name - name of the language to retrieve\n   * @returns {Language | undefined}\n   */\n  function getLanguage(name) {\n    name = (name || '').toLowerCase();\n    return languages[name] || languages[aliases[name]];\n  }\n\n  /**\n   *\n   * @param {string|string[]} aliasList - single alias or list of aliases\n   * @param {{languageName: string}} opts\n   */\n  function registerAliases(aliasList, { languageName }) {\n    if (typeof aliasList === 'string') {\n      aliasList = [aliasList];\n    }\n    aliasList.forEach(alias => { aliases[alias.toLowerCase()] = languageName; });\n  }\n\n  /**\n   * Determines if a given language has auto-detection enabled\n   * @param {string} name - name of the language\n   */\n  function autoDetection(name) {\n    const lang = getLanguage(name);\n    return lang && !lang.disableAutodetect;\n  }\n\n  /**\n   * Upgrades the old highlightBlock plugins to the new\n   * highlightElement API\n   * @param {HLJSPlugin} plugin\n   */\n  function upgradePluginAPI(plugin) {\n    // TODO: remove with v12\n    if (plugin[\"before:highlightBlock\"] && !plugin[\"before:highlightElement\"]) {\n      plugin[\"before:highlightElement\"] = (data) => {\n        plugin[\"before:highlightBlock\"](\n          Object.assign({ block: data.el }, data)\n        );\n      };\n    }\n    if (plugin[\"after:highlightBlock\"] && !plugin[\"after:highlightElement\"]) {\n      plugin[\"after:highlightElement\"] = (data) => {\n        plugin[\"after:highlightBlock\"](\n          Object.assign({ block: data.el }, data)\n        );\n      };\n    }\n  }\n\n  /**\n   * @param {HLJSPlugin} plugin\n   */\n  function addPlugin(plugin) {\n    upgradePluginAPI(plugin);\n    plugins.push(plugin);\n  }\n\n  /**\n   *\n   * @param {PluginEvent} event\n   * @param {any} args\n   */\n  function fire(event, args) {\n    const cb = event;\n    plugins.forEach(function(plugin) {\n      if (plugin[cb]) {\n        plugin[cb](args);\n      }\n    });\n  }\n\n  /**\n   * DEPRECATED\n   * @param {HighlightedHTMLElement} el\n   */\n  function deprecateHighlightBlock(el) {\n    deprecated(\"10.7.0\", \"highlightBlock will be removed entirely in v12.0\");\n    deprecated(\"10.7.0\", \"Please use highlightElement now.\");\n\n    return highlightElement(el);\n  }\n\n  /* Interface definition */\n  Object.assign(hljs, {\n    highlight,\n    highlightAuto,\n    highlightAll,\n    highlightElement,\n    // TODO: Remove with v12 API\n    highlightBlock: deprecateHighlightBlock,\n    configure,\n    initHighlighting,\n    initHighlightingOnLoad,\n    registerLanguage,\n    unregisterLanguage,\n    listLanguages,\n    getLanguage,\n    registerAliases,\n    autoDetection,\n    inherit,\n    addPlugin\n  });\n\n  hljs.debugMode = function() { SAFE_MODE = false; };\n  hljs.safeMode = function() { SAFE_MODE = true; };\n  hljs.versionString = version;\n\n  hljs.regex = {\n    concat: concat,\n    lookahead: lookahead,\n    either: either,\n    optional: optional,\n    anyNumberOfTimes: anyNumberOfTimes\n  };\n\n  for (const key in MODES) {\n    // @ts-ignore\n    if (typeof MODES[key] === \"object\") {\n      // @ts-ignore\n      deepFreezeEs6.exports(MODES[key]);\n    }\n  }\n\n  // merge all the modes/regexes into our main object\n  Object.assign(hljs, MODES);\n\n  return hljs;\n};\n\n// export an \"instance\" of the highlighter\nvar highlight = HLJS({});\n\nmodule.exports = highlight;\nhighlight.HighlightJS = highlight;\nhighlight.default = highlight;\n", "import { findChildren } from '@tiptap/core'\nimport { Node as ProsemirrorNode } from '@tiptap/pm/model'\nimport { Plugin, PluginKey } from '@tiptap/pm/state'\nimport { Decoration, DecorationSet } from '@tiptap/pm/view'\n// @ts-ignore\nimport highlight from 'highlight.js/lib/core'\n\nfunction parseNodes(nodes: any[], className: string[] = []): { text: string; classes: string[] }[] {\n  return nodes\n    .map(node => {\n      const classes = [...className, ...(node.properties ? node.properties.className : [])]\n\n      if (node.children) {\n        return parseNodes(node.children, classes)\n      }\n\n      return {\n        text: node.value,\n        classes,\n      }\n    })\n    .flat()\n}\n\nfunction getHighlightNodes(result: any) {\n  // `.value` for lowlight v1, `.children` for lowlight v2\n  return result.value || result.children || []\n}\n\nfunction registered(aliasOrLanguage: string) {\n  return Boolean(highlight.getLanguage(aliasOrLanguage))\n}\n\nfunction getDecorations({\n  doc,\n  name,\n  lowlight,\n  defaultLanguage,\n}: {\n  doc: ProsemirrorNode\n  name: string\n  lowlight: any\n  defaultLanguage: string | null | undefined\n}) {\n  const decorations: Decoration[] = []\n\n  findChildren(doc, node => node.type.name === name).forEach(block => {\n    let from = block.pos + 1\n    const language = block.node.attrs.language || defaultLanguage\n    const languages = lowlight.listLanguages()\n\n    const nodes = language && (languages.includes(language) || registered(language))\n      ? getHighlightNodes(lowlight.highlight(language, block.node.textContent))\n      : getHighlightNodes(lowlight.highlightAuto(block.node.textContent))\n\n    parseNodes(nodes).forEach(node => {\n      const to = from + node.text.length\n\n      if (node.classes.length) {\n        const decoration = Decoration.inline(from, to, {\n          class: node.classes.join(' '),\n        })\n\n        decorations.push(decoration)\n      }\n\n      from = to\n    })\n  })\n\n  return DecorationSet.create(doc, decorations)\n}\n\nfunction isFunction(param: Function) {\n  return typeof param === 'function'\n}\n\nexport function LowlightPlugin({\n  name,\n  lowlight,\n  defaultLanguage,\n}: {\n  name: string\n  lowlight: any\n  defaultLanguage: string | null | undefined\n}) {\n  if (!['highlight', 'highlightAuto', 'listLanguages'].every(api => isFunction(lowlight[api]))) {\n    throw Error(\n      'You should provide an instance of lowlight to use the code-block-lowlight extension',\n    )\n  }\n\n  const lowlightPlugin: Plugin<any> = new Plugin({\n    key: new PluginKey('lowlight'),\n\n    state: {\n      init: (_, { doc }) => getDecorations({\n        doc,\n        name,\n        lowlight,\n        defaultLanguage,\n      }),\n      apply: (transaction, decorationSet, oldState, newState) => {\n        const oldNodeName = oldState.selection.$head.parent.type.name\n        const newNodeName = newState.selection.$head.parent.type.name\n        const oldNodes = findChildren(oldState.doc, node => node.type.name === name)\n        const newNodes = findChildren(newState.doc, node => node.type.name === name)\n\n        if (\n          transaction.docChanged\n          // Apply decorations if:\n          // selection includes named node,\n          && ([oldNodeName, newNodeName].includes(name)\n            // OR transaction adds/removes named node,\n            || newNodes.length !== oldNodes.length\n            // OR transaction has changes that completely encapsulte a node\n            // (for example, a transaction that affects the entire document).\n            // Such transactions can happen during collab syncing via y-prosemirror, for example.\n            || transaction.steps.some(step => {\n              // @ts-ignore\n              return (\n                // @ts-ignore\n                step.from !== undefined\n                // @ts-ignore\n                && step.to !== undefined\n                && oldNodes.some(node => {\n                  // @ts-ignore\n                  return (\n                    // @ts-ignore\n                    node.pos >= step.from\n                    // @ts-ignore\n                    && node.pos + node.node.nodeSize <= step.to\n                  )\n                })\n              )\n            }))\n        ) {\n          return getDecorations({\n            doc: transaction.doc,\n            name,\n            lowlight,\n            defaultLanguage,\n          })\n        }\n\n        return decorationSet.map(transaction.mapping, transaction.doc)\n      },\n    },\n\n    props: {\n      decorations(state) {\n        return lowlightPlugin.getState(state)\n      },\n    },\n  })\n\n  return lowlightPlugin\n}\n", "import CodeBlock, { CodeBlockOptions } from '@tiptap/extension-code-block'\n\nimport { LowlightPlugin } from './lowlight-plugin'\n\nexport interface CodeBlockLowlightOptions extends CodeBlockOptions {\n  lowlight: any,\n  defaultLanguage: string | null | undefined,\n}\n\nexport const CodeBlockLowlight = CodeBlock.extend<CodeBlockLowlightOptions>({\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      lowlight: {},\n      defaultLanguage: null,\n    }\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      ...this.parent?.() || [],\n      LowlightPlugin({\n        name: this.name,\n        lowlight: this.options.lowlight,\n        defaultLanguage: this.options.defaultLanguage,\n      }),\n    ]\n  },\n})\n", "import { lowlight } from \"lowlight\";\nimport Link from \"@tiptap/extension-link\";\nimport Image from \"@tiptap/extension-image\";\nimport Table from \"@tiptap/extension-table\";\nimport StarterKit from \"@tiptap/starter-kit\";\nimport Document from \"@tiptap/extension-document\";\nimport TableRow from \"@tiptap/extension-table-row\";\nimport TextAlign from \"@tiptap/extension-text-align\";\nimport TableCell from \"@tiptap/extension-table-cell\";\nimport { Editor, InputRule } from \"@tiptap/core\";\nimport Placeholder from \"@tiptap/extension-placeholder\";\nimport TableHeader from \"@tiptap/extension-table-header\";\nimport CodeBlockLowlight from \"@tiptap/extension-code-block-lowlight\";\n\nconst CustomDocument = Document.extend({\n  content: \"heading block*\",\n});\n\nconst disableMarkdownShortcut = (markdownShortcut, originalChar) => {\n  return new InputRule(\n    new RegExp(`(^|[\\\\s])${markdownShortcut}(?![\\\\w])`, \"g\"),\n    (state, match, start, end) => {\n      const text = state.doc.textBetween(start, end);\n      if (text === markdownShortcut) {\n        return originalChar;\n      }\n      return null;\n    },\n  );\n};\n\nconst getContent = () => {\n  const urlParams = new URLSearchParams(window.location.search);\n  const isEmptyEditor = !!urlParams.get(\"newWiki\");\n\n  if (patchNewCode !== \"<h1>{{ patch_new_title }}</h1>{{ patch_new_code }}\")\n    return patchNewCode;\n  else if (!isEmptyEditor)\n    return `${$(\".from-markdown .wiki-title\").prop(\"outerHTML\")}${$(\n      \".from-markdown .wiki-content\",\n    ).html()}`.replaceAll(/<br class=\"ProseMirror-trailingBreak\">/g, \"\");\n  return \"<h1></h1><p></p>\";\n};\n\nconst saveWikiPage = (draft = false) => {\n  \n  \n  const urlParams = new URLSearchParams(window.location.search);\n  const isEmptyEditor = !!urlParams.get(\"newWiki\");\n\n  const title = $(`.wiki-editor .ProseMirror h1`).html();\n  if (!title){\n    if(window.wiki_language == \"English\"){\n      $(`.wiki-editor .ProseMirror h1`).focus();\n      frappe.throw(\"Please set a Title\")\n    }\n    else{\n      $(`.wiki-editor .ProseMirror h1`).focus();\n      frappe.throw(\"\u064A\u0631\u062C\u0649 \u062A\u062D\u062F\u064A\u062F \u0639\u0646\u0648\u0627\u0646 \u0644\u0647\u0630\u0647 \u0627\u0644\u0648\u062B\u064A\u0642\u0629\")\n    }\n  }\n  // markdown=1 tag is needed for older wiki content to properly render\n  // TODO: use editor.getHTML() instead of this when ueberdosis/tiptap#4044 is fixed\n  const content = `<div markdown=\"1\">${$(\".editor-space .ProseMirror\")\n    .html()\n    .replace(/<h1>.*?<\\/h1>/, \"\")}</div>`;\n\n  frappe.call({\n    method: \"wiki.wiki.doctype.wiki_page.wiki_page.update\",\n    args: {\n      name: $('[name=\"wiki-page-name\"]').val(),\n      message: `${isEmptyEditor ? \"Created\" : \"Edited\"} ${title}`,\n      content,\n      new: isEmptyEditor,\n      new_sidebar_items: isEmptyEditor ? getSidebarItems() : \"\",\n      title,\n      draft,\n      new_sidebar_group: isEmptyEditor ? urlParams.get(\"newWiki\") : \"\",\n      wiki_page_patch: urlParams.get(\"wikiPagePatch\"),\n    },\n    callback: (r) => {\n      // route back to the main page\n      window.location.href = \"/\" + r.message.route;\n    },\n    freeze: true,\n  });\n};\n\nconst editor = new Editor({\n  element: document.querySelector(\".wiki-editor .editor-space\"),\n  extensions: [\n    CustomDocument,\n    StarterKit.configure({\n      document: false,\n      codeBlock: false,\n    }),\n    Placeholder.configure({\n      placeholder: ({ node }) => {\n        if (node.type.name === \"heading\" && node.attrs.level === 1)\n          return \"What\u2019s the Wiki title?\";\n      },\n    }),\n    Link.configure({\n      openOnClick: false,\n    }),\n    Image.configure({\n      allowBase64: true,\n      inline: true,\n      HTMLAttributes: {\n        class: \"screenshot\",\n      },\n    }),\n    Table.configure({\n      resizable: true,\n    }),\n    TableRow,\n    TableHeader,\n    TableCell,\n    TextAlign.configure({\n      types: [\"heading\", \"paragraph\"],\n    }),\n    CodeBlockLowlight.configure({\n      lowlight,\n    }),\n  ],\n  inputRules: [disableMarkdownShortcut(\"#\", \"#\")],\n  content: getContent(),\n});\n\nconst buttons = {\n  h2: document.querySelector('[data-tiptap-button=\"h2\"]'),\n  h3: document.querySelector('[data-tiptap-button=\"h3\"]'),\n  h4: document.querySelector('[data-tiptap-button=\"h4\"]'),\n  h5: document.querySelector('[data-tiptap-button=\"h5\"]'),\n  h6: document.querySelector('[data-tiptap-button=\"h6\"]'),\n  bold: document.querySelector('[data-tiptap-button=\"bold\"]'),\n  italic: document.querySelector('[data-tiptap-button=\"italic\"]'),\n  bulletList: document.querySelector('[data-tiptap-button=\"bulletList\"]'),\n  orderedList: document.querySelector('[data-tiptap-button=\"orderedList\"]'),\n  alignJustify: document.querySelector('[data-tiptap-button=\"alignJustify\"]'),\n  alignLeft: document.querySelector('[data-tiptap-button=\"alignLeft\"]'),\n  alignCenter: document.querySelector('[data-tiptap-button=\"alignCenter\"]'),\n  alignRight: document.querySelector('[data-tiptap-button=\"alignRight\"]'),\n  image: document.querySelector('[data-tiptap-button=\"image\"]'),\n  link: document.querySelector('[data-tiptap-button=\"link\"]'),\n  modalLink: document.querySelector('[data-modal-button=\"link\"]'),\n  blockquote: document.querySelector('[data-tiptap-button=\"blockquote\"]'),\n  codeBlock: document.querySelector('[data-tiptap-button=\"codeBlock\"]'),\n  horizontalRule: document.querySelector(\n    '[data-tiptap-button=\"horizontalRule\"]',\n  ),\n  insertTable: document.querySelector('[data-tiptap-button=\"insertTable\"]'),\n  addColumnBefore: document.querySelector(\n    '[data-tiptap-button=\"addColumnBefore\"]',\n  ),\n  addColumnAfter: document.querySelector(\n    '[data-tiptap-button=\"addColumnAfter\"]',\n  ),\n  deleteColumn: document.querySelector('[data-tiptap-button=\"deleteColumn\"]'),\n  addRowBefore: document.querySelector('[data-tiptap-button=\"addRowBefore\"]'),\n  addRowAfter: document.querySelector('[data-tiptap-button=\"addRowAfter\"]'),\n  deleteRow: document.querySelector('[data-tiptap-button=\"deleteRow\"]'),\n  toggleHeaderColumn: document.querySelector(\n    '[data-tiptap-button=\"toggleHeaderColumn\"]',\n  ),\n  toggleHeaderRow: document.querySelector(\n    '[data-tiptap-button=\"toggleHeaderRow\"]',\n  ),\n  toggleHeaderCell: document.querySelector(\n    '[data-tiptap-button=\"toggleHeaderCell\"]',\n  ),\n  mergeCells: document.querySelector('[data-tiptap-button=\"mergeCells\"]'),\n  splitCell: document.querySelector('[data-tiptap-button=\"splitCell\"]'),\n  deleteTable: document.querySelector('[data-tiptap-button=\"deleteTable\"]'),\n  saveWikiPage: document.querySelector('[data-tiptap-button=\"saveWikiPage\"]'),\n  draftWikiPage: document.querySelector('[data-tiptap-button=\"draftWikiPage\"]'),\n};\n\neditor.on(\"transaction\", ({ editor, transaction }) => {\n  const marks = {\n    bold: \"bold\",\n    italic: \"italic\",\n    bulletList: \"bulletList\",\n    orderedList: \"orderedList\",\n    alignJustify: { textAlign: \"justify\" },\n    alignLeft: { textAlign: \"left\" },\n    alignCenter: { textAlign: \"center\" },\n    alignRight: { textAlign: \"right\" },\n    image: \"image\",\n    link: \"link\",\n    blockquote: \"blockquote\",\n    codeBlock: \"codeBlock\",\n  };\n  for (let mark in marks) {\n    if (editor.isActive(marks[mark])) buttons[mark].classList.add(\"is-active\");\n    else buttons[mark].classList.remove(\"is-active\");\n  }\n\n  const titleMarks = {\n    h1: { level: 1 },\n    h2: { level: 2 },\n    h3: { level: 3 },\n    h4: { level: 4 },\n    h5: { level: 5 },\n    h6: { level: 6 },\n  };\n  const headingSVG = {\n    h1: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"20\" height=\"20\"><path fill=\"none\" d=\"M0 0H24V24H0z\" /><path d=\"M13 20h-2v-7H4v7H2V4h2v7h7V4h2v16zm8-12v12h-2v-9.796l-2 .536V8.67L19.5 8H21z\"fill=\"currentColor\"/></svg>`,\n    h2: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"20\" height=\"20\"><path fill=\"none\" d=\"M0 0H24V24H0z\" /><path d=\"M4 4v7h7V4h2v16h-2v-7H4v7H2V4h2zm14.5 4c2.071 0 3.75 1.679 3.75 3.75 0 .857-.288 1.648-.772 2.28l-.148.18L18.034 18H22v2h-7v-1.556l4.82-5.546c.268-.307.43-.709.43-1.148 0-.966-.784-1.75-1.75-1.75-.918 0-1.671.707-1.744 1.606l-.006.144h-2C14.75 9.679 16.429 8 18.5 8z\" fill=\"currentColor\" /></svg>`,\n    h3: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"20\" height=\"20\"><path fill=\"none\" d=\"M0 0H24V24H0z\" /><path d=\"M22 8l-.002 2-2.505 2.883c1.59.435 2.757 1.89 2.757 3.617 0 2.071-1.679 3.75-3.75 3.75-1.826 0-3.347-1.305-3.682-3.033l1.964-.382c.156.806.866 1.415 1.718 1.415.966 0 1.75-.784 1.75-1.75s-.784-1.75-1.75-1.75c-.286 0-.556.069-.794.19l-1.307-1.547L19.35 10H15V8h7zM4 4v7h7V4h2v16h-2v-7H4v7H2V4h2z\"fill=\"currentColor\"/></svg>`,\n    h4: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"20\" height=\"20\"><path fill=\"none\" d=\"M0 0H24V24H0z\" /><path d=\"M13 20h-2v-7H4v7H2V4h2v7h7V4h2v16zm9-12v8h1.5v2H22v2h-2v-2h-5.5v-1.34l5-8.66H22zm-2 3.133L17.19 16H20v-4.867z\"fill=\"currentColor\"/></svg>`,\n    h5: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"20\" height=\"20\"><path fill=\"none\" d=\"M0 0H24V24H0z\" /><path d=\"M22 8v2h-4.323l-.464 2.636c.33-.089.678-.136 1.037-.136 2.21 0 4 1.79 4 4s-1.79 4-4 4c-1.827 0-3.367-1.224-3.846-2.897l1.923-.551c.24.836 1.01 1.448 1.923 1.448 1.105 0 2-.895 2-2s-.895-2-2-2c-.63 0-1.193.292-1.56.748l-1.81-.904L16 8h6zM4 4v7h7V4h2v16h-2v-7H4v7H2V4h2z\"fill=\"currentColor\"/></svg>`,\n    h6: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"20\" height=\"20\"><path fill=\"none\" d=\"M0 0H24V24H0z\" /><path d=\"M21.097 8l-2.598 4.5c2.21 0 4.001 1.79 4.001 4s-1.79 4-4 4-4-1.79-4-4c0-.736.199-1.426.546-2.019L18.788 8h2.309zM4 4v7h7V4h2v16h-2v-7H4v7H2V4h2zm14.5 10.5c-1.105 0-2 .895-2 2s.895 2 2 2 2-.895 2-2-.895-2-2-2z\"fill=\"currentColor\"/></svg>`,\n  };\n\n  for (let mark in titleMarks) {\n    if (editor.isActive(\"heading\", titleMarks[mark])) {\n      $('[data-tiptap-button=\"heading\"]').empty().prepend(headingSVG[mark]);\n      $('[data-tiptap-button=\"heading\"]').addClass(\"is-active\");\n      break;\n    }\n    $('[data-tiptap-button=\"heading\"]').empty().prepend(headingSVG[\"h2\"]);\n    $('[data-tiptap-button=\"heading\"]').removeClass(\"is-active\");\n  }\n});\n\nbuttons.h2.addEventListener(\"click\", () => {\n  editor.chain().focus().toggleHeading({ level: 2 }).run();\n});\n\nbuttons.h3.addEventListener(\"click\", () => {\n  editor.chain().focus().toggleHeading({ level: 3 }).run();\n});\n\nbuttons.h4.addEventListener(\"click\", () => {\n  editor.chain().focus().toggleHeading({ level: 4 }).run();\n});\n\nbuttons.h5.addEventListener(\"click\", () => {\n  editor.chain().focus().toggleHeading({ level: 5 }).run();\n});\n\nbuttons.h6.addEventListener(\"click\", () => {\n  editor.chain().focus().toggleHeading({ level: 6 }).run();\n});\n\nbuttons.bold.addEventListener(\"click\", () => {\n  editor.chain().focus().toggleBold().run();\n});\n\nbuttons.italic.addEventListener(\"click\", () => {\n  editor.chain().focus().toggleItalic().run();\n});\n\nbuttons.bulletList.addEventListener(\"click\", () => {\n  editor.chain().focus().toggleBulletList().run();\n});\n\nbuttons.orderedList.addEventListener(\"click\", () => {\n  editor.chain().focus().toggleOrderedList().run();\n});\n\nbuttons.alignJustify.addEventListener(\"click\", () => {\n  editor.chain().focus().setTextAlign(\"justify\").run();\n});\n\nbuttons.alignLeft.addEventListener(\"click\", () => {\n  editor.chain().focus().setTextAlign(\"left\").run();\n});\n\nbuttons.alignCenter.addEventListener(\"click\", () => {\n  editor.chain().focus().setTextAlign(\"center\").run();\n});\n\nbuttons.alignRight.addEventListener(\"click\", () => {\n  editor.chain().focus().setTextAlign(\"right\").run();\n});\n\nbuttons.image.addEventListener(\"click\", () => {\n  const input = document.createElement(\"input\");\n  input.type = \"file\";\n  input.accept = \"image/*\";\n\n  input.onchange = (e) => {\n    const file = e.target.files[0];\n    const fileName = file.name;\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = (readerEvent) => {\n      const [header, data] = readerEvent.target.result.split(\",\");\n      const content = `${header};filename=${fileName},${data}`;\n      if (content) {\n        editor\n          .chain()\n          .focus()\n          .setImage({\n            src: content,\n            title: fileName,\n            alt: fileName.split(\".\").slice(0, -1).join(\".\"),\n          })\n          .run();\n      }\n    };\n  };\n  input.click();\n});\n\nbuttons.link.addEventListener(\"click\", () => {\n  $(\"#linkModal\").modal();\n  const previousUrl = editor.getAttributes(\"link\").href;\n  if (previousUrl) $(\"#linkModal #link\").val(previousUrl);\n  else $(\"#linkModal #link\").val(\"\");\n});\n\nbuttons.modalLink.addEventListener(\"click\", () => {\n  $(\"#linkModal\").modal();\n  const link = $(\"#linkModal #link\").val();\n  if (link === null) return;\n\n  // empty\n  if (link === \"\") {\n    editor.chain().focus().extendMarkRange(\"link\").unsetLink().run();\n    return;\n  }\n\n  // update link\n  editor.chain().focus().extendMarkRange(\"link\").setLink({ href: link }).run();\n});\n\nbuttons.blockquote.addEventListener(\"click\", () => {\n  editor.chain().focus().toggleBlockquote().run();\n});\n\nbuttons.codeBlock.addEventListener(\"click\", () => {\n  editor.chain().focus().toggleCodeBlock().run();\n});\n\nbuttons.horizontalRule.addEventListener(\"click\", () => {\n  editor.chain().focus().setHorizontalRule().run();\n});\n\nbuttons.insertTable.addEventListener(\"click\", () => {\n  editor\n    .chain()\n    .focus()\n    .insertTable({ rows: 3, cols: 3, withHeaderRow: true })\n    .run();\n});\n\nbuttons.addColumnBefore.addEventListener(\"click\", () => {\n  editor.chain().focus().addColumnBefore().run();\n});\n\nbuttons.addColumnAfter.addEventListener(\"click\", () => {\n  editor.chain().focus().addColumnAfter().run();\n});\n\nbuttons.deleteColumn.addEventListener(\"click\", () => {\n  editor.chain().focus().deleteColumn().run();\n});\n\nbuttons.addRowBefore.addEventListener(\"click\", () => {\n  editor.chain().focus().addRowBefore().run();\n});\n\nbuttons.addRowAfter.addEventListener(\"click\", () => {\n  editor.chain().focus().addRowAfter().run();\n});\n\nbuttons.deleteRow.addEventListener(\"click\", () => {\n  editor.chain().focus().deleteRow().run();\n});\n\nbuttons.toggleHeaderColumn.addEventListener(\"click\", () => {\n  editor.chain().focus().toggleHeaderColumn().run();\n});\n\nbuttons.toggleHeaderRow.addEventListener(\"click\", () => {\n  editor.chain().focus().toggleHeaderRow().run();\n});\n\nbuttons.toggleHeaderCell.addEventListener(\"click\", () => {\n  editor.chain().focus().toggleHeaderCell().run();\n});\n\nbuttons.mergeCells.addEventListener(\"click\", () => {\n  editor.chain().focus().mergeCells().run();\n});\n\nbuttons.splitCell.addEventListener(\"click\", () => {\n  editor.chain().focus().splitCell().run();\n});\n\nbuttons.deleteTable.addEventListener(\"click\", () => {\n  editor.chain().focus().deleteTable().run();\n});\n\nbuttons.saveWikiPage.addEventListener(\"click\", () => {\n\n  if(window.is_wiki_manager){\n    \n    saveWikiPage(draft = true);\n  }\n  else{\n    \n    \n    saveWikiPage();\n  }\n  \n});\n\nbuttons.draftWikiPage.addEventListener(\"click\", () => {\n  \n  saveWikiPage((draft = true));\n});\n\n$(\".sidebar-items > .list-unstyled\").on(\"click\", \".add-sidebar-page\", () => {\n  const urlParams = new URLSearchParams(window.location.search);\n  const isEmptyEditor = !!urlParams.get(\"newWiki\");\n  if ($(\".editor-space\").is(\":visible\") || isEmptyEditor) {\n    $(\".discard-edit-btn\").attr(\"data-new\", true);\n    if (patchNewCode !== \"<h1>{{ patch_new_title }}</h1>{{ patch_new_code }}\")\n      editor.commands.setContent(patchNewCode);\n    else editor.commands.setContent(\"<h1></h1><p></p>\");\n  } else $(\".discard-edit-btn\").attr(\"data-new\", false);\n\n  editor.commands.focus(\"start\");\n});\n\n$(\".edit-wiki-btn\").on(\"click\", () => {\n  editor.commands.setContent(getContent());\n  editor.commands.focus(\"start\");\n});\n"],
  "mappings": "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O;AAAA,QACP,OAAO,KAAK,YAAY;AAAA,QASxB,WAAW;AAAA,MACb;AAAA,MACA,cAAc;AAAA,QACZ,WAAW;AAAA,QACX,OAAO;AAAA,MACT;AAAA,IACF;AAAA,EACF;AAEA,MAAM,OAAO;AAAA,IACX;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAEA,MAAM,iBAAiB;AAAA,IACrB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IAEA;AAAA,IACA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BAAgB;AACtB,UAAM,SAAQ;AAAA,MACZ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACA,UAAM,MAAM;AAAA,MACV;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAA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",
  "names": []
}
